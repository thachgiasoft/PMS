<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PMS.Data</name>
    </assembly>
    <members>
        <member name="T:PMS.Data.StringTokenizer">
            <summary>
            Implements a StringTokenizer class for splitting a string
            into substrings using a set of delimiters.
            </summary>
            <remarks>
            C# version of the java.util.StringTokenizer class.
            Basicly it's a wrapper class around the <c>String.Split</c> method.<pare/>
            It implements all of it's Java equivalent methods apart from those only needed by the Enumeration interface.
            All implemented Java-compilant methods have their C# equivalents in properties. They however differ in names
            since Java uses the (Hungarian-like) notation <c>runMe()</c> while C# uses Camel-cased <c>RunMe()</c> and thus
            Java's <c>nextToken()</c> method is just an alias of the <c>NextToken</c> property.
            </remarks>
        </member>
        <member name="F:PMS.Data.StringTokenizer.DefaultDelimiters">
            <summary>
            String conatining the default set of delimiters which are <c>" \t\n\r\f"</c>:
            the space character, the tab character, the newline character, the carriage-return character, and the form-feed character.
            </summary>
        </member>
        <member name="M:PMS.Data.StringTokenizer.#ctor(System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the <see cref="F:DefaultDelimiters">default delimiters</see>.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:PMS.Data.StringTokenizer.#ctor(System.String,System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:PMS.Data.StringTokenizer.#ctor(System.String,System.Char[])">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string.</param>
        </member>
        <member name="M:PMS.Data.StringTokenizer.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters and optionally returning them as tokens.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:PMS.Data.StringTokenizer.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters,
            optionally returning them as tokens. Also empty tokens may be returned using the <see cref="!:String.Empty"/> string.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <param name="returnEmpty">If set to <c>true</c> empty tokens will also be returned.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:PMS.Data.StringTokenizer.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters,
            optionally returning them as tokens. Also empty tokens may be returned using the <paramref name="empty"/> string.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <param name="returnEmpty">If set to <c>true</c> empty tokens will also be returned.</param>
            <param name="empty">The string to be returned as an empty token.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:PMS.Data.StringTokenizer.Reset">
            <summary>
            Resets the current position index so that the tokens can be extracted again.
            </summary>
            <remarks><see cref="!:Equivalent not available in Java!"/></remarks>
        </member>
        <member name="M:PMS.Data.StringTokenizer.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:PMS.Data.StringTokenizer.HasMoreTokens">
            <summary>
            Tests if there are more tokens available from this tokenizer's string.
            If this method returns <c>true</c>, then a subsequent
            use of the <see cref="P:NextToken"/> property will successfully return a token.
            </summary>
            <value>
            	<c>true</c> if more tokens are available; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:PMS.Data.StringTokenizer.NextToken">
            <summary>
            Gets the next token.
            </summary>
            <value>The next token.</value>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when trying to get a token which doesn't exist.
            Usually caused by not checking if the <see cref="P:HasMoreTokens"/> property returns <c>true</c> before trying to get the next token.</exception>
        </member>
        <member name="P:PMS.Data.StringTokenizer.CountTokens">
            <summary>
            Counts the <see cref="!:remaining"/> tokens - the number of times the
            <see cref="P:NextToken"/> property can be used before it throws an exception.
            </summary>
            <value>The number of remaining tokens.</value>
            <seealso cref="P:Count"/>
        </member>
        <member name="P:PMS.Data.StringTokenizer.Count">
            <summary>
            Gets the total number of tokens extracted.
            </summary>
            <remarks>
            <see cref="!:Equivalent not available in Java!"/>
            This property returns the total number of extracted tokens,
            contrary to <see cref="P:CountTokens"/>.
            </remarks>
            <value>The number of tokens extracted.</value>
            <seealso cref="P:StringTokenizer.CountTokens"/>
        </member>
        <member name="P:PMS.Data.StringTokenizer.Item(System.Int32)">
            <summary>
            Gets the token with the specified index from the tokenizer without moving the current position index.
            </summary>
            <remarks><see cref="!:Equivalent not available in Java!"/></remarks>
            <param name="index">The index of the token to get.</param>
            <value>The token with the given index</value>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when trying to get a token which doesn't exist, that is when <see cref="!:index"/> is equal or greater then <see cref="!:Count"/> or <see cref="!:index"/> is negative.</exception>
        </member>
        <member name="P:PMS.Data.StringTokenizer.EmptyString">
            <summary>
            Gets the currently set string for empty tokens.
            </summary>
            <remarks>Default is <c>System.String.Empty</c></remarks>
            <value>The empty token string.</value>
        </member>
        <member name="T:PMS.Data.SqlUtil">
            <summary>
            Provides utility methods for generating SQL expressions.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.AND">
            <summary>
            SQL AND keyword.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.OR">
            <summary>
            SQL OR keyword.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.ASC">
            <summary>
            SQL ASC keyword.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.DESC">
            <summary>
            SQL DESC keyword.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.NULL">
            <summary>
            SQL NULL keyword.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.TOKEN">
            <summary>
            Used to represent quoted search terms.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.QUOTE">
            <summary>
            Delimiter for quoted search terms.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.STAR">
            <summary>
            Used as wildcard character within search text.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.WILD">
            <summary>
            SQL wildcard character.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.LEFT">
            <summary>
            SQL grouping open character.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.RIGHT">
            <summary>
            SQL grouping close character.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.COMMA">
            <summary>
            Delimiter for optional search terms.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlUtil.PAGE_INDEX">
            <summary>
            PageIndex Temp Table
            </summary>
        </member>
        <member name="M:PMS.Data.SqlUtil.Equals(System.String,System.String)">
            <summary>
            Creates an <see cref="F:PMS.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates an <see cref="F:PMS.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Equals(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates an <see cref="F:PMS.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Equals(System.String)">
            <summary>
            Encodes the value for a <see cref="F:PMS.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Contains(System.String,System.String)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Contains(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Contains(System.String)">
            <summary>
            Encodes the value for a <see cref="F:PMS.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.NotContains(System.String,System.String)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.NotContains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.NotContains(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.NotContains(System.String)">
            <summary>
            Encodes the value for a <see cref="F:PMS.Data.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.StartsWith(System.String,System.String)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.StartsWith(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.StartsWith(System.String)">
            <summary>
            Encodes the value for a <see cref="F:PMS.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.EndsWith(System.String,System.String)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.EndsWith(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.EndsWith(System.String)">
            <summary>
            Encodes the value for a <see cref="F:PMS.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Like(System.String,System.String)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Like(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Like(System.String)">
            <summary>
            Encodes the value for a <see cref="F:PMS.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.NotLike(System.String,System.String)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.NotLike(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.NotLike(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.NotLike(System.String)">
            <summary>
            Encodes the value for a <see cref="F:PMS.Data.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.IsNull(System.String)">
            <summary>
            Creates an IS NULL expression.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.IsNotNull(System.String)">
            <summary>
            Creates an IS NOT NULL expression.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Encode(System.String)">
            <summary>
            Encodes the specified value for use in SQL expressions.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Encode(System.String,System.Boolean)">
            <summary>
            Encodes the specified value for use in SQL expressions and
            optionally surrounds the value with single-quotes.
            </summary>
            <param name="value"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Encode(System.String[])">
            <summary>
            Encodes the specified values for use in SQL expressions.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.Encode(System.String[],System.Boolean)">
            <summary>
            Encodes the specified values for use in SQL expressions and
            optionally surrounds the value with single-quotes.
            </summary>
            <param name="values"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.GetLikeFormat(System.Boolean)">
            <summary>
            Gets the like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.GetLikeFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.GetNotLikeFormat(System.Boolean)">
            <summary>
            Gets the not like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.GetNotLikeFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the not like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.GetEqualFormat(System.Boolean)">
            <summary>
            Gets the equal format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlUtil.GetEqualFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the equal format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="T:PMS.Data.SqlComparisonType">
            <summary>
            Enumeration of SQL expression comparison types.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlComparisonType.Equals">
            <summary>
            Represents = value.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlComparisonType.StartsWith">
            <summary>
            Represents LIKE value%.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlComparisonType.EndsWith">
            <summary>
            Represents LIKE %value.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlComparisonType.Contains">
            <summary>
            Represents LIKE %value%.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlComparisonType.NotContains">
            <summary>
            Represents NOT LIKE %value%.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlComparisonType.Like">
            <summary>
            Represents LIKE value.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlComparisonType.NotLike">
            <summary>
            Represents NOT LIKE value.
            </summary>
        </member>
        <member name="T:PMS.Data.SqlFilterType">
            <summary>
            Enumeration of SQL Filter Types.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlFilterType.Word">
            <summary>
            Represents an Individual Word filter
            </summary>
            <example>(if using <see cref="F:PMS.Data.SqlComparisonType.Contains"/>) CompanyName LIKE "%Acme" AND CompanyName LIKE "Company%"</example>
        </member>
        <member name="F:PMS.Data.SqlFilterType.Phrase">
            <summary>
            Represents a Phrase filter
            </summary>
            <example>(if using <see cref="F:PMS.Data.SqlComparisonType.Contains"/>) CompanyName LIKE "%Acme Company%"</example>
        </member>
        <member name="T:PMS.Data.SqlSortDirection">
            <summary>
            Enumeration of SQL expression Sort Directions
            </summary>
        </member>
        <member name="F:PMS.Data.SqlSortDirection.ASC">
            <summary>
            Database Ascending
            </summary>
        </member>
        <member name="F:PMS.Data.SqlSortDirection.DESC">
            <summary>
            Database Descending
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.QuyDoiGioChuanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.QuyDoiGioChuanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.QuyDoiGioChuanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.EntityProviderBase`2">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityProvider&lt;Entity, EntityKey&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:PMS.Data.Bases.EntityProviderBaseCore`2">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityProvider&lt;Entity, EntityKey&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
        </member>
        <member name="T:PMS.Data.IEntityProvider`2">
            <summary>
            Defines the common data access methods that can be used by the
            ProviderDataSource control to interact with the underlying data store.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
        </member>
        <member name="M:PMS.Data.IEntityProvider`2.Get(`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.IEntityProvider`2.GetAll">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.IEntityProvider`2.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.IEntityProvider`2.Insert(`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.IEntityProvider`2.Update(`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.IEntityProvider`2.Delete(`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.IEntityProvider`2.Save(`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:PMS.Data.IEntityProvider`2.DeepSave(`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Get(`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Get(PMS.Data.TransactionManager,`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Get(`1,System.Int32,System.Int32)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Get(PMS.Data.TransactionManager,`1,System.Int32,System.Int32)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetAll">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetAll(PMS.Data.TransactionManager)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetAll(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetAll(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetPaged(System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetPaged(PMS.Data.TransactionManager,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetPaged(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetPaged(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetPaged(PMS.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetTotalItems(System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetTotalItems(PMS.Data.TransactionManager,System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(System.String)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.TransactionManager,System.String)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(System.String,System.Int32,System.Int32)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.TransactionManager,System.String,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> or <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.IFilterParameterCollection,PMS.Data.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sortColumn conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> or <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:PMS.Data.SqlSortColumn"/> or <see cref="T:PMS.Data.SqlSortBuilder`1"/> objects</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.TransactionManager,PMS.Data.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> or <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.TransactionManager,PMS.Data.IFilterParameterCollection,PMS.Data.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sortColumn conditions.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> or <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:PMS.Data.SqlSortColumn"/> or <see cref="T:PMS.Data.SqlSortBuilder`1"/> objects</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> or <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.TransactionManager,PMS.Data.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> or <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> or <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.IFilterParameterCollection,PMS.Data.ISortColumnCollection,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sortColumn conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> or <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:PMS.Data.SqlSortColumn"/> or <see cref="T:PMS.Data.SqlSortBuilder`1"/> objects</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Find(PMS.Data.TransactionManager,PMS.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> or <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Insert(`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Insert(PMS.Data.TransactionManager,`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Insert(PMS.Entities.TList{`0})">
            <summary>
            Inserts rows into the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to insert.</param>
            <returns>Returns the number of rows successfully inserted.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Insert(PMS.Data.TransactionManager,PMS.Entities.TList{`0})">
            <summary>
            Inserts rows into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to insert.</param>
            <returns>Returns the number of rows successfully inserted.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.BulkInsert(PMS.Entities.TList{`0})">
            <summary>
            Efficiently inserts multiple rows into the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to insert.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.BulkInsert(PMS.Data.TransactionManager,PMS.Entities.TList{`0})">
            <summary>
            Efficiently inserts multiple rows into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to insert.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Update(`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Update(PMS.Data.TransactionManager,`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Update(PMS.Entities.TList{`0})">
            <summary>
            Updates existing rows in the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to update.</param>
            <returns>Returns the number of rows successfully updated.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Update(PMS.Data.TransactionManager,PMS.Entities.TList{`0})">
            <summary>
            Updates existing rows in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to update.</param>
            <returns>Returns the number of rows successfully updated.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Save(`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Save(PMS.Data.TransactionManager,`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Save(PMS.Entities.TList{`0})">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Save(PMS.Data.TransactionManager,PMS.Entities.TList{`0})">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Delete(`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Delete(PMS.Data.TransactionManager,`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Delete(`1)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Delete(PMS.Data.TransactionManager,`1)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Delete(PMS.Entities.TList{`0})">
            <summary>
            Deletes rows from the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to delete.</param>
            <returns>Returns the number of rows successfully deleted.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.Delete(PMS.Data.TransactionManager,PMS.Entities.TList{`0})">
            <summary>
            Deletes rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to delete.</param>
            <returns>Returns the number of rows successfully deleted.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(`0)">
            <summary>
            Deep Load the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to load.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Data.TransactionManager,`0)">
            <summary>
            Deep Load the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(`0,System.Boolean)">
            <summary>
            Deep Load the Entity object with all of the child property collections N levels deep.
            </summary>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Data.TransactionManager,`0,System.Boolean)">
            <summary>
            Deep Load the Entity object with all of the child property collections N levels deep.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(`0,System.Boolean,PMS.Data.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Data.TransactionManager,`0,System.Boolean,PMS.Data.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Data.TransactionManager,`0,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep load functionality.
            </remarks>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
            <param name="innerList">A collection of child types for easy access.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.TList{`0},System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep load functionality.
            </remarks>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">The Entity List object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
            <param name="innerList">A collection of child types for easy access.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Entities.TList{`0})">
            <summary>
            Deep Load the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="entities">TList of Entity objects to load.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.TList{`0})">
            <summary>
            Deep Load the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Entities.TList{`0},System.Boolean)">
            <summary>
            Deep Load the Entity objects with all of the child property collections N levels deep.
            </summary>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.TList{`0},System.Boolean)">
            <summary>
            Deep Load the Entity objects with all of the child property collections N levels deep.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Entities.TList{`0},System.Boolean,PMS.Data.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the Entity objects with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.TList{`0},System.Boolean,PMS.Data.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the Entity objects with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(PMS.Data.TransactionManager,`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(`0,PMS.Data.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(PMS.Data.TransactionManager,`0,PMS.Data.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(PMS.Data.TransactionManager,`0,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep save functionality.
            </remarks>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
            <param name="innerList">A <c>DeepSession</c> of child types for easy access.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(PMS.Entities.TList{`0})">
            <summary>
            Deep Save the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(PMS.Data.TransactionManager,PMS.Entities.TList{`0})">
            <summary>
            Deep Save the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(PMS.Entities.TList{`0},PMS.Data.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(PMS.Data.TransactionManager,PMS.Entities.TList{`0},PMS.Data.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSave(PMS.Data.TransactionManager,PMS.Entities.TList{`0},PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">The transaction manager.</param>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.CanDeepLoad(PMS.Entities.IEntity,System.String,PMS.Data.DeepLoadType,PMS.Data.Bases.DeepSession)">
            <summary>
             Enforces the rules set in order to load this property for a given type.
            </summary>
             <param name="entity">The entity.</param>
             <param name="key">The key.</param>
             <param name="deepLoadType">Type of the deep load.</param>
             <param name="innerList">The inner list.</param>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.CanDeepSave(System.Object,System.String,PMS.Data.DeepSaveType,PMS.Data.Bases.DeepSession)">
            <summary>
            Enforces the rules set in order to save this property for a given type.
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <param name="deepSaveType">Type of the deep save.</param>
            <param name="innerList">The inner list.</param>
            <returns>
            	<c>true</c> if this instance [can deep save] the specified entity; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.GetDeepSessionArgs(PMS.Data.Bases.DeepSession,System.Enum,System.Object,System.String)">
            <summary>
            Gets the DeepSession Arguments for an event.
            </summary>
            <param name="deepSession">the current DeepSession.</param>
            <param name="deepTypeValue"> The Deep Type Value</param>
            <param name="obj">The current entity or list.</param>
            <param name="key">The key.</param>
            <returns>
            	<c>DeepSessionEventArgs</c> if the item being run is a valid entity or list.
            </returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.OnDataRequesting(PMS.Data.Bases.CommandEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just before accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.OnDataRequested(PMS.Data.Bases.CommandEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.OnDeepLoading(PMS.Data.Bases.DeepSessionEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.EntityProviderBaseCore`2.OnDeepSaving(PMS.Data.Bases.DeepSessionEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="E:PMS.Data.Bases.EntityProviderBaseCore`2.DataRequesting">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:PMS.Data.Bases.EntityProviderBaseCore`2.DataRequested">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoading">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSaving">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.EntityProviderBaseCore`2.DataRequestingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.EntityProviderBaseCore`2.DataRequestedEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.EntityProviderBaseCore`2.DeepLoadingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.EntityProviderBaseCore`2.DeepSavingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.QuyDoiGioChuanKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maQuyDoi">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuyDoi">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaDonVi(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_QuyDoiGioChuan_DonViTinh key.
            	FK_QuyDoiGioChuan_DonViTinh Description: 
            </summary>
            <param name="_maDonVi"></param>
            <returns>Returns a typed collection of PMS.Entities.QuyDoiGioChuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_QuyDoiGioChuan_DonViTinh key.
            	FK_QuyDoiGioChuan_DonViTinh Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maDonVi"></param>
            <returns>Returns a typed collection of PMS.Entities.QuyDoiGioChuan objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_QuyDoiGioChuan_DonViTinh key.
            	FK_QuyDoiGioChuan_DonViTinh Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maDonVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.QuyDoiGioChuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaDonVi(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_QuyDoiGioChuan_DonViTinh key.
            	fkQuyDoiGioChuanDonViTinh Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maDonVi"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.QuyDoiGioChuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaDonVi(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_QuyDoiGioChuan_DonViTinh key.
            	fkQuyDoiGioChuanDonViTinh Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maDonVi"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.QuyDoiGioChuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_QuyDoiGioChuan_DonViTinh key.
            	FK_QuyDoiGioChuan_DonViTinh Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maDonVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.QuyDoiGioChuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.QuyDoiGioChuanKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_QuyDoiGioChuan index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_QuyDoiGioChuan index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_QuyDoiGioChuan index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_QuyDoiGioChuan index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_QuyDoiGioChuan index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_QuyDoiGioChuan index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuyDoi(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_QuyDoiGioChuan index.
            </summary>
            <param name="_maQuyDoi"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuyDoi(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_QuyDoiGioChuan index.
            </summary>
            <param name="_maQuyDoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuyDoi(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_QuyDoiGioChuan index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuyDoi"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuyDoi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_QuyDoiGioChuan index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuyDoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuyDoi(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_QuyDoiGioChuan index.
            </summary>
            <param name="_maQuyDoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.GetByMaQuyDoi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_QuyDoiGioChuan index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuyDoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.QuyDoiGioChuan},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;QuyDoiGioChuan&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.QuyDoiGioChuan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.QuyDoiGioChuan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.QuyDoiGioChuan,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.QuyDoiGioChuan Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.QuyDoiGioChuan,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.QuyDoiGioChuan object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.QuyDoiGioChuan instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.QuyDoiGioChuan Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ReportTemplateProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ReportTemplateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.ReportTemplateKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_reportId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.Delete(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_reportId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByUserId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_ReportTemplate_TaiKhoan key.
            	FK_ReportTemplate_TaiKhoan Description: 
            </summary>
            <param name="_userId"></param>
            <returns>Returns a typed collection of PMS.Entities.ReportTemplate objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByUserId(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_ReportTemplate_TaiKhoan key.
            	FK_ReportTemplate_TaiKhoan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <returns>Returns a typed collection of PMS.Entities.ReportTemplate objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByUserId(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ReportTemplate_TaiKhoan key.
            	FK_ReportTemplate_TaiKhoan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ReportTemplate objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByUserId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ReportTemplate_TaiKhoan key.
            	fkReportTemplateTaiKhoan Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_userId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ReportTemplate objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByUserId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ReportTemplate_TaiKhoan key.
            	fkReportTemplateTaiKhoan Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_userId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ReportTemplate objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByUserId(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ReportTemplate_TaiKhoan key.
            	FK_ReportTemplate_TaiKhoan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.ReportTemplate objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.ReportTemplateKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByReportId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ReportTemplate index.
            </summary>
            <param name="_reportId"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ReportTemplate"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByReportId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ReportTemplate index.
            </summary>
            <param name="_reportId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ReportTemplate"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByReportId(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_ReportTemplate index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_reportId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ReportTemplate"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByReportId(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ReportTemplate index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_reportId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ReportTemplate"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByReportId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ReportTemplate index.
            </summary>
            <param name="_reportId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ReportTemplate"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.GetByReportId(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ReportTemplate index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_reportId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ReportTemplate"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.ReportTemplate},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ReportTemplate&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ReportTemplate)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ReportTemplate"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ReportTemplate"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.ReportTemplate)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ReportTemplate"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ReportTemplate"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.ReportTemplate,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.ReportTemplate"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.ReportTemplate Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.ReportTemplate,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.ReportTemplate object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.ReportTemplate instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.ReportTemplate Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ReportTemplateChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.ReportTemplate</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.ReportTemplateChildEntityTypes.TaiKhoan">
            <summary>
             Composite Property for <c>TaiKhoan</c> at UserIdSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ReportTemplateFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ReportTemplate"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.SqlFilterBuilder`1">
            <summary>
            Allows for building SQL filter expressions using strongly-typed
            column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:PMS.Data.SqlStringBuilder">
            <summary>
            Represents a SQL filter expression.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.Append(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.Append(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.Append(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendEquals(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotEquals(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendIn(System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendIn(System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendIn(System.String,System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotIn(System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotIn(System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotIn(System.String,System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendInQuery(System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendInQuery(System.String,System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotInQuery(System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotInQuery(System.String,System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendRange(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotRange(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendIsNull(System.String)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendIsNull(System.String,System.String)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendIsNotNull(System.String)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendIsNotNull(System.String,System.String)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendGreaterThan(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendGreaterThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendGreaterThanOrEqual(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendGreaterThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendLessThan(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendLessThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendLessThanOrEqual(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendLessThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendStartsWith(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendStartsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendEndsWith(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendEndsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendContains(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotContains(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendLike(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendLike(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotLike(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendNotLike(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the SQL expression to the internal <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="junction">The junction.</param>
            <param name="column">The column.</param>
            <param name="compare">The compare.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.AppendInternal(System.String,System.String)">
            <summary>
            Appends the SQL expression to the internal <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="junction">The junction.</param>
            <param name="query">The query.</param>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.Clear">
            <summary>
            Clears the internal string buffer.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.ToString">
            <summary>
            Converts the value of this instance to a System.String.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.ToString(System.String)">
            <summary>
            Converts the value of this instance to a System.String and
            prepends the specified junction if the expression is not empty.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.Parse(System.String,System.String,System.Boolean)">
            <summary>
            Parses the specified searchText to create a SQL filter expression.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.GetInQueryValues(System.String,System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values">Comma string with the in parameters already in one string</param>
            <param name="encode">tells whether or not to enclose the parameters with ' and to replace ' with '' within the parameters.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.GetInQueryValues(System.String[],System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values">String Array with the in parameters</param>
            <param name="encode">tells whether or not to enclose the parameters with ' and to replace ' with '' within the parameters.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.BeginGroup">
            <summary>
            Begins a new group of parameters by adding an open parenthesis "("
            </summary>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.BeginGroup(System.String)">
            <summary>
            Begins a new groups of parameters using the specified junction operator
            </summary>
            <param name="junction">The junction operator to be used</param>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.EndGroup">
            <summary>
            Ends a group of parameters by add a closing parenthesis ")"
            </summary>
        </member>
        <member name="M:PMS.Data.SqlStringBuilder.EnsureGroups">
            <summary>
            Makes sure that all groups have been ended (each call to BeginGroup has a corresponding EndGroup)
            </summary>
        </member>
        <member name="F:PMS.Data.SqlStringBuilder.junction">
            <summary>
            The Junction member variable.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlStringBuilder.ignoreCase">
            <summary>
            The IgnoreCase member variable.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlStringBuilder.Junction">
            <summary>
            Gets or sets the Junction property.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlStringBuilder.IgnoreCase">
            <summary>
            Gets or sets the IgnoreCase property.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlStringBuilder.Length">
            <summary>
            Gets or sets the length of the internal StringBuilder object.
            </summary>
            <value>The length.</value>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.Append(`0,System.String)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.Append(`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.Append(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendEquals(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotEquals(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendIn(`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendIn(`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendIn(System.String,`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotIn(`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotIn(`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendInQuery(`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotInQuery(`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendIsNull(`0)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendIsNull(System.String,`0)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendIsNotNull(`0)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendIsNotNull(System.String,`0)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendRange(`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotRange(`0,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendGreaterThan(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendGreaterThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendGreaterThanOrEqual(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendLessThan(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendLessThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendLessThanOrEqual(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendLessThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendStartsWith(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendStartsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendEndsWith(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendEndsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendContains(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotContains(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendLike(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendLike(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotLike(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.AppendNotLike(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlFilterBuilder`1.GetColumnName(`0)">
            <summary>
            Gets the column name from the specified column enumeration value.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ReportTemplateFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ReportTemplateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ReportTemplateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ReportTemplateParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ReportTemplate"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.ParameterizedSqlFilterBuilder`1">
            <summary>
            Allows for building parameterized SQL filter expressions using strongly-typed
            column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:PMS.Data.IFilterParameterCollection">
            <summary>
              Represents a type which will contain a method to 
              retrieve the A collection of <see cref="T:PMS.Data.SqlFilterParameterCollection"/> 
              objects to use dynamic and parameterized filters.
            </summary>
        </member>
        <member name="M:PMS.Data.IFilterParameterCollection.GetParameters">
            <summary>
            Gets a collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects
            </summary>
            <returns><see cref="T:PMS.Data.SqlFilterParameterCollection"/> object</returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.Append(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendNotEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendNotEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendNotIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendNotInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendNotRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendNotRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendGreaterThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendGreaterThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendLessThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendLessThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendLessThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendLessThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendStartsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendStartsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendEndsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendEndsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendNotContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendNotContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendLike(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.AppendLike(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.Parse(System.String,System.String,System.Boolean)">
            <summary>
            Parses the specified searchText to create a SQL filter expression.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.GetInQueryValues(System.String,System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.GetParameters">
            <summary>
            Gets the current collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects and
            also sets the collection's FilterExpression property.
            </summary>
            <returns></returns>
        </member>
        <member name="F:PMS.Data.ParameterizedSqlFilterBuilder`1.parameters">
            <summary>
            The Parameters member variable.
            </summary>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlFilterBuilder`1.PMS#Data#IFilterParameterCollection#GetParameters">
            <summary>
            Gets a collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects 
            </summary>
            <returns></returns>
        </member>
        <member name="P:PMS.Data.ParameterizedSqlFilterBuilder`1.Parameters">
            <summary>
            Gets or sets the Parameters property.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ReportTemplateParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ReportTemplateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ReportTemplateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ReportTemplateSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ReportTemplate"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.SqlSortBuilder`1">
            <summary>
            Allows for building SQL OrderBy expressions using strongly-typed column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:PMS.Data.ISortColumnCollection">
            <summary>
              Represents a type which will contain a method to 
              retrieve the A collection of <see cref="T:PMS.Data.SqlSortColumnCollection"/> 
              objects to generate an OrderBy clause.
            </summary>
        </member>
        <member name="M:PMS.Data.ISortColumnCollection.GetSortColumns">
            <summary>
            Gets a collection of <see cref="T:PMS.Data.SqlSortColumn"/> objects
            </summary>
            <returns><see cref="T:PMS.Data.SqlSortColumnCollection"/> object</returns>
        </member>
        <member name="M:PMS.Data.SqlSortBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlSortBuilder`1.Append(System.Enum,PMS.Data.SqlSortDirection)">
            <summary>
            Appends the specified column and sorts it by the specified SqlSortDirection 
            </summary>
            <param name="column">The column to sort</param>
            <param name="sortDirection">The specified column's sort direction</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlSortBuilder`1.AppendASC(System.Enum)">
            <summary>
            Appends the specified column and sorts it Ascending
            </summary>
            <param name="column">The column to sort</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlSortBuilder`1.AppendDESC(System.Enum)">
            <summary>
            Appends the specified column and sorts it Descending
            </summary>
            <param name="column">The column to sort</param>
            <returns></returns>
        </member>
        <member name="F:PMS.Data.SqlSortBuilder`1.sortColumns">
            <summary>
            The Sort Columns member variable.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlSortBuilder`1.AddColumn(System.Enum,PMS.Data.SqlSortDirection)">
            <summary>
            Adds a column to the sort builder
            </summary>
            <param name="column">The entity's column to sort by</param>
            <param name="sortDirection">The sort direction</param>
        </member>
        <member name="M:PMS.Data.SqlSortBuilder`1.ToString">
            <summary>
            Provides the actual SQL sort string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlSortBuilder`1.GetColumnName(`0)">
            <summary>
            Gets the column name from the specified column enumeration value.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlSortBuilder`1.GetSortColumns">
            <summary>
            Gets the current collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects and
            also sets the collection's FilterExpression property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlSortBuilder`1.PMS#Data#ISortColumnCollection#GetSortColumns">
            <summary>
            Gets a collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects 
            </summary>
            <returns></returns>
        </member>
        <member name="P:PMS.Data.SqlSortBuilder`1.SortColumns">
            <summary>
            Gets or sets the SortColumns property.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ReportTemplateSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ReportTemplateSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoanQuyDoiProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.KhoanQuyDoiProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.KhoanQuyDoiProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.KhoanQuyDoiKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maKhoan">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoan">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaQuyDoi(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_KhoanQuyDoi_QuyDoiGioChuan key.
            	FK_KhoanQuyDoi_QuyDoiGioChuan Description: 
            </summary>
            <param name="_maQuyDoi"></param>
            <returns>Returns a typed collection of PMS.Entities.KhoanQuyDoi objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaQuyDoi(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_KhoanQuyDoi_QuyDoiGioChuan key.
            	FK_KhoanQuyDoi_QuyDoiGioChuan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuyDoi"></param>
            <returns>Returns a typed collection of PMS.Entities.KhoanQuyDoi objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaQuyDoi(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoanQuyDoi_QuyDoiGioChuan key.
            	FK_KhoanQuyDoi_QuyDoiGioChuan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuyDoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KhoanQuyDoi objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaQuyDoi(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoanQuyDoi_QuyDoiGioChuan key.
            	fkKhoanQuyDoiQuyDoiGioChuan Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maQuyDoi"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KhoanQuyDoi objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaQuyDoi(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoanQuyDoi_QuyDoiGioChuan key.
            	fkKhoanQuyDoiQuyDoiGioChuan Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maQuyDoi"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KhoanQuyDoi objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaQuyDoi(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoanQuyDoi_QuyDoiGioChuan key.
            	FK_KhoanQuyDoi_QuyDoiGioChuan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuyDoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.KhoanQuyDoi objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.KhoanQuyDoiKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaKhoan(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_KhoanQuyDoi index.
            </summary>
            <param name="_maKhoan"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoanQuyDoi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaKhoan(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoanQuyDoi index.
            </summary>
            <param name="_maKhoan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoanQuyDoi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaKhoan(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoanQuyDoi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoan"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoanQuyDoi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaKhoan(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoanQuyDoi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoanQuyDoi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaKhoan(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoanQuyDoi index.
            </summary>
            <param name="_maKhoan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoanQuyDoi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.GetByMaKhoan(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoanQuyDoi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoanQuyDoi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.KhoanQuyDoi},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;KhoanQuyDoi&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.KhoanQuyDoi)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.KhoanQuyDoi"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.KhoanQuyDoi"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.KhoanQuyDoi)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.KhoanQuyDoi"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.KhoanQuyDoi"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.KhoanQuyDoi,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.KhoanQuyDoi"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.KhoanQuyDoi Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.KhoanQuyDoi,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.KhoanQuyDoi object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.KhoanQuyDoi instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.KhoanQuyDoi Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.TaiKhoanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.TaiKhoanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByParentIdFromHeThong(System.Int32)">
            <summary>
            	Gets TaiKhoan objects from the datasource by ParentID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="_parentId"></param>
            <returns>Returns a typed collection of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByParentIdFromHeThong(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets PMS.Entities.TaiKhoan objects from the datasource by ParentID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_parentId"></param>
            <remarks></remarks>
            <returns>Returns a TList of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByParentIdFromHeThong(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets TaiKhoan objects from the datasource by ParentID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_parentId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByParentIdFromHeThong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets TaiKhoan objects from the datasource by ParentID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByParentIdFromHeThong(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets TaiKhoan objects from the datasource by ParentID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByParentIdFromHeThong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets TaiKhoan objects from the datasource by ParentID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_parentId"></param>
            <remarks></remarks>
            <returns>Returns a TList of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByUserIdFromHeThong(System.Int32)">
            <summary>
            	Gets TaiKhoan objects from the datasource by UserID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="_userId"></param>
            <returns>Returns a typed collection of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByUserIdFromHeThong(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets PMS.Entities.TaiKhoan objects from the datasource by UserID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_userId"></param>
            <remarks></remarks>
            <returns>Returns a TList of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByUserIdFromHeThong(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets TaiKhoan objects from the datasource by UserID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByUserIdFromHeThong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets TaiKhoan objects from the datasource by UserID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByUserIdFromHeThong(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets TaiKhoan objects from the datasource by UserID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByUserIdFromHeThong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets TaiKhoan objects from the datasource by UserID in the
            	HeThong table. Table TaiKhoan is related to table TaiKhoan
            	through the (M:N) relationship defined in the HeThong table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_userId"></param>
            <remarks></remarks>
            <returns>Returns a TList of TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.TaiKhoanKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maTaiKhoan">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTaiKhoan">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaNhomQuyen(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_Users_Groups key.
            	FK_Users_Groups Description: 
            </summary>
            <param name="_maNhomQuyen"></param>
            <returns>Returns a typed collection of PMS.Entities.TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaNhomQuyen(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_Users_Groups key.
            	FK_Users_Groups Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <returns>Returns a typed collection of PMS.Entities.TaiKhoan objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaNhomQuyen(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Users_Groups key.
            	FK_Users_Groups Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaNhomQuyen(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Users_Groups key.
            	fkUsersGroups Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maNhomQuyen"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaNhomQuyen(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Users_Groups key.
            	fkUsersGroups Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maNhomQuyen"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaNhomQuyen(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Users_Groups key.
            	FK_Users_Groups Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.TaiKhoan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.TaiKhoanKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhap(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_Users index.
            </summary>
            <param name="_tenDangNhap"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhap(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Users index.
            </summary>
            <param name="_tenDangNhap"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhap(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_Users index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_tenDangNhap"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhap(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Users index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_tenDangNhap"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhap(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Users index.
            </summary>
            <param name="_tenDangNhap"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhap(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Users index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_tenDangNhap"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaTaiKhoan(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Users index.
            </summary>
            <param name="_maTaiKhoan"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaTaiKhoan(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Users index.
            </summary>
            <param name="_maTaiKhoan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaTaiKhoan(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Users index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTaiKhoan"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaTaiKhoan(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Users index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTaiKhoan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaTaiKhoan(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Users index.
            </summary>
            <param name="_maTaiKhoan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByMaTaiKhoan(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Users index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTaiKhoan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TaiKhoan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhapMatKhau(System.String,System.String)">
            <summary>
            This method wrap the 'cust_TaiKhoan_GetByTenDangNhapMatKhau' stored procedure. 
            </summary>
            <param name="tenDangNhap"> A <c>System.String</c> instance.</param>
            <param name="matKhau"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhapMatKhau(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_TaiKhoan_GetByTenDangNhapMatKhau' stored procedure. 
            </summary>
            <param name="tenDangNhap"> A <c>System.String</c> instance.</param>
            <param name="matKhau"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhapMatKhau(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_TaiKhoan_GetByTenDangNhapMatKhau' stored procedure. 
            </summary>
            <param name="tenDangNhap"> A <c>System.String</c> instance.</param>
            <param name="matKhau"> A <c>System.String</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.GetByTenDangNhapMatKhau(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_TaiKhoan_GetByTenDangNhapMatKhau' stored procedure. 
            </summary>
            <param name="tenDangNhap"> A <c>System.String</c> instance.</param>
            <param name="matKhau"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.TaiKhoan},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;TaiKhoan&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.TaiKhoan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.TaiKhoan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.TaiKhoan"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.TaiKhoan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.TaiKhoan"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.TaiKhoan"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.TaiKhoan,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.TaiKhoan"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.TaiKhoan Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.TaiKhoan,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.TaiKhoan object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.TaiKhoan instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.TaiKhoan Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.TaiKhoanChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.TaiKhoan</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.TaiKhoanChildEntityTypes.NhomQuyen">
            <summary>
             Composite Property for <c>NhomQuyen</c> at MaNhomQuyenSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.TaiKhoanChildEntityTypes.ReportTemplateCollection">
            <summary>
             Collection of <c>TaiKhoan</c> as OneToMany for ReportTemplateCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.TaiKhoanChildEntityTypes.UserIdTaiKhoanCollection_From_HeThong">
            <summary>
             Collection of <c>TaiKhoan</c> as ManyToMany for TaiKhoanCollection_From_HeThong
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.TaiKhoanChildEntityTypes.HeThongCollectionGetByParentId">
            <summary>
             Collection of <c>TaiKhoan</c> as OneToMany for HeThongCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.TaiKhoanChildEntityTypes.HeThongCollectionGetByUserId">
            <summary>
             Collection of <c>TaiKhoan</c> as OneToMany for HeThongCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.TaiKhoanChildEntityTypes.ParentIdTaiKhoanCollection_From_HeThong">
            <summary>
             Collection of <c>TaiKhoan</c> as ManyToMany for TaiKhoanCollection_From_HeThong
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.TaiKhoanChildEntityTypes.GiangVienCollection">
            <summary>
             Collection of <c>TaiKhoan</c> as OneToMany for GiangVienCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.TaiKhoanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TaiKhoan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TaiKhoanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TaiKhoanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TaiKhoanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.TaiKhoanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TaiKhoan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TaiKhoanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TaiKhoanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TaiKhoanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.TaiKhoanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TaiKhoan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TaiKhoanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the TaiKhoanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewXuLyQuyDoiProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewXuLyQuyDoiProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewXuLyQuyDoiProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewXuLyQuyDoiProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.EntityViewProviderBase`1">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityViewProvider&lt;Entity&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:PMS.Data.Bases.EntityViewProviderBaseCore`1">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityViewProvider&lt;Entity&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
        </member>
        <member name="T:PMS.Data.IEntityViewProvider`1">
            <summary>
            Defines the common data access methods that can be used by the
            ReadOnlyDataSource control to interact with the underlying data store.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
        </member>
        <member name="M:PMS.Data.IEntityViewProvider`1.Get(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.IEntityViewProvider`1.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.IEntityViewProvider`1.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.IEntityViewProvider`1.Find(PMS.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetAll">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks>Uses connection string object was created with.</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks>Uses connection string object was created with.</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetAll(PMS.Data.TransactionManager)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetAll(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetAll(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(PMS.Data.TransactionManager)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(PMS.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Get(PMS.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(PMS.Data.TransactionManager,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(PMS.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetTotalItems(System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.GetTotalItems(PMS.Data.TransactionManager,System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="mgr">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Find(PMS.Data.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Find(PMS.Data.IFilterParameterCollection,PMS.Data.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:PMS.Data.SqlSortColumn"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Find(PMS.Data.TransactionManager,PMS.Data.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Find(PMS.Data.TransactionManager,PMS.Data.IFilterParameterCollection,PMS.Data.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:PMS.Data.SqlSortColumn"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Find(PMS.Data.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Find(PMS.Data.TransactionManager,PMS.Data.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Find(PMS.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Find(PMS.Data.IFilterParameterCollection,PMS.Data.ISortColumnCollection,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sort conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:PMS.Data.SqlSortColumn"/> objects.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.EntityViewProviderBaseCore`1.Find(PMS.Data.TransactionManager,PMS.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiProviderBaseCore.GetByMaKetQua(System.Int32)">
            <summary>
            This method wrap the 'cust_View_XuLy_QuyDoi_GetByMaKetQua' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiProviderBaseCore.GetByMaKetQua(System.Int32,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_View_XuLy_QuyDoi_GetByMaKetQua' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiProviderBaseCore.GetByMaKetQua(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            This method wrap the 'cust_View_XuLy_QuyDoi_GetByMaKetQua' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiProviderBaseCore.GetByMaKetQua(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_View_XuLy_QuyDoi_GetByMaKetQua' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewXuLyQuyDoi},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewXuLyQuyDoi)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewXuLyQuyDoi"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewXuLyQuyDoi"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanThuLaoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewThanhToanThuLaoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoProviderBaseCore.GetByNamHocHocKyDonViLoaiGiangVien(System.String,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_ThanhToan_ThuLao_GetByNamHocHocKyDonViLoaiGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoProviderBaseCore.GetByNamHocHocKyDonViLoaiGiangVien(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_ThanhToan_ThuLao_GetByNamHocHocKyDonViLoaiGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoProviderBaseCore.GetByNamHocHocKyDonViLoaiGiangVien(PMS.Data.TransactionManager,System.String,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_ThanhToan_ThuLao_GetByNamHocHocKyDonViLoaiGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoProviderBaseCore.GetByNamHocHocKyDonViLoaiGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_ThanhToan_ThuLao_GetByNamHocHocKyDonViLoaiGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewThanhToanThuLao},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewThanhToanThuLao)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewThanhToanThuLao"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewThanhToanThuLao"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanThuLaoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanThuLao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanThuLaoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanThuLao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanThuLaoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanThuLao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanThuLaoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewSinhVienLopProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewSinhVienLopProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopProviderBaseCore.GetByMaKhoa(System.String)">
            <summary>
            This method wrap the 'cust_View_SinhVien_Lop_GetByMaKhoa' stored procedure. 
            </summary>
            <param name="maKhoa"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopProviderBaseCore.GetByMaKhoa(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_SinhVien_Lop_GetByMaKhoa' stored procedure. 
            </summary>
            <param name="maKhoa"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopProviderBaseCore.GetByMaKhoa(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_SinhVien_Lop_GetByMaKhoa' stored procedure. 
            </summary>
            <param name="maKhoa"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopProviderBaseCore.GetByMaKhoa(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_SinhVien_Lop_GetByMaKhoa' stored procedure. 
            </summary>
            <param name="maKhoa"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewSinhVienLop},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewSinhVienLop)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewSinhVienLop"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewSinhVienLop"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBaseCore.GetByMaDonVi(System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_ChuyenMon_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBaseCore.GetByMaDonVi(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_ChuyenMon_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_ChuyenMon_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_ChuyenMon_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewPhanCongChuyenMon},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewPhanCongChuyenMon)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewPhanCongChuyenMon"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewPhanCongChuyenMon"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongChuyenMonFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongChuyenMonParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongChuyenMonSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongChuyenMonSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocKhoaProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewMonHocKhoaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaProviderBaseCore.GetByMaDonVi(System.String)">
            <summary>
            This method wrap the 'cust_View_MonHoc_Khoa_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaProviderBaseCore.GetByMaDonVi(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_MonHoc_Khoa_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_MonHoc_Khoa_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_MonHoc_Khoa_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewMonHocKhoa},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewMonHocKhoa)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewMonHocKhoa"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewMonHocKhoa"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocKhoaFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHocKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocKhoaParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHocKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocKhoaSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHocKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocKhoaSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopHocPhanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewLopHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewLopHocPhan},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewLopHocPhan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewLopHocPhan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewLopHocPhan"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopHocPhanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewLopHocPhanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopHocPhanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewLopHocPhanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopHocPhanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopHocPhanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewLopHocPhanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopHocPhanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewLopHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewKhoiLuongThucDay},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewKhoiLuongThucDay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewKhoiLuongThucDay"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewKhoiLuongThucDay"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaLop(System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_GiangDay_GetByMaGiangVienMaLopHocPhanMaLop' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaLop(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_GiangDay_GetByMaGiangVienMaLopHocPhanMaLop' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaLop(PMS.Data.TransactionManager,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_GiangDay_GetByMaGiangVienMaLopHocPhanMaLop' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaLop(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_GiangDay_GetByMaGiangVienMaLopHocPhanMaLop' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewKhoiLuongGiangDay},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewKhoiLuongGiangDay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewKhoiLuongGiangDay"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewKhoiLuongGiangDay"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.ThucDay_GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.ThucDay_GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.ThucDay_GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.ThucDay_GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.GiangDay_GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.GiangDay_GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.GiangDay_GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.GiangDay_GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.GetByNamHocHocKyMaDonViMaGiangVien(System.String,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GetByNamHocHocKyMaDonViMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maBoMon"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.GetByNamHocHocKyMaDonViMaGiangVien(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GetByNamHocHocKyMaDonViMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maBoMon"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.GetByNamHocHocKyMaDonViMaGiangVien(PMS.Data.TransactionManager,System.String,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GetByNamHocHocKyMaDonViMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maBoMon"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.GetByNamHocHocKyMaDonViMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GetByNamHocHocKyMaDonViMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maBoMon"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewChiTietKhoiLuong},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewChiTietKhoiLuong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewChiTietKhoiLuong"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewChiTietKhoiLuong"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietGiangDayProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietGiangDayProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaKhoaHoc(System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_GiangDay_GetByMaGiangVienMaLopHocPhanMaKhoaHoc' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaKhoaHoc(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_GiangDay_GetByMaGiangVienMaLopHocPhanMaKhoaHoc' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaKhoaHoc(PMS.Data.TransactionManager,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_GiangDay_GetByMaGiangVienMaLopHocPhanMaKhoaHoc' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaKhoaHoc(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_GiangDay_GetByMaGiangVienMaLopHocPhanMaKhoaHoc' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewChiTietGiangDay},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewChiTietGiangDay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewChiTietGiangDay"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewChiTietGiangDay"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.HoSoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HoSoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HoSoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HoSoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaGiangVienFromGiangVienHoSo(System.Int32)">
            <summary>
            	Gets HoSo objects from the datasource by MaGiangVien in the
            	GiangVien_HoSo table. Table HoSo is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of HoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaGiangVienFromGiangVienHoSo(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets PMS.Entities.HoSo objects from the datasource by MaGiangVien in the
            	GiangVien_HoSo table. Table HoSo is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a TList of HoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaGiangVienFromGiangVienHoSo(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets HoSo objects from the datasource by MaGiangVien in the
            	GiangVien_HoSo table. Table HoSo is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of HoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaGiangVienFromGiangVienHoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets HoSo objects from the datasource by MaGiangVien in the
            	GiangVien_HoSo table. Table HoSo is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaGiangVienFromGiangVienHoSo(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets HoSo objects from the datasource by MaGiangVien in the
            	GiangVien_HoSo table. Table HoSo is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaGiangVienFromGiangVienHoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets HoSo objects from the datasource by MaGiangVien in the
            	GiangVien_HoSo table. Table HoSo is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a TList of HoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.HoSoKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maHoSo">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.HoSoKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_HoSo index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HoSo index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_HoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HoSo index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaHoSo(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_HoSo index.
            </summary>
            <param name="_maHoSo"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaHoSo(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HoSo index.
            </summary>
            <param name="_maHoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaHoSo(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaHoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaHoSo(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HoSo index.
            </summary>
            <param name="_maHoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.GetByMaHoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.HoSo},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;HoSo&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.HoSo)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HoSo"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HoSo"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.HoSo)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HoSo"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HoSo"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.HoSo,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.HoSo"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.HoSo Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.HoSoProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.HoSo,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.HoSo object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.HoSo instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.HoSo Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ThuLaoThoaThuanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.ThuLaoThoaThuanKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maThuLao">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maThuLao">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_ThuLaoThoaThuan_GiangVien key.
            	FK_ThuLaoThoaThuan_GiangVien Description: 
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.ThuLaoThoaThuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_ThuLaoThoaThuan_GiangVien key.
            	FK_ThuLaoThoaThuan_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.ThuLaoThoaThuan objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ThuLaoThoaThuan_GiangVien key.
            	FK_ThuLaoThoaThuan_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ThuLaoThoaThuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ThuLaoThoaThuan_GiangVien key.
            	fkThuLaoThoaThuanGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ThuLaoThoaThuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ThuLaoThoaThuan_GiangVien key.
            	fkThuLaoThoaThuanGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ThuLaoThoaThuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ThuLaoThoaThuan_GiangVien key.
            	FK_ThuLaoThoaThuan_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.ThuLaoThoaThuan objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.ThuLaoThoaThuanKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaThuLao(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ThuLaoThoaThuan index.
            </summary>
            <param name="_maThuLao"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaThuLao(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ThuLaoThoaThuan index.
            </summary>
            <param name="_maThuLao"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaThuLao(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ThuLaoThoaThuan index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maThuLao"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaThuLao(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ThuLaoThoaThuan index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maThuLao"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaThuLao(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ThuLaoThoaThuan index.
            </summary>
            <param name="_maThuLao"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.GetByMaThuLao(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ThuLaoThoaThuan index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maThuLao"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.ThuLaoThoaThuan},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ThuLaoThoaThuan&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ThuLaoThoaThuan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.ThuLaoThoaThuan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.ThuLaoThoaThuan,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.ThuLaoThoaThuan Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.ThuLaoThoaThuan,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.ThuLaoThoaThuan object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.ThuLaoThoaThuan instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.ThuLaoThoaThuan Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ThuLaoThoaThuanChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.ThuLaoThoaThuan</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.ThuLaoThoaThuanChildEntityTypes.GiangVien">
            <summary>
             Composite Property for <c>GiangVien</c> at MaGiangVienSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ThuLaoThoaThuanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ThuLaoThoaThuanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ThuLaoThoaThuanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ThuLaoThoaThuanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTinhKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Tinh_KhoiLuong_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Tinh_KhoiLuong_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Tinh_KhoiLuong_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Tinh_KhoiLuong_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.GetByNamHocHocKyMaGiangVien(System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_Tinh_KhoiLuong_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.GetByNamHocHocKyMaGiangVien(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_Tinh_KhoiLuong_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.GetByNamHocHocKyMaGiangVien(PMS.Data.TransactionManager,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_Tinh_KhoiLuong_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.GetByNamHocHocKyMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_Tinh_KhoiLuong_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewTinhKhoiLuong},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewTinhKhoiLuong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewTinhKhoiLuong"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewTinhKhoiLuong"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTinhKhoiLuongFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTinhKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTinhKhoiLuongParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTinhKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTinhKhoiLuongSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTinhKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTinhKhoiLuongSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocKhoaProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewMonHocKhoaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKetQuaTinhProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKetQuaTinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKetQuaTinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KetQuaTinh_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KetQuaTinh_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KetQuaTinh_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_KetQuaTinh_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.GetByNamHocHocKyMaGiangVien(System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_KetQuaTinh_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.GetByNamHocHocKyMaGiangVien(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_KetQuaTinh_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.GetByNamHocHocKyMaGiangVien(PMS.Data.TransactionManager,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_KetQuaTinh_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.GetByNamHocHocKyMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_KetQuaTinh_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewKetQuaTinh},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewKetQuaTinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewKetQuaTinh"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewKetQuaTinh"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewHocKyProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewHocKyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyProviderBaseCore.GetByNamHoc(System.String)">
            <summary>
            This method wrap the 'cust_View_HocKy_GetByNamHoc' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyProviderBaseCore.GetByNamHoc(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_HocKy_GetByNamHoc' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyProviderBaseCore.GetByNamHoc(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_HocKy_GetByNamHoc' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyProviderBaseCore.GetByNamHoc(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_HocKy_GetByNamHoc' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewHocKy},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewHocKy)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewHocKy"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewHocKy"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewHocKyFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewHocKyFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewHocKyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewHocKyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewHocKyParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewHocKyParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewHocKyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKyParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewHocKyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewHocKySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewHocKySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewHocKySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietHocPhanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaLop(System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_HocPhan_GetByMaGiangVienMaLopHocPhanMaLop' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaLop(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_HocPhan_GetByMaGiangVienMaLopHocPhanMaLop' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaLop(PMS.Data.TransactionManager,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_HocPhan_GetByMaGiangVienMaLopHocPhanMaLop' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.GetByMaGiangVienMaLopHocPhanMaLop(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_HocPhan_GetByMaGiangVienMaLopHocPhanMaLop' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.String</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.GetByMaLopHocPhan(System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_HocPhan_GetByMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.GetByMaLopHocPhan(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_HocPhan_GetByMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.GetByMaLopHocPhan(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_HocPhan_GetByMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.GetByMaLopHocPhan(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_HocPhan_GetByMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewChiTietHocPhan},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewChiTietHocPhan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewChiTietHocPhan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewChiTietHocPhan"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.KhoanQuyDoiChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.KhoanQuyDoi</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.KhoanQuyDoiChildEntityTypes.QuyDoiGioChuan">
            <summary>
             Composite Property for <c>QuyDoiGioChuan</c> at MaQuyDoiSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoanQuyDoiFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoanQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the KhoanQuyDoiFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoanQuyDoiFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoanQuyDoiFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.KhoanQuyDoiParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoanQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the KhoanQuyDoiParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoanQuyDoiParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoanQuyDoiParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.KhoanQuyDoiSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoanQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoanQuyDoiSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the KhoanQuyDoiSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TongHop_ChiTien_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TongHop_ChiTien_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TongHop_ChiTien_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TongHop_ChiTien_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewTongHopChiTienCoVan},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewTongHopChiTienCoVan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewTongHopChiTienCoVan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewTongHopChiTienCoVan"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanTienGiangProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewThanhToanTienGiangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangProviderBaseCore.GetByMaLoaiGiangVienTuNgayDenNgay(System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_ThanhToan_TienGiang_GetByMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangProviderBaseCore.GetByMaLoaiGiangVienTuNgayDenNgay(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_ThanhToan_TienGiang_GetByMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangProviderBaseCore.GetByMaLoaiGiangVienTuNgayDenNgay(PMS.Data.TransactionManager,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_ThanhToan_TienGiang_GetByMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangProviderBaseCore.GetByMaLoaiGiangVienTuNgayDenNgay(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_ThanhToan_TienGiang_GetByMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewThanhToanTienGiang},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewThanhToanTienGiang)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewThanhToanTienGiang"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewThanhToanTienGiang"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanTienGiangFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanTienGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanTienGiangParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanTienGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanTienGiangSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanTienGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewThanhToanTienGiangSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaHocProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoaHocProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaHocProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewKhoaHoc},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaHocProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewKhoaHoc)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewKhoaHoc"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewKhoaHoc"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaHocFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaHocFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaHocFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaHocFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaHocFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaHocFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaHocFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaHocParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaHocParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaHocParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaHocParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaHocParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaHocParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaHocParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaHocSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaHocSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaHocSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewGiangVienProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetKetThucByTuNgayDenNgay(System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetKetThucByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetKetThucByTuNgayDenNgay(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetKetThucByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetKetThucByTuNgayDenNgay(PMS.Data.TransactionManager,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetKetThucByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetKetThucByTuNgayDenNgay(PMS.Data.TransactionManager,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetKetThucByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetByNamHocHocKyMaGiangVien(System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetByNamHocHocKyMaGiangVien(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetByNamHocHocKyMaGiangVien(PMS.Data.TransactionManager,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetByNamHocHocKyMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.DonGia_GetByMaDonVi(System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_DonGia_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.DonGia_GetByMaDonVi(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_DonGia_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.DonGia_GetByMaDonVi(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_DonGia_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.DonGia_GetByMaDonVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_DonGia_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetBatDauByTuNgayDenNgay(System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetBatDauByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetBatDauByTuNgayDenNgay(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetBatDauByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetBatDauByTuNgayDenNgay(PMS.Data.TransactionManager,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetBatDauByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.LopHocPhan_GetBatDauByTuNgayDenNgay(PMS.Data.TransactionManager,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetBatDauByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewGiangVien},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewGiangVien)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewGiangVien"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewGiangVien"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewDanTocProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewDanTocProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDanTocProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewDanToc},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewDanTocProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewDanToc)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewDanToc"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewDanToc"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewDanTocFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDanToc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDanTocFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewDanTocFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDanTocFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDanTocFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewDanTocFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDanTocFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewDanTocParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDanToc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDanTocParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewDanTocParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDanTocParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDanTocParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewDanTocParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDanTocParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewDanTocSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDanToc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDanTocSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewDanTocSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewCoSoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewCoSoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewCoSoProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewCoSo},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewCoSoProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewCoSo)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewCoSo"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewCoSo"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewCoSoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewCoSoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewCoSoFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewCoSoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewCoSoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewCoSoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewCoSoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewCoSoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewCoSoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewCoSoParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewCoSoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewCoSoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewCoSoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewCoSoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewCoSoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewCoSoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewCoSoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChucVuProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.GiangVienChucVuProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.GiangVienChucVuKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maGiangVien">. Primary Key.</param>
            <param name="_maChucVu">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien">. Primary Key.</param>
            <param name="_maChucVu">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaChucVu(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_ChucVu key.
            	FK_GiangVien_ChucVu_ChucVu Description: 
            </summary>
            <param name="_maChucVu"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaChucVu(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_ChucVu key.
            	FK_GiangVien_ChucVu_ChucVu Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucVu"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_ChucVu key.
            	FK_GiangVien_ChucVu_ChucVu Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaChucVu(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_ChucVu key.
            	fkGiangVienChucVuChucVu Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maChucVu"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaChucVu(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_ChucVu key.
            	fkGiangVienChucVuChucVu Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maChucVu"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_ChucVu key.
            	FK_GiangVien_ChucVu_ChucVu Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVien(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_GiangVien key.
            	FK_GiangVien_ChucVu_GiangVien Description: 
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_GiangVien key.
            	FK_GiangVien_ChucVu_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_GiangVien key.
            	FK_GiangVien_ChucVu_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVien(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_GiangVien key.
            	fkGiangVienChucVuGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVien(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_GiangVien key.
            	fkGiangVienChucVuGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChucVu_GiangVien key.
            	FK_GiangVien_ChucVu_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.GiangVienChucVuKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVienMaChucVu(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_GiangVien_ChucVu index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_maChucVu"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVienMaChucVu(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChucVu index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVienMaChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChucVu index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_maChucVu"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVienMaChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChucVu index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVienMaChucVu(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChucVu index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.GetByMaGiangVienMaChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChucVu index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.GiangVienChucVu},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;GiangVienChucVu&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.GiangVienChucVu)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.GiangVienChucVu"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVienChucVu"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.GiangVienChucVu)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.GiangVienChucVu"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVienChucVu"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.GiangVienChucVu,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVienChucVu"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.GiangVienChucVu Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.GiangVienChucVu,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.GiangVienChucVu object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.GiangVienChucVu instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.GiangVienChucVu Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChucVuChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.GiangVienChucVu</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChucVuChildEntityTypes.ChucVu">
            <summary>
             Composite Property for <c>ChucVu</c> at MaChucVuSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChucVuChildEntityTypes.GiangVien">
            <summary>
             Composite Property for <c>GiangVien</c> at MaGiangVienSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChucVuFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChucVuFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChucVuFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChucVuFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChucVuParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChucVuParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChucVuParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChucVuParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChucVuSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChucVuSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChucVuSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeThongProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HeThongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeThongProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HeThongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.HeThongKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_userId">. Primary Key.</param>
            <param name="_parentId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId">. Primary Key.</param>
            <param name="_parentId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan key.
            	FK_HeThong_TaiKhoan Description: 
            </summary>
            <param name="_userId"></param>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserId(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan key.
            	FK_HeThong_TaiKhoan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserId(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan key.
            	FK_HeThong_TaiKhoan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan key.
            	fkHeThongTaiKhoan Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_userId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan key.
            	fkHeThongTaiKhoan Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_userId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserId(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan key.
            	FK_HeThong_TaiKhoan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByParentId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan1 key.
            	FK_HeThong_TaiKhoan1 Description: 
            </summary>
            <param name="_parentId"></param>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByParentId(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan1 key.
            	FK_HeThong_TaiKhoan1 Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_parentId"></param>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByParentId(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan1 key.
            	FK_HeThong_TaiKhoan1 Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByParentId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan1 key.
            	fkHeThongTaiKhoan1 Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_parentId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByParentId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan1 key.
            	fkHeThongTaiKhoan1 Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_parentId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByParentId(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_HeThong_TaiKhoan1 key.
            	FK_HeThong_TaiKhoan1 Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.HeThong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.HeThongKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserIdParentId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_HeThong index.
            </summary>
            <param name="_userId"></param>
            <param name="_parentId"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeThong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserIdParentId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeThong index.
            </summary>
            <param name="_userId"></param>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeThong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserIdParentId(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeThong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="_parentId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeThong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserIdParentId(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeThong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeThong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserIdParentId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HeThong index.
            </summary>
            <param name="_userId"></param>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeThong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.GetByUserIdParentId(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HeThong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeThong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.HeThong},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;HeThong&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.HeThong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HeThong"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeThong"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.HeThong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HeThong"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeThong"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.HeThong,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeThong"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.HeThong Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.HeThongProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.HeThong,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.HeThong object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.HeThong instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.HeThong Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.GetByMaLoaiGiangVienTuNgayDenNgay(System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_GiangDay_GetByMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.GetByMaLoaiGiangVienTuNgayDenNgay(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_GiangDay_GetByMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.GetByMaLoaiGiangVienTuNgayDenNgay(PMS.Data.TransactionManager,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_GiangDay_GetByMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.GetByMaLoaiGiangVienTuNgayDenNgay(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_GiangDay_GetByMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.GetByMaCoSoMaLoaiGiangVienTuNgayDenNgay(System.String,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_GiangDay_GetByMaCoSoMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.GetByMaCoSoMaLoaiGiangVienTuNgayDenNgay(System.Int32,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_GiangDay_GetByMaCoSoMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.GetByMaCoSoMaLoaiGiangVienTuNgayDenNgay(PMS.Data.TransactionManager,System.String,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_GiangDay_GetByMaCoSoMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.GetByMaCoSoMaLoaiGiangVienTuNgayDenNgay(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_GiangDay_GetByMaCoSoMaLoaiGiangVienTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="maLoaiGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewTheoDoiGiangDay},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewTheoDoiGiangDay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewTheoDoiGiangDay"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewTheoDoiGiangDay"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiGiangDayFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiGiangDayParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDayParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiGiangDaySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiGiangDaySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDaySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongCoVanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewPhanCongCoVanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewPhanCongCoVanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.GetByMaDonViNamHocHocKy(System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_CoVan_GetByMaDonViNamHocHocKy' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.GetByMaDonViNamHocHocKy(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_CoVan_GetByMaDonViNamHocHocKy' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.GetByMaDonViNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_CoVan_GetByMaDonViNamHocHocKy' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.GetByMaDonViNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_CoVan_GetByMaDonViNamHocHocKy' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_PhanCong_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewPhanCongCoVan},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewPhanCongCoVan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewPhanCongCoVan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewPhanCongCoVan"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewLopProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.DaiDien_GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_DaiDien_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.DaiDien_GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_DaiDien_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.DaiDien_GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_DaiDien_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.DaiDien_GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_DaiDien_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.GetByMaDonVi(System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.GetByMaDonVi(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewLop},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewLop)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewLop"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewLop"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewLopFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewLopParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewLopSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKetQuaTinhFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKetQuaTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKetQuaTinhParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKetQuaTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKetQuaTinhSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKetQuaTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKetQuaTinhSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.TransactionManager">
            <summary>
            TransactionManager is utility class that decorates a <see cref="T:System.Data.IDbTransaction"/> instance.
            </summary>
        </member>
        <member name="T:PMS.Data.ITransactionManager">
            <summary>
            TransactionManager interface
            </summary>
        </member>
        <member name="M:PMS.Data.ITransactionManager.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
        </member>
        <member name="M:PMS.Data.ITransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="isolationLevel">The isolation level.</param>
        </member>
        <member name="M:PMS.Data.ITransactionManager.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:PMS.Data.ITransactionManager.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:PMS.Data.ITransactionManager.Rollback">
            <summary>
            Rollbacks this instance.
            </summary>
        </member>
        <member name="P:PMS.Data.ITransactionManager.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:PMS.Data.ITransactionManager.Database">
            <summary>
            Gets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="P:PMS.Data.ITransactionManager.InvariantProviderName">
            <summary>
            Gets or sets the name of the invariant provider.
            </summary>
            <value>The name of the invariant provider.</value>
        </member>
        <member name="P:PMS.Data.ITransactionManager.IsOpen">
            <summary>
            Gets a value indicating whether this instance is open.
            </summary>
            <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:PMS.Data.ITransactionManager.TransactionObject">
            <summary>
            Gets the transaction object.
            </summary>
            <value>The transaction object.</value>
        </member>
        <member name="M:PMS.Data.TransactionManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PMS.Data.TransactionManager"/> class.
            </summary>
        </member>
        <member name="M:PMS.Data.TransactionManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PMS.Data.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
        </member>
        <member name="M:PMS.Data.TransactionManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PMS.Data.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="providerInvariantName">Name of the provider invariant.</param>
        </member>
        <member name="M:PMS.Data.TransactionManager.BeginTransaction">
            <summary>
            Begins a transaction.
            </summary>
            <remarks>The default <see cref="T:System.Data.IsolationLevel"/> mode is ReadCommitted</remarks>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
        </member>
        <member name="M:PMS.Data.TransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a transaction.
            </summary>
            <param name="isolationLevel">The <see cref="T:System.Data.IsolationLevel"/> level of the transaction</param>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
            <exception cref="T:System.Data.DataException"></exception>
            <exception cref="T:System.Data.Common.DbException"></exception>
        </member>
        <member name="M:PMS.Data.TransactionManager.Commit">
            <summary>
            Commit the transaction to the datasource.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:PMS.Data.TransactionManager.Rollback">
            <summary>
            Rollback the transaction.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:PMS.Data.TransactionManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:PMS.Data.TransactionManager.ConnectionString">
            <summary>
            Gets or sets the configuration key for database service.
            </summary>
            <remark>Do not change during a transaction.</remark>
            <exception cref="T:System.InvalidOperationException">
            If an attempt to set when the connection is currently open.
            </exception>
        </member>
        <member name="P:PMS.Data.TransactionManager.InvariantProviderName">
            <summary>
            Gets or sets the name of the invariant provider.
            </summary>
            <value>The name of the invariant provider.</value>
        </member>
        <member name="P:PMS.Data.TransactionManager.Database">
            <summary>
            Gets the <see cref="P:PMS.Data.TransactionManager.Database"/> instance.
            </summary>
            <value></value>
        </member>
        <member name="P:PMS.Data.TransactionManager.TransactionObject">
            <summary>
            Gets the underlying <see cref="T:System.Data.Common.DbTransaction"/> object.
            </summary>
        </member>
        <member name="P:PMS.Data.TransactionManager.IsOpen">
            <summary>
            Gets a value that indicates if a transaction is currently open and operating. 
            </summary>
            <value>Return true if a transaction session is currently open and operating; otherwise false.</value>
        </member>
        <member name="T:PMS.Data.DeepLoadType">
            <summary>
            DeepLoad options for deep loading entities
            </summary>
        </member>
        <member name="F:PMS.Data.DeepLoadType.IncludeChildren">
            <summary>
            Will Include a child property collection 1 Level Deep
            </summary>
        </member>
        <member name="F:PMS.Data.DeepLoadType.ExcludeChildren">
            <summary>
            Will Exclude a child property collection
            </summary>
        </member>
        <member name="F:PMS.Data.DeepLoadType.Ignore">
            <summary>
            Will ignore the request and return the entity.
            </summary>
        </member>
        <member name="T:PMS.Data.DeepSaveType">
            <summary>
            DeepSave options for deep saving entities
            </summary>
        </member>
        <member name="F:PMS.Data.DeepSaveType.IncludeChildren">
            <summary>Will Include a child property collection</summary>
        </member>
        <member name="F:PMS.Data.DeepSaveType.ExcludeChildren">
            <summary>Will Exclude a child property collection</summary>
        </member>
        <member name="F:PMS.Data.DeepSaveType.Ignore">
            <summary>Will ignore the request and return the entity.</summary>
        </member>
        <member name="T:PMS.Data.Utility">
            <summary>
            Contains some helper function for SQL.
            </summary>
        </member>
        <member name="M:PMS.Data.Utility.GetDefaultByType(System.Data.DbType)">
            <summary>
            Get a default value for a given data type
            </summary>
            <param name="dataType">Data type for which to get the default value</param>
            <returns>An object of the default value.</returns>
        </member>
        <member name="M:PMS.Data.Utility.GetDataValue(System.Data.IDataParameter)">
            <summary>
            Get Value or Default Value from an IDataParamater
            Based on DbType
            </summary>
            <param name="p">The IDataParameter instance type is used to determine the default value.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Utility.DefaultToDBNull(System.Object,System.Data.DbType)">
            <summary>
            Checks to see if the Default Value has been set to the parameter.
            If it's the default value, then create.
            </summary>
            <param name="val">The value we want to check.</param>
            <param name="dbtype">The DbType from wich we take the default value.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Utility.GetParameterValue``1(System.Data.IDataParameter)">
            <summary>
            Generic method to return the value of a nullable parameter
            </summary>
            <typeparam name="T">Type of value to return</typeparam>
            <param name="parameter">Parameter from which to extract the value</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Utility.ConvertDataReaderToDataSet(System.Data.IDataReader)">
            <summary>
            Converts a IDataReader to a DataSet.  For use when a custom stored procedure returns an <see cref="T:System.Data.IDataReader"/>, it will 
            convert all result sets returned as a DataSet.
            </summary>
            <param name="reader">The reader to convert</param>
            <returns>A dataset with one table per result in the reader</returns>
        </member>
        <member name="M:PMS.Data.Utility.DetectSqlInjection(System.String)">
            <summary>
            A helper method to attempt to discover known SqlInjection attacks.  
            For use when using one of the flexible non-parameterized access methods, such as GetPaged()
            </summary>
            <param name="whereClause">string of the whereClause to check</param>
            <returns>true if found, false if not found </returns>
        </member>
        <member name="M:PMS.Data.Utility.DetectSqlInjection(System.String,System.String)">
            <summary>
            A helper method to attempt to discover known SqlInjection attacks.  
            For use when using one of the flexible non-parameterized access methods, such as GetPaged()
            </summary>
            <param name="whereClause">string of the whereClause to check</param>
            <param name="orderBy">string of the orderBy clause to check</param>
            <returns>true if found, false if not found </returns>
        </member>
        <member name="M:PMS.Data.Utility.ParseSortExpression(System.Type,System.String)">
            <summary>
            Parses the supplied sort expression parameter to verify that it
            matches the specifed column name enumeration.
            </summary>
            <param name="columnEnum"></param>
            <param name="sortExpression"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Utility.ExecuteReader(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns an <see cref="T:System.Data.IDataReader"/> through which the result can be read. 
            It is the responsibility of the caller to close the connection and reader when finished. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> object.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:PMS.Data.Utility.ExecuteReader(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns an <see cref="T:System.Data.IDataReader"/> through which the result can be read. 
            It is the responsibility of the caller to close the connection and reader when finished. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> object.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:PMS.Data.Utility.ExecuteNonQuery(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the number of rows affected. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:PMS.Data.Utility.ExecuteNonQuery(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the number of rows affected. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:PMS.Data.Utility.ExecuteDataSet(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:PMS.Data.Utility.ExecuteDataSet(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:PMS.Data.Utility.ExecuteScalar(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the scalar object. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:PMS.Data.Utility.ExecuteScalar(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returnsthe scalar object. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:PMS.Data.SqlExpressionParser">
            <summary>
            Parses search text into an expression that can
            be used in a SQL WHERE clause.
            </summary>
        </member>
        <member name="T:PMS.Data.ExpressionParserBase">
            <summary>
            Provides the base functionality required to parse search terms.
            </summary>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.#ctor(System.String,PMS.Data.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the ExpressionParserBase class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.ParseCore(System.String)">
            <summary>
            Appends the specified search text to the current expression.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.ParseQuotes(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Parses quoted search terms.
            </summary>
            <param name="searchText"></param>
            <param name="quotedValues"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.IsKeyWord(System.String)">
            <summary>
            Determines whether the specified word is a reserved keyword.
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.AppendOr">
            <summary>
            Appends an OR expression.
            </summary>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.AppendAnd">
            <summary>
            Appends an AND expression.
            </summary>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.AppendSpace">
            <summary>
            Appends an expression separator.
            </summary>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.OpenGrouping">
            <summary>
            Appends a group opened expression.
            </summary>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.CloseGrouping">
            <summary>
            Appends a group closed expression.
            </summary>
        </member>
        <member name="M:PMS.Data.ExpressionParserBase.AppendSearchText(System.String)">
            <summary>
            Appends the specified search text to the expression.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="F:PMS.Data.ExpressionParserBase.ignoreCase">
            <summary>
            The IgnoreCase member variable.
            </summary>
        </member>
        <member name="F:PMS.Data.ExpressionParserBase.propertyName">
            <summary>
            The PropertyName member variable.
            </summary>
        </member>
        <member name="F:PMS.Data.ExpressionParserBase.comparisonType">
            <summary>
            The ComparisonType member variable.
            </summary>
        </member>
        <member name="P:PMS.Data.ExpressionParserBase.IgnoreCase">
            <summary>
            Gets or sets the IgnoreCase property.
            </summary>
        </member>
        <member name="P:PMS.Data.ExpressionParserBase.PropertyName">
            <summary>
            Gets or sets the PropertyName property.
            </summary>
        </member>
        <member name="P:PMS.Data.ExpressionParserBase.ComparisonType">
            <summary>
            Gets or sets the ComparisonType property.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.#ctor(System.String,PMS.Data.SqlComparisonType)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.#ctor(System.String,PMS.Data.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.AppendOr">
            <summary>
            Appends "OR" to the SQL statement.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.AppendAnd">
            <summary>
            Appends "AND" to the SQL statement.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.AppendSpace">
            <summary>
            Appends a space to the SQL statement.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.OpenGrouping">
            <summary>
            Appends a left parentheses to the SQL statement.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.CloseGrouping">
            <summary>
            Appends a right parentheses to the SQL statement.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.AppendSearchText(System.String)">
            <summary>
            Appends the specified search text to the SQL statement.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.WrapWithSQL(System.String,System.String,System.Boolean)">
            <summary>
            Converts the search text into a valid search expression.
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.SqlExpressionParser.Parse(System.String)">
            <summary>
            Parses the specified value into separate search terms.
            </summary>
            <param name="value">The search text.</param>
            <returns>Returns a parsed search phrase.</returns>
        </member>
        <member name="T:PMS.Data.ParameterizedSqlExpressionParser">
            <summary>
            Parses search text into an expression that can
            be used in a parameterized SQL WHERE clause.
            </summary>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlExpressionParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlExpressionParser.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlExpressionParser.#ctor(System.String,PMS.Data.SqlComparisonType)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlExpressionParser.#ctor(System.String,PMS.Data.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlExpressionParser.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlExpressionParser.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlExpressionParser.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlExpressionParser.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.ParameterizedSqlExpressionParser.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:PMS.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="F:PMS.Data.ParameterizedSqlExpressionParser.parameters">
            <summary>
            The Parameters member variable.
            </summary>
        </member>
        <member name="P:PMS.Data.ParameterizedSqlExpressionParser.Parameters">
            <summary>
            Gets or sets the Parameters property.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.CoVanHocTapProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.CoVanHocTapProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.CoVanHocTapProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.CoVanHocTapProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.CoVanHocTapKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maCoVan">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCoVan">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_CoVanHocTap_GiangVien key.
            	FK_CoVanHocTap_GiangVien Description: 
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.CoVanHocTap objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_CoVanHocTap_GiangVien key.
            	FK_CoVanHocTap_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.CoVanHocTap objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CoVanHocTap_GiangVien key.
            	FK_CoVanHocTap_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.CoVanHocTap objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CoVanHocTap_GiangVien key.
            	fkCoVanHocTapGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.CoVanHocTap objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CoVanHocTap_GiangVien key.
            	fkCoVanHocTapGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.CoVanHocTap objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CoVanHocTap_GiangVien key.
            	FK_CoVanHocTap_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.CoVanHocTap objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.CoVanHocTapKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienMaLopNamHocHocKy(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_CoVanHocTap index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_maLop"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienMaLopNamHocHocKy(System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_CoVanHocTap index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_maLop"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienMaLopNamHocHocKy(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_CoVanHocTap index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_maLop"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienMaLopNamHocHocKy(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_CoVanHocTap index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_maLop"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienMaLopNamHocHocKy(System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_CoVanHocTap index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_maLop"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienMaLopNamHocHocKy(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_CoVanHocTap index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_maLop"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaCoVan(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CoVanHocTap index.
            </summary>
            <param name="_maCoVan"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaCoVan(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CoVanHocTap index.
            </summary>
            <param name="_maCoVan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaCoVan(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CoVanHocTap index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCoVan"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaCoVan(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CoVanHocTap index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCoVan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaCoVan(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CoVanHocTap index.
            </summary>
            <param name="_maCoVan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaCoVan(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CoVanHocTap index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCoVan"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CoVanHocTap"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienNamHocHocKy(System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByMaGiangVienNamHocHocKy' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienNamHocHocKy(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByMaGiangVienNamHocHocKy' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByMaGiangVienNamHocHocKy' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByMaGiangVienNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByMaGiangVienNamHocHocKy' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.InsertUpdate(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean})">
            <summary>
            This method wrap the 'cust_CoVanHocTap_InsertUpdate' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32?</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <param name="ngayTao"> A <c>System.DateTime</c> instance.</param>
            <param name="soTiet"> A <c>System.Int32?</c> instance.</param>
            <param name="soTien"> A <c>System.Decimal?</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean?</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.InsertUpdate(System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean})">
            <summary>
            This method wrap the 'cust_CoVanHocTap_InsertUpdate' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32?</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <param name="ngayTao"> A <c>System.DateTime</c> instance.</param>
            <param name="soTiet"> A <c>System.Int32?</c> instance.</param>
            <param name="soTien"> A <c>System.Decimal?</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.InsertUpdate(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean})">
            <summary>
            This method wrap the 'cust_CoVanHocTap_InsertUpdate' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32?</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <param name="ngayTao"> A <c>System.DateTime</c> instance.</param>
            <param name="soTiet"> A <c>System.Int32?</c> instance.</param>
            <param name="soTien"> A <c>System.Decimal?</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean?</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.InsertUpdate(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean})">
            <summary>
            This method wrap the 'cust_CoVanHocTap_InsertUpdate' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32?</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maLop"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <param name="ngayTao"> A <c>System.DateTime</c> instance.</param>
            <param name="soTiet"> A <c>System.Int32?</c> instance.</param>
            <param name="soTien"> A <c>System.Decimal?</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByNamHocHocKyMaKhoaHoc(System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByNamHocHocKyMaKhoaHoc' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByNamHocHocKyMaKhoaHoc(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByNamHocHocKyMaKhoaHoc' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByNamHocHocKyMaKhoaHoc(PMS.Data.TransactionManager,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByNamHocHocKyMaKhoaHoc' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByNamHocHocKyMaKhoaHoc(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByNamHocHocKyMaKhoaHoc' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maKhoaHoc"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByTrangThai(System.Boolean)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByTrangThai' stored procedure. 
            </summary>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByTrangThai(System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByTrangThai' stored procedure. 
            </summary>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByTrangThai(PMS.Data.TransactionManager,System.Boolean)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByTrangThai' stored procedure. 
            </summary>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.GetByTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_CoVanHocTap_GetByTrangThai' stored procedure. 
            </summary>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.CoVanHocTap},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;CoVanHocTap&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.CoVanHocTap)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.CoVanHocTap"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.CoVanHocTap"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.CoVanHocTap)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.CoVanHocTap"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.CoVanHocTap"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.CoVanHocTap,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.CoVanHocTap"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.CoVanHocTap Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.CoVanHocTap,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.CoVanHocTap object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.CoVanHocTap instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.CoVanHocTap Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.DonViTinhProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.DonViTinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.DonViTinhKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maDonVi">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maDonVi">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.DonViTinhKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_DonViTinh index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_DonViTinh index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_DonViTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_DonViTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_DonViTinh index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_DonViTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaDonVi(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_DonViTinh index.
            </summary>
            <param name="_maDonVi"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaDonVi(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_DonViTinh index.
            </summary>
            <param name="_maDonVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_DonViTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maDonVi"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_DonViTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maDonVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaDonVi(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DonViTinh index.
            </summary>
            <param name="_maDonVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DonViTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maDonVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.DonViTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.DonViTinh},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;DonViTinh&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.DonViTinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.DonViTinh"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.DonViTinh"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.DonViTinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.DonViTinh"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.DonViTinh"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.DonViTinh,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.DonViTinh"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.DonViTinh Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.DonViTinh,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.DonViTinh object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.DonViTinh instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.DonViTinh Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.DonViTinhChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.DonViTinh</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.DonViTinhChildEntityTypes.QuyDoiGioChuanCollection">
            <summary>
             Collection of <c>DonViTinh</c> as OneToMany for QuyDoiGioChuanCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.DonViTinhFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.DonViTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DonViTinhFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DonViTinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DonViTinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.DonViTinhParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.DonViTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DonViTinhParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DonViTinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DonViTinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.DonViTinhSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.DonViTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DonViTinhSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the DonViTinhSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoHocKyProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HeSoHocKyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoHocKyProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HeSoHocKyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.HeSoHocKyKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maHocKy">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocKy">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.HeSoHocKyKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_HeSoHocKy index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoHocKy index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoHocKy index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoHocKy index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoHocKy index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoHocKy index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaHocKy(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_HeSoHocKy index.
            </summary>
            <param name="_maHocKy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaHocKy(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoHocKy index.
            </summary>
            <param name="_maHocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaHocKy(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoHocKy index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocKy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoHocKy index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaHocKy(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoHocKy index.
            </summary>
            <param name="_maHocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.GetByMaHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoHocKy index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoHocKy"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.HeSoHocKy},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;HeSoHocKy&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.HeSoHocKy)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HeSoHocKy"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeSoHocKy"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.HeSoHocKy)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HeSoHocKy"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeSoHocKy"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.HeSoHocKy,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeSoHocKy"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.HeSoHocKy Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.HeSoHocKy,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.HeSoHocKy object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.HeSoHocKy instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.HeSoHocKy Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ChiTietKhoiLuongProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ChiTietKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ChiTietKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.ChiTietKhoiLuongKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maChiTiet">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChiTiet">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaKhoiLuong(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_ChiTietKhoiLuong_KhoiLuongKhac key.
            	FK_ChiTietKhoiLuong_KhoiLuongKhac Description: 
            </summary>
            <param name="_maKhoiLuong"></param>
            <returns>Returns a typed collection of PMS.Entities.ChiTietKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaKhoiLuong(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_ChiTietKhoiLuong_KhoiLuongKhac key.
            	FK_ChiTietKhoiLuong_KhoiLuongKhac Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong"></param>
            <returns>Returns a typed collection of PMS.Entities.ChiTietKhoiLuong objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaKhoiLuong(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ChiTietKhoiLuong_KhoiLuongKhac key.
            	FK_ChiTietKhoiLuong_KhoiLuongKhac Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ChiTietKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaKhoiLuong(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ChiTietKhoiLuong_KhoiLuongKhac key.
            	fkChiTietKhoiLuongKhoiLuongKhac Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maKhoiLuong"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ChiTietKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaKhoiLuong(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ChiTietKhoiLuong_KhoiLuongKhac key.
            	fkChiTietKhoiLuongKhoiLuongKhac Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maKhoiLuong"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ChiTietKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaKhoiLuong(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ChiTietKhoiLuong_KhoiLuongKhac key.
            	FK_ChiTietKhoiLuong_KhoiLuongKhac Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.ChiTietKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.ChiTietKhoiLuongKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaChiTiet(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ChiTietKhoiLuong index.
            </summary>
            <param name="_maChiTiet"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaChiTiet(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ChiTietKhoiLuong index.
            </summary>
            <param name="_maChiTiet"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaChiTiet(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ChiTietKhoiLuong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChiTiet"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaChiTiet(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ChiTietKhoiLuong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChiTiet"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaChiTiet(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ChiTietKhoiLuong index.
            </summary>
            <param name="_maChiTiet"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.GetByMaChiTiet(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ChiTietKhoiLuong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChiTiet"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.ChiTietKhoiLuong},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ChiTietKhoiLuong&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ChiTietKhoiLuong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.ChiTietKhoiLuong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.ChiTietKhoiLuong,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.ChiTietKhoiLuong Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.ChiTietKhoiLuong,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.ChiTietKhoiLuong object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.ChiTietKhoiLuong instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.ChiTietKhoiLuong Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.HocHamProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HocHamProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.HocHamKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maHocHam">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocHam">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.HocHamKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_HocHam index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HocHam index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_HocHam index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HocHam index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HocHam index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HocHam index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaHocHam(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_HocHam index.
            </summary>
            <param name="_maHocHam"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaHocHam(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HocHam index.
            </summary>
            <param name="_maHocHam"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaHocHam(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HocHam index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocHam"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaHocHam(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HocHam index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocHam"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaHocHam(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HocHam index.
            </summary>
            <param name="_maHocHam"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.GetByMaHocHam(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HocHam index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocHam"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocHam"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.HocHam},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;HocHam&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.HocHam)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HocHam"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HocHam"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.HocHam)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HocHam"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HocHam"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.HocHam,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.HocHam"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.HocHam Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.HocHamProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.HocHam,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.HocHam object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.HocHam instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.HocHam Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.HocHamChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.HocHam</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.HocHamChildEntityTypes.GiangVienCollection">
            <summary>
             Collection of <c>HocHam</c> as OneToMany for GiangVienCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HocHamFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocHam"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocHamFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HocHamFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocHamFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HocHamFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HocHamFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HocHamFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HocHamParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocHam"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocHamParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HocHamParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocHamParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HocHamParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HocHamParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HocHamParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HocHamSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocHam"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocHamSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the HocHamSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetTheoNgayByTuNgayDenNgayMaCoSoMaBacLoaiHinh(System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetTheoNgayByTuNgayDenNgayMaCoSoMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetTheoNgayByTuNgayDenNgayMaCoSoMaBacLoaiHinh(System.Int32,System.Int32,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetTheoNgayByTuNgayDenNgayMaCoSoMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetTheoNgayByTuNgayDenNgayMaCoSoMaBacLoaiHinh(PMS.Data.TransactionManager,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetTheoNgayByTuNgayDenNgayMaCoSoMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetTheoNgayByTuNgayDenNgayMaCoSoMaBacLoaiHinh(PMS.Data.TransactionManager,System.Int32,System.Int32,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetTheoNgayByTuNgayDenNgayMaCoSoMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByTuNgayDenNgayMaCoSo(System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByTuNgayDenNgayMaCoSo' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByTuNgayDenNgayMaCoSo(System.Int32,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByTuNgayDenNgayMaCoSo' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByTuNgayDenNgayMaCoSo(PMS.Data.TransactionManager,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByTuNgayDenNgayMaCoSo' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByTuNgayDenNgayMaCoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByTuNgayDenNgayMaCoSo' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByNgayMaCoSoTietBatDauKetThuc(System.DateTime,System.String,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByNgayMaCoSoTietBatDauKetThuc' stored procedure. 
            </summary>
            <param name="ngay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="tietBatDau"> A <c>System.Int32</c> instance.</param>
            <param name="tietKetThuc"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByNgayMaCoSoTietBatDauKetThuc(System.Int32,System.Int32,System.DateTime,System.String,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByNgayMaCoSoTietBatDauKetThuc' stored procedure. 
            </summary>
            <param name="ngay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="tietBatDau"> A <c>System.Int32</c> instance.</param>
            <param name="tietKetThuc"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByNgayMaCoSoTietBatDauKetThuc(PMS.Data.TransactionManager,System.DateTime,System.String,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByNgayMaCoSoTietBatDauKetThuc' stored procedure. 
            </summary>
            <param name="ngay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="tietBatDau"> A <c>System.Int32</c> instance.</param>
            <param name="tietKetThuc"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByNgayMaCoSoTietBatDauKetThuc(PMS.Data.TransactionManager,System.Int32,System.Int32,System.DateTime,System.String,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByNgayMaCoSoTietBatDauKetThuc' stored procedure. 
            </summary>
            <param name="ngay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="tietBatDau"> A <c>System.Int32</c> instance.</param>
            <param name="tietKetThuc"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByNgayMaCoSoTietBatDauKetThucMaBacLoaiHinh(System.DateTime,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByNgayMaCoSoTietBatDauKetThucMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="ngay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="tietBatDau"> A <c>System.Int32</c> instance.</param>
            <param name="tietKetThuc"> A <c>System.Int32</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByNgayMaCoSoTietBatDauKetThucMaBacLoaiHinh(System.Int32,System.Int32,System.DateTime,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByNgayMaCoSoTietBatDauKetThucMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="ngay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="tietBatDau"> A <c>System.Int32</c> instance.</param>
            <param name="tietKetThuc"> A <c>System.Int32</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByNgayMaCoSoTietBatDauKetThucMaBacLoaiHinh(PMS.Data.TransactionManager,System.DateTime,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByNgayMaCoSoTietBatDauKetThucMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="ngay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="tietBatDau"> A <c>System.Int32</c> instance.</param>
            <param name="tietKetThuc"> A <c>System.Int32</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByNgayMaCoSoTietBatDauKetThucMaBacLoaiHinh(PMS.Data.TransactionManager,System.Int32,System.Int32,System.DateTime,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByNgayMaCoSoTietBatDauKetThucMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="ngay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="tietBatDau"> A <c>System.Int32</c> instance.</param>
            <param name="tietKetThuc"> A <c>System.Int32</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByTuNgayDenNgayMaCoSoMaBacLoaiHinh(System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByTuNgayDenNgayMaCoSoMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByTuNgayDenNgayMaCoSoMaBacLoaiHinh(System.Int32,System.Int32,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByTuNgayDenNgayMaCoSoMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByTuNgayDenNgayMaCoSoMaBacLoaiHinh(PMS.Data.TransactionManager,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByTuNgayDenNgayMaCoSoMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.GetByTuNgayDenNgayMaCoSoMaBacLoaiHinh(PMS.Data.TransactionManager,System.Int32,System.Int32,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TheoDoi_LichGiang_GetByTuNgayDenNgayMaCoSoMaBacLoaiHinh' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="maCoSo"> A <c>System.String</c> instance.</param>
            <param name="value"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewTheoDoiLichGiang},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewTheoDoiLichGiang)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewTheoDoiLichGiang"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewTheoDoiLichGiang"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewPhanCongChuyenMonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewNamHocProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewNamHocProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewNamHocProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewNamHocProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewNamHocProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewNamHoc},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewNamHocProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewNamHoc)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewNamHoc"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewNamHoc"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongThucDayFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongThucDayParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDayParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongThucDaySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongThucDaySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDaySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienDonGiaProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewGiangVienDonGiaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienDonGiaProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewGiangVienDonGiaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaProviderBaseCore.GetByMaDonVi(System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_DonGia_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaProviderBaseCore.GetByMaDonVi(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_DonGia_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_DonGia_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_DonGia_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewGiangVienDonGia},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewGiangVienDonGia)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewGiangVienDonGia"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewGiangVienDonGia"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomChucNangProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.NhomChucNangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.NhomChucNangKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maChucNang">. Primary Key.</param>
            <param name="_maNhomQuyen">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucNang">. Primary Key.</param>
            <param name="_maNhomQuyen">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaNhomQuyen(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Groups key.
            	FK_GroupModules_Groups Description: 
            </summary>
            <param name="_maNhomQuyen"></param>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaNhomQuyen(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Groups key.
            	FK_GroupModules_Groups Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaNhomQuyen(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Groups key.
            	FK_GroupModules_Groups Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaNhomQuyen(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Groups key.
            	fkGroupModulesGroups Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maNhomQuyen"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaNhomQuyen(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Groups key.
            	fkGroupModulesGroups Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maNhomQuyen"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaNhomQuyen(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Groups key.
            	FK_GroupModules_Groups Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNang(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Modules key.
            	FK_GroupModules_Modules Description: 
            </summary>
            <param name="_maChucNang"></param>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNang(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Modules key.
            	FK_GroupModules_Modules Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucNang"></param>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNang(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Modules key.
            	FK_GroupModules_Modules Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucNang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNang(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Modules key.
            	fkGroupModulesModules Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maChucNang"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNang(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Modules key.
            	fkGroupModulesModules Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maChucNang"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNang(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GroupModules_Modules key.
            	FK_GroupModules_Modules Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucNang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.NhomChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.NhomChucNangKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNangMaNhomQuyen(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_GroupModules index.
            </summary>
            <param name="_maChucNang"></param>
            <param name="_maNhomQuyen"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNangMaNhomQuyen(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GroupModules index.
            </summary>
            <param name="_maChucNang"></param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNangMaNhomQuyen(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GroupModules index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucNang"></param>
            <param name="_maNhomQuyen"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNangMaNhomQuyen(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GroupModules index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucNang"></param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNangMaNhomQuyen(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GroupModules index.
            </summary>
            <param name="_maChucNang"></param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.GetByMaChucNangMaNhomQuyen(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GroupModules index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucNang"></param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.NhomChucNang},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;NhomChucNang&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.NhomChucNang)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.NhomChucNang"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.NhomChucNang"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.NhomChucNang)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.NhomChucNang"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.NhomChucNang"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.NhomChucNang,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.NhomChucNang"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.NhomChucNang Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.NhomChucNang,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.NhomChucNang object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.NhomChucNang instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.NhomChucNang Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomChucNangChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.NhomChucNang</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.NhomChucNangChildEntityTypes.NhomQuyen">
            <summary>
             Composite Property for <c>NhomQuyen</c> at MaNhomQuyenSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.NhomChucNangChildEntityTypes.ChucNang">
            <summary>
             Composite Property for <c>ChucNang</c> at MaChucNangSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.NhomChucNangFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NhomChucNangFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomChucNangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomChucNangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomChucNangParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NhomChucNangParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomChucNangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomChucNangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomChucNangSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomChucNangSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the NhomChucNangSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.LoaiKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.LoaiKhoiLuongKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maLoaiKhoiLuong">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.Delete(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiKhoiLuong">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaNhom(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_LoaiKhoiLuong_NhomKhoiLuong key.
            	FK_LoaiKhoiLuong_NhomKhoiLuong Description: 
            </summary>
            <param name="_maNhom"></param>
            <returns>Returns a typed collection of PMS.Entities.LoaiKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaNhom(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_LoaiKhoiLuong_NhomKhoiLuong key.
            	FK_LoaiKhoiLuong_NhomKhoiLuong Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhom"></param>
            <returns>Returns a typed collection of PMS.Entities.LoaiKhoiLuong objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaNhom(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_LoaiKhoiLuong_NhomKhoiLuong key.
            	FK_LoaiKhoiLuong_NhomKhoiLuong Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhom"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.LoaiKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaNhom(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_LoaiKhoiLuong_NhomKhoiLuong key.
            	fkLoaiKhoiLuongNhomKhoiLuong Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maNhom"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.LoaiKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaNhom(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_LoaiKhoiLuong_NhomKhoiLuong key.
            	fkLoaiKhoiLuongNhomKhoiLuong Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maNhom"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.LoaiKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaNhom(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_LoaiKhoiLuong_NhomKhoiLuong key.
            	FK_LoaiKhoiLuong_NhomKhoiLuong Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhom"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.LoaiKhoiLuong objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.LoaiKhoiLuongKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaLoaiKhoiLuong(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_LoaiKhoiLuong index.
            </summary>
            <param name="_maLoaiKhoiLuong"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaLoaiKhoiLuong(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiKhoiLuong index.
            </summary>
            <param name="_maLoaiKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaLoaiKhoiLuong(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiKhoiLuong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiKhoiLuong"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaLoaiKhoiLuong(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiKhoiLuong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaLoaiKhoiLuong(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiKhoiLuong index.
            </summary>
            <param name="_maLoaiKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.GetByMaLoaiKhoiLuong(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiKhoiLuong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.LoaiKhoiLuong},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;LoaiKhoiLuong&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.LoaiKhoiLuong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.LoaiKhoiLuong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.LoaiKhoiLuong,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.LoaiKhoiLuong Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.LoaiKhoiLuong,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.LoaiKhoiLuong object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.LoaiKhoiLuong instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.LoaiKhoiLuong Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.LoaiKhoiLuongChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.LoaiKhoiLuong</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.LoaiKhoiLuongChildEntityTypes.NhomKhoiLuong">
            <summary>
             Composite Property for <c>NhomKhoiLuong</c> at MaNhomSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.LoaiKhoiLuongFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.LoaiKhoiLuongParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.LoaiKhoiLuongSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiKhoiLuongSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoNgayProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HeSoNgayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.HeSoNgayKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maHeSo">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHeSo">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.HeSoNgayKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLyMaBuoi(System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_HeSoNgayNghi index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="_maBuoi"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLyMaBuoi(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoNgayNghi index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="_maBuoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLyMaBuoi(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoNgayNghi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="_maBuoi"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLyMaBuoi(PMS.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoNgayNghi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="_maBuoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLyMaBuoi(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoNgayNghi index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="_maBuoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLyMaBuoi(PMS.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoNgayNghi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="_maBuoi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaHeSo(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_HeSoNgayNghi index.
            </summary>
            <param name="_maHeSo"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaHeSo(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoNgayNghi index.
            </summary>
            <param name="_maHeSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaHeSo(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoNgayNghi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHeSo"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaHeSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoNgayNghi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHeSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaHeSo(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoNgayNghi index.
            </summary>
            <param name="_maHeSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaHeSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoNgayNghi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHeSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoNgay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            This method wrap the 'cust_HeSoNgay_GetByMaQuanLy' stored procedure. 
            </summary>
            <param name="maQuanLy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLy(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_HeSoNgay_GetByMaQuanLy' stored procedure. 
            </summary>
            <param name="maQuanLy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_HeSoNgay_GetByMaQuanLy' stored procedure. 
            </summary>
            <param name="maQuanLy"> A <c>System.String</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_HeSoNgay_GetByMaQuanLy' stored procedure. 
            </summary>
            <param name="maQuanLy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.HeSoNgay},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;HeSoNgay&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.HeSoNgay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HeSoNgay"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeSoNgay"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.HeSoNgay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HeSoNgay"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeSoNgay"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.HeSoNgay,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeSoNgay"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.HeSoNgay Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.HeSoNgay,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.HeSoNgay object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.HeSoNgay instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.HeSoNgay Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.HeSoNgayChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.HeSoNgay</c>
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoNgayFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoNgay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeSoNgayFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoNgayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoNgayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HeSoNgayParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoNgay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeSoNgayParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoNgayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgayParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoNgayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HeSoNgaySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoNgay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoNgaySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeSoNgaySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.TaiKhoanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.TaiKhoanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTonGiaoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTonGiaoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTonGiaoProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewTonGiao},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTonGiaoProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewTonGiao)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewTonGiao"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewTonGiao"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTonGiaoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTonGiao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTonGiaoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTonGiaoFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTonGiaoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTonGiaoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTonGiaoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTonGiaoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTonGiaoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTonGiao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTonGiaoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTonGiaoParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTonGiaoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTonGiaoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTonGiaoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTonGiaoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTonGiaoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTonGiao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTonGiaoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTonGiaoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopQuyDoiProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTongHopQuyDoiProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TongHop_QuyDoi_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TongHop_QuyDoi_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TongHop_QuyDoi_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_TongHop_QuyDoi_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewTongHopQuyDoi},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewTongHopQuyDoi)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewTongHopQuyDoi"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewTongHopQuyDoi"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopQuyDoiFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopQuyDoiParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopQuyDoiSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopQuyDoiSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTheoDoiGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewCoSoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewCoSoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_GiangDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewChiTietKhoiLuongGiangDay},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewChiTietKhoiLuongGiangDay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewChiTietKhoiLuongGiangDay"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewChiTietKhoiLuongGiangDay"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.NetTiersServiceSection">
            <summary>
            The class that hold the configuration section for the NetTiers Service.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersServiceSection.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersServiceSection.DefaultProvider">
            <summary>
            Gets or sets the default provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="T:PMS.Data.Bases.MonKhongTinhProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.MonKhongTinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.MonKhongTinhKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maMonHoc">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.Delete(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maMonHoc">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.MonKhongTinhKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.GetByMaMonHoc(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_MonKhongTinh index.
            </summary>
            <param name="_maMonHoc"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.MonKhongTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.GetByMaMonHoc(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_MonKhongTinh index.
            </summary>
            <param name="_maMonHoc"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.MonKhongTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.GetByMaMonHoc(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_MonKhongTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maMonHoc"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.MonKhongTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.GetByMaMonHoc(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_MonKhongTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maMonHoc"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.MonKhongTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.GetByMaMonHoc(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MonKhongTinh index.
            </summary>
            <param name="_maMonHoc"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.MonKhongTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.GetByMaMonHoc(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MonKhongTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maMonHoc"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.MonKhongTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.MonKhongTinh},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;MonKhongTinh&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.MonKhongTinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.MonKhongTinh"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.MonKhongTinh"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.MonKhongTinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.MonKhongTinh"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.MonKhongTinh"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.MonKhongTinh,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.MonKhongTinh"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.MonKhongTinh Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.MonKhongTinh,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.MonKhongTinh object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.MonKhongTinh instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.MonKhongTinh Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.MonKhongTinhChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.MonKhongTinh</c>
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.MonKhongTinhFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.MonKhongTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the MonKhongTinhFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MonKhongTinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the MonKhongTinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.MonKhongTinhParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.MonKhongTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the MonKhongTinhParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MonKhongTinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the MonKhongTinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.MonKhongTinhSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.MonKhongTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.MonKhongTinhSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the MonKhongTinhSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KetQuaTinhProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.KetQuaTinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KetQuaTinhProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.KetQuaTinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.KetQuaTinhKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maKetQua">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKetQua">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_KetQuaTinh_GiangVien key.
            	FK_KetQuaTinh_GiangVien Description: 
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.KetQuaTinh objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_KetQuaTinh_GiangVien key.
            	FK_KetQuaTinh_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.KetQuaTinh objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_KetQuaTinh_GiangVien key.
            	FK_KetQuaTinh_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KetQuaTinh objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_KetQuaTinh_GiangVien key.
            	fkKetQuaTinhGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KetQuaTinh objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_KetQuaTinh_GiangVien key.
            	fkKetQuaTinhGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KetQuaTinh objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_KetQuaTinh_GiangVien key.
            	FK_KetQuaTinh_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.KetQuaTinh objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.KetQuaTinhKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVienNamHocHocKy(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_KetQuaTinh index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVienNamHocHocKy(System.Nullable{System.Int32},System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_KetQuaTinh index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVienNamHocHocKy(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_KetQuaTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVienNamHocHocKy(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_KetQuaTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVienNamHocHocKy(System.Nullable{System.Int32},System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_KetQuaTinh index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaGiangVienNamHocHocKy(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_KetQuaTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_namHoc"></param>
            <param name="_hocKy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaKetQua(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_KetQuaTinh index.
            </summary>
            <param name="_maKetQua"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaKetQua(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KetQuaTinh index.
            </summary>
            <param name="_maKetQua"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaKetQua(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KetQuaTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKetQua"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaKetQua(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KetQuaTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKetQua"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaKetQua(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_KetQuaTinh index.
            </summary>
            <param name="_maKetQua"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByMaKetQua(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_KetQuaTinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKetQua"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KetQuaTinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_KetQuaTinh_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_KetQuaTinh_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_KetQuaTinh_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_KetQuaTinh_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetKetQuaByMaGiangVienNamHocHocKy(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wrap the 'cust_KetQuaTinh_GetKetQuaByMaGiangVienNamHocHocKy' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32?</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetKetQuaByMaGiangVienNamHocHocKy(System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wrap the 'cust_KetQuaTinh_GetKetQuaByMaGiangVienNamHocHocKy' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32?</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetKetQuaByMaGiangVienNamHocHocKy(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wrap the 'cust_KetQuaTinh_GetKetQuaByMaGiangVienNamHocHocKy' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32?</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.GetKetQuaByMaGiangVienNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wrap the 'cust_KetQuaTinh_GetKetQuaByMaGiangVienNamHocHocKy' stored procedure. 
            </summary>
            <param name="maGiangVien"> A <c>System.Int32?</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.KetQuaTinh},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;KetQuaTinh&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.KetQuaTinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.KetQuaTinh"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.KetQuaTinh"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.KetQuaTinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.KetQuaTinh"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.KetQuaTinh"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.KetQuaTinh,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.KetQuaTinh"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.KetQuaTinh Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.KetQuaTinh,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.KetQuaTinh object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.KetQuaTinh instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.KetQuaTinh Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.GiangVienChuyenMonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.GiangVienChuyenMonKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maPhanCong">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maPhanCong">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChuyenMon_GiangVien key.
            	FK_GiangVien_ChuyenMon_GiangVien Description: 
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChuyenMon objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChuyenMon_GiangVien key.
            	FK_GiangVien_ChuyenMon_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChuyenMon objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChuyenMon_GiangVien key.
            	FK_GiangVien_ChuyenMon_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChuyenMon objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChuyenMon_GiangVien key.
            	fkGiangVienChuyenMonGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChuyenMon objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChuyenMon_GiangVien key.
            	fkGiangVienChuyenMonGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChuyenMon objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_ChuyenMon_GiangVien key.
            	FK_GiangVien_ChuyenMon_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienChuyenMon objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.GiangVienChuyenMonKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVienMaMonHoc(System.Nullable{System.Int32},System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_GiangVien_ChuyenMon index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_maMonHoc"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVienMaMonHoc(System.Nullable{System.Int32},System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien_ChuyenMon index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_maMonHoc"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVienMaMonHoc(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien_ChuyenMon index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_maMonHoc"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVienMaMonHoc(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien_ChuyenMon index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_maMonHoc"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVienMaMonHoc(System.Nullable{System.Int32},System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien_ChuyenMon index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="_maMonHoc"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaGiangVienMaMonHoc(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien_ChuyenMon index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="_maMonHoc"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaPhanCong(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_GiangVien_ChuyenMon index.
            </summary>
            <param name="_maPhanCong"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaPhanCong(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChuyenMon index.
            </summary>
            <param name="_maPhanCong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaPhanCong(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChuyenMon index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maPhanCong"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaPhanCong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChuyenMon index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maPhanCong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaPhanCong(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChuyenMon index.
            </summary>
            <param name="_maPhanCong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.GetByMaPhanCong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_ChuyenMon index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maPhanCong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.GiangVienChuyenMon},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;GiangVienChuyenMon&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.GiangVienChuyenMon)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.GiangVienChuyenMon)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.GiangVienChuyenMon,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.GiangVienChuyenMon Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.GiangVienChuyenMon,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.GiangVienChuyenMon object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.GiangVienChuyenMon instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.GiangVienChuyenMon Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChuyenMonChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.GiangVienChuyenMon</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChuyenMonChildEntityTypes.GiangVien">
            <summary>
             Composite Property for <c>GiangVien</c> at MaGiangVienSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChuyenMonFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChuyenMonParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChuyenMonSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienChuyenMonSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienHoSoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.GiangVienHoSoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.GiangVienHoSoKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maHoSo">. Primary Key.</param>
            <param name="_maGiangVien">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo">. Primary Key.</param>
            <param name="_maGiangVien">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaGiangVien(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_GiangVien key.
            	FK_GiangVien_HoSo_GiangVien Description: 
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_GiangVien key.
            	FK_GiangVien_HoSo_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_GiangVien key.
            	FK_GiangVien_HoSo_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaGiangVien(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_GiangVien key.
            	fkGiangVienHoSoGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaGiangVien(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_GiangVien key.
            	fkGiangVienHoSoGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_GiangVien key.
            	FK_GiangVien_HoSo_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSo(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_HoSo key.
            	FK_GiangVien_HoSo_HoSo Description: 
            </summary>
            <param name="_maHoSo"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSo(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_HoSo key.
            	FK_GiangVien_HoSo_HoSo Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_HoSo key.
            	FK_GiangVien_HoSo_HoSo Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSo(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_HoSo key.
            	fkGiangVienHoSoHoSo Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maHoSo"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSo(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_HoSo key.
            	fkGiangVienHoSoHoSo Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maHoSo"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HoSo_HoSo key.
            	FK_GiangVien_HoSo_HoSo Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVienHoSo objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.GiangVienHoSoKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSoMaGiangVien(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_GiangVien_HoSo index.
            </summary>
            <param name="_maHoSo"></param>
            <param name="_maGiangVien"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienHoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSoMaGiangVien(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_HoSo index.
            </summary>
            <param name="_maHoSo"></param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienHoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSoMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_HoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienHoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSoMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_HoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienHoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSoMaGiangVien(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_HoSo index.
            </summary>
            <param name="_maHoSo"></param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienHoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.GetByMaHoSoMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien_HoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVienHoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.GiangVienHoSo},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;GiangVienHoSo&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.GiangVienHoSo)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.GiangVienHoSo"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVienHoSo"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.GiangVienHoSo)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.GiangVienHoSo"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVienHoSo"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.GiangVienHoSo,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVienHoSo"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.GiangVienHoSo Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.GiangVienHoSo,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.GiangVienHoSo object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.GiangVienHoSo instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.GiangVienHoSo Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienHoSoChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.GiangVienHoSo</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienHoSoChildEntityTypes.GiangVien">
            <summary>
             Composite Property for <c>GiangVien</c> at MaGiangVienSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienHoSoChildEntityTypes.HoSo">
            <summary>
             Composite Property for <c>HoSo</c> at MaHoSoSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienHoSoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienHoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienHoSoFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienHoSoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienHoSoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienHoSoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienHoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienHoSoParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienHoSoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienHoSoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienHoSoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienHoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienHoSoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienHoSoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.CauHinhProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.CauHinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.CauHinhKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maCauHinh">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCauHinh">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.CauHinhKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.GetByMaCauHinh(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CauHinh index.
            </summary>
            <param name="_maCauHinh"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CauHinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.GetByMaCauHinh(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CauHinh index.
            </summary>
            <param name="_maCauHinh"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CauHinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.GetByMaCauHinh(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CauHinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCauHinh"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CauHinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.GetByMaCauHinh(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CauHinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCauHinh"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CauHinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.GetByMaCauHinh(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CauHinh index.
            </summary>
            <param name="_maCauHinh"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CauHinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.GetByMaCauHinh(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CauHinh index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCauHinh"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.CauHinh"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.CauHinh},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;CauHinh&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.CauHinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.CauHinh"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.CauHinh"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.CauHinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.CauHinh"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.CauHinh"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.CauHinh,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.CauHinh"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.CauHinh Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.CauHinh,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.CauHinh object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.CauHinh instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.CauHinh Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.CauHinhChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.CauHinh</c>
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.CauHinhFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CauHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CauHinhFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CauHinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CauHinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.CauHinhParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CauHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CauHinhParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CauHinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CauHinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.CauHinhSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CauHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CauHinhSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CauHinhSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTonGiaoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTonGiaoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopDaiDienProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewLopDaiDienProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopDaiDienProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewLopDaiDienProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_DaiDien_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_DaiDien_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_DaiDien_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_Lop_DaiDien_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewLopDaiDien},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewLopDaiDien)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewLopDaiDien"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewLopDaiDien"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietQuyDoiProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietQuyDoiProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietQuyDoiProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietQuyDoiProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_QuyDoi_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_QuyDoi_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_QuyDoi_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_QuyDoi_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewChiTietQuyDoi},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewChiTietQuyDoi)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewChiTietQuyDoi"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewChiTietQuyDoi"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDaySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDaySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDaySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietHocPhanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietHocPhanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietHocPhanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietHocPhanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.StringBuilderExpression">
            <summary>
            Represents a SQL filter builder expression enumeration.
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.Append">
            <summary>
            Append
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendEquals">
            <summary>
            AppendEquals
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendNotEquals">
            <summary>
            AppendNotEquals
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendIn">
            <summary>
            AppendIn
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendNotIn">
            <summary>
            AppendNotIn
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendInQuery">
            <summary>
            AppendInQuery
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendNotInQuery">
            <summary>
            AppendNotInQuery
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendRange">
            <summary>
            AppendRange
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendNotRange">
            <summary>
            AppendNotRange
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendIsNull">
            <summary>
            AppendIsNull
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendIsNotNull">
            <summary>
            AppendIsNotNull
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendGreaterThan">
            <summary>
            AppendGreaterThan
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendGreaterThanOrEqual">
            <summary>
            AppendGreaterThanOrEqual
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendLessThan">
            <summary>
            AppendLessThan
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendLessThanOrEqual">
            <summary>
            AppendLessThanOrEqual
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendStartsWith">
            <summary>
            AppendStartsWith
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendEndsWith">
            <summary>
            AppendEndsWith
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendContains">
            <summary>
            AppendContains
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendNotContains">
            <summary>
            AppendNotContains
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendLike">
            <summary>
            AppendLike
            </summary>
        </member>
        <member name="F:PMS.Data.StringBuilderExpression.AppendNotLike">
            <summary>
            AppendLike
            </summary>
        </member>
        <member name="T:PMS.Data.SqlFilterParameterCollection">
            <summary>
            A collection of <see cref="T:PMS.Data.SqlFilterParameter"/> objects.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlFilterParameterCollection.SetCurrentColumn(System.Object)">
            <summary>
            Sets the CurrentColumn property.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:PMS.Data.SqlFilterParameterCollection.GetParameter(System.String)">
            <summary>
            Gets the next parameter name for the specified value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:PMS.Data.SqlFilterParameterCollection.currentColumn">
            <summary>
            The CurrentColumn member variable.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlFilterParameterCollection.filterExpression">
            <summary>
            The FilterExpression member variable.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlFilterParameterCollection.PMS#Data#IFilterParameterCollection#GetParameters">
            <summary>
            Gets a list of sql parameters for the filter 
            </summary>
            <returns></returns>
        </member>
        <member name="P:PMS.Data.SqlFilterParameterCollection.CurrentColumn">
            <summary>
            Gets the CurrentColumn property.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlFilterParameterCollection.FilterExpression">
            <summary>
            Gets or sets the FilterExpression property.
            </summary>
        </member>
        <member name="T:PMS.Data.SqlFilterParameter">
            <summary>
            Represents the information needed for a database command parameter.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlFilterParameter.#ctor(System.Enum,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the SqlFilterParameter class.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="index"></param>
        </member>
        <member name="F:PMS.Data.SqlFilterParameter.column">
            <summary>
            The Column member variable.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlFilterParameter.parameterValue">
            <summary>
            The Value member variable.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlFilterParameter.parameterIndex">
            <summary>
            The Index member variable.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlFilterParameter.GetValue">
            <summary>
            Gets the current value converted to the appropriate <see cref="T:System.Type"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PMS.Data.SqlFilterParameter.Column">
            <summary>
            Gets or sets the Column property.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlFilterParameter.Value">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlFilterParameter.Index">
            <summary>
            Gets the parameter index.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlFilterParameter.Name">
            <summary>
            Gets the parameter name.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlFilterParameter.DbType">
            <summary>
            Gets the <see cref="T:System.Data.SqlDbType"/> for
            the current entity column enumeration value.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlFilterParameter.SystemType">
            <summary>
            Gets the <see cref="T:System.Type"/> for
            the current entity column enumeration value.
            </summary>
        </member>
        <member name="T:PMS.Data.SqlSortColumnCollection">
            <summary>
            A collection of <see cref="T:PMS.Data.SqlSortColumn"/> objects.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlSortColumnCollection.SetCurrentColumn(System.Object)">
            <summary>
            Sets the CurrentColumn property.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:PMS.Data.SqlSortColumnCollection.ToString">
            <summary>
            Provides the actual SQL sort string.
            </summary>
            <returns></returns>
        </member>
        <member name="F:PMS.Data.SqlSortColumnCollection._currentColumn">
            <summary>
            The CurrentColumn member variable.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlSortColumnCollection.sortExpression">
            <summary>
            The SortExpression member variable.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlSortColumnCollection.PMS#Data#ISortColumnCollection#GetSortColumns">
            <summary>
            Gets a list of sql parameters for the filter 
            </summary>
            <returns></returns>
        </member>
        <member name="P:PMS.Data.SqlSortColumnCollection.CurrentColumn">
            <summary>
            Gets the CurrentColumn property.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlSortColumnCollection.SortExpression">
            <summary>
            Gets or sets the SortExpression property.
            </summary>
        </member>
        <member name="T:PMS.Data.SqlSortColumn">
            <summary>
            Represents the information of a sorted column.
            </summary>
        </member>
        <member name="M:PMS.Data.SqlSortColumn.#ctor(System.Enum,PMS.Data.SqlSortDirection)">
            <summary>
            Initializes a new instance of the SqlSortColumn class.
            </summary>
            <param name="column"></param>
            <param name="sortDirection"></param>
        </member>
        <member name="F:PMS.Data.SqlSortColumn._column">
            <summary>
            The Column member variable.
            </summary>
        </member>
        <member name="F:PMS.Data.SqlSortColumn._sortDirection">
            <summary>
            The Value member variable.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlSortColumn.Column">
            <summary>
            Gets or sets the Column property.
            </summary>
        </member>
        <member name="P:PMS.Data.SqlSortColumn.SortDirection">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HoSoChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.HoSo</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.HoSoChildEntityTypes.MaGiangVienGiangVienCollection_From_GiangVienHoSo">
            <summary>
             Collection of <c>HoSo</c> as ManyToMany for GiangVienCollection_From_GiangVienHoSo
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.HoSoChildEntityTypes.GiangVienHoSoCollection">
            <summary>
             Collection of <c>HoSo</c> as OneToMany for GiangVienHoSoCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HoSoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HoSoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HoSoFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HoSoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HoSoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HoSoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HoSoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HoSoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HoSoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HoSoParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HoSoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HoSoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HoSoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HoSoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HoSoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HoSoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the HoSoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongGiangDayProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.KhoiLuongGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.KhoiLuongGiangDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.KhoiLuongGiangDayKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maKhoiLuong">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQua(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongGiangDay_KetQuaTinh key.
            	FK_KhoiLuongGiangDay_KetQuaTinh Description: 
            </summary>
            <param name="_maKetQua"></param>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongGiangDay objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQua(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongGiangDay_KetQuaTinh key.
            	FK_KhoiLuongGiangDay_KetQuaTinh Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKetQua"></param>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongGiangDay objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQua(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongGiangDay_KetQuaTinh key.
            	FK_KhoiLuongGiangDay_KetQuaTinh Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKetQua"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongGiangDay objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQua(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongGiangDay_KetQuaTinh key.
            	fkKhoiLuongGiangDayKetQuaTinh Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maKetQua"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongGiangDay objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQua(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongGiangDay_KetQuaTinh key.
            	fkKhoiLuongGiangDayKetQuaTinh Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maKetQua"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongGiangDay objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQua(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongGiangDay_KetQuaTinh key.
            	FK_KhoiLuongGiangDay_KetQuaTinh Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKetQua"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongGiangDay objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.KhoiLuongGiangDayKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKhoiLuong(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_KhoiLuongGiangDay index.
            </summary>
            <param name="_maKhoiLuong"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKhoiLuong(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongGiangDay index.
            </summary>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKhoiLuong(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongGiangDay index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKhoiLuong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongGiangDay index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKhoiLuong(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongGiangDay index.
            </summary>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKhoiLuong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongGiangDay index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.DeleteByMaKetQua(System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_DeleteByMaKetQua' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.DeleteByMaKetQua(System.Int32,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_DeleteByMaKetQua' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.DeleteByMaKetQua(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_DeleteByMaKetQua' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.DeleteByMaKetQua(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_DeleteByMaKetQua' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQuaMaLopHocPhan(System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_GetByMaKetQuaMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQuaMaLopHocPhan(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_GetByMaKetQuaMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQuaMaLopHocPhan(PMS.Data.TransactionManager,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_GetByMaKetQuaMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByMaKetQuaMaLopHocPhan(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_GetByMaKetQuaMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maKetQua"> A <c>System.Int32</c> instance.</param>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByLoaiHocPhanNamHocHocKy(System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_GetByLoaiHocPhanNamHocHocKy' stored procedure. 
            </summary>
            <param name="loaiHocPhan"> A <c>System.String</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByLoaiHocPhanNamHocHocKy(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_GetByLoaiHocPhanNamHocHocKy' stored procedure. 
            </summary>
            <param name="loaiHocPhan"> A <c>System.String</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByLoaiHocPhanNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_GetByLoaiHocPhanNamHocHocKy' stored procedure. 
            </summary>
            <param name="loaiHocPhan"> A <c>System.String</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.GetByLoaiHocPhanNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            This method wrap the 'cust_KhoiLuongGiangDay_GetByLoaiHocPhanNamHocHocKy' stored procedure. 
            </summary>
            <param name="loaiHocPhan"> A <c>System.String</c> instance.</param>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.KhoiLuongGiangDay},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;KhoiLuongGiangDay&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.KhoiLuongGiangDay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.KhoiLuongGiangDay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.KhoiLuongGiangDay,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.KhoiLuongGiangDay Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.KhoiLuongGiangDay,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.KhoiLuongGiangDay object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.KhoiLuongGiangDay instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.KhoiLuongGiangDay Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiLichGiangFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiLichGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiLichGiangParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiLichGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTheoDoiLichGiangSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiLichGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTheoDoiLichGiangSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewBacDaoTaoLoaiHinh},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewBacDaoTaoLoaiHinh)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewBacDaoTaoLoaiHinh"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewBacDaoTaoLoaiHinh"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewBacDaoTaoLoaiHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewBacDaoTaoLoaiHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewBacDaoTaoLoaiHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.DeepSessionEventArgs">
            <summary>
            Event Args used to transfer crucial information just before 
            and after a command is used in the data provider.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DeepSessionEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSessionEventArgs"/> class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DeepSessionEventArgs.#ctor(PMS.Data.Bases.DeepSession,System.String,System.Enum,PMS.Entities.IEntity,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSessionEventArgs"/> class.
            </summary>
            <param name="deepSession">The Current Deep Session.</param>
            <param name="currentTypePropertyKey">The Current Key"</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="entity">The entity.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:PMS.Data.Bases.DeepSessionEventArgs.#ctor(PMS.Data.Bases.DeepSession,System.String,System.Enum,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="deepSession">The deepSession.</param>
            <param name="currentTypePropertyKey">The Current Key"</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="list">The list.</param>
        </member>
        <member name="M:PMS.Data.Bases.DeepSessionEventArgs.#ctor(PMS.Data.Bases.DeepSession,System.String,System.Enum,PMS.Entities.IEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="deepSession">The deepSession.</param>
            <param name="currentTypePropertyKey">The Current Key.</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="entity">The current entity.</param>
        </member>
        <member name="P:PMS.Data.Bases.DeepSessionEventArgs.DeepSession">
            <summary>
            Gets or sets the current DeepSession.
            </summary>
            <value>The DeepSession.</value>
        </member>
        <member name="P:PMS.Data.Bases.DeepSessionEventArgs.CurrentEntity">
            <summary>
            Gets or sets the current entity which the action is 
            being acted on.  If there is no entity, this 
            value will be null.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:PMS.Data.Bases.DeepSessionEventArgs.CurrentEntityList">
            <summary>
            Gets or sets the current .
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:PMS.Data.Bases.DeepSessionEventArgs.CurrentTypePropertyKey">
            <summary>
            Gets or Sets the name of the current type property key that 
            will be used to determine if the property will be run in the deep session.
            </summary>
            <value>A string value of the type property key.</value>
        </member>
        <member name="P:PMS.Data.Bases.DeepSessionEventArgs.DeepTypeValue">
            <summary>
             The current DeepType Value, Either <c>DeepLoadType</c>, or <c>DeepSaveType</c>.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.DeepSessionEventArgs.Cancel">
            <summary>
            Gets or sets the Cancel property of the event.
            </summary>
            <value>Current Cancel Value.</value>
        </member>
        <member name="P:PMS.Data.Bases.DeepSessionEventArgs.Skip">
            <summary>
            Gets or sets the current Skip value.  
            Setting this property will skip the current Deep Property.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="T:PMS.Data.Bases.CommandEventArgs">
            <summary>
            Event Args used to transfer crucial information just before 
            and after a command is used in the data provider.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CommandEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,PMS.Entities.IEntity,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="entity">The entity.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:PMS.Data.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:PMS.Data.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="M:PMS.Data.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,PMS.Entities.IEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="entity">The current entity.</param>
        </member>
        <member name="P:PMS.Data.Bases.CommandEventArgs.Command">
            <summary>
            Gets or sets the current command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:PMS.Data.Bases.CommandEventArgs.MethodName">
            <summary>
            Gets or sets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="P:PMS.Data.Bases.CommandEventArgs.CurrentEntity">
            <summary>
            Gets or sets the current entity which the action is 
            being acted on.  If there is no entity, this 
            value will be null.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:PMS.Data.Bases.CommandEventArgs.CurrentEntityList">
            <summary>
            Gets or sets the current .
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:PMS.Data.Bases.DeepSession">
            <summary>
            Keeps a weak reference of the entire deep transaction for tracking purposes.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DeepSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSession"/> class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.DeepSession.GetSessionObjects">
            <summary>
            Gets the set of current loaded objects.
            </summary>
            <returns>a list of already run objects</returns>
        </member>
        <member name="M:PMS.Data.Bases.DeepSession.AddRun(System.Object,System.String)">
            <summary>
            Adds the specified entity property to the collection of properties.
            </summary>
            <param name="entity"></param>
            <param name="key"></param>
        </member>
        <member name="M:PMS.Data.Bases.DeepSession.ContainsType(System.String)">
            <summary>
            Determines whether the specified obj has run for a specified property type.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PMS.Data.Bases.DeepSession.ContainsTypeExcluded(System.String)">
            <summary>
            Determines whether the specified obj has run for a specified property type.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PMS.Data.Bases.DeepSession.HasRun(System.Object,System.String)">
            <summary>
            Determines whether the specified obj has run.
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PMS.Data.Bases.DeepSession.GetReference(System.Object,System.String)">
            <summary>
            Get's the reference of the object that has run
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <returns>
            	object of the run reference
            </returns>
        </member>
        <member name="M:PMS.Data.Bases.DeepSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:PMS.Data.Bases.DeepSession.DeepSessionInnerList">
            <summary>
            Gets the Deep Session nner list.
            </summary>
            <value>The inner list.</value>
        </member>
        <member name="P:PMS.Data.Bases.DeepSession.CancelSession">
            <summary>
            If set to true, any further requests for this deep session will be canceled.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.DeepSession.SkipChildren">
            <summary>
            If set to true, any further requests for this deep session requesting to Load a child collection will be skipped.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.DeepSaveHandle`1">
            <summary>
            Handler for the deep save
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.DeepSaveSingleHandle`1">
            <summary>
            Handler for the single deep save
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.DeepLoadHandle`1">
            <summary>
            Handler for the deep load
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.DeepLoadSingleHandle`1">
            <summary>
            Handler for the single deep load
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChildEntityTypeAttribute">
            <summary>
             Attribute used to decorate enumerations with underlying system type.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChildEntityTypeAttribute.#ctor(System.Type)">
            <summary>
             Marks the underlying type of a child entity property.
             </summary>
             <param name="entityType">Type of the property to load.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChildEntityTypeAttribute.GetType(System.Enum)">
            <summary>
            Gets the underlying system type for the specified enumeration value.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="P:PMS.Data.Bases.ChildEntityTypeAttribute.EntityType">
            <summary>
            The underlying type for the ChildEntityTypes enumerations.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.IChildEntityProperty">
            <summary>
            Provides a common property used to access the child entity type enumeration value.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.IChildEntityProperty.ChildEntityType">
            <summary>
            Gets the value of the ChildEntityType property.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChildEntityProperty`1">
            <summary>
            A generic wrapper for the generated ChildEntityTypes enumerations.
            </summary>
            <typeparam name="ChildEntityTypesEnum"></typeparam>
        </member>
        <member name="F:PMS.Data.Bases.ChildEntityProperty`1.name">
            <summary>
            The Name member variable.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.ChildEntityProperty`1.Name">
            <summary>
            Gets or sets the Name property.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.ChildEntityProperty`1.ChildEntityType">
            <summary>
            Gets the value of the ChildEntityType property.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChucNangProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ChucNangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChucNangProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ChucNangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenFromNhomChucNang(System.Int32)">
            <summary>
            	Gets ChucNang objects from the datasource by MaNhomQuyen in the
            	NhomChucNang table. Table ChucNang is related to table NhomQuyen
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="_maNhomQuyen"></param>
            <returns>Returns a typed collection of ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenFromNhomChucNang(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets PMS.Entities.ChucNang objects from the datasource by MaNhomQuyen in the
            	NhomChucNang table. Table ChucNang is related to table NhomQuyen
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maNhomQuyen"></param>
            <remarks></remarks>
            <returns>Returns a TList of ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenFromNhomChucNang(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets ChucNang objects from the datasource by MaNhomQuyen in the
            	NhomChucNang table. Table ChucNang is related to table NhomQuyen
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenFromNhomChucNang(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets ChucNang objects from the datasource by MaNhomQuyen in the
            	NhomChucNang table. Table ChucNang is related to table NhomQuyen
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenFromNhomChucNang(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ChucNang objects from the datasource by MaNhomQuyen in the
            	NhomChucNang table. Table ChucNang is related to table NhomQuyen
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenFromNhomChucNang(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ChucNang objects from the datasource by MaNhomQuyen in the
            	NhomChucNang table. Table ChucNang is related to table NhomQuyen
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_maNhomQuyen"></param>
            <remarks></remarks>
            <returns>Returns a TList of ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.ChucNangKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_Modules_Modules key.
            	FK_Modules_Modules Description: 
            </summary>
            <param name="_parentId"></param>
            <returns>Returns a typed collection of PMS.Entities.ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentId(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_Modules_Modules key.
            	FK_Modules_Modules Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_parentId"></param>
            <returns>Returns a typed collection of PMS.Entities.ChucNang objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentId(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Modules_Modules key.
            	FK_Modules_Modules Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Modules_Modules key.
            	fkModulesModules Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_parentId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Modules_Modules key.
            	fkModulesModules Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_parentId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentId(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Modules_Modules key.
            	FK_Modules_Modules Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_parentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.ChucNang objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.ChucNangKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Modules index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Modules index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetById(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Modules index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetById(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Modules index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Modules index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetById(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Modules index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucNang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenParentIDPhanLoaiTrangThai(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByMaNhomQuyenParentIDPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="maNhomQuyen"> A <c>System.Int32</c> instance.</param>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenParentIDPhanLoaiTrangThai(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByMaNhomQuyenParentIDPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="maNhomQuyen"> A <c>System.Int32</c> instance.</param>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenParentIDPhanLoaiTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByMaNhomQuyenParentIDPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="maNhomQuyen"> A <c>System.Int32</c> instance.</param>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenParentIDPhanLoaiTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByMaNhomQuyenParentIDPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="maNhomQuyen"> A <c>System.Int32</c> instance.</param>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByTrangThai(System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByTrangThai' stored procedure. 
            </summary>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByTrangThai(System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByTrangThai' stored procedure. 
            </summary>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByTrangThai(PMS.Data.TransactionManager,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByTrangThai' stored procedure. 
            </summary>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByTrangThai' stored procedure. 
            </summary>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByTenFormTrangThai(System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByTenFormTrangThai' stored procedure. 
            </summary>
            <param name="tenForm"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByTenFormTrangThai(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByTenFormTrangThai' stored procedure. 
            </summary>
            <param name="tenForm"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByTenFormTrangThai(PMS.Data.TransactionManager,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByTenFormTrangThai' stored procedure. 
            </summary>
            <param name="tenForm"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByTenFormTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByTenFormTrangThai' stored procedure. 
            </summary>
            <param name="tenForm"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentIDPhanLoaiTrangThai(System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByParentIDPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentIDPhanLoaiTrangThai(System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByParentIDPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentIDPhanLoaiTrangThai(PMS.Data.TransactionManager,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByParentIDPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentIDPhanLoaiTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByParentIDPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentIDTrangThai(System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByParentIDTrangThai' stored procedure. 
            </summary>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentIDTrangThai(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByParentIDTrangThai' stored procedure. 
            </summary>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentIDTrangThai(PMS.Data.TransactionManager,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByParentIDTrangThai' stored procedure. 
            </summary>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByParentIDTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByParentIDTrangThai' stored procedure. 
            </summary>
            <param name="parentId"> A <c>System.Int32</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByIDTrangThai(System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByIDTrangThai' stored procedure. 
            </summary>
            <param name="id"> A <c>System.Int32</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByIDTrangThai(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByIDTrangThai' stored procedure. 
            </summary>
            <param name="id"> A <c>System.Int32</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByIDTrangThai(PMS.Data.TransactionManager,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByIDTrangThai' stored procedure. 
            </summary>
            <param name="id"> A <c>System.Int32</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByIDTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByIDTrangThai' stored procedure. 
            </summary>
            <param name="id"> A <c>System.Int32</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenPhanLoaiTrangThai(System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByMaNhomQuyenPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="maNhomQuyen"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenPhanLoaiTrangThai(System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByMaNhomQuyenPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="maNhomQuyen"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenPhanLoaiTrangThai(PMS.Data.TransactionManager,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByMaNhomQuyenPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="maNhomQuyen"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByMaNhomQuyenPhanLoaiTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByMaNhomQuyenPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="maNhomQuyen"> A <c>System.Int32</c> instance.</param>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByPhanLoaiTrangThai(System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByPhanLoaiTrangThai(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByPhanLoaiTrangThai(PMS.Data.TransactionManager,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetByPhanLoaiTrangThai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            This method wrap the 'cust_ChucNang_GetByPhanLoaiTrangThai' stored procedure. 
            </summary>
            <param name="phanLoai"> A <c>System.String</c> instance.</param>
            <param name="trangThai"> A <c>System.Boolean</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetModulesByGroupID(System.Int32)">
            <summary>
            This method wrap the 'cust_ChucNang_GetModulesByGroupID' stored procedure. 
            </summary>
            <param name="groupId"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetModulesByGroupID(System.Int32,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_ChucNang_GetModulesByGroupID' stored procedure. 
            </summary>
            <param name="groupId"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetModulesByGroupID(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            This method wrap the 'cust_ChucNang_GetModulesByGroupID' stored procedure. 
            </summary>
            <param name="groupId"> A <c>System.Int32</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.GetModulesByGroupID(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_ChucNang_GetModulesByGroupID' stored procedure. 
            </summary>
            <param name="groupId"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.ChucNang},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ChucNang&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ChucNang)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ChucNang"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ChucNang"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.ChucNang)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ChucNang"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ChucNang"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.ChucNang,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.ChucNang"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.ChucNang Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.ChucNang,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.ChucNang object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.ChucNang instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.ChucNang Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChucVuProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.GiangVienChucVuProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.NhomQuyenProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.NhomQuyenProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.NhomQuyenProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.NhomQuyenProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaChucNangFromNhomChucNang(System.Int32)">
            <summary>
            	Gets NhomQuyen objects from the datasource by MaChucNang in the
            	NhomChucNang table. Table NhomQuyen is related to table ChucNang
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="_maChucNang"></param>
            <returns>Returns a typed collection of NhomQuyen objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaChucNangFromNhomChucNang(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets PMS.Entities.NhomQuyen objects from the datasource by MaChucNang in the
            	NhomChucNang table. Table NhomQuyen is related to table ChucNang
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maChucNang"></param>
            <remarks></remarks>
            <returns>Returns a TList of NhomQuyen objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaChucNangFromNhomChucNang(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets NhomQuyen objects from the datasource by MaChucNang in the
            	NhomChucNang table. Table NhomQuyen is related to table ChucNang
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucNang"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of NhomQuyen objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaChucNangFromNhomChucNang(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets NhomQuyen objects from the datasource by MaChucNang in the
            	NhomChucNang table. Table NhomQuyen is related to table ChucNang
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucNang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of NhomQuyen objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaChucNangFromNhomChucNang(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets NhomQuyen objects from the datasource by MaChucNang in the
            	NhomChucNang table. Table NhomQuyen is related to table ChucNang
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="_maChucNang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of NhomQuyen objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaChucNangFromNhomChucNang(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets NhomQuyen objects from the datasource by MaChucNang in the
            	NhomChucNang table. Table NhomQuyen is related to table ChucNang
            	through the (M:N) relationship defined in the NhomChucNang table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_maChucNang"></param>
            <remarks></remarks>
            <returns>Returns a TList of NhomQuyen objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.NhomQuyenKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maNhomQuyen">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.NhomQuyenKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaNhomQuyen(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserGroup index.
            </summary>
            <param name="_maNhomQuyen"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomQuyen"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaNhomQuyen(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGroup index.
            </summary>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomQuyen"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaNhomQuyen(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGroup index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomQuyen"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaNhomQuyen(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGroup index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomQuyen"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaNhomQuyen(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGroup index.
            </summary>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomQuyen"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.GetByMaNhomQuyen(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGroup index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhomQuyen"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomQuyen"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.NhomQuyen},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;NhomQuyen&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.NhomQuyen)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.NhomQuyen"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.NhomQuyen"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.NhomQuyen)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.NhomQuyen"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.NhomQuyen"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.NhomQuyen,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.NhomQuyen"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.NhomQuyen Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.NhomQuyen,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.NhomQuyen object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.NhomQuyen instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.NhomQuyen Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienKhoaProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewGiangVienKhoaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienKhoaProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewGiangVienKhoaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienKhoaProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewGiangVienKhoa},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienKhoaProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewGiangVienKhoa)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewGiangVienKhoa"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewGiangVienKhoa"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomChucNangProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.NhomChucNangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.GiangVienProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaChucVuFromGiangVienChucVu(System.Int32)">
            <summary>
            	Gets GiangVien objects from the datasource by MaChucVu in the
            	GiangVien_ChucVu table. Table GiangVien is related to table ChucVu
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="_maChucVu"></param>
            <returns>Returns a typed collection of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaChucVuFromGiangVienChucVu(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets PMS.Entities.GiangVien objects from the datasource by MaChucVu in the
            	GiangVien_ChucVu table. Table GiangVien is related to table ChucVu
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maChucVu"></param>
            <remarks></remarks>
            <returns>Returns a TList of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaChucVuFromGiangVienChucVu(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets GiangVien objects from the datasource by MaChucVu in the
            	GiangVien_ChucVu table. Table GiangVien is related to table ChucVu
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucVu"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaChucVuFromGiangVienChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets GiangVien objects from the datasource by MaChucVu in the
            	GiangVien_ChucVu table. Table GiangVien is related to table ChucVu
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaChucVuFromGiangVienChucVu(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets GiangVien objects from the datasource by MaChucVu in the
            	GiangVien_ChucVu table. Table GiangVien is related to table ChucVu
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaChucVuFromGiangVienChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets GiangVien objects from the datasource by MaChucVu in the
            	GiangVien_ChucVu table. Table GiangVien is related to table ChucVu
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_maChucVu"></param>
            <remarks></remarks>
            <returns>Returns a TList of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHoSoFromGiangVienHoSo(System.Int32)">
            <summary>
            	Gets GiangVien objects from the datasource by MaHoSo in the
            	GiangVien_HoSo table. Table GiangVien is related to table HoSo
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="_maHoSo"></param>
            <returns>Returns a typed collection of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHoSoFromGiangVienHoSo(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets PMS.Entities.GiangVien objects from the datasource by MaHoSo in the
            	GiangVien_HoSo table. Table GiangVien is related to table HoSo
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maHoSo"></param>
            <remarks></remarks>
            <returns>Returns a TList of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHoSoFromGiangVienHoSo(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets GiangVien objects from the datasource by MaHoSo in the
            	GiangVien_HoSo table. Table GiangVien is related to table HoSo
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHoSoFromGiangVienHoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets GiangVien objects from the datasource by MaHoSo in the
            	GiangVien_HoSo table. Table GiangVien is related to table HoSo
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHoSoFromGiangVienHoSo(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets GiangVien objects from the datasource by MaHoSo in the
            	GiangVien_HoSo table. Table GiangVien is related to table HoSo
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="_maHoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHoSoFromGiangVienHoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets GiangVien objects from the datasource by MaHoSo in the
            	GiangVien_HoSo table. Table GiangVien is related to table HoSo
            	through the (M:N) relationship defined in the GiangVien_HoSo table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_maHoSo"></param>
            <remarks></remarks>
            <returns>Returns a TList of GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.GiangVienKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maGiangVien">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocHam(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocHam key.
            	FK_GiangVien_HocHam Description: 
            </summary>
            <param name="_maHocHam"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocHam(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocHam key.
            	FK_GiangVien_HocHam Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocHam"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocHam(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocHam key.
            	FK_GiangVien_HocHam Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocHam"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocHam(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocHam key.
            	fkGiangVienHocHam Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maHocHam"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocHam(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocHam key.
            	fkGiangVienHocHam Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maHocHam"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocHam(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocHam key.
            	FK_GiangVien_HocHam Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocHam"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocVi(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocVi key.
            	FK_GiangVien_HocVi Description: 
            </summary>
            <param name="_maHocVi"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocVi(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocVi key.
            	FK_GiangVien_HocVi Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocVi"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocVi(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocVi key.
            	FK_GiangVien_HocVi Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocVi(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocVi key.
            	fkGiangVienHocVi Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maHocVi"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocVi(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocVi key.
            	fkGiangVienHocVi Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maHocVi"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaHocVi(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_HocVi key.
            	FK_GiangVien_HocVi Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaLoaiGiangVien(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_LoaiGiangVien key.
            	FK_GiangVien_LoaiGiangVien Description: 
            </summary>
            <param name="_maLoaiGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaLoaiGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_LoaiGiangVien key.
            	FK_GiangVien_LoaiGiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaLoaiGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_LoaiGiangVien key.
            	FK_GiangVien_LoaiGiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaLoaiGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_LoaiGiangVien key.
            	fkGiangVienLoaiGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maLoaiGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaLoaiGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_LoaiGiangVien key.
            	fkGiangVienLoaiGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maLoaiGiangVien"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaLoaiGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_LoaiGiangVien key.
            	FK_GiangVien_LoaiGiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaNguoiLap(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TaiKhoan key.
            	FK_GiangVien_TaiKhoan Description: 
            </summary>
            <param name="_maNguoiLap"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaNguoiLap(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TaiKhoan key.
            	FK_GiangVien_TaiKhoan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNguoiLap"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaNguoiLap(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TaiKhoan key.
            	FK_GiangVien_TaiKhoan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNguoiLap"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaNguoiLap(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TaiKhoan key.
            	fkGiangVienTaiKhoan Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maNguoiLap"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaNguoiLap(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TaiKhoan key.
            	fkGiangVienTaiKhoan Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maNguoiLap"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaNguoiLap(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TaiKhoan key.
            	FK_GiangVien_TaiKhoan Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNguoiLap"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaTinhTrang(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TinhTrang key.
            	FK_GiangVien_TinhTrang Description: 
            </summary>
            <param name="_maTinhTrang"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaTinhTrang(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TinhTrang key.
            	FK_GiangVien_TinhTrang Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTinhTrang"></param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaTinhTrang(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TinhTrang key.
            	FK_GiangVien_TinhTrang Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTinhTrang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaTinhTrang(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TinhTrang key.
            	fkGiangVienTinhTrang Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maTinhTrang"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaTinhTrang(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TinhTrang key.
            	fkGiangVienTinhTrang Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maTinhTrang"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaTinhTrang(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GiangVien_TinhTrang key.
            	FK_GiangVien_TinhTrang Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTinhTrang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.GiangVien objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.GiangVienKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_GiangVien index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_GiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaGiangVien(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_GiangVien index.
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaGiangVien(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaGiangVien(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien index.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.GiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaDonVi(System.String)">
            <summary>
            This method wrap the 'cust_GiangVien_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaDonVi(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_GiangVien_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_GiangVien_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetByMaDonVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_GiangVien_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetMaDonViMaTinhTrang(System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_GiangVien_GetMaDonViMaTinhTrang' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="maTinhTrang"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetMaDonViMaTinhTrang(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_GiangVien_GetMaDonViMaTinhTrang' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="maTinhTrang"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetMaDonViMaTinhTrang(PMS.Data.TransactionManager,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_GiangVien_GetMaDonViMaTinhTrang' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="maTinhTrang"> A <c>System.Int32</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.GetMaDonViMaTinhTrang(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_GiangVien_GetMaDonViMaTinhTrang' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="maTinhTrang"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.GiangVien},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;GiangVien&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.GiangVien)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.GiangVien"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVien"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.GiangVien)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.GiangVien"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVien"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.GiangVien,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.GiangVien"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.GiangVien Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.GiangVien,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.GiangVien object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.GiangVien instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.GiangVien Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.GiangVien</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.HocHam">
            <summary>
             Composite Property for <c>HocHam</c> at MaHocHamSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.HocVi">
            <summary>
             Composite Property for <c>HocVi</c> at MaHocViSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.LoaiGiangVien">
            <summary>
             Composite Property for <c>LoaiGiangVien</c> at MaLoaiGiangVienSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.TaiKhoan">
            <summary>
             Composite Property for <c>TaiKhoan</c> at MaNguoiLapSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.TinhTrang">
            <summary>
             Composite Property for <c>TinhTrang</c> at MaTinhTrangSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.GiangVienChucVuCollection">
            <summary>
             Collection of <c>GiangVien</c> as OneToMany for GiangVienChucVuCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.KetQuaTinhCollection">
            <summary>
             Collection of <c>GiangVien</c> as OneToMany for KetQuaTinhCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.ThuLaoThoaThuanCollection">
            <summary>
             Collection of <c>GiangVien</c> as OneToMany for ThuLaoThoaThuanCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.CoVanHocTapCollection">
            <summary>
             Collection of <c>GiangVien</c> as OneToMany for CoVanHocTapCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.MaChucVuChucVuCollection_From_GiangVienChucVu">
            <summary>
             Collection of <c>GiangVien</c> as ManyToMany for ChucVuCollection_From_GiangVienChucVu
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.KhoiLuongKhacCollection">
            <summary>
             Collection of <c>GiangVien</c> as OneToMany for KhoiLuongKhacCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.GiangVienChuyenMonCollection">
            <summary>
             Collection of <c>GiangVien</c> as OneToMany for GiangVienChuyenMonCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.GiangVienHoSoCollection">
            <summary>
             Collection of <c>GiangVien</c> as OneToMany for GiangVienHoSoCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.GiangVienChildEntityTypes.MaHoSoHoSoCollection_From_GiangVienHoSo">
            <summary>
             Collection of <c>GiangVien</c> as ManyToMany for HoSoCollection_From_GiangVienHoSo
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.GiangVienSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the GiangVienSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.TinhTrangProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.TinhTrangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.TinhTrangProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.TinhTrangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.TinhTrangKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maTinhTrang">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTinhTrang">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.TinhTrangKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_TinhTrang index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TinhTrang index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_TinhTrang index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TinhTrang index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TinhTrang index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TinhTrang index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaTinhTrang(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_TinhTrang index.
            </summary>
            <param name="_maTinhTrang"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaTinhTrang(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TinhTrang index.
            </summary>
            <param name="_maTinhTrang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaTinhTrang(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TinhTrang index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTinhTrang"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaTinhTrang(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TinhTrang index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTinhTrang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaTinhTrang(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TinhTrang index.
            </summary>
            <param name="_maTinhTrang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.GetByMaTinhTrang(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TinhTrang index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maTinhTrang"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.TinhTrang"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.TinhTrang},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;TinhTrang&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.TinhTrang)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.TinhTrang"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.TinhTrang"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.TinhTrang)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.TinhTrang"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.TinhTrang"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.TinhTrang,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.TinhTrang"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.TinhTrang Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.TinhTrang,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.TinhTrang object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.TinhTrang instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.TinhTrang Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTinhKhoiLuongProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTinhKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewLopProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTiet_KhoiLuong_ThucDay_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewChiTietKhoiLuongThucDay},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewChiTietKhoiLuongThucDay)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewChiTietKhoiLuongThucDay"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewChiTietKhoiLuongThucDay"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongThucDaySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongThucDaySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDaySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietKhoiLuongSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChucNangChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.ChucNang</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.ChucNangChildEntityTypes.ChucNang">
            <summary>
             Composite Property for <c>ChucNang</c> at ParentIdSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.ChucNangChildEntityTypes.MaNhomQuyenNhomQuyenCollection_From_NhomChucNang">
            <summary>
             Collection of <c>ChucNang</c> as ManyToMany for NhomQuyenCollection_From_NhomChucNang
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.ChucNangChildEntityTypes.NhomChucNangCollection">
            <summary>
             Collection of <c>ChucNang</c> as OneToMany for NhomChucNangCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.ChucNangChildEntityTypes.ChucNangCollection">
            <summary>
             Collection of <c>ChucNang</c> as OneToMany for ChucNangCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChucNangFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ChucNangFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChucNangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChucNangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ChucNangParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ChucNangParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChucNangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChucNangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ChucNangSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucNangSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ChucNangSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoHocKyChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.HeSoHocKy</c>
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoHocKyFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeSoHocKyFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoHocKyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoHocKyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HeSoHocKyParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeSoHocKyParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoHocKyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKyParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoHocKyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HeSoHocKySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoHocKySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeSoHocKySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoCoSoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HeSoCoSoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoCoSoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HeSoCoSoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.HeSoCoSoKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maCoSo">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCoSo">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.HeSoCoSoKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_HeSoCoSo index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoCoSo index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoCoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoCoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoCoSo index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HeSoCoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaCoSo(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_HeSoCoSo index.
            </summary>
            <param name="_maCoSo"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaCoSo(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoCoSo index.
            </summary>
            <param name="_maCoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaCoSo(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoCoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCoSo"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaCoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoCoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaCoSo(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoCoSo index.
            </summary>
            <param name="_maCoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.GetByMaCoSo(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HeSoCoSo index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maCoSo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HeSoCoSo"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.HeSoCoSo},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;HeSoCoSo&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.HeSoCoSo)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HeSoCoSo"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeSoCoSo"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.HeSoCoSo)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HeSoCoSo"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeSoCoSo"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.HeSoCoSo,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.HeSoCoSo"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.HeSoCoSo Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.HeSoCoSo,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.HeSoCoSo object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.HeSoCoSo instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.HeSoCoSo Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomQuyenChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.NhomQuyen</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.NhomQuyenChildEntityTypes.MaChucNangChucNangCollection_From_NhomChucNang">
            <summary>
             Collection of <c>NhomQuyen</c> as ManyToMany for ChucNangCollection_From_NhomChucNang
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.NhomQuyenChildEntityTypes.TaiKhoanCollection">
            <summary>
             Collection of <c>NhomQuyen</c> as OneToMany for TaiKhoanCollection
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.NhomQuyenChildEntityTypes.NhomChucNangCollection">
            <summary>
             Collection of <c>NhomQuyen</c> as OneToMany for NhomChucNangCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.NhomQuyenFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomQuyen"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NhomQuyenFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomQuyenFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomQuyenFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomQuyenParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomQuyen"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NhomQuyenParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomQuyenParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomQuyenParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomQuyenSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomQuyen"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomQuyenSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the NhomQuyenSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopQuyDoiProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewTongHopQuyDoiProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienHocPhanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewSinhVienHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienHocPhanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewSinhVienHocPhan},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienHocPhanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewSinhVienHocPhan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewSinhVienHocPhan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewSinhVienHocPhan"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienHocPhanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienHocPhanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienHocPhanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienHocPhanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienHocPhanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienHocPhanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienHocPhanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienHocPhanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienHocPhanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienHocPhanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienHocPhanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewSinhVienHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongCoVanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongCoVanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewPhanCongCoVanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewPhanCongCoVanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.CoVanHocTapChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.CoVanHocTap</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.CoVanHocTapChildEntityTypes.GiangVien">
            <summary>
             Composite Property for <c>GiangVien</c> at MaGiangVienSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.CoVanHocTapFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CoVanHocTap"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CoVanHocTapFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoVanHocTapFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoVanHocTapFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.CoVanHocTapParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CoVanHocTap"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CoVanHocTapParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoVanHocTapParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoVanHocTapParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.CoVanHocTapSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CoVanHocTap"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.CoVanHocTapSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CoVanHocTapSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HocViProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HocViProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HocViProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HocViProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.HocViKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maHocVi">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocVi">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.HocViKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_HocVi index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HocVi index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_HocVi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_HocVi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HocVi index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_HocVi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaHocVi(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_HocVi index.
            </summary>
            <param name="_maHocVi"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaHocVi(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HocVi index.
            </summary>
            <param name="_maHocVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaHocVi(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HocVi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocVi"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaHocVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_HocVi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaHocVi(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HocVi index.
            </summary>
            <param name="_maHocVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.GetByMaHocVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_HocVi index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maHocVi"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.HocVi"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.HocVi},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;HocVi&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.HocVi)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HocVi"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HocVi"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.HocVi)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.HocVi"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.HocVi"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.HocVi,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.HocVi"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.HocVi Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.HocViProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.HocVi,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.HocVi object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.HocVi instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.HocVi Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopChiTienCoVanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopChiTienCoVanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewTongHopChiTienCoVanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewTongHopChiTienCoVanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopDaiDienFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopDaiDien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewLopDaiDienFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopDaiDienFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopDaiDienFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopDaiDienParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopDaiDien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewLopDaiDienParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopDaiDienParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopDaiDienParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewLopDaiDienSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopDaiDien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewLopDaiDienSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewLopDaiDienSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaBoMonProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoaBoMonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaBoMonProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoaBoMonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaBoMonProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewKhoaBoMon},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaBoMonProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewKhoaBoMon)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewKhoaBoMon"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewKhoaBoMon"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewHocKyProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewHocKyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetKetThucByTuNgayDenNgay(System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetKetThucByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetKetThucByTuNgayDenNgay(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetKetThucByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetKetThucByTuNgayDenNgay(PMS.Data.TransactionManager,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetKetThucByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetKetThucByTuNgayDenNgay(PMS.Data.TransactionManager,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetKetThucByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetBatDauByTuNgayDenNgay(System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetBatDauByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetBatDauByTuNgayDenNgay(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetBatDauByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetBatDauByTuNgayDenNgay(PMS.Data.TransactionManager,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetBatDauByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetBatDauByTuNgayDenNgay(PMS.Data.TransactionManager,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetBatDauByTuNgayDenNgay' stored procedure. 
            </summary>
            <param name="tuNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="denNgay"> A <c>System.DateTime</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetByNamHocHocKyMaGiangVien(System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetByNamHocHocKyMaGiangVien(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetByNamHocHocKyMaGiangVien(PMS.Data.TransactionManager,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.GetByNamHocHocKyMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_View_GiangVien_LopHocPhan_GetByNamHocHocKyMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewGiangVienLopHocPhan},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewGiangVienLopHocPhan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewGiangVienLopHocPhan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewGiangVienLopHocPhan"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienDonGiaFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienDonGia"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienDonGiaParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienDonGia"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienDonGiaSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienDonGia"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienDonGiaSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewDonViProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewDonViProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDonViProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewDonVi},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewDonViProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewDonVi)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewDonVi"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewDonVi"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewDonViFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDonVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDonViFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewDonViFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDonViFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDonViFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewDonViFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDonViFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewDonViParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDonVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDonViParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewDonViParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDonViParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDonViParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewDonViParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDonViParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewDonViSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDonVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewDonViSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewDonViSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewDonViProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewDonViProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietQuyDoiFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietQuyDoiParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietQuyDoiSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietQuyDoiSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.NetTiersProviderCollection">
            <summary>
            Reprensents the strongly typed collection of NetTiersProvider.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderCollection.Add(PMS.Data.Bases.NetTiersProvider)">
            <summary>
            Adds the specified provider.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:NetTiersProvider"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:PMS.Data.Bases.NetTiersProvider">
            <summary>
             The base class to implements to create a .NetTiers provider.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.NetTiersProviderBase">
            <summary>
             The base class to implements to create a .NetTiers provider.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.INetTiersProvider">
            <summary>
            Interface for NetTiersProvider
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.CreateTransaction">
            <summary>
            Creates the transaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteDataSet(PMS.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteDataSet(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteDataSet(PMS.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteNonQuery(PMS.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteNonQuery(PMS.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteNonQuery(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteReader(PMS.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteReader(PMS.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteReader(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteScalar(PMS.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteScalar(PMS.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteScalar(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.INetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="config">The config.</param>
        </member>
        <member name="P:PMS.Data.Bases.INetTiersProvider.CurrentLoadPolicy">
            <summary>
            Gets or sets the current load policy.
            </summary>
            <value>The current load policy.</value>
        </member>
        <member name="P:PMS.Data.Bases.INetTiersProvider.DefaultCommandTimeout">
            <summary>
            Gets or sets the default command timeout.
            </summary>
            <value>The default command timeout.</value>
        </member>
        <member name="P:PMS.Data.Bases.INetTiersProvider.EnableEntityTracking">
            <summary>
            Gets or sets a value indicating whether [enable entity tracking].
            </summary>
            <value>
            	<c>true</c> if [enable entity tracking]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PMS.Data.Bases.INetTiersProvider.EnableListTracking">
            <summary>
            Gets or sets a value indicating whether [enable list tracking].
            </summary>
            <value><c>true</c> if [enable list tracking]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:PMS.Data.Bases.INetTiersProvider.EnableMethodAuthorization">
            <summary>
            Gets or sets a value indicating whether [enable method authorization].
            </summary>
            <value>
            	<c>true</c> if [enable method authorization]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PMS.Data.Bases.INetTiersProvider.EntityCreationalFactoryType">
            <summary>
            Gets or sets the type of the entity creational factory.
            </summary>
            <value>The type of the entity creational factory.</value>
        </member>
        <member name="P:PMS.Data.Bases.INetTiersProvider.IsTransactionSupported">
            <summary>
            Gets a value indicating whether this instance is transaction supported.
            </summary>
            <value>
            	<c>true</c> if this instance is transaction supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PMS.Data.Bases.INetTiersProvider.UseEntityFactory">
            <summary>
            Gets or sets a value indicating whether [use entity factory].
            </summary>
            <value><c>true</c> if [use entity factory]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.CreateTransaction">
            <summary>
            Creates a new <see cref="T:PMS.Data.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(PMS.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(PMS.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteReader(PMS.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteReader(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteReader(PMS.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteDataSet(PMS.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteDataSet(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteDataSet(PMS.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteScalar(PMS.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteScalar(PMS.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.Bases.NetTiersProviderBase.ExecuteScalar(PMS.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProviderBase.EntityCreationalFactoryType">
            <summary>
            Gets or sets the Creational Entity Factory Type.
            </summary>
            <value>The entity factory type.</value>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProviderBase.EnableEntityTracking">
            <summary>
            Gets or sets the ability to track entities.
            </summary>
            <value>true/false.</value>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProviderBase.EnableListTracking">
            <summary>
            Gets or sets the Entity Factory Type.
            </summary>
            <value>The entity factory type.</value>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProviderBase.UseEntityFactory">
            <summary>
            Gets or sets the use entity factory property to enable the usage of the EntityFactory and it's type cache.
            </summary>
            <value>bool value</value>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProviderBase.EnableMethodAuthorization">
            <summary>
            Gets or sets the use Enable Method Authorization to enable the usage of the Microsoft Patterns and Practices 
            IAuthorizationRuleProvider for code level authorization.
            </summary>
            <value>A bool value.</value>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProviderBase.DefaultCommandTimeout">
            <summary>
            Gets or sets the default timeout for every command
            </summary>
            <value>integer value in seconds.</value>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProviderBase.CurrentLoadPolicy">
            <summary>
            Get or set the current LoadPolicy in effect
            </summary>
            <value>A <see cref="T:PMS.Data.Bases.LoadPolicy"/> enumeration member.</value>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProviderBase.IsTransactionSupported">
            <summary>
             Indicates if the current <see cref="T:PMS.Data.Bases.NetTiersProvider"/> implementation is supporting Transactions.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.HocViProvider">
            <summary>
             Current HocViProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.HocHamProvider">
            <summary>
             Current HocHamProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.NhomQuyenProvider">
            <summary>
             Current NhomQuyenProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.TaiKhoanProvider">
            <summary>
             Current TaiKhoanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.LoaiGiangVienProvider">
            <summary>
             Current LoaiGiangVienProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.TinhTrangProvider">
            <summary>
             Current TinhTrangProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.HeThongProvider">
            <summary>
             Current HeThongProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.CauHinhProvider">
            <summary>
             Current CauHinhProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.GiangVienProvider">
            <summary>
             Current GiangVienProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ThuLaoThoaThuanProvider">
            <summary>
             Current ThuLaoThoaThuanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.HeSoCoSoProvider">
            <summary>
             Current HeSoCoSoProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.KhoiLuongGiangDayProvider">
            <summary>
             Current KhoiLuongGiangDayProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.GiangVienHoSoProvider">
            <summary>
             Current GiangVienHoSoProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ChiTietKhoiLuongProvider">
            <summary>
             Current ChiTietKhoiLuongProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.GiangVienChuyenMonProvider">
            <summary>
             Current GiangVienChuyenMonProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.HeSoHocKyProvider">
            <summary>
             Current HeSoHocKyProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.KetQuaTinhProvider">
            <summary>
             Current KetQuaTinhProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.HeSoNgayProvider">
            <summary>
             Current HeSoNgayProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.GiangVienChucVuProvider">
            <summary>
             Current GiangVienChucVuProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ChucNangProvider">
            <summary>
             Current ChucNangProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.MonKhongTinhProvider">
            <summary>
             Current MonKhongTinhProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.LoaiKhoiLuongProvider">
            <summary>
             Current LoaiKhoiLuongProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.HoSoProvider">
            <summary>
             Current HoSoProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.KhoanQuyDoiProvider">
            <summary>
             Current KhoanQuyDoiProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.NhomChucNangProvider">
            <summary>
             Current NhomChucNangProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ReportTemplateProvider">
            <summary>
             Current ReportTemplateProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.DonViTinhProvider">
            <summary>
             Current DonViTinhProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.QuyDoiGioChuanProvider">
            <summary>
             Current QuyDoiGioChuanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ChucVuProvider">
            <summary>
             Current ChucVuProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.CoVanHocTapProvider">
            <summary>
             Current CoVanHocTapProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.NhomKhoiLuongProvider">
            <summary>
             Current NhomKhoiLuongProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.KhoiLuongKhacProvider">
            <summary>
             Current KhoiLuongKhacProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewBacDaoTaoLoaiHinhProvider">
            <summary>
             Current ViewBacDaoTaoLoaiHinhProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewChiTienCoVanProvider">
            <summary>
             Current ViewChiTienCoVanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewChiTietGiangDayProvider">
            <summary>
             Current ViewChiTietGiangDayProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewChiTietHocPhanProvider">
            <summary>
             Current ViewChiTietHocPhanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewChiTietKhoiLuongProvider">
            <summary>
             Current ViewChiTietKhoiLuongProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewChiTietKhoiLuongGiangDayProvider">
            <summary>
             Current ViewChiTietKhoiLuongGiangDayProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewChiTietKhoiLuongThucDayProvider">
            <summary>
             Current ViewChiTietKhoiLuongThucDayProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewChiTietQuyDoiProvider">
            <summary>
             Current ViewChiTietQuyDoiProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewCoSoProvider">
            <summary>
             Current ViewCoSoProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewDanTocProvider">
            <summary>
             Current ViewDanTocProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewDonViProvider">
            <summary>
             Current ViewDonViProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewGiangVienProvider">
            <summary>
             Current ViewGiangVienProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewGiangVienDonGiaProvider">
            <summary>
             Current ViewGiangVienDonGiaProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewGiangVienKhoaProvider">
            <summary>
             Current ViewGiangVienKhoaProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewGiangVienLopHocPhanProvider">
            <summary>
             Current ViewGiangVienLopHocPhanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewHocKyProvider">
            <summary>
             Current ViewHocKyProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewKetQuaTinhProvider">
            <summary>
             Current ViewKetQuaTinhProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewKhoaProvider">
            <summary>
             Current ViewKhoaProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewKhoaBoMonProvider">
            <summary>
             Current ViewKhoaBoMonProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewKhoaHocProvider">
            <summary>
             Current ViewKhoaHocProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewKhoiLuongGiangDayProvider">
            <summary>
             Current ViewKhoiLuongGiangDayProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewKhoiLuongThucDayProvider">
            <summary>
             Current ViewKhoiLuongThucDayProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewLopProvider">
            <summary>
             Current ViewLopProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewLopDaiDienProvider">
            <summary>
             Current ViewLopDaiDienProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewLopHocPhanProvider">
            <summary>
             Current ViewLopHocPhanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewMonHocProvider">
            <summary>
             Current ViewMonHocProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewMonHocKhoaProvider">
            <summary>
             Current ViewMonHocKhoaProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewNamHocProvider">
            <summary>
             Current ViewNamHocProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewPhanCongChuyenMonProvider">
            <summary>
             Current ViewPhanCongChuyenMonProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewPhanCongCoVanProvider">
            <summary>
             Current ViewPhanCongCoVanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewSinhVienHocPhanProvider">
            <summary>
             Current ViewSinhVienHocPhanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewSinhVienLopProvider">
            <summary>
             Current ViewSinhVienLopProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewSinhVienLopHocPhanProvider">
            <summary>
             Current ViewSinhVienLopHocPhanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewThanhToanThuLaoProvider">
            <summary>
             Current ViewThanhToanThuLaoProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewThanhToanTienGiangProvider">
            <summary>
             Current ViewThanhToanTienGiangProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewTheoDoiGiangDayProvider">
            <summary>
             Current ViewTheoDoiGiangDayProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewTheoDoiLichGiangProvider">
            <summary>
             Current ViewTheoDoiLichGiangProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewTinhKhoiLuongProvider">
            <summary>
             Current ViewTinhKhoiLuongProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewTongHopChiTienCoVanProvider">
            <summary>
             Current ViewTongHopChiTienCoVanProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewTongHopQuyDoiProvider">
            <summary>
             Current ViewTongHopQuyDoiProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewTonGiaoProvider">
            <summary>
             Current ViewTonGiaoProviderBase instance.
            </summary>
        </member>
        <member name="P:PMS.Data.Bases.NetTiersProvider.ViewXuLyQuyDoiProvider">
            <summary>
             Current ViewXuLyQuyDoiProviderBase instance.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChucVuProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ChucVuProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaGiangVienFromGiangVienChucVu(System.Int32)">
            <summary>
            	Gets ChucVu objects from the datasource by MaGiangVien in the
            	GiangVien_ChucVu table. Table ChucVu is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of ChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaGiangVienFromGiangVienChucVu(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets PMS.Entities.ChucVu objects from the datasource by MaGiangVien in the
            	GiangVien_ChucVu table. Table ChucVu is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a TList of ChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaGiangVienFromGiangVienChucVu(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets ChucVu objects from the datasource by MaGiangVien in the
            	GiangVien_ChucVu table. Table ChucVu is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of ChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaGiangVienFromGiangVienChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets ChucVu objects from the datasource by MaGiangVien in the
            	GiangVien_ChucVu table. Table ChucVu is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaGiangVienFromGiangVienChucVu(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ChucVu objects from the datasource by MaGiangVien in the
            	GiangVien_ChucVu table. Table ChucVu is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaGiangVienFromGiangVienChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ChucVu objects from the datasource by MaGiangVien in the
            	GiangVien_ChucVu table. Table ChucVu is related to table GiangVien
            	through the (M:N) relationship defined in the GiangVien_ChucVu table.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a TList of ChucVu objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.ChucVuKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maChucVu">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucVu">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.ChucVuKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_ChucVu index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ChucVu index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_ChucVu index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ChucVu index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ChucVu index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ChucVu index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaChucVu(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ChucVu index.
            </summary>
            <param name="_maChucVu"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaChucVu(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ChucVu index.
            </summary>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaChucVu(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ChucVu index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucVu"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ChucVu index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaChucVu(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ChucVu index.
            </summary>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.GetByMaChucVu(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ChucVu index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maChucVu"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.ChucVu"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.ChucVu},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ChucVu&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ChucVu)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ChucVu"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ChucVu"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.ChucVu)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ChucVu"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ChucVu"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.ChucVu,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.ChucVu"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.ChucVu Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.ChucVu,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.ChucVu object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.ChucVu instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.ChucVu Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.ChucVuChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.ChucVu</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.ChucVuChildEntityTypes.MaGiangVienGiangVienCollection_From_GiangVienChucVu">
            <summary>
             Collection of <c>ChucVu</c> as ManyToMany for GiangVienCollection_From_GiangVienChucVu
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.ChucVuChildEntityTypes.GiangVienChucVuCollection">
            <summary>
             Collection of <c>ChucVu</c> as OneToMany for GiangVienChucVuCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChucVuFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ChucVuFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChucVuFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChucVuFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ChucVuParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ChucVuParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChucVuParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChucVuParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ChucVuSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChucVuSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ChucVuSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChucVuProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ChucVuProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoCoSoChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.HeSoCoSo</c>
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoCoSoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeSoCoSoFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoCoSoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoCoSoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HeSoCoSoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeSoCoSoParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoCoSoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoCoSoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HeSoCoSoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeSoCoSoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeSoCoSoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HocHamProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HocHamProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanTienGiangProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewThanhToanTienGiangProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewMonHocProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewMonHocProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocProviderBaseCore.Khoa_GetByMaDonVi(System.String)">
            <summary>
            This method wrap the 'cust_View_MonHoc_Khoa_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocProviderBaseCore.Khoa_GetByMaDonVi(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_MonHoc_Khoa_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocProviderBaseCore.Khoa_GetByMaDonVi(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_MonHoc_Khoa_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocProviderBaseCore.Khoa_GetByMaDonVi(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_MonHoc_Khoa_GetByMaDonVi' stored procedure. 
            </summary>
            <param name="maDonVi"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.IDataReader"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewMonHoc},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewMonHoc)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewMonHoc"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewMonHoc"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTienCoVanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTienCoVanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTienCoVanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTienCoVanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanProviderBaseCore.GetByNamHocHocKy(System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTien_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanProviderBaseCore.GetByNamHocHocKy(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTien_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTien_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanProviderBaseCore.GetByNamHocHocKy(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wrap the 'cust_View_ChiTien_CoVan_GetByNamHocHocKy' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewChiTienCoVan},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewChiTienCoVan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewChiTienCoVan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewChiTienCoVan"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.LoadPolicy">
            <summary>
            Possibel load policies that can be applied when a provider Load method is called. Determines 
            how entities with EntityState.Unchanged and EntityState.Changed are treated during a Load
            when entity tracking is enabled.
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.LoadPolicy.PreserveChanges">
            <summary>
            Refresh entities with EntityState.Unchanged if entity tracking is enabled. Entities with 
            EntityState.Changed will not be refreshed with information from the database.
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.LoadPolicy.DiscardChanges">
            <summary>
            Refresh entities with EntityState.Changed as well as EntityState.Unchanged i.e. discard any
            unsaved changes.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.NhomKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.NhomKhoiLuongKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maNhom">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhom">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.NhomKhoiLuongKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.GetByMaNhom(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_NhomKhoiLuong index.
            </summary>
            <param name="_maNhom"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.GetByMaNhom(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_NhomKhoiLuong index.
            </summary>
            <param name="_maNhom"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.GetByMaNhom(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_NhomKhoiLuong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhom"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.GetByMaNhom(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_NhomKhoiLuong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhom"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.GetByMaNhom(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_NhomKhoiLuong index.
            </summary>
            <param name="_maNhom"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.GetByMaNhom(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_NhomKhoiLuong index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maNhom"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.NhomKhoiLuong"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.NhomKhoiLuong},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;NhomKhoiLuong&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.NhomKhoiLuong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.NhomKhoiLuong"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.NhomKhoiLuong"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.NhomKhoiLuong)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.NhomKhoiLuong"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.NhomKhoiLuong"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.NhomKhoiLuong,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.NhomKhoiLuong"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.NhomKhoiLuong Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.NhomKhoiLuong,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.NhomKhoiLuong object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.NhomKhoiLuong instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.NhomKhoiLuong Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomKhoiLuongChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.NhomKhoiLuong</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.NhomKhoiLuongChildEntityTypes.LoaiKhoiLuongCollection">
            <summary>
             Collection of <c>NhomKhoiLuong</c> as OneToMany for LoaiKhoiLuongCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.NhomKhoiLuongFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NhomKhoiLuongFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomKhoiLuongParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NhomKhoiLuongParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.NhomKhoiLuongSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.NhomKhoiLuongSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the NhomKhoiLuongSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienHoSoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.GiangVienHoSoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HocViChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.HocVi</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.HocViChildEntityTypes.GiangVienCollection">
            <summary>
             Collection of <c>HocVi</c> as OneToMany for GiangVienCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HocViFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocViFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HocViFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocViFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HocViFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HocViFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HocViFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HocViParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocViParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HocViParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocViParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HocViParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HocViParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HocViParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.HocViSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HocViSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the HocViSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBaseCore.GetByMaLopHocPhan(System.String)">
            <summary>
            This method wrap the 'cust_View_SinhVien_LopHocPhan_GetByMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBaseCore.GetByMaLopHocPhan(System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_SinhVien_LopHocPhan_GetByMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBaseCore.GetByMaLopHocPhan(PMS.Data.TransactionManager,System.String)">
            <summary>
            This method wrap the 'cust_View_SinhVien_LopHocPhan_GetByMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBaseCore.GetByMaLopHocPhan(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wrap the 'cust_View_SinhVien_LopHocPhan_GetByMaLopHocPhan' stored procedure. 
            </summary>
            <param name="maLopHocPhan"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewSinhVienLopHocPhan},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewSinhVienLopHocPhan)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewSinhVienLopHocPhan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewSinhVienLopHocPhan"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopHocPhanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopHocPhanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopHocPhanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewSinhVienLopHocPhanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewMonHocSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewMonHocSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.VList{PMS.Entities.ViewKhoa},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:PMS.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:PMS.Entities.VList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.ViewKhoa)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.ViewKhoa"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.ViewKhoa"/> object to refresh.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTienCoVanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTienCoVanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTienCoVanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTienCoVanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.NhomKhoiLuongProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.NhomKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ReportTemplateProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ReportTemplateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienChuyenMonProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.GiangVienChuyenMonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ThuLaoThoaThuanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ThuLaoThoaThuanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.GiangVienProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.GiangVienProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.LoaiGiangVienProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.LoaiGiangVienProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.LoaiGiangVienKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maLoaiGiangVien">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiGiangVien">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.LoaiGiangVienKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaQuanLy(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_LoaiGiangVien index.
            </summary>
            <param name="_maQuanLy"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_LoaiGiangVien index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_LoaiGiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_LoaiGiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaQuanLy(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_LoaiGiangVien index.
            </summary>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaQuanLy(PMS.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_LoaiGiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maQuanLy"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaLoaiGiangVien(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_LoaiGiangVien index.
            </summary>
            <param name="_maLoaiGiangVien"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaLoaiGiangVien(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiGiangVien index.
            </summary>
            <param name="_maLoaiGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaLoaiGiangVien(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiGiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiGiangVien"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaLoaiGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiGiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaLoaiGiangVien(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiGiangVien index.
            </summary>
            <param name="_maLoaiGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.GetByMaLoaiGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_LoaiGiangVien index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maLoaiGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.LoaiGiangVien"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.LoaiGiangVien},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;LoaiGiangVien&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.LoaiGiangVien)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.LoaiGiangVien"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.LoaiGiangVien"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.LoaiGiangVien)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.LoaiGiangVien"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.LoaiGiangVien"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.LoaiGiangVien,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.LoaiGiangVien"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.LoaiGiangVien Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.LoaiGiangVien,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.LoaiGiangVien object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.LoaiGiangVien instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.LoaiGiangVien Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.LoaiGiangVienChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.LoaiGiangVien</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.LoaiGiangVienChildEntityTypes.GiangVienCollection">
            <summary>
             Collection of <c>LoaiGiangVien</c> as OneToMany for GiangVienCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.LoaiGiangVienFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LoaiGiangVienFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiGiangVienFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiGiangVienFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.LoaiGiangVienParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LoaiGiangVienParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiGiangVienParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiGiangVienParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.LoaiGiangVienSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.LoaiGiangVienSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the LoaiGiangVienSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.LoaiGiangVienProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.LoaiGiangVienProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewSinhVienLopHocPhanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewNamHocFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewNamHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewNamHocFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewNamHocFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewNamHocFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewNamHocFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewNamHocFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewNamHocFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewNamHocParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewNamHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewNamHocParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewNamHocParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewNamHocParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewNamHocParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewNamHocParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewNamHocParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewNamHocSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewNamHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewNamHocSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewNamHocSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaBoMonFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaBoMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaBoMonFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaBoMonFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaBoMonFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaBoMonParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaBoMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaBoMonParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaBoMonParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaBoMonParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaBoMonSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaBoMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaBoMonSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienKhoaFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienKhoaFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienKhoaFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienKhoaFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienKhoaParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienKhoaParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienKhoaParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienKhoaParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienKhoaSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienKhoaSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.DataRepository">
            <summary>
            This class represents the Data source repository and gives access to all the underlying providers.
            </summary>
        </member>
        <member name="M:PMS.Data.DataRepository.LoadProvider(PMS.Data.Bases.NetTiersProvider)">
            <summary>
            Enables the DataRepository to programatically create and 
            pass in a <c>NetTiersProvider</c> during runtime.
            </summary>
            <param name="provider">An instatiated NetTiersProvider.</param>
        </member>
        <member name="M:PMS.Data.DataRepository.LoadProvider(PMS.Data.Bases.NetTiersProvider,System.Boolean)">
            <summary>
            Enables the DataRepository to programatically create and 
            pass in a <c>NetTiersProvider</c> during runtime.
            </summary>
            <param name="provider">An instatiated NetTiersProvider.</param>
            <param name="setAsDefault">ability to set any valid provider as the default provider for the DataRepository.</param>
        </member>
        <member name="M:PMS.Data.DataRepository.LoadProviders">
            <summary>
             Configuration based provider loading, will load the providers on first call.
            </summary>
        </member>
        <member name="M:PMS.Data.DataRepository.CreateTransaction">
            <summary>
            Creates a new <see cref="T:PMS.Data.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PMS.Data.DataRepository.AddConnection(System.String,System.String)">
            <summary>
            Adds the specified connection string to the map of connection strings.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
            <param name="connectionString">The provider specific connection information.</param>
        </member>
        <member name="P:PMS.Data.DataRepository.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:PMS.Data.DataRepository.Providers">
            <summary>
            Gets the provider collection.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:PMS.Data.DataRepository.NetTiersSection">
            <summary>
            Gets a reference to the configured NetTiersServiceSection object.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ConnectionStrings">
            <summary>
            Gets a reference to the ConnectionStringSettings collection.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.Connections">
            <summary>
            Gets the dictionary of connection providers.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.HocViProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.HocVi"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.HocHamProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.HocHam"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.NhomQuyenProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.NhomQuyen"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.TaiKhoanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.TaiKhoan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.LoaiGiangVienProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.LoaiGiangVien"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.TinhTrangProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.TinhTrang"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.HeThongProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.HeThong"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.CauHinhProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.CauHinh"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.GiangVienProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.GiangVien"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ThuLaoThoaThuanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.HeSoCoSoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.HeSoCoSo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.KhoiLuongGiangDayProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.GiangVienHoSoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.GiangVienHoSo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ChiTietKhoiLuongProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.GiangVienChuyenMonProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.GiangVienChuyenMon"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.HeSoHocKyProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.HeSoHocKy"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.KetQuaTinhProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.KetQuaTinh"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.HeSoNgayProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.HeSoNgay"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.GiangVienChucVuProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.GiangVienChucVu"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ChucNangProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ChucNang"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.MonKhongTinhProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.MonKhongTinh"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.LoaiKhoiLuongProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.LoaiKhoiLuong"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.HoSoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.HoSo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.KhoanQuyDoiProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.KhoanQuyDoi"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.NhomChucNangProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.NhomChucNang"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ReportTemplateProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ReportTemplate"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.DonViTinhProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.DonViTinh"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.QuyDoiGioChuanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.QuyDoiGioChuan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ChucVuProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ChucVu"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.CoVanHocTapProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.CoVanHocTap"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.NhomKhoiLuongProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.NhomKhoiLuong"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.KhoiLuongKhacProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.KhoiLuongKhac"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewBacDaoTaoLoaiHinhProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewBacDaoTaoLoaiHinh"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewChiTienCoVanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewChiTienCoVan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewChiTietGiangDayProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewChiTietGiangDay"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewChiTietHocPhanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewChiTietHocPhan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewChiTietKhoiLuongProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewChiTietKhoiLuong"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewChiTietKhoiLuongGiangDayProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewChiTietKhoiLuongGiangDay"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewChiTietKhoiLuongThucDayProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewChiTietKhoiLuongThucDay"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewChiTietQuyDoiProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewChiTietQuyDoi"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewCoSoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewCoSo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewDanTocProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewDanToc"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewDonViProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewDonVi"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewGiangVienProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewGiangVien"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewGiangVienDonGiaProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewGiangVienDonGia"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewGiangVienKhoaProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewGiangVienKhoa"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewGiangVienLopHocPhanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewGiangVienLopHocPhan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewHocKyProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewHocKy"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewKetQuaTinhProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewKetQuaTinh"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewKhoaProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewKhoa"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewKhoaBoMonProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewKhoaBoMon"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewKhoaHocProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewKhoaHoc"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewKhoiLuongGiangDayProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewKhoiLuongGiangDay"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewKhoiLuongThucDayProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewKhoiLuongThucDay"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewLopProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewLop"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewLopDaiDienProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewLopDaiDien"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewLopHocPhanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewLopHocPhan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewMonHocProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewMonHoc"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewMonHocKhoaProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewMonHocKhoa"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewNamHocProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewNamHoc"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewPhanCongChuyenMonProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewPhanCongChuyenMon"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewPhanCongCoVanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewPhanCongCoVan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewSinhVienHocPhanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewSinhVienHocPhan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewSinhVienLopProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewSinhVienLop"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewSinhVienLopHocPhanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewSinhVienLopHocPhan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewThanhToanThuLaoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewThanhToanThuLao"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewThanhToanTienGiangProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewThanhToanTienGiang"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewTheoDoiGiangDayProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewTheoDoiGiangDay"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewTheoDoiLichGiangProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewTheoDoiLichGiang"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewTinhKhoiLuongProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewTinhKhoiLuong"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewTongHopChiTienCoVanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewTongHopChiTienCoVan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewTongHopQuyDoiProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewTongHopQuyDoi"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewTonGiaoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewTonGiao"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ViewXuLyQuyDoiProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:PMS.Entities.ViewXuLyQuyDoi"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.DataRepository.ConnectionProvider">
            <summary>
            Provides ability to switch connection string at runtime.
            </summary>
        </member>
        <member name="M:PMS.Data.DataRepository.ConnectionProvider.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ConnectionProvider class.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
            <param name="connectionString">The provider specific connection information.</param>
        </member>
        <member name="M:PMS.Data.DataRepository.ConnectionProvider.LoadProviders">
            <summary>
            Instantiates the configured providers based on the supplied connection string.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ConnectionProvider.Provider">
            <summary>
            Gets the provider.
            </summary>
        </member>
        <member name="P:PMS.Data.DataRepository.ConnectionProvider.Providers">
            <summary>
            Gets the provider collection.
            </summary>
        </member>
        <member name="T:PMS.Data.HocViFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HocViFilters.#ctor">
            <summary>
            Initializes a new instance of the HocViFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.HocViFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HocViFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HocViFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HocViFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HocViQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.HocViParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HocViQuery.#ctor">
            <summary>
            Initializes a new instance of the HocViQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.HocViQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HocViQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HocViQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HocViQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HocHamFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocHam"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HocHamFilters.#ctor">
            <summary>
            Initializes a new instance of the HocHamFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.HocHamFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HocHamFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HocHamFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HocHamFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HocHamQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.HocHamParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HocHam"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HocHamQuery.#ctor">
            <summary>
            Initializes a new instance of the HocHamQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.HocHamQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HocHamQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HocHamQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HocHamQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.NhomQuyenFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomQuyen"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomQuyenFilters.#ctor">
            <summary>
            Initializes a new instance of the NhomQuyenFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomQuyenFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomQuyenFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.NhomQuyenFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomQuyenFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.NhomQuyenQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.NhomQuyenParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomQuyen"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomQuyenQuery.#ctor">
            <summary>
            Initializes a new instance of the NhomQuyenQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomQuyenQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomQuyenQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.NhomQuyenQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomQuyenQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.TaiKhoanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TaiKhoan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.TaiKhoanFilters.#ctor">
            <summary>
            Initializes a new instance of the TaiKhoanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.TaiKhoanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TaiKhoanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.TaiKhoanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TaiKhoanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.TaiKhoanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.TaiKhoanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TaiKhoan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.TaiKhoanQuery.#ctor">
            <summary>
            Initializes a new instance of the TaiKhoanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.TaiKhoanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TaiKhoanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.TaiKhoanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TaiKhoanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.LoaiGiangVienFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.LoaiGiangVienFilters.#ctor">
            <summary>
            Initializes a new instance of the LoaiGiangVienFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.LoaiGiangVienFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiGiangVienFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.LoaiGiangVienFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiGiangVienFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.LoaiGiangVienQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.LoaiGiangVienParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.LoaiGiangVienQuery.#ctor">
            <summary>
            Initializes a new instance of the LoaiGiangVienQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.LoaiGiangVienQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiGiangVienQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.LoaiGiangVienQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiGiangVienQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.TinhTrangFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TinhTrang"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.TinhTrangFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TinhTrang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TinhTrangFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TinhTrangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TinhTrangFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.TinhTrangFilters.#ctor">
            <summary>
            Initializes a new instance of the TinhTrangFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.TinhTrangFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TinhTrangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.TinhTrangFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TinhTrangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.TinhTrangQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.TinhTrangParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TinhTrang"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.TinhTrangParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TinhTrang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TinhTrangParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TinhTrangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TinhTrangParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.TinhTrangQuery.#ctor">
            <summary>
            Initializes a new instance of the TinhTrangQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.TinhTrangQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TinhTrangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.TinhTrangQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TinhTrangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HeThongFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeThong"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeThongFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeThong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeThongFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeThongFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeThongFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeThongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeThongFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeThongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.HeThongFilters.#ctor">
            <summary>
            Initializes a new instance of the HeThongFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.HeThongFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeThongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HeThongFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeThongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HeThongQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.HeThongParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeThong"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeThongParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeThong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeThongParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeThongParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeThongParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeThongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.HeThongParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeThongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.HeThongQuery.#ctor">
            <summary>
            Initializes a new instance of the HeThongQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.HeThongQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeThongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HeThongQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeThongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.CauHinhFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CauHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.CauHinhFilters.#ctor">
            <summary>
            Initializes a new instance of the CauHinhFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.CauHinhFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CauHinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.CauHinhFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CauHinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.CauHinhQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.CauHinhParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CauHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.CauHinhQuery.#ctor">
            <summary>
            Initializes a new instance of the CauHinhQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.CauHinhQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CauHinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.CauHinhQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CauHinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.GiangVienFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienFilters.#ctor">
            <summary>
            Initializes a new instance of the GiangVienFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.GiangVienFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.GiangVienQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.GiangVienParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienQuery.#ctor">
            <summary>
            Initializes a new instance of the GiangVienQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.GiangVienQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ThuLaoThoaThuanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ThuLaoThoaThuanFilters.#ctor">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ThuLaoThoaThuanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ThuLaoThoaThuanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ThuLaoThoaThuanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ThuLaoThoaThuanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ThuLaoThoaThuan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ThuLaoThoaThuanQuery.#ctor">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ThuLaoThoaThuanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ThuLaoThoaThuanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ThuLaoThoaThuanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HeSoCoSoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoCoSoFilters.#ctor">
            <summary>
            Initializes a new instance of the HeSoCoSoFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoCoSoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoCoSoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HeSoCoSoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoCoSoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HeSoCoSoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.HeSoCoSoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoCoSoQuery.#ctor">
            <summary>
            Initializes a new instance of the HeSoCoSoQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoCoSoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoCoSoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HeSoCoSoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoCoSoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.KhoiLuongGiangDayFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongGiangDayFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.KhoiLuongGiangDayFilters.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.KhoiLuongGiangDayFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.KhoiLuongGiangDayFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.KhoiLuongGiangDayQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.KhoiLuongGiangDayParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongGiangDayParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDayParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.KhoiLuongGiangDayQuery.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.KhoiLuongGiangDayQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.KhoiLuongGiangDayQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.GiangVienHoSoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienHoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienHoSoFilters.#ctor">
            <summary>
            Initializes a new instance of the GiangVienHoSoFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienHoSoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienHoSoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.GiangVienHoSoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienHoSoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.GiangVienHoSoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.GiangVienHoSoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienHoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienHoSoQuery.#ctor">
            <summary>
            Initializes a new instance of the GiangVienHoSoQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienHoSoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienHoSoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.GiangVienHoSoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienHoSoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ChiTietKhoiLuongFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChiTietKhoiLuongFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ChiTietKhoiLuongFilters.#ctor">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ChiTietKhoiLuongFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ChiTietKhoiLuongFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ChiTietKhoiLuongQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ChiTietKhoiLuongParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChiTietKhoiLuongParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ChiTietKhoiLuongQuery.#ctor">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ChiTietKhoiLuongQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ChiTietKhoiLuongQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.GiangVienChuyenMonFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienChuyenMonFilters.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienChuyenMonFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.GiangVienChuyenMonFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.GiangVienChuyenMonQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.GiangVienChuyenMonParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienChuyenMonQuery.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienChuyenMonQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.GiangVienChuyenMonQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChuyenMonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HeSoHocKyFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoHocKyFilters.#ctor">
            <summary>
            Initializes a new instance of the HeSoHocKyFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoHocKyFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoHocKyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HeSoHocKyFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoHocKyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HeSoHocKyQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.HeSoHocKyParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoHocKyQuery.#ctor">
            <summary>
            Initializes a new instance of the HeSoHocKyQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoHocKyQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoHocKyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HeSoHocKyQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoHocKyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.KetQuaTinhFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KetQuaTinh"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KetQuaTinhFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KetQuaTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the KetQuaTinhFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KetQuaTinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KetQuaTinhFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.KetQuaTinhFilters.#ctor">
            <summary>
            Initializes a new instance of the KetQuaTinhFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.KetQuaTinhFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KetQuaTinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.KetQuaTinhFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KetQuaTinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.KetQuaTinhQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.KetQuaTinhParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KetQuaTinh"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KetQuaTinhParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KetQuaTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the KetQuaTinhParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KetQuaTinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KetQuaTinhParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.KetQuaTinhQuery.#ctor">
            <summary>
            Initializes a new instance of the KetQuaTinhQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.KetQuaTinhQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KetQuaTinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.KetQuaTinhQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KetQuaTinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HeSoNgayFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoNgay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoNgayFilters.#ctor">
            <summary>
            Initializes a new instance of the HeSoNgayFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoNgayFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoNgayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HeSoNgayFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoNgayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HeSoNgayQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.HeSoNgayParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeSoNgay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoNgayQuery.#ctor">
            <summary>
            Initializes a new instance of the HeSoNgayQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.HeSoNgayQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoNgayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HeSoNgayQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HeSoNgayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.GiangVienChucVuFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienChucVuFilters.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChucVuFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienChucVuFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChucVuFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.GiangVienChucVuFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChucVuFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.GiangVienChucVuQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.GiangVienChucVuParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.GiangVienChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienChucVuQuery.#ctor">
            <summary>
            Initializes a new instance of the GiangVienChucVuQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.GiangVienChucVuQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChucVuQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.GiangVienChucVuQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GiangVienChucVuQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ChucNangFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ChucNangFilters.#ctor">
            <summary>
            Initializes a new instance of the ChucNangFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ChucNangFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChucNangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ChucNangFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChucNangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ChucNangQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ChucNangParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ChucNangQuery.#ctor">
            <summary>
            Initializes a new instance of the ChucNangQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ChucNangQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChucNangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ChucNangQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChucNangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.MonKhongTinhFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.MonKhongTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.MonKhongTinhFilters.#ctor">
            <summary>
            Initializes a new instance of the MonKhongTinhFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.MonKhongTinhFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MonKhongTinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.MonKhongTinhFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the MonKhongTinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.MonKhongTinhQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.MonKhongTinhParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.MonKhongTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.MonKhongTinhQuery.#ctor">
            <summary>
            Initializes a new instance of the MonKhongTinhQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.MonKhongTinhQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MonKhongTinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.MonKhongTinhQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the MonKhongTinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.LoaiKhoiLuongFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.LoaiKhoiLuongFilters.#ctor">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.LoaiKhoiLuongFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.LoaiKhoiLuongFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.LoaiKhoiLuongQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.LoaiKhoiLuongParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.LoaiKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.LoaiKhoiLuongQuery.#ctor">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.LoaiKhoiLuongQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.LoaiKhoiLuongQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoaiKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HoSoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HoSoFilters.#ctor">
            <summary>
            Initializes a new instance of the HoSoFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.HoSoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HoSoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HoSoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HoSoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.HoSoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.HoSoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.HoSoQuery.#ctor">
            <summary>
            Initializes a new instance of the HoSoQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.HoSoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HoSoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.HoSoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HoSoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.KhoanQuyDoiFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoanQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.KhoanQuyDoiFilters.#ctor">
            <summary>
            Initializes a new instance of the KhoanQuyDoiFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.KhoanQuyDoiFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoanQuyDoiFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.KhoanQuyDoiFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoanQuyDoiFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.KhoanQuyDoiQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.KhoanQuyDoiParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoanQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.KhoanQuyDoiQuery.#ctor">
            <summary>
            Initializes a new instance of the KhoanQuyDoiQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.KhoanQuyDoiQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoanQuyDoiQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.KhoanQuyDoiQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoanQuyDoiQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.NhomChucNangFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomChucNangFilters.#ctor">
            <summary>
            Initializes a new instance of the NhomChucNangFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomChucNangFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomChucNangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.NhomChucNangFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomChucNangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.NhomChucNangQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.NhomChucNangParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomChucNang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomChucNangQuery.#ctor">
            <summary>
            Initializes a new instance of the NhomChucNangQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomChucNangQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomChucNangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.NhomChucNangQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomChucNangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ReportTemplateFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ReportTemplate"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ReportTemplateFilters.#ctor">
            <summary>
            Initializes a new instance of the ReportTemplateFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ReportTemplateFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ReportTemplateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ReportTemplateFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ReportTemplateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ReportTemplateQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ReportTemplateParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ReportTemplate"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ReportTemplateQuery.#ctor">
            <summary>
            Initializes a new instance of the ReportTemplateQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ReportTemplateQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ReportTemplateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ReportTemplateQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ReportTemplateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.DonViTinhFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.DonViTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.DonViTinhFilters.#ctor">
            <summary>
            Initializes a new instance of the DonViTinhFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.DonViTinhFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DonViTinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.DonViTinhFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DonViTinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.DonViTinhQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.DonViTinhParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.DonViTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.DonViTinhQuery.#ctor">
            <summary>
            Initializes a new instance of the DonViTinhQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.DonViTinhQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DonViTinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.DonViTinhQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DonViTinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.QuyDoiGioChuanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.QuyDoiGioChuanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.QuyDoiGioChuanFilters.#ctor">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.QuyDoiGioChuanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.QuyDoiGioChuanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.QuyDoiGioChuanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.QuyDoiGioChuanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.QuyDoiGioChuanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.QuyDoiGioChuanQuery.#ctor">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.QuyDoiGioChuanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.QuyDoiGioChuanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ChucVuFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ChucVuFilters.#ctor">
            <summary>
            Initializes a new instance of the ChucVuFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ChucVuFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChucVuFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ChucVuFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChucVuFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ChucVuQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ChucVuParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChucVu"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ChucVuQuery.#ctor">
            <summary>
            Initializes a new instance of the ChucVuQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ChucVuQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ChucVuQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ChucVuQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ChucVuQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.CoVanHocTapFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CoVanHocTap"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.CoVanHocTapFilters.#ctor">
            <summary>
            Initializes a new instance of the CoVanHocTapFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.CoVanHocTapFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoVanHocTapFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.CoVanHocTapFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoVanHocTapFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.CoVanHocTapQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.CoVanHocTapParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.CoVanHocTap"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.CoVanHocTapQuery.#ctor">
            <summary>
            Initializes a new instance of the CoVanHocTapQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.CoVanHocTapQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoVanHocTapQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.CoVanHocTapQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoVanHocTapQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.NhomKhoiLuongFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomKhoiLuongFilters.#ctor">
            <summary>
            Initializes a new instance of the NhomKhoiLuongFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomKhoiLuongFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.NhomKhoiLuongFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.NhomKhoiLuongQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.NhomKhoiLuongParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.NhomKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomKhoiLuongQuery.#ctor">
            <summary>
            Initializes a new instance of the NhomKhoiLuongQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.NhomKhoiLuongQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NhomKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.NhomKhoiLuongQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NhomKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.KhoiLuongKhacFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongKhac"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongKhacFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongKhac"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongKhacFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongKhacFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongKhacFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.KhoiLuongKhacFilters.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongKhacFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.KhoiLuongKhacFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongKhacFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.KhoiLuongKhacFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongKhacFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.KhoiLuongKhacQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.KhoiLuongKhacParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongKhac"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongKhacParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongKhac"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongKhacParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongKhacParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongKhacParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.KhoiLuongKhacQuery.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongKhacQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.KhoiLuongKhacQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongKhacQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.KhoiLuongKhacQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the KhoiLuongKhacQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewBacDaoTaoLoaiHinhFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewBacDaoTaoLoaiHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewBacDaoTaoLoaiHinhFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewBacDaoTaoLoaiHinhFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewBacDaoTaoLoaiHinhFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewBacDaoTaoLoaiHinhQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewBacDaoTaoLoaiHinhParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewBacDaoTaoLoaiHinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewBacDaoTaoLoaiHinhQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewBacDaoTaoLoaiHinhQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewBacDaoTaoLoaiHinhQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewBacDaoTaoLoaiHinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTienCoVanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTienCoVanFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTienCoVanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTienCoVanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTienCoVanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewChiTienCoVanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTienCoVanQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTienCoVanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTienCoVanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTienCoVanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietGiangDayFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietGiangDay"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietGiangDayFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietGiangDayFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietGiangDayFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietGiangDayFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietGiangDayQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewChiTietGiangDayParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietGiangDay"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietGiangDayParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDayParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietGiangDayQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietGiangDayQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietGiangDayQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietHocPhanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietHocPhanFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietHocPhanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietHocPhanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietHocPhanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewChiTietHocPhanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietHocPhanQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietHocPhanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietHocPhanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietKhoiLuongFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietKhoiLuongQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewChiTietKhoiLuongParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietKhoiLuongGiangDayFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongGiangDayFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongGiangDayFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongGiangDayFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietKhoiLuongGiangDayQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewChiTietKhoiLuongGiangDayParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongGiangDayQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongGiangDayQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongGiangDayQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietKhoiLuongThucDayFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongThucDayFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongThucDayFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongThucDayFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietKhoiLuongThucDayQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongThucDayQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongThucDayQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietKhoiLuongThucDayQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietKhoiLuongThucDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietQuyDoiFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietQuyDoiFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietQuyDoiFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietQuyDoiFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewChiTietQuyDoiQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewChiTietQuyDoiParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietQuyDoiQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewChiTietQuyDoiQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewChiTietQuyDoiQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewChiTietQuyDoiQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewCoSoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewCoSoFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewCoSoFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewCoSoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewCoSoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewCoSoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewCoSoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewCoSoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewCoSoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewCoSo"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewCoSoQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewCoSoQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewCoSoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewCoSoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewCoSoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewCoSoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewDanTocFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDanToc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewDanTocFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewDanTocFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewDanTocFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDanTocFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewDanTocFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDanTocFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewDanTocQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewDanTocParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDanToc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewDanTocQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewDanTocQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewDanTocQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDanTocQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewDanTocQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDanTocQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewDonViFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDonVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewDonViFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewDonViFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewDonViFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDonViFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewDonViFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDonViFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewDonViQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewDonViParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewDonVi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewDonViQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewDonViQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewDonViQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDonViQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewDonViQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewDonViQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewGiangVienFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewGiangVienQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewGiangVienParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewGiangVienDonGiaFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienDonGia"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienDonGiaFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienDonGiaFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienDonGiaFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewGiangVienDonGiaQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewGiangVienDonGiaParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienDonGia"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienDonGiaQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienDonGiaQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienDonGiaQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienDonGiaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewGiangVienKhoaFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienKhoaFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienKhoaFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienKhoaFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewGiangVienKhoaQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewGiangVienKhoaParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienKhoaQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienKhoaQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienKhoaQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienKhoaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewGiangVienLopHocPhanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienLopHocPhanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienLopHocPhanFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienLopHocPhanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienLopHocPhanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewGiangVienLopHocPhanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewGiangVienLopHocPhanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienLopHocPhanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienLopHocPhanQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewGiangVienLopHocPhanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewGiangVienLopHocPhanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewHocKyFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewHocKyFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewHocKyFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewHocKyFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewHocKyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewHocKyFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewHocKyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewHocKyQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewHocKyParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewHocKy"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewHocKyQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewHocKyQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewHocKyQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewHocKyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewHocKyQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewHocKyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKetQuaTinhFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKetQuaTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKetQuaTinhFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKetQuaTinhFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKetQuaTinhFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKetQuaTinhQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewKetQuaTinhParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKetQuaTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKetQuaTinhQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKetQuaTinhQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKetQuaTinhQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKetQuaTinhQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoaFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoa"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoaFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoaFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoaQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewKhoaParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoa"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoaQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoaQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoaBoMonFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaBoMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaBoMonFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaBoMonFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoaBoMonFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoaBoMonQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewKhoaBoMonParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaBoMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaBoMonQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaBoMonQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoaBoMonQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaBoMonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoaHocFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaHocFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaHocFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaHocFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaHocFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoaHocFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaHocFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoaHocQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewKhoaHocParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoaHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaHocQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaHocQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoaHocQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaHocQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoaHocQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoaHocQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoiLuongGiangDayFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongGiangDayFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongGiangDayFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongGiangDayFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongGiangDayFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoiLuongGiangDayQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewKhoiLuongGiangDayParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongGiangDayParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDayParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongGiangDayQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongGiangDayQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongGiangDayQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoiLuongThucDayFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongThucDayFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongThucDayFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongThucDayFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewKhoiLuongThucDayQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewKhoiLuongThucDayParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongThucDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongThucDayQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongThucDayQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewKhoiLuongThucDayQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewKhoiLuongThucDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewLopFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewLopFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewLopFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewLopQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewLopParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewLopQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewLopQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewLopDaiDienFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopDaiDien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopDaiDienFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewLopDaiDienFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopDaiDienFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopDaiDienFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewLopDaiDienFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopDaiDienFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewLopDaiDienQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewLopDaiDienParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopDaiDien"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopDaiDienQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewLopDaiDienQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopDaiDienQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopDaiDienQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewLopDaiDienQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopDaiDienQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewLopHocPhanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopHocPhanFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewLopHocPhanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopHocPhanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewLopHocPhanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewLopHocPhanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewLopHocPhanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopHocPhanQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewLopHocPhanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewLopHocPhanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewLopHocPhanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewLopHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewMonHocFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewMonHocFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewMonHocFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewMonHocFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewMonHocQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewMonHocParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewMonHocQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewMonHocQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewMonHocQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewMonHocKhoaFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHocKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewMonHocKhoaFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewMonHocKhoaFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewMonHocKhoaFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewMonHocKhoaQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewMonHocKhoaParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewMonHocKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewMonHocKhoaQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewMonHocKhoaQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewMonHocKhoaQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewMonHocKhoaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewNamHocFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewNamHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewNamHocFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewNamHocFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewNamHocFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewNamHocFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewNamHocFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewNamHocFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewNamHocQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewNamHocParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewNamHoc"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewNamHocQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewNamHocQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewNamHocQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewNamHocQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewNamHocQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewNamHocQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewPhanCongChuyenMonFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewPhanCongChuyenMonFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewPhanCongChuyenMonFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewPhanCongChuyenMonFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewPhanCongChuyenMonQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewPhanCongChuyenMonParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongChuyenMon"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewPhanCongChuyenMonQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewPhanCongChuyenMonQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewPhanCongChuyenMonQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongChuyenMonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewPhanCongCoVanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewPhanCongCoVanFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewPhanCongCoVanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewPhanCongCoVanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewPhanCongCoVanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewPhanCongCoVanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewPhanCongCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewPhanCongCoVanQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewPhanCongCoVanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewPhanCongCoVanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewPhanCongCoVanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewSinhVienHocPhanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienHocPhanFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienHocPhanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewSinhVienHocPhanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewSinhVienHocPhanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewSinhVienHocPhanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienHocPhanQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienHocPhanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewSinhVienHocPhanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewSinhVienLopFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewSinhVienLopQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewSinhVienLopParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLop"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewSinhVienLopHocPhanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopHocPhanFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopHocPhanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopHocPhanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewSinhVienLopHocPhanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewSinhVienLopHocPhanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewSinhVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopHocPhanQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopHocPhanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewSinhVienLopHocPhanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewSinhVienLopHocPhanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewThanhToanThuLaoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanThuLao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewThanhToanThuLaoFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewThanhToanThuLaoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewThanhToanThuLaoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewThanhToanThuLaoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewThanhToanThuLaoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanThuLao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewThanhToanThuLaoQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewThanhToanThuLaoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewThanhToanThuLaoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanThuLaoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewThanhToanTienGiangFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanTienGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewThanhToanTienGiangFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewThanhToanTienGiangFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewThanhToanTienGiangFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewThanhToanTienGiangQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewThanhToanTienGiangParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewThanhToanTienGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewThanhToanTienGiangQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewThanhToanTienGiangQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewThanhToanTienGiangQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewThanhToanTienGiangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTheoDoiGiangDayFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiGiangDayFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiGiangDayFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiGiangDayFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTheoDoiGiangDayQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewTheoDoiGiangDayParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiGiangDayQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiGiangDayQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiGiangDayQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiGiangDayQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTheoDoiLichGiangFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiLichGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiLichGiangFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiLichGiangFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiLichGiangFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTheoDoiLichGiangQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewTheoDoiLichGiangParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTheoDoiLichGiang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiLichGiangQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiLichGiangQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTheoDoiLichGiangQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTheoDoiLichGiangQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTinhKhoiLuongFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTinhKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTinhKhoiLuongFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTinhKhoiLuongFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTinhKhoiLuongFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTinhKhoiLuongQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewTinhKhoiLuongParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTinhKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTinhKhoiLuongQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTinhKhoiLuongQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTinhKhoiLuongQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTinhKhoiLuongQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTongHopChiTienCoVanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTongHopChiTienCoVanFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTongHopChiTienCoVanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTongHopChiTienCoVanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTongHopChiTienCoVanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewTongHopChiTienCoVanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopChiTienCoVan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTongHopChiTienCoVanQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTongHopChiTienCoVanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTongHopChiTienCoVanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopChiTienCoVanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTongHopQuyDoiFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTongHopQuyDoiFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTongHopQuyDoiFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTongHopQuyDoiFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTongHopQuyDoiQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewTongHopQuyDoiParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTongHopQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTongHopQuyDoiQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTongHopQuyDoiQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTongHopQuyDoiQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTongHopQuyDoiQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTonGiaoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTonGiao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTonGiaoFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewTonGiaoFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTonGiaoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTonGiaoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTonGiaoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTonGiaoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewTonGiaoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewTonGiaoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewTonGiao"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTonGiaoQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewTonGiaoQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewTonGiaoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTonGiaoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewTonGiaoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewTonGiaoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewXuLyQuyDoiFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewXuLyQuyDoi"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewXuLyQuyDoiFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewXuLyQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiFilterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewXuLyQuyDoiFilters.#ctor">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiFilters class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewXuLyQuyDoiFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewXuLyQuyDoiFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.ViewXuLyQuyDoiQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.Bases.ViewXuLyQuyDoiParameterBuilder"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewXuLyQuyDoi"/> object.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewXuLyQuyDoiParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewXuLyQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiParameterBuilder class.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:PMS.Data.ViewXuLyQuyDoiQuery.#ctor">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiQuery class.
            </summary>
        </member>
        <member name="M:PMS.Data.ViewXuLyQuyDoiQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:PMS.Data.ViewXuLyQuyDoiQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:PMS.Data.Bases.ChiTietKhoiLuongChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.ChiTietKhoiLuong</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.ChiTietKhoiLuongChildEntityTypes.KhoiLuongKhac">
            <summary>
             Composite Property for <c>KhoiLuongKhac</c> at MaKhoiLuongSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ChiTietKhoiLuongSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ChiTietKhoiLuong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ChiTietKhoiLuongSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ChiTietKhoiLuongSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongGiangDayChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.KhoiLuongGiangDay</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.KhoiLuongGiangDayChildEntityTypes.KetQuaTinh">
            <summary>
             Composite Property for <c>KetQuaTinh</c> at MaKetQuaSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongGiangDaySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongGiangDaySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongGiangDaySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.CauHinhProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.CauHinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeThongChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.HeThong</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.HeThongChildEntityTypes.TaiKhoan">
            <summary>
             Composite Property for <c>TaiKhoan</c> at UserIdSource
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeThongSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.HeThong"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.HeThongSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the HeThongSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewThanhToanThuLaoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewThanhToanThuLaoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaHocProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewKhoaHocProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoaSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoa"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoaSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoaSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienLopHocPhanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewGiangVienLopHocPhan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewGiangVienLopHocPhanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewGiangVienLopHocPhanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewGiangVienProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewGiangVienProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewDanTocProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewDanTocProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietGiangDaySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewChiTietGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewChiTietGiangDaySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewChiTietGiangDaySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.KhoiLuongKhacProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.Delete(PMS.Data.TransactionManager,PMS.Entities.KhoiLuongKhacKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_maKhoiLuong">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.Delete(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongKhac_GiangVien key.
            	FK_KhoiLuongKhac_GiangVien Description: 
            </summary>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongKhac objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongKhac_GiangVien key.
            	FK_KhoiLuongKhac_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongKhac objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongKhac_GiangVien key.
            	FK_KhoiLuongKhac_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongKhac objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongKhac_GiangVien key.
            	fkKhoiLuongKhacGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongKhac objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaGiangVien(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongKhac_GiangVien key.
            	fkKhoiLuongKhacGiangVien Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_maGiangVien"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongKhac objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaGiangVien(PMS.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_KhoiLuongKhac_GiangVien key.
            	FK_KhoiLuongKhac_GiangVien Description: 
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maGiangVien"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of PMS.Entities.KhoiLuongKhac objects.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.Get(PMS.Data.TransactionManager,PMS.Entities.KhoiLuongKhacKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:PMS.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaKhoiLuong(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_KhoiLuongKhac index.
            </summary>
            <param name="_maKhoiLuong"></param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongKhac"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaKhoiLuong(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongKhac index.
            </summary>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongKhac"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaKhoiLuong(PMS.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongKhac index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongKhac"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaKhoiLuong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongKhac index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongKhac"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaKhoiLuong(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongKhac index.
            </summary>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongKhac"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByMaKhoiLuong(PMS.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_KhoiLuongKhac index.
            </summary>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="_maKhoiLuong"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:PMS.Entities.KhoiLuongKhac"/> class.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByNamHocHocKyPhanLoai(System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongKhac_GetByNamHocHocKyPhanLoai' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="phanLoai"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByNamHocHocKyPhanLoai(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongKhac_GetByNamHocHocKyPhanLoai' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="phanLoai"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByNamHocHocKyPhanLoai(PMS.Data.TransactionManager,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongKhac_GetByNamHocHocKyPhanLoai' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="phanLoai"> A <c>System.Int32</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByNamHocHocKyPhanLoai(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongKhac_GetByNamHocHocKyPhanLoai' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="phanLoai"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByNamHocHocKyPhanLoaiMaGiangVien(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongKhac_GetByNamHocHocKyPhanLoaiMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="phanLoai"> A <c>System.Int32</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByNamHocHocKyPhanLoaiMaGiangVien(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongKhac_GetByNamHocHocKyPhanLoaiMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="phanLoai"> A <c>System.Int32</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByNamHocHocKyPhanLoaiMaGiangVien(PMS.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongKhac_GetByNamHocHocKyPhanLoaiMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="phanLoai"> A <c>System.Int32</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.GetByNamHocHocKyPhanLoaiMaGiangVien(PMS.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            This method wrap the 'cust_KhoiLuongKhac_GetByNamHocHocKyPhanLoaiMaGiangVien' stored procedure. 
            </summary>
            <param name="namHoc"> A <c>System.String</c> instance.</param>
            <param name="hocKy"> A <c>System.String</c> instance.</param>
            <param name="phanLoai"> A <c>System.Int32</c> instance.</param>
            <param name="maGiangVien"> A <c>System.Int32</c> instance.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <remark>This method is generate from a stored procedure.</remark>
            <returns>A <see cref="T:PMS.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.Fill(System.Data.IDataReader,PMS.Entities.TList{PMS.Entities.KhoiLuongKhac},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;KhoiLuongKhac&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:PMS.Entities.TList`1"/></returns>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.RefreshEntity(System.Data.IDataReader,PMS.Entities.KhoiLuongKhac)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.KhoiLuongKhac"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.KhoiLuongKhac"/> object to refresh.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.RefreshEntity(System.Data.DataSet,PMS.Entities.KhoiLuongKhac)">
            <summary>
            Refreshes the <see cref="T:PMS.Entities.KhoiLuongKhac"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:PMS.Entities.KhoiLuongKhac"/> object.</param>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.DeepLoad(PMS.Data.TransactionManager,PMS.Entities.KhoiLuongKhac,System.Boolean,PMS.Data.DeepLoadType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:PMS.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:PMS.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:PMS.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:PMS.Entities.KhoiLuongKhac"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">PMS.Entities.KhoiLuongKhac Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacProviderBaseCore.DeepSave(PMS.Data.TransactionManager,PMS.Entities.KhoiLuongKhac,PMS.Data.DeepSaveType,System.Type[],PMS.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the PMS.Entities.KhoiLuongKhac object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">PMS.Entities.KhoiLuongKhac instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">PMS.Entities.KhoiLuongKhac Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongKhacChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.KhoiLuongKhac</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.KhoiLuongKhacChildEntityTypes.GiangVien">
            <summary>
             Composite Property for <c>GiangVien</c> at MaGiangVienSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.KhoiLuongKhacChildEntityTypes.ChiTietKhoiLuongCollection">
            <summary>
             Collection of <c>KhoiLuongKhac</c> as OneToMany for ChiTietKhoiLuongCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongKhacSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KhoiLuongKhac"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KhoiLuongKhacSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the KhoiLuongKhacSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KhoiLuongKhacProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.KhoiLuongKhacProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.QuyDoiGioChuanChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.QuyDoiGioChuan</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.QuyDoiGioChuanChildEntityTypes.DonViTinh">
            <summary>
             Composite Property for <c>DonViTinh</c> at MaDonViSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.QuyDoiGioChuanChildEntityTypes.KhoanQuyDoiCollection">
            <summary>
             Collection of <c>QuyDoiGioChuan</c> as OneToMany for KhoanQuyDoiCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.QuyDoiGioChuanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.QuyDoiGioChuan"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.QuyDoiGioChuanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the QuyDoiGioChuanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.DonViTinhProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.DonViTinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.LoaiKhoiLuongProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.LoaiKhoiLuongProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.MonKhongTinhProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.MonKhongTinhProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.HeSoNgayProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.HeSoNgayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KetQuaTinhChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.KetQuaTinh</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.KetQuaTinhChildEntityTypes.GiangVien">
            <summary>
             Composite Property for <c>GiangVien</c> at MaGiangVienSource
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.KetQuaTinhChildEntityTypes.KhoiLuongGiangDayCollection">
            <summary>
             Collection of <c>KetQuaTinh</c> as OneToMany for KhoiLuongGiangDayCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.KetQuaTinhSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.KetQuaTinh"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.KetQuaTinhSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the KetQuaTinhSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.TinhTrangChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>PMS.Entities.TinhTrang</c>
            </summary>
        </member>
        <member name="F:PMS.Data.Bases.TinhTrangChildEntityTypes.GiangVienCollection">
            <summary>
             Collection of <c>TinhTrang</c> as OneToMany for GiangVienCollection
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.TinhTrangSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.TinhTrang"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.TinhTrangSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the TinhTrangSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewXuLyQuyDoiSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewXuLyQuyDoi"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewXuLyQuyDoiSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewXuLyQuyDoiSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewKhoiLuongGiangDaySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:PMS.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:PMS.Entities.ViewKhoiLuongGiangDay"/> object.
            </summary>
        </member>
        <member name="M:PMS.Data.Bases.ViewKhoiLuongGiangDaySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ViewKhoiLuongGiangDaySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBase">
            <summary>
             This class is the base class for any <see cref="T:PMS.Data.Bases.ViewChiTietKhoiLuongThucDayProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
    </members>
</doc>

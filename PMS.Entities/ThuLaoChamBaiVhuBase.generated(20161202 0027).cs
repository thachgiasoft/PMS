
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ThuLaoChamBaiVhu.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'ThuLaoChamBaiVhu' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class ThuLaoChamBaiVhuBase : EntityBase, IThuLaoChamBaiVhu, IEntityId<ThuLaoChamBaiVhuKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private ThuLaoChamBaiVhuEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private ThuLaoChamBaiVhuEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private ThuLaoChamBaiVhuEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<ThuLaoChamBaiVhu> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event ThuLaoChamBaiVhuEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event ThuLaoChamBaiVhuEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ThuLaoChamBaiVhuBase"/> instance.
		///</summary>
		public ThuLaoChamBaiVhuBase()
		{
			this.entityData = new ThuLaoChamBaiVhuEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="ThuLaoChamBaiVhuBase"/> instance.
		///</summary>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_kyThi"></param>
		///<param name="_lanThi"></param>
		///<param name="_maGiangVien"></param>
		///<param name="_khoaNganh"></param>
		///<param name="_nganh"></param>
		///<param name="_maHocPhan"></param>
		///<param name="_tenHocPhan"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_soTinChi"></param>
		///<param name="_bacDaoTao"></param>
		///<param name="_lopSinhVien"></param>
		///<param name="_siSo"></param>
		///<param name="_thoiGianThi"></param>
		///<param name="_dinhMucChamGiuaKy"></param>
		///<param name="_thuLaoChamGiuaKy"></param>
		///<param name="_dinhMucChamCuoiKy"></param>
		///<param name="_thuLaoChamCuoiKy"></param>
		///<param name="_thanhTienLan1"></param>
		///<param name="_thanhTienLan2"></param>
		///<param name="_tongCong"></param>
		///<param name="_hinhThucThi"></param>
		///<param name="_heSoQuyDoi"></param>
		///<param name="_soTietQuyDoi"></param>
		///<param name="_chot"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_soBaiLan2"></param>
		public ThuLaoChamBaiVhuBase(System.String _namHoc, System.String _hocKy, System.String _kyThi, 
			System.String _lanThi, System.Int32? _maGiangVien, System.String _khoaNganh, 
			System.String _nganh, System.String _maHocPhan, System.String _tenHocPhan, 
			System.String _maLopHocPhan, System.Int32? _soTinChi, System.String _bacDaoTao, 
			System.String _lopSinhVien, System.Int32? _siSo, System.String _thoiGianThi, 
			System.Decimal? _dinhMucChamGiuaKy, System.Decimal? _thuLaoChamGiuaKy, System.Decimal? _dinhMucChamCuoiKy, 
			System.Decimal? _thuLaoChamCuoiKy, System.Decimal? _thanhTienLan1, System.Decimal? _thanhTienLan2, 
			System.Decimal? _tongCong, System.String _hinhThucThi, System.Decimal? _heSoQuyDoi, 
			System.Decimal? _soTietQuyDoi, System.Boolean? _chot, System.String _ngayCapNhat, 
			System.String _nguoiCapNhat, System.Int32? _maHocHam, System.Int32? _maHocVi, 
			System.Int32? _maLoaiGiangVien, System.Int32? _soBaiLan2)
		{
			this.entityData = new ThuLaoChamBaiVhuEntityData();
			this.backupData = null;

			this.NamHoc = _namHoc;
			this.HocKy = _hocKy;
			this.KyThi = _kyThi;
			this.LanThi = _lanThi;
			this.MaGiangVien = _maGiangVien;
			this.KhoaNganh = _khoaNganh;
			this.Nganh = _nganh;
			this.MaHocPhan = _maHocPhan;
			this.TenHocPhan = _tenHocPhan;
			this.MaLopHocPhan = _maLopHocPhan;
			this.SoTinChi = _soTinChi;
			this.BacDaoTao = _bacDaoTao;
			this.LopSinhVien = _lopSinhVien;
			this.SiSo = _siSo;
			this.ThoiGianThi = _thoiGianThi;
			this.DinhMucChamGiuaKy = _dinhMucChamGiuaKy;
			this.ThuLaoChamGiuaKy = _thuLaoChamGiuaKy;
			this.DinhMucChamCuoiKy = _dinhMucChamCuoiKy;
			this.ThuLaoChamCuoiKy = _thuLaoChamCuoiKy;
			this.ThanhTienLan1 = _thanhTienLan1;
			this.ThanhTienLan2 = _thanhTienLan2;
			this.TongCong = _tongCong;
			this.HinhThucThi = _hinhThucThi;
			this.HeSoQuyDoi = _heSoQuyDoi;
			this.SoTietQuyDoi = _soTietQuyDoi;
			this.Chot = _chot;
			this.NgayCapNhat = _ngayCapNhat;
			this.NguoiCapNhat = _nguoiCapNhat;
			this.MaHocHam = _maHocHam;
			this.MaHocVi = _maHocVi;
			this.MaLoaiGiangVien = _maLoaiGiangVien;
			this.SoBaiLan2 = _soBaiLan2;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ThuLaoChamBaiVhu"/> instance.
		///</summary>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_kyThi"></param>
		///<param name="_lanThi"></param>
		///<param name="_maGiangVien"></param>
		///<param name="_khoaNganh"></param>
		///<param name="_nganh"></param>
		///<param name="_maHocPhan"></param>
		///<param name="_tenHocPhan"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_soTinChi"></param>
		///<param name="_bacDaoTao"></param>
		///<param name="_lopSinhVien"></param>
		///<param name="_siSo"></param>
		///<param name="_thoiGianThi"></param>
		///<param name="_dinhMucChamGiuaKy"></param>
		///<param name="_thuLaoChamGiuaKy"></param>
		///<param name="_dinhMucChamCuoiKy"></param>
		///<param name="_thuLaoChamCuoiKy"></param>
		///<param name="_thanhTienLan1"></param>
		///<param name="_thanhTienLan2"></param>
		///<param name="_tongCong"></param>
		///<param name="_hinhThucThi"></param>
		///<param name="_heSoQuyDoi"></param>
		///<param name="_soTietQuyDoi"></param>
		///<param name="_chot"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_soBaiLan2"></param>
		public static ThuLaoChamBaiVhu CreateThuLaoChamBaiVhu(System.String _namHoc, System.String _hocKy, System.String _kyThi, 
			System.String _lanThi, System.Int32? _maGiangVien, System.String _khoaNganh, 
			System.String _nganh, System.String _maHocPhan, System.String _tenHocPhan, 
			System.String _maLopHocPhan, System.Int32? _soTinChi, System.String _bacDaoTao, 
			System.String _lopSinhVien, System.Int32? _siSo, System.String _thoiGianThi, 
			System.Decimal? _dinhMucChamGiuaKy, System.Decimal? _thuLaoChamGiuaKy, System.Decimal? _dinhMucChamCuoiKy, 
			System.Decimal? _thuLaoChamCuoiKy, System.Decimal? _thanhTienLan1, System.Decimal? _thanhTienLan2, 
			System.Decimal? _tongCong, System.String _hinhThucThi, System.Decimal? _heSoQuyDoi, 
			System.Decimal? _soTietQuyDoi, System.Boolean? _chot, System.String _ngayCapNhat, 
			System.String _nguoiCapNhat, System.Int32? _maHocHam, System.Int32? _maHocVi, 
			System.Int32? _maLoaiGiangVien, System.Int32? _soBaiLan2)
		{
			ThuLaoChamBaiVhu newThuLaoChamBaiVhu = new ThuLaoChamBaiVhu();
			newThuLaoChamBaiVhu.NamHoc = _namHoc;
			newThuLaoChamBaiVhu.HocKy = _hocKy;
			newThuLaoChamBaiVhu.KyThi = _kyThi;
			newThuLaoChamBaiVhu.LanThi = _lanThi;
			newThuLaoChamBaiVhu.MaGiangVien = _maGiangVien;
			newThuLaoChamBaiVhu.KhoaNganh = _khoaNganh;
			newThuLaoChamBaiVhu.Nganh = _nganh;
			newThuLaoChamBaiVhu.MaHocPhan = _maHocPhan;
			newThuLaoChamBaiVhu.TenHocPhan = _tenHocPhan;
			newThuLaoChamBaiVhu.MaLopHocPhan = _maLopHocPhan;
			newThuLaoChamBaiVhu.SoTinChi = _soTinChi;
			newThuLaoChamBaiVhu.BacDaoTao = _bacDaoTao;
			newThuLaoChamBaiVhu.LopSinhVien = _lopSinhVien;
			newThuLaoChamBaiVhu.SiSo = _siSo;
			newThuLaoChamBaiVhu.ThoiGianThi = _thoiGianThi;
			newThuLaoChamBaiVhu.DinhMucChamGiuaKy = _dinhMucChamGiuaKy;
			newThuLaoChamBaiVhu.ThuLaoChamGiuaKy = _thuLaoChamGiuaKy;
			newThuLaoChamBaiVhu.DinhMucChamCuoiKy = _dinhMucChamCuoiKy;
			newThuLaoChamBaiVhu.ThuLaoChamCuoiKy = _thuLaoChamCuoiKy;
			newThuLaoChamBaiVhu.ThanhTienLan1 = _thanhTienLan1;
			newThuLaoChamBaiVhu.ThanhTienLan2 = _thanhTienLan2;
			newThuLaoChamBaiVhu.TongCong = _tongCong;
			newThuLaoChamBaiVhu.HinhThucThi = _hinhThucThi;
			newThuLaoChamBaiVhu.HeSoQuyDoi = _heSoQuyDoi;
			newThuLaoChamBaiVhu.SoTietQuyDoi = _soTietQuyDoi;
			newThuLaoChamBaiVhu.Chot = _chot;
			newThuLaoChamBaiVhu.NgayCapNhat = _ngayCapNhat;
			newThuLaoChamBaiVhu.NguoiCapNhat = _nguoiCapNhat;
			newThuLaoChamBaiVhu.MaHocHam = _maHocHam;
			newThuLaoChamBaiVhu.MaHocVi = _maHocVi;
			newThuLaoChamBaiVhu.MaLoaiGiangVien = _maLoaiGiangVien;
			newThuLaoChamBaiVhu.SoBaiLan2 = _soBaiLan2;
			return newThuLaoChamBaiVhu;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
				
                OnPropertyChanging("Id");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NamHoc
		{
			get
			{
				return this.entityData.NamHoc; 
			}
			
			set
			{
				if (this.entityData.NamHoc == value)
					return;
				
                OnPropertyChanging("NamHoc");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.NamHoc, this.entityData.NamHoc);
				this.entityData.NamHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.NamHoc, this.entityData.NamHoc);
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String HocKy
		{
			get
			{
				return this.entityData.HocKy; 
			}
			
			set
			{
				if (this.entityData.HocKy == value)
					return;
				
                OnPropertyChanging("HocKy");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.HocKy, this.entityData.HocKy);
				this.entityData.HocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.HocKy, this.entityData.HocKy);
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the KyThi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String KyThi
		{
			get
			{
				return this.entityData.KyThi; 
			}
			
			set
			{
				if (this.entityData.KyThi == value)
					return;
				
                OnPropertyChanging("KyThi");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.KyThi, this.entityData.KyThi);
				this.entityData.KyThi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.KyThi, this.entityData.KyThi);
				OnPropertyChanged("KyThi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LanThi property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String LanThi
		{
			get
			{
				return this.entityData.LanThi; 
			}
			
			set
			{
				if (this.entityData.LanThi == value)
					return;
				
                OnPropertyChanging("LanThi");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.LanThi, this.entityData.LanThi);
				this.entityData.LanThi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.LanThi, this.entityData.LanThi);
				OnPropertyChanged("LanThi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaGiangVien
		{
			get
			{
				return this.entityData.MaGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaGiangVien == value)
					return;
				
                OnPropertyChanging("MaGiangVien");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.MaGiangVien, this.entityData.MaGiangVien);
				this.entityData.MaGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.MaGiangVien, this.entityData.MaGiangVien);
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the KhoaNganh property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String KhoaNganh
		{
			get
			{
				return this.entityData.KhoaNganh; 
			}
			
			set
			{
				if (this.entityData.KhoaNganh == value)
					return;
				
                OnPropertyChanging("KhoaNganh");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.KhoaNganh, this.entityData.KhoaNganh);
				this.entityData.KhoaNganh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.KhoaNganh, this.entityData.KhoaNganh);
				OnPropertyChanged("KhoaNganh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Nganh property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String Nganh
		{
			get
			{
				return this.entityData.Nganh; 
			}
			
			set
			{
				if (this.entityData.Nganh == value)
					return;
				
                OnPropertyChanging("Nganh");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.Nganh, this.entityData.Nganh);
				this.entityData.Nganh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.Nganh, this.entityData.Nganh);
				OnPropertyChanged("Nganh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaHocPhan
		{
			get
			{
				return this.entityData.MaHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaHocPhan == value)
					return;
				
                OnPropertyChanging("MaHocPhan");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.MaHocPhan, this.entityData.MaHocPhan);
				this.entityData.MaHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.MaHocPhan, this.entityData.MaHocPhan);
				OnPropertyChanged("MaHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String TenHocPhan
		{
			get
			{
				return this.entityData.TenHocPhan; 
			}
			
			set
			{
				if (this.entityData.TenHocPhan == value)
					return;
				
                OnPropertyChanging("TenHocPhan");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.TenHocPhan, this.entityData.TenHocPhan);
				this.entityData.TenHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.TenHocPhan, this.entityData.TenHocPhan);
				OnPropertyChanged("TenHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this.entityData.MaLopHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaLopHocPhan == value)
					return;
				
                OnPropertyChanging("MaLopHocPhan");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				this.entityData.MaLopHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTinChi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoTinChi
		{
			get
			{
				return this.entityData.SoTinChi; 
			}
			
			set
			{
				if (this.entityData.SoTinChi == value)
					return;
				
                OnPropertyChanging("SoTinChi");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.SoTinChi, this.entityData.SoTinChi);
				this.entityData.SoTinChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.SoTinChi, this.entityData.SoTinChi);
				OnPropertyChanged("SoTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String BacDaoTao
		{
			get
			{
				return this.entityData.BacDaoTao; 
			}
			
			set
			{
				if (this.entityData.BacDaoTao == value)
					return;
				
                OnPropertyChanging("BacDaoTao");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.BacDaoTao, this.entityData.BacDaoTao);
				this.entityData.BacDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.BacDaoTao, this.entityData.BacDaoTao);
				OnPropertyChanged("BacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LopSinhVien property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String LopSinhVien
		{
			get
			{
				return this.entityData.LopSinhVien; 
			}
			
			set
			{
				if (this.entityData.LopSinhVien == value)
					return;
				
                OnPropertyChanging("LopSinhVien");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.LopSinhVien, this.entityData.LopSinhVien);
				this.entityData.LopSinhVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.LopSinhVien, this.entityData.LopSinhVien);
				OnPropertyChanged("LopSinhVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SiSo property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SiSo
		{
			get
			{
				return this.entityData.SiSo; 
			}
			
			set
			{
				if (this.entityData.SiSo == value)
					return;
				
                OnPropertyChanging("SiSo");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.SiSo, this.entityData.SiSo);
				this.entityData.SiSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.SiSo, this.entityData.SiSo);
				OnPropertyChanged("SiSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThoiGianThi property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String ThoiGianThi
		{
			get
			{
				return this.entityData.ThoiGianThi; 
			}
			
			set
			{
				if (this.entityData.ThoiGianThi == value)
					return;
				
                OnPropertyChanging("ThoiGianThi");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.ThoiGianThi, this.entityData.ThoiGianThi);
				this.entityData.ThoiGianThi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.ThoiGianThi, this.entityData.ThoiGianThi);
				OnPropertyChanged("ThoiGianThi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DinhMucChamGiuaKy property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DinhMucChamGiuaKy
		{
			get
			{
				return this.entityData.DinhMucChamGiuaKy; 
			}
			
			set
			{
				if (this.entityData.DinhMucChamGiuaKy == value)
					return;
				
                OnPropertyChanging("DinhMucChamGiuaKy");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.DinhMucChamGiuaKy, this.entityData.DinhMucChamGiuaKy);
				this.entityData.DinhMucChamGiuaKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.DinhMucChamGiuaKy, this.entityData.DinhMucChamGiuaKy);
				OnPropertyChanged("DinhMucChamGiuaKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThuLaoChamGiuaKy property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThuLaoChamGiuaKy
		{
			get
			{
				return this.entityData.ThuLaoChamGiuaKy; 
			}
			
			set
			{
				if (this.entityData.ThuLaoChamGiuaKy == value)
					return;
				
                OnPropertyChanging("ThuLaoChamGiuaKy");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.ThuLaoChamGiuaKy, this.entityData.ThuLaoChamGiuaKy);
				this.entityData.ThuLaoChamGiuaKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.ThuLaoChamGiuaKy, this.entityData.ThuLaoChamGiuaKy);
				OnPropertyChanged("ThuLaoChamGiuaKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DinhMucChamCuoiKy property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DinhMucChamCuoiKy
		{
			get
			{
				return this.entityData.DinhMucChamCuoiKy; 
			}
			
			set
			{
				if (this.entityData.DinhMucChamCuoiKy == value)
					return;
				
                OnPropertyChanging("DinhMucChamCuoiKy");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.DinhMucChamCuoiKy, this.entityData.DinhMucChamCuoiKy);
				this.entityData.DinhMucChamCuoiKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.DinhMucChamCuoiKy, this.entityData.DinhMucChamCuoiKy);
				OnPropertyChanged("DinhMucChamCuoiKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThuLaoChamCuoiKy property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThuLaoChamCuoiKy
		{
			get
			{
				return this.entityData.ThuLaoChamCuoiKy; 
			}
			
			set
			{
				if (this.entityData.ThuLaoChamCuoiKy == value)
					return;
				
                OnPropertyChanging("ThuLaoChamCuoiKy");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.ThuLaoChamCuoiKy, this.entityData.ThuLaoChamCuoiKy);
				this.entityData.ThuLaoChamCuoiKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.ThuLaoChamCuoiKy, this.entityData.ThuLaoChamCuoiKy);
				OnPropertyChanged("ThuLaoChamCuoiKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThanhTienLan1 property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThanhTienLan1
		{
			get
			{
				return this.entityData.ThanhTienLan1; 
			}
			
			set
			{
				if (this.entityData.ThanhTienLan1 == value)
					return;
				
                OnPropertyChanging("ThanhTienLan1");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.ThanhTienLan1, this.entityData.ThanhTienLan1);
				this.entityData.ThanhTienLan1 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.ThanhTienLan1, this.entityData.ThanhTienLan1);
				OnPropertyChanged("ThanhTienLan1");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThanhTienLan2 property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThanhTienLan2
		{
			get
			{
				return this.entityData.ThanhTienLan2; 
			}
			
			set
			{
				if (this.entityData.ThanhTienLan2 == value)
					return;
				
                OnPropertyChanging("ThanhTienLan2");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.ThanhTienLan2, this.entityData.ThanhTienLan2);
				this.entityData.ThanhTienLan2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.ThanhTienLan2, this.entityData.ThanhTienLan2);
				OnPropertyChanged("ThanhTienLan2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TongCong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TongCong
		{
			get
			{
				return this.entityData.TongCong; 
			}
			
			set
			{
				if (this.entityData.TongCong == value)
					return;
				
                OnPropertyChanging("TongCong");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.TongCong, this.entityData.TongCong);
				this.entityData.TongCong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.TongCong, this.entityData.TongCong);
				OnPropertyChanged("TongCong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HinhThucThi property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String HinhThucThi
		{
			get
			{
				return this.entityData.HinhThucThi; 
			}
			
			set
			{
				if (this.entityData.HinhThucThi == value)
					return;
				
                OnPropertyChanging("HinhThucThi");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.HinhThucThi, this.entityData.HinhThucThi);
				this.entityData.HinhThucThi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.HinhThucThi, this.entityData.HinhThucThi);
				OnPropertyChanged("HinhThucThi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoQuyDoi
		{
			get
			{
				return this.entityData.HeSoQuyDoi; 
			}
			
			set
			{
				if (this.entityData.HeSoQuyDoi == value)
					return;
				
                OnPropertyChanging("HeSoQuyDoi");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.HeSoQuyDoi, this.entityData.HeSoQuyDoi);
				this.entityData.HeSoQuyDoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.HeSoQuyDoi, this.entityData.HeSoQuyDoi);
				OnPropertyChanged("HeSoQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTietQuyDoi
		{
			get
			{
				return this.entityData.SoTietQuyDoi; 
			}
			
			set
			{
				if (this.entityData.SoTietQuyDoi == value)
					return;
				
                OnPropertyChanging("SoTietQuyDoi");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.SoTietQuyDoi, this.entityData.SoTietQuyDoi);
				this.entityData.SoTietQuyDoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.SoTietQuyDoi, this.entityData.SoTietQuyDoi);
				OnPropertyChanged("SoTietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Chot property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? Chot
		{
			get
			{
				return this.entityData.Chot; 
			}
			
			set
			{
				if (this.entityData.Chot == value)
					return;
				
                OnPropertyChanging("Chot");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.Chot, this.entityData.Chot);
				this.entityData.Chot = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.Chot, this.entityData.Chot);
				OnPropertyChanged("Chot");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String NgayCapNhat
		{
			get
			{
				return this.entityData.NgayCapNhat; 
			}
			
			set
			{
				if (this.entityData.NgayCapNhat == value)
					return;
				
                OnPropertyChanging("NgayCapNhat");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				this.entityData.NgayCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NguoiCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String NguoiCapNhat
		{
			get
			{
				return this.entityData.NguoiCapNhat; 
			}
			
			set
			{
				if (this.entityData.NguoiCapNhat == value)
					return;
				
                OnPropertyChanging("NguoiCapNhat");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				this.entityData.NguoiCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				OnPropertyChanged("NguoiCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocHam property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocHam
		{
			get
			{
				return this.entityData.MaHocHam; 
			}
			
			set
			{
				if (this.entityData.MaHocHam == value)
					return;
				
                OnPropertyChanging("MaHocHam");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.MaHocHam, this.entityData.MaHocHam);
				this.entityData.MaHocHam = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.MaHocHam, this.entityData.MaHocHam);
				OnPropertyChanged("MaHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocVi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocVi
		{
			get
			{
				return this.entityData.MaHocVi; 
			}
			
			set
			{
				if (this.entityData.MaHocVi == value)
					return;
				
                OnPropertyChanging("MaHocVi");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.MaHocVi, this.entityData.MaHocVi);
				this.entityData.MaHocVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.MaHocVi, this.entityData.MaHocVi);
				OnPropertyChanged("MaHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this.entityData.MaLoaiGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaLoaiGiangVien == value)
					return;
				
                OnPropertyChanging("MaLoaiGiangVien");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				this.entityData.MaLoaiGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoBaiLan2 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoBaiLan2
		{
			get
			{
				return this.entityData.SoBaiLan2; 
			}
			
			set
			{
				if (this.entityData.SoBaiLan2 == value)
					return;
				
                OnPropertyChanging("SoBaiLan2");                    
				OnColumnChanging(ThuLaoChamBaiVhuColumn.SoBaiLan2, this.entityData.SoBaiLan2);
				this.entityData.SoBaiLan2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoChamBaiVhuColumn.SoBaiLan2, this.entityData.SoBaiLan2);
				OnPropertyChanged("SoBaiLan2");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NamHoc", "Nam Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HocKy", "Hoc Ky", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("KyThi", "Ky Thi", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LanThi", "Lan Thi", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("KhoaNganh", "Khoa Nganh", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Nganh", "Nganh", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaHocPhan", "Ma Hoc Phan", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenHocPhan", "Ten Hoc Phan", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLopHocPhan", "Ma Lop Hoc Phan", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("BacDaoTao", "Bac Dao Tao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LopSinhVien", "Lop Sinh Vien", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ThoiGianThi", "Thoi Gian Thi", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HinhThucThi", "Hinh Thuc Thi", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayCapNhat", "Ngay Cap Nhat", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NguoiCapNhat", "Nguoi Cap Nhat", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ThuLaoChamBaiVhu"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Id", "NamHoc", "HocKy", "KyThi", "LanThi", "MaGiangVien", "KhoaNganh", "Nganh", "MaHocPhan", "TenHocPhan", "MaLopHocPhan", "SoTinChi", "BacDaoTao", "LopSinhVien", "SiSo", "ThoiGianThi", "DinhMucChamGiuaKy", "ThuLaoChamGiuaKy", "DinhMucChamCuoiKy", "ThuLaoChamCuoiKy", "ThanhTienLan1", "ThanhTienLan2", "TongCong", "HinhThucThi", "HeSoQuyDoi", "SoTietQuyDoi", "Chot", "NgayCapNhat", "NguoiCapNhat", "MaHocHam", "MaHocVi", "MaLoaiGiangVien", "SoBaiLan2"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as ThuLaoChamBaiVhuEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (ThuLaoChamBaiVhu) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<ThuLaoChamBaiVhu>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as ThuLaoChamBaiVhu);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ThuLaoChamBaiVhu Entity 
		///</summary>
		protected virtual ThuLaoChamBaiVhu Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			ThuLaoChamBaiVhu copy = new ThuLaoChamBaiVhu();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.Id = this.Id;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.KyThi = this.KyThi;
				copy.LanThi = this.LanThi;
				copy.MaGiangVien = this.MaGiangVien;
				copy.KhoaNganh = this.KhoaNganh;
				copy.Nganh = this.Nganh;
				copy.MaHocPhan = this.MaHocPhan;
				copy.TenHocPhan = this.TenHocPhan;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.SoTinChi = this.SoTinChi;
				copy.BacDaoTao = this.BacDaoTao;
				copy.LopSinhVien = this.LopSinhVien;
				copy.SiSo = this.SiSo;
				copy.ThoiGianThi = this.ThoiGianThi;
				copy.DinhMucChamGiuaKy = this.DinhMucChamGiuaKy;
				copy.ThuLaoChamGiuaKy = this.ThuLaoChamGiuaKy;
				copy.DinhMucChamCuoiKy = this.DinhMucChamCuoiKy;
				copy.ThuLaoChamCuoiKy = this.ThuLaoChamCuoiKy;
				copy.ThanhTienLan1 = this.ThanhTienLan1;
				copy.ThanhTienLan2 = this.ThanhTienLan2;
				copy.TongCong = this.TongCong;
				copy.HinhThucThi = this.HinhThucThi;
				copy.HeSoQuyDoi = this.HeSoQuyDoi;
				copy.SoTietQuyDoi = this.SoTietQuyDoi;
				copy.Chot = this.Chot;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.NguoiCapNhat = this.NguoiCapNhat;
				copy.MaHocHam = this.MaHocHam;
				copy.MaHocVi = this.MaHocVi;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.SoBaiLan2 = this.SoBaiLan2;
			
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed ThuLaoChamBaiVhu Entity 
		///</summary>
		public virtual ThuLaoChamBaiVhu Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed ThuLaoChamBaiVhu Entity which is a deep copy of the current entity.
		///</summary>
		public virtual ThuLaoChamBaiVhu DeepCopy()
		{
			return EntityHelper.Clone<ThuLaoChamBaiVhu>(this as ThuLaoChamBaiVhu);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as ThuLaoChamBaiVhuEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new ThuLaoChamBaiVhuEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as ThuLaoChamBaiVhuEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(ThuLaoChamBaiVhuColumn column)
		{
			switch(column)
			{
					case ThuLaoChamBaiVhuColumn.Id:
					return entityData.Id != _originalData.Id;
					case ThuLaoChamBaiVhuColumn.NamHoc:
					return entityData.NamHoc != _originalData.NamHoc;
					case ThuLaoChamBaiVhuColumn.HocKy:
					return entityData.HocKy != _originalData.HocKy;
					case ThuLaoChamBaiVhuColumn.KyThi:
					return entityData.KyThi != _originalData.KyThi;
					case ThuLaoChamBaiVhuColumn.LanThi:
					return entityData.LanThi != _originalData.LanThi;
					case ThuLaoChamBaiVhuColumn.MaGiangVien:
					return entityData.MaGiangVien != _originalData.MaGiangVien;
					case ThuLaoChamBaiVhuColumn.KhoaNganh:
					return entityData.KhoaNganh != _originalData.KhoaNganh;
					case ThuLaoChamBaiVhuColumn.Nganh:
					return entityData.Nganh != _originalData.Nganh;
					case ThuLaoChamBaiVhuColumn.MaHocPhan:
					return entityData.MaHocPhan != _originalData.MaHocPhan;
					case ThuLaoChamBaiVhuColumn.TenHocPhan:
					return entityData.TenHocPhan != _originalData.TenHocPhan;
					case ThuLaoChamBaiVhuColumn.MaLopHocPhan:
					return entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
					case ThuLaoChamBaiVhuColumn.SoTinChi:
					return entityData.SoTinChi != _originalData.SoTinChi;
					case ThuLaoChamBaiVhuColumn.BacDaoTao:
					return entityData.BacDaoTao != _originalData.BacDaoTao;
					case ThuLaoChamBaiVhuColumn.LopSinhVien:
					return entityData.LopSinhVien != _originalData.LopSinhVien;
					case ThuLaoChamBaiVhuColumn.SiSo:
					return entityData.SiSo != _originalData.SiSo;
					case ThuLaoChamBaiVhuColumn.ThoiGianThi:
					return entityData.ThoiGianThi != _originalData.ThoiGianThi;
					case ThuLaoChamBaiVhuColumn.DinhMucChamGiuaKy:
					return entityData.DinhMucChamGiuaKy != _originalData.DinhMucChamGiuaKy;
					case ThuLaoChamBaiVhuColumn.ThuLaoChamGiuaKy:
					return entityData.ThuLaoChamGiuaKy != _originalData.ThuLaoChamGiuaKy;
					case ThuLaoChamBaiVhuColumn.DinhMucChamCuoiKy:
					return entityData.DinhMucChamCuoiKy != _originalData.DinhMucChamCuoiKy;
					case ThuLaoChamBaiVhuColumn.ThuLaoChamCuoiKy:
					return entityData.ThuLaoChamCuoiKy != _originalData.ThuLaoChamCuoiKy;
					case ThuLaoChamBaiVhuColumn.ThanhTienLan1:
					return entityData.ThanhTienLan1 != _originalData.ThanhTienLan1;
					case ThuLaoChamBaiVhuColumn.ThanhTienLan2:
					return entityData.ThanhTienLan2 != _originalData.ThanhTienLan2;
					case ThuLaoChamBaiVhuColumn.TongCong:
					return entityData.TongCong != _originalData.TongCong;
					case ThuLaoChamBaiVhuColumn.HinhThucThi:
					return entityData.HinhThucThi != _originalData.HinhThucThi;
					case ThuLaoChamBaiVhuColumn.HeSoQuyDoi:
					return entityData.HeSoQuyDoi != _originalData.HeSoQuyDoi;
					case ThuLaoChamBaiVhuColumn.SoTietQuyDoi:
					return entityData.SoTietQuyDoi != _originalData.SoTietQuyDoi;
					case ThuLaoChamBaiVhuColumn.Chot:
					return entityData.Chot != _originalData.Chot;
					case ThuLaoChamBaiVhuColumn.NgayCapNhat:
					return entityData.NgayCapNhat != _originalData.NgayCapNhat;
					case ThuLaoChamBaiVhuColumn.NguoiCapNhat:
					return entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
					case ThuLaoChamBaiVhuColumn.MaHocHam:
					return entityData.MaHocHam != _originalData.MaHocHam;
					case ThuLaoChamBaiVhuColumn.MaHocVi:
					return entityData.MaHocVi != _originalData.MaHocVi;
					case ThuLaoChamBaiVhuColumn.MaLoaiGiangVien:
					return entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
					case ThuLaoChamBaiVhuColumn.SoBaiLan2:
					return entityData.SoBaiLan2 != _originalData.SoBaiLan2;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< ThuLaoChamBaiVhuColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.NamHoc != _originalData.NamHoc;
			result = result || entityData.HocKy != _originalData.HocKy;
			result = result || entityData.KyThi != _originalData.KyThi;
			result = result || entityData.LanThi != _originalData.LanThi;
			result = result || entityData.MaGiangVien != _originalData.MaGiangVien;
			result = result || entityData.KhoaNganh != _originalData.KhoaNganh;
			result = result || entityData.Nganh != _originalData.Nganh;
			result = result || entityData.MaHocPhan != _originalData.MaHocPhan;
			result = result || entityData.TenHocPhan != _originalData.TenHocPhan;
			result = result || entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
			result = result || entityData.SoTinChi != _originalData.SoTinChi;
			result = result || entityData.BacDaoTao != _originalData.BacDaoTao;
			result = result || entityData.LopSinhVien != _originalData.LopSinhVien;
			result = result || entityData.SiSo != _originalData.SiSo;
			result = result || entityData.ThoiGianThi != _originalData.ThoiGianThi;
			result = result || entityData.DinhMucChamGiuaKy != _originalData.DinhMucChamGiuaKy;
			result = result || entityData.ThuLaoChamGiuaKy != _originalData.ThuLaoChamGiuaKy;
			result = result || entityData.DinhMucChamCuoiKy != _originalData.DinhMucChamCuoiKy;
			result = result || entityData.ThuLaoChamCuoiKy != _originalData.ThuLaoChamCuoiKy;
			result = result || entityData.ThanhTienLan1 != _originalData.ThanhTienLan1;
			result = result || entityData.ThanhTienLan2 != _originalData.ThanhTienLan2;
			result = result || entityData.TongCong != _originalData.TongCong;
			result = result || entityData.HinhThucThi != _originalData.HinhThucThi;
			result = result || entityData.HeSoQuyDoi != _originalData.HeSoQuyDoi;
			result = result || entityData.SoTietQuyDoi != _originalData.SoTietQuyDoi;
			result = result || entityData.Chot != _originalData.Chot;
			result = result || entityData.NgayCapNhat != _originalData.NgayCapNhat;
			result = result || entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
			result = result || entityData.MaHocHam != _originalData.MaHocHam;
			result = result || entityData.MaHocVi != _originalData.MaHocVi;
			result = result || entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
			result = result || entityData.SoBaiLan2 != _originalData.SoBaiLan2;
			return result;
		}	
		
		///<summary>
		///  Returns a ThuLaoChamBaiVhu Entity with the original data.
		///</summary>
		public ThuLaoChamBaiVhu GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateThuLaoChamBaiVhu(
				_originalData.NamHoc,
				_originalData.HocKy,
				_originalData.KyThi,
				_originalData.LanThi,
				_originalData.MaGiangVien,
				_originalData.KhoaNganh,
				_originalData.Nganh,
				_originalData.MaHocPhan,
				_originalData.TenHocPhan,
				_originalData.MaLopHocPhan,
				_originalData.SoTinChi,
				_originalData.BacDaoTao,
				_originalData.LopSinhVien,
				_originalData.SiSo,
				_originalData.ThoiGianThi,
				_originalData.DinhMucChamGiuaKy,
				_originalData.ThuLaoChamGiuaKy,
				_originalData.DinhMucChamCuoiKy,
				_originalData.ThuLaoChamCuoiKy,
				_originalData.ThanhTienLan1,
				_originalData.ThanhTienLan2,
				_originalData.TongCong,
				_originalData.HinhThucThi,
				_originalData.HeSoQuyDoi,
				_originalData.SoTietQuyDoi,
				_originalData.Chot,
				_originalData.NgayCapNhat,
				_originalData.NguoiCapNhat,
				_originalData.MaHocHam,
				_originalData.MaHocVi,
				_originalData.MaLoaiGiangVien,
				_originalData.SoBaiLan2
				);
				
			return (ThuLaoChamBaiVhu)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="ThuLaoChamBaiVhuBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is ThuLaoChamBaiVhuBase)
				return ValueEquals(this, (ThuLaoChamBaiVhuBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="ThuLaoChamBaiVhuBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.NamHoc == null) ? string.Empty : this.NamHoc.ToString()).GetHashCode() ^ 
					((this.HocKy == null) ? string.Empty : this.HocKy.ToString()).GetHashCode() ^ 
					((this.KyThi == null) ? string.Empty : this.KyThi.ToString()).GetHashCode() ^ 
					((this.LanThi == null) ? string.Empty : this.LanThi.ToString()).GetHashCode() ^ 
					((this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString()).GetHashCode() ^ 
					((this.KhoaNganh == null) ? string.Empty : this.KhoaNganh.ToString()).GetHashCode() ^ 
					((this.Nganh == null) ? string.Empty : this.Nganh.ToString()).GetHashCode() ^ 
					((this.MaHocPhan == null) ? string.Empty : this.MaHocPhan.ToString()).GetHashCode() ^ 
					((this.TenHocPhan == null) ? string.Empty : this.TenHocPhan.ToString()).GetHashCode() ^ 
					((this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString()).GetHashCode() ^ 
					((this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString()).GetHashCode() ^ 
					((this.BacDaoTao == null) ? string.Empty : this.BacDaoTao.ToString()).GetHashCode() ^ 
					((this.LopSinhVien == null) ? string.Empty : this.LopSinhVien.ToString()).GetHashCode() ^ 
					((this.SiSo == null) ? string.Empty : this.SiSo.ToString()).GetHashCode() ^ 
					((this.ThoiGianThi == null) ? string.Empty : this.ThoiGianThi.ToString()).GetHashCode() ^ 
					((this.DinhMucChamGiuaKy == null) ? string.Empty : this.DinhMucChamGiuaKy.ToString()).GetHashCode() ^ 
					((this.ThuLaoChamGiuaKy == null) ? string.Empty : this.ThuLaoChamGiuaKy.ToString()).GetHashCode() ^ 
					((this.DinhMucChamCuoiKy == null) ? string.Empty : this.DinhMucChamCuoiKy.ToString()).GetHashCode() ^ 
					((this.ThuLaoChamCuoiKy == null) ? string.Empty : this.ThuLaoChamCuoiKy.ToString()).GetHashCode() ^ 
					((this.ThanhTienLan1 == null) ? string.Empty : this.ThanhTienLan1.ToString()).GetHashCode() ^ 
					((this.ThanhTienLan2 == null) ? string.Empty : this.ThanhTienLan2.ToString()).GetHashCode() ^ 
					((this.TongCong == null) ? string.Empty : this.TongCong.ToString()).GetHashCode() ^ 
					((this.HinhThucThi == null) ? string.Empty : this.HinhThucThi.ToString()).GetHashCode() ^ 
					((this.HeSoQuyDoi == null) ? string.Empty : this.HeSoQuyDoi.ToString()).GetHashCode() ^ 
					((this.SoTietQuyDoi == null) ? string.Empty : this.SoTietQuyDoi.ToString()).GetHashCode() ^ 
					((this.Chot == null) ? string.Empty : this.Chot.ToString()).GetHashCode() ^ 
					((this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString()).GetHashCode() ^ 
					((this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString()).GetHashCode() ^ 
					((this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString()).GetHashCode() ^ 
					((this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString()).GetHashCode() ^ 
					((this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString()).GetHashCode() ^ 
					((this.SoBaiLan2 == null) ? string.Empty : this.SoBaiLan2.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ThuLaoChamBaiVhuBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ThuLaoChamBaiVhuBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="ThuLaoChamBaiVhuBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="ThuLaoChamBaiVhuBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ThuLaoChamBaiVhuBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(ThuLaoChamBaiVhuBase Object1, ThuLaoChamBaiVhuBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object2.NamHoc == null )
			{
				equal = false;
			}
			if ( Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object2.HocKy == null )
			{
				equal = false;
			}
			if ( Object1.KyThi != null && Object2.KyThi != null )
			{
				if (Object1.KyThi != Object2.KyThi)
					equal = false;
			}
			else if (Object1.KyThi == null ^ Object2.KyThi == null )
			{
				equal = false;
			}
			if ( Object1.LanThi != null && Object2.LanThi != null )
			{
				if (Object1.LanThi != Object2.LanThi)
					equal = false;
			}
			else if (Object1.LanThi == null ^ Object2.LanThi == null )
			{
				equal = false;
			}
			if ( Object1.MaGiangVien != null && Object2.MaGiangVien != null )
			{
				if (Object1.MaGiangVien != Object2.MaGiangVien)
					equal = false;
			}
			else if (Object1.MaGiangVien == null ^ Object2.MaGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.KhoaNganh != null && Object2.KhoaNganh != null )
			{
				if (Object1.KhoaNganh != Object2.KhoaNganh)
					equal = false;
			}
			else if (Object1.KhoaNganh == null ^ Object2.KhoaNganh == null )
			{
				equal = false;
			}
			if ( Object1.Nganh != null && Object2.Nganh != null )
			{
				if (Object1.Nganh != Object2.Nganh)
					equal = false;
			}
			else if (Object1.Nganh == null ^ Object2.Nganh == null )
			{
				equal = false;
			}
			if ( Object1.MaHocPhan != null && Object2.MaHocPhan != null )
			{
				if (Object1.MaHocPhan != Object2.MaHocPhan)
					equal = false;
			}
			else if (Object1.MaHocPhan == null ^ Object2.MaHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.TenHocPhan != null && Object2.TenHocPhan != null )
			{
				if (Object1.TenHocPhan != Object2.TenHocPhan)
					equal = false;
			}
			else if (Object1.TenHocPhan == null ^ Object2.TenHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object2.MaLopHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.SoTinChi != null && Object2.SoTinChi != null )
			{
				if (Object1.SoTinChi != Object2.SoTinChi)
					equal = false;
			}
			else if (Object1.SoTinChi == null ^ Object2.SoTinChi == null )
			{
				equal = false;
			}
			if ( Object1.BacDaoTao != null && Object2.BacDaoTao != null )
			{
				if (Object1.BacDaoTao != Object2.BacDaoTao)
					equal = false;
			}
			else if (Object1.BacDaoTao == null ^ Object2.BacDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.LopSinhVien != null && Object2.LopSinhVien != null )
			{
				if (Object1.LopSinhVien != Object2.LopSinhVien)
					equal = false;
			}
			else if (Object1.LopSinhVien == null ^ Object2.LopSinhVien == null )
			{
				equal = false;
			}
			if ( Object1.SiSo != null && Object2.SiSo != null )
			{
				if (Object1.SiSo != Object2.SiSo)
					equal = false;
			}
			else if (Object1.SiSo == null ^ Object2.SiSo == null )
			{
				equal = false;
			}
			if ( Object1.ThoiGianThi != null && Object2.ThoiGianThi != null )
			{
				if (Object1.ThoiGianThi != Object2.ThoiGianThi)
					equal = false;
			}
			else if (Object1.ThoiGianThi == null ^ Object2.ThoiGianThi == null )
			{
				equal = false;
			}
			if ( Object1.DinhMucChamGiuaKy != null && Object2.DinhMucChamGiuaKy != null )
			{
				if (Object1.DinhMucChamGiuaKy != Object2.DinhMucChamGiuaKy)
					equal = false;
			}
			else if (Object1.DinhMucChamGiuaKy == null ^ Object2.DinhMucChamGiuaKy == null )
			{
				equal = false;
			}
			if ( Object1.ThuLaoChamGiuaKy != null && Object2.ThuLaoChamGiuaKy != null )
			{
				if (Object1.ThuLaoChamGiuaKy != Object2.ThuLaoChamGiuaKy)
					equal = false;
			}
			else if (Object1.ThuLaoChamGiuaKy == null ^ Object2.ThuLaoChamGiuaKy == null )
			{
				equal = false;
			}
			if ( Object1.DinhMucChamCuoiKy != null && Object2.DinhMucChamCuoiKy != null )
			{
				if (Object1.DinhMucChamCuoiKy != Object2.DinhMucChamCuoiKy)
					equal = false;
			}
			else if (Object1.DinhMucChamCuoiKy == null ^ Object2.DinhMucChamCuoiKy == null )
			{
				equal = false;
			}
			if ( Object1.ThuLaoChamCuoiKy != null && Object2.ThuLaoChamCuoiKy != null )
			{
				if (Object1.ThuLaoChamCuoiKy != Object2.ThuLaoChamCuoiKy)
					equal = false;
			}
			else if (Object1.ThuLaoChamCuoiKy == null ^ Object2.ThuLaoChamCuoiKy == null )
			{
				equal = false;
			}
			if ( Object1.ThanhTienLan1 != null && Object2.ThanhTienLan1 != null )
			{
				if (Object1.ThanhTienLan1 != Object2.ThanhTienLan1)
					equal = false;
			}
			else if (Object1.ThanhTienLan1 == null ^ Object2.ThanhTienLan1 == null )
			{
				equal = false;
			}
			if ( Object1.ThanhTienLan2 != null && Object2.ThanhTienLan2 != null )
			{
				if (Object1.ThanhTienLan2 != Object2.ThanhTienLan2)
					equal = false;
			}
			else if (Object1.ThanhTienLan2 == null ^ Object2.ThanhTienLan2 == null )
			{
				equal = false;
			}
			if ( Object1.TongCong != null && Object2.TongCong != null )
			{
				if (Object1.TongCong != Object2.TongCong)
					equal = false;
			}
			else if (Object1.TongCong == null ^ Object2.TongCong == null )
			{
				equal = false;
			}
			if ( Object1.HinhThucThi != null && Object2.HinhThucThi != null )
			{
				if (Object1.HinhThucThi != Object2.HinhThucThi)
					equal = false;
			}
			else if (Object1.HinhThucThi == null ^ Object2.HinhThucThi == null )
			{
				equal = false;
			}
			if ( Object1.HeSoQuyDoi != null && Object2.HeSoQuyDoi != null )
			{
				if (Object1.HeSoQuyDoi != Object2.HeSoQuyDoi)
					equal = false;
			}
			else if (Object1.HeSoQuyDoi == null ^ Object2.HeSoQuyDoi == null )
			{
				equal = false;
			}
			if ( Object1.SoTietQuyDoi != null && Object2.SoTietQuyDoi != null )
			{
				if (Object1.SoTietQuyDoi != Object2.SoTietQuyDoi)
					equal = false;
			}
			else if (Object1.SoTietQuyDoi == null ^ Object2.SoTietQuyDoi == null )
			{
				equal = false;
			}
			if ( Object1.Chot != null && Object2.Chot != null )
			{
				if (Object1.Chot != Object2.Chot)
					equal = false;
			}
			else if (Object1.Chot == null ^ Object2.Chot == null )
			{
				equal = false;
			}
			if ( Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object2.NgayCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.NguoiCapNhat != null && Object2.NguoiCapNhat != null )
			{
				if (Object1.NguoiCapNhat != Object2.NguoiCapNhat)
					equal = false;
			}
			else if (Object1.NguoiCapNhat == null ^ Object2.NguoiCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.MaHocHam != null && Object2.MaHocHam != null )
			{
				if (Object1.MaHocHam != Object2.MaHocHam)
					equal = false;
			}
			else if (Object1.MaHocHam == null ^ Object2.MaHocHam == null )
			{
				equal = false;
			}
			if ( Object1.MaHocVi != null && Object2.MaHocVi != null )
			{
				if (Object1.MaHocVi != Object2.MaHocVi)
					equal = false;
			}
			else if (Object1.MaHocVi == null ^ Object2.MaHocVi == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object2.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.SoBaiLan2 != null && Object2.SoBaiLan2 != null )
			{
				if (Object1.SoBaiLan2 != Object2.SoBaiLan2)
					equal = false;
			}
			else if (Object1.SoBaiLan2 == null ^ Object2.SoBaiLan2 == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((ThuLaoChamBaiVhuBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static ThuLaoChamBaiVhuComparer GetComparer()
        {
            return new ThuLaoChamBaiVhuComparer();
        }
        */

        // Comparer delegates back to ThuLaoChamBaiVhu
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(ThuLaoChamBaiVhu rhs, ThuLaoChamBaiVhuColumn which)
        {
            switch (which)
            {
            	
            	
            	case ThuLaoChamBaiVhuColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.NamHoc:
            		return this.NamHoc.CompareTo(rhs.NamHoc);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.HocKy:
            		return this.HocKy.CompareTo(rhs.HocKy);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.KyThi:
            		return this.KyThi.CompareTo(rhs.KyThi);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.LanThi:
            		return this.LanThi.CompareTo(rhs.LanThi);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.MaGiangVien:
            		return this.MaGiangVien.Value.CompareTo(rhs.MaGiangVien.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.KhoaNganh:
            		return this.KhoaNganh.CompareTo(rhs.KhoaNganh);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.Nganh:
            		return this.Nganh.CompareTo(rhs.Nganh);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.MaHocPhan:
            		return this.MaHocPhan.CompareTo(rhs.MaHocPhan);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.TenHocPhan:
            		return this.TenHocPhan.CompareTo(rhs.TenHocPhan);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.MaLopHocPhan:
            		return this.MaLopHocPhan.CompareTo(rhs.MaLopHocPhan);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.SoTinChi:
            		return this.SoTinChi.Value.CompareTo(rhs.SoTinChi.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.BacDaoTao:
            		return this.BacDaoTao.CompareTo(rhs.BacDaoTao);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.LopSinhVien:
            		return this.LopSinhVien.CompareTo(rhs.LopSinhVien);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.SiSo:
            		return this.SiSo.Value.CompareTo(rhs.SiSo.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.ThoiGianThi:
            		return this.ThoiGianThi.CompareTo(rhs.ThoiGianThi);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.DinhMucChamGiuaKy:
            		return this.DinhMucChamGiuaKy.Value.CompareTo(rhs.DinhMucChamGiuaKy.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.ThuLaoChamGiuaKy:
            		return this.ThuLaoChamGiuaKy.Value.CompareTo(rhs.ThuLaoChamGiuaKy.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.DinhMucChamCuoiKy:
            		return this.DinhMucChamCuoiKy.Value.CompareTo(rhs.DinhMucChamCuoiKy.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.ThuLaoChamCuoiKy:
            		return this.ThuLaoChamCuoiKy.Value.CompareTo(rhs.ThuLaoChamCuoiKy.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.ThanhTienLan1:
            		return this.ThanhTienLan1.Value.CompareTo(rhs.ThanhTienLan1.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.ThanhTienLan2:
            		return this.ThanhTienLan2.Value.CompareTo(rhs.ThanhTienLan2.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.TongCong:
            		return this.TongCong.Value.CompareTo(rhs.TongCong.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.HinhThucThi:
            		return this.HinhThucThi.CompareTo(rhs.HinhThucThi);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.HeSoQuyDoi:
            		return this.HeSoQuyDoi.Value.CompareTo(rhs.HeSoQuyDoi.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.SoTietQuyDoi:
            		return this.SoTietQuyDoi.Value.CompareTo(rhs.SoTietQuyDoi.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.Chot:
            		return this.Chot.Value.CompareTo(rhs.Chot.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.NgayCapNhat:
            		return this.NgayCapNhat.CompareTo(rhs.NgayCapNhat);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.NguoiCapNhat:
            		return this.NguoiCapNhat.CompareTo(rhs.NguoiCapNhat);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.MaHocHam:
            		return this.MaHocHam.Value.CompareTo(rhs.MaHocHam.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.MaHocVi:
            		return this.MaHocVi.Value.CompareTo(rhs.MaHocVi.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.MaLoaiGiangVien:
            		return this.MaLoaiGiangVien.Value.CompareTo(rhs.MaLoaiGiangVien.Value);
            		
            		                 
            	
            	
            	case ThuLaoChamBaiVhuColumn.SoBaiLan2:
            		return this.SoBaiLan2.Value.CompareTo(rhs.SoBaiLan2.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<ThuLaoChamBaiVhuKey> Members
		
		// member variable for the EntityId property
		private ThuLaoChamBaiVhuKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual ThuLaoChamBaiVhuKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new ThuLaoChamBaiVhuKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("ThuLaoChamBaiVhu")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{34}{33}- Id: {0}{33}- NamHoc: {1}{33}- HocKy: {2}{33}- KyThi: {3}{33}- LanThi: {4}{33}- MaGiangVien: {5}{33}- KhoaNganh: {6}{33}- Nganh: {7}{33}- MaHocPhan: {8}{33}- TenHocPhan: {9}{33}- MaLopHocPhan: {10}{33}- SoTinChi: {11}{33}- BacDaoTao: {12}{33}- LopSinhVien: {13}{33}- SiSo: {14}{33}- ThoiGianThi: {15}{33}- DinhMucChamGiuaKy: {16}{33}- ThuLaoChamGiuaKy: {17}{33}- DinhMucChamCuoiKy: {18}{33}- ThuLaoChamCuoiKy: {19}{33}- ThanhTienLan1: {20}{33}- ThanhTienLan2: {21}{33}- TongCong: {22}{33}- HinhThucThi: {23}{33}- HeSoQuyDoi: {24}{33}- SoTietQuyDoi: {25}{33}- Chot: {26}{33}- NgayCapNhat: {27}{33}- NguoiCapNhat: {28}{33}- MaHocHam: {29}{33}- MaHocVi: {30}{33}- MaLoaiGiangVien: {31}{33}- SoBaiLan2: {32}{33}{35}", 
				this.Id,
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
				(this.KyThi == null) ? string.Empty : this.KyThi.ToString(),
				(this.LanThi == null) ? string.Empty : this.LanThi.ToString(),
				(this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString(),
				(this.KhoaNganh == null) ? string.Empty : this.KhoaNganh.ToString(),
				(this.Nganh == null) ? string.Empty : this.Nganh.ToString(),
				(this.MaHocPhan == null) ? string.Empty : this.MaHocPhan.ToString(),
				(this.TenHocPhan == null) ? string.Empty : this.TenHocPhan.ToString(),
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
				(this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString(),
				(this.BacDaoTao == null) ? string.Empty : this.BacDaoTao.ToString(),
				(this.LopSinhVien == null) ? string.Empty : this.LopSinhVien.ToString(),
				(this.SiSo == null) ? string.Empty : this.SiSo.ToString(),
				(this.ThoiGianThi == null) ? string.Empty : this.ThoiGianThi.ToString(),
				(this.DinhMucChamGiuaKy == null) ? string.Empty : this.DinhMucChamGiuaKy.ToString(),
				(this.ThuLaoChamGiuaKy == null) ? string.Empty : this.ThuLaoChamGiuaKy.ToString(),
				(this.DinhMucChamCuoiKy == null) ? string.Empty : this.DinhMucChamCuoiKy.ToString(),
				(this.ThuLaoChamCuoiKy == null) ? string.Empty : this.ThuLaoChamCuoiKy.ToString(),
				(this.ThanhTienLan1 == null) ? string.Empty : this.ThanhTienLan1.ToString(),
				(this.ThanhTienLan2 == null) ? string.Empty : this.ThanhTienLan2.ToString(),
				(this.TongCong == null) ? string.Empty : this.TongCong.ToString(),
				(this.HinhThucThi == null) ? string.Empty : this.HinhThucThi.ToString(),
				(this.HeSoQuyDoi == null) ? string.Empty : this.HeSoQuyDoi.ToString(),
				(this.SoTietQuyDoi == null) ? string.Empty : this.SoTietQuyDoi.ToString(),
				(this.Chot == null) ? string.Empty : this.Chot.ToString(),
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
				(this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString(),
				(this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString(),
				(this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString(),
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
				(this.SoBaiLan2 == null) ? string.Empty : this.SoBaiLan2.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ThuLaoChamBaiVhu' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class ThuLaoChamBaiVhuEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ThuLaoChamBaiVhu"</remarks>
		public System.Int32 Id;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		public System.String NamHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		public System.String HocKy = null;
		
		/// <summary>
		/// KyThi : 
		/// </summary>
		public System.String KyThi = null;
		
		/// <summary>
		/// LanThi : 
		/// </summary>
		public System.String LanThi = null;
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		public System.Int32? MaGiangVien = null;
		
		/// <summary>
		/// KhoaNganh : 
		/// </summary>
		public System.String KhoaNganh = null;
		
		/// <summary>
		/// Nganh : 
		/// </summary>
		public System.String Nganh = null;
		
		/// <summary>
		/// MaHocPhan : 
		/// </summary>
		public System.String MaHocPhan = null;
		
		/// <summary>
		/// TenHocPhan : 
		/// </summary>
		public System.String TenHocPhan = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		public System.String MaLopHocPhan = null;
		
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		public System.Int32? SoTinChi = null;
		
		/// <summary>
		/// BacDaoTao : 
		/// </summary>
		public System.String BacDaoTao = null;
		
		/// <summary>
		/// LopSinhVien : 
		/// </summary>
		public System.String LopSinhVien = null;
		
		/// <summary>
		/// SiSo : 
		/// </summary>
		public System.Int32? SiSo = null;
		
		/// <summary>
		/// ThoiGianThi : 
		/// </summary>
		public System.String ThoiGianThi = null;
		
		/// <summary>
		/// DinhMucChamGiuaKy : 
		/// </summary>
		public System.Decimal? DinhMucChamGiuaKy = null;
		
		/// <summary>
		/// ThuLaoChamGiuaKy : 
		/// </summary>
		public System.Decimal? ThuLaoChamGiuaKy = null;
		
		/// <summary>
		/// DinhMucChamCuoiKy : 
		/// </summary>
		public System.Decimal? DinhMucChamCuoiKy = null;
		
		/// <summary>
		/// ThuLaoChamCuoiKy : 
		/// </summary>
		public System.Decimal? ThuLaoChamCuoiKy = null;
		
		/// <summary>
		/// ThanhTienLan1 : 
		/// </summary>
		public System.Decimal? ThanhTienLan1 = null;
		
		/// <summary>
		/// ThanhTienLan2 : 
		/// </summary>
		public System.Decimal? ThanhTienLan2 = null;
		
		/// <summary>
		/// TongCong : 
		/// </summary>
		public System.Decimal? TongCong = null;
		
		/// <summary>
		/// HinhThucThi : 
		/// </summary>
		public System.String HinhThucThi = null;
		
		/// <summary>
		/// HeSoQuyDoi : 
		/// </summary>
		public System.Decimal? HeSoQuyDoi = null;
		
		/// <summary>
		/// SoTietQuyDoi : 
		/// </summary>
		public System.Decimal? SoTietQuyDoi = null;
		
		/// <summary>
		/// Chot : 
		/// </summary>
		public System.Boolean? Chot = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		public System.String NgayCapNhat = null;
		
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		public System.String NguoiCapNhat = null;
		
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		public System.Int32? MaHocHam = null;
		
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		public System.Int32? MaHocVi = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		public System.Int32? MaLoaiGiangVien = null;
		
		/// <summary>
		/// SoBaiLan2 : 
		/// </summary>
		public System.Int32? SoBaiLan2 = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			ThuLaoChamBaiVhuEntityData _tmp = new ThuLaoChamBaiVhuEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.KyThi = this.KyThi;
			_tmp.LanThi = this.LanThi;
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.KhoaNganh = this.KhoaNganh;
			_tmp.Nganh = this.Nganh;
			_tmp.MaHocPhan = this.MaHocPhan;
			_tmp.TenHocPhan = this.TenHocPhan;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.BacDaoTao = this.BacDaoTao;
			_tmp.LopSinhVien = this.LopSinhVien;
			_tmp.SiSo = this.SiSo;
			_tmp.ThoiGianThi = this.ThoiGianThi;
			_tmp.DinhMucChamGiuaKy = this.DinhMucChamGiuaKy;
			_tmp.ThuLaoChamGiuaKy = this.ThuLaoChamGiuaKy;
			_tmp.DinhMucChamCuoiKy = this.DinhMucChamCuoiKy;
			_tmp.ThuLaoChamCuoiKy = this.ThuLaoChamCuoiKy;
			_tmp.ThanhTienLan1 = this.ThanhTienLan1;
			_tmp.ThanhTienLan2 = this.ThanhTienLan2;
			_tmp.TongCong = this.TongCong;
			_tmp.HinhThucThi = this.HinhThucThi;
			_tmp.HeSoQuyDoi = this.HeSoQuyDoi;
			_tmp.SoTietQuyDoi = this.SoTietQuyDoi;
			_tmp.Chot = this.Chot;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.SoBaiLan2 = this.SoBaiLan2;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			ThuLaoChamBaiVhuEntityData _tmp = new ThuLaoChamBaiVhuEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.KyThi = this.KyThi;
			_tmp.LanThi = this.LanThi;
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.KhoaNganh = this.KhoaNganh;
			_tmp.Nganh = this.Nganh;
			_tmp.MaHocPhan = this.MaHocPhan;
			_tmp.TenHocPhan = this.TenHocPhan;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.BacDaoTao = this.BacDaoTao;
			_tmp.LopSinhVien = this.LopSinhVien;
			_tmp.SiSo = this.SiSo;
			_tmp.ThoiGianThi = this.ThoiGianThi;
			_tmp.DinhMucChamGiuaKy = this.DinhMucChamGiuaKy;
			_tmp.ThuLaoChamGiuaKy = this.ThuLaoChamGiuaKy;
			_tmp.DinhMucChamCuoiKy = this.DinhMucChamCuoiKy;
			_tmp.ThuLaoChamCuoiKy = this.ThuLaoChamCuoiKy;
			_tmp.ThanhTienLan1 = this.ThanhTienLan1;
			_tmp.ThanhTienLan2 = this.ThanhTienLan2;
			_tmp.TongCong = this.TongCong;
			_tmp.HinhThucThi = this.HinhThucThi;
			_tmp.HeSoQuyDoi = this.HeSoQuyDoi;
			_tmp.SoTietQuyDoi = this.SoTietQuyDoi;
			_tmp.Chot = this.Chot;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.SoBaiLan2 = this.SoBaiLan2;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ThuLaoChamBaiVhuColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(ThuLaoChamBaiVhuColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ThuLaoChamBaiVhuColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(ThuLaoChamBaiVhuColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ThuLaoChamBaiVhuColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(ThuLaoChamBaiVhuColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				ThuLaoChamBaiVhuEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new ThuLaoChamBaiVhuEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ThuLaoChamBaiVhuColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(ThuLaoChamBaiVhuColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				ThuLaoChamBaiVhuEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new ThuLaoChamBaiVhuEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region ThuLaoChamBaiVhuEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="ThuLaoChamBaiVhu"/> object.
	/// </remarks>
	public class ThuLaoChamBaiVhuEventArgs : System.EventArgs
	{
		private ThuLaoChamBaiVhuColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the ThuLaoChamBaiVhuEventArgs class.
		///</summary>
		public ThuLaoChamBaiVhuEventArgs(ThuLaoChamBaiVhuColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the ThuLaoChamBaiVhuEventArgs class.
		///</summary>
		public ThuLaoChamBaiVhuEventArgs(ThuLaoChamBaiVhuColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The ThuLaoChamBaiVhuColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="ThuLaoChamBaiVhuColumn" />
		public ThuLaoChamBaiVhuColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all ThuLaoChamBaiVhu related events.
	///</summary>
	public delegate void ThuLaoChamBaiVhuEventHandler(object sender, ThuLaoChamBaiVhuEventArgs e);
	
	#region ThuLaoChamBaiVhuComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class ThuLaoChamBaiVhuComparer : System.Collections.Generic.IComparer<ThuLaoChamBaiVhu>
	{
		ThuLaoChamBaiVhuColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:ThuLaoChamBaiVhuComparer"/> class.
        /// </summary>
		public ThuLaoChamBaiVhuComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:ThuLaoChamBaiVhuComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public ThuLaoChamBaiVhuComparer(ThuLaoChamBaiVhuColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="ThuLaoChamBaiVhu"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="ThuLaoChamBaiVhu"/> to compare.</param>
        /// <param name="b">The second <c>ThuLaoChamBaiVhu</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(ThuLaoChamBaiVhu a, ThuLaoChamBaiVhu b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(ThuLaoChamBaiVhu entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(ThuLaoChamBaiVhu a, ThuLaoChamBaiVhu b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public ThuLaoChamBaiVhuColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region ThuLaoChamBaiVhuKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="ThuLaoChamBaiVhu"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class ThuLaoChamBaiVhuKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the ThuLaoChamBaiVhuKey class.
		/// </summary>
		public ThuLaoChamBaiVhuKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the ThuLaoChamBaiVhuKey class.
		/// </summary>
		public ThuLaoChamBaiVhuKey(ThuLaoChamBaiVhuBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the ThuLaoChamBaiVhuKey class.
		/// </summary>
		public ThuLaoChamBaiVhuKey(System.Int32 _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private ThuLaoChamBaiVhuBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public ThuLaoChamBaiVhuBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.Int32 _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.Int32 Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["Id"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region ThuLaoChamBaiVhuColumn Enum
	
	/// <summary>
	/// Enumerate the ThuLaoChamBaiVhu columns.
	/// </summary>
	[Serializable]
	public enum ThuLaoChamBaiVhuColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		Id = 1,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("Nam Hoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc = 2,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("Hoc Ky")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy = 3,
		/// <summary>
		/// KyThi : 
		/// </summary>
		[EnumTextValue("Ky Thi")]
		[ColumnEnum("KyThi", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		KyThi = 4,
		/// <summary>
		/// LanThi : 
		/// </summary>
		[EnumTextValue("Lan Thi")]
		[ColumnEnum("LanThi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		LanThi = 5,
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Giang Vien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaGiangVien = 6,
		/// <summary>
		/// KhoaNganh : 
		/// </summary>
		[EnumTextValue("Khoa Nganh")]
		[ColumnEnum("KhoaNganh", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		KhoaNganh = 7,
		/// <summary>
		/// Nganh : 
		/// </summary>
		[EnumTextValue("Nganh")]
		[ColumnEnum("Nganh", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		Nganh = 8,
		/// <summary>
		/// MaHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Hoc Phan")]
		[ColumnEnum("MaHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHocPhan = 9,
		/// <summary>
		/// TenHocPhan : 
		/// </summary>
		[EnumTextValue("Ten Hoc Phan")]
		[ColumnEnum("TenHocPhan", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		TenHocPhan = 10,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Lop Hoc Phan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MaLopHocPhan = 11,
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		[EnumTextValue("So Tin Chi")]
		[ColumnEnum("SoTinChi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoTinChi = 12,
		/// <summary>
		/// BacDaoTao : 
		/// </summary>
		[EnumTextValue("Bac Dao Tao")]
		[ColumnEnum("BacDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		BacDaoTao = 13,
		/// <summary>
		/// LopSinhVien : 
		/// </summary>
		[EnumTextValue("Lop Sinh Vien")]
		[ColumnEnum("LopSinhVien", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		LopSinhVien = 14,
		/// <summary>
		/// SiSo : 
		/// </summary>
		[EnumTextValue("Si So")]
		[ColumnEnum("SiSo", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSo = 15,
		/// <summary>
		/// ThoiGianThi : 
		/// </summary>
		[EnumTextValue("Thoi Gian Thi")]
		[ColumnEnum("ThoiGianThi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		ThoiGianThi = 16,
		/// <summary>
		/// DinhMucChamGiuaKy : 
		/// </summary>
		[EnumTextValue("Dinh Muc Cham Giua Ky")]
		[ColumnEnum("DinhMucChamGiuaKy", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DinhMucChamGiuaKy = 17,
		/// <summary>
		/// ThuLaoChamGiuaKy : 
		/// </summary>
		[EnumTextValue("Thu Lao Cham Giua Ky")]
		[ColumnEnum("ThuLaoChamGiuaKy", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThuLaoChamGiuaKy = 18,
		/// <summary>
		/// DinhMucChamCuoiKy : 
		/// </summary>
		[EnumTextValue("Dinh Muc Cham Cuoi Ky")]
		[ColumnEnum("DinhMucChamCuoiKy", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DinhMucChamCuoiKy = 19,
		/// <summary>
		/// ThuLaoChamCuoiKy : 
		/// </summary>
		[EnumTextValue("Thu Lao Cham Cuoi Ky")]
		[ColumnEnum("ThuLaoChamCuoiKy", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThuLaoChamCuoiKy = 20,
		/// <summary>
		/// ThanhTienLan1 : 
		/// </summary>
		[EnumTextValue("Thanh Tien Lan1")]
		[ColumnEnum("ThanhTienLan1", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThanhTienLan1 = 21,
		/// <summary>
		/// ThanhTienLan2 : 
		/// </summary>
		[EnumTextValue("Thanh Tien Lan2")]
		[ColumnEnum("ThanhTienLan2", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThanhTienLan2 = 22,
		/// <summary>
		/// TongCong : 
		/// </summary>
		[EnumTextValue("Tong Cong")]
		[ColumnEnum("TongCong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TongCong = 23,
		/// <summary>
		/// HinhThucThi : 
		/// </summary>
		[EnumTextValue("Hinh Thuc Thi")]
		[ColumnEnum("HinhThucThi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HinhThucThi = 24,
		/// <summary>
		/// HeSoQuyDoi : 
		/// </summary>
		[EnumTextValue("He So Quy Doi")]
		[ColumnEnum("HeSoQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoQuyDoi = 25,
		/// <summary>
		/// SoTietQuyDoi : 
		/// </summary>
		[EnumTextValue("So Tiet Quy Doi")]
		[ColumnEnum("SoTietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTietQuyDoi = 26,
		/// <summary>
		/// Chot : 
		/// </summary>
		[EnumTextValue("Chot")]
		[ColumnEnum("Chot", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		Chot = 27,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("Ngay Cap Nhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NgayCapNhat = 28,
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		[EnumTextValue("Nguoi Cap Nhat")]
		[ColumnEnum("NguoiCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NguoiCapNhat = 29,
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		[EnumTextValue("Ma Hoc Ham")]
		[ColumnEnum("MaHocHam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocHam = 30,
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		[EnumTextValue("Ma Hoc Vi")]
		[ColumnEnum("MaHocVi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocVi = 31,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Loai Giang Vien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien = 32,
		/// <summary>
		/// SoBaiLan2 : 
		/// </summary>
		[EnumTextValue("So Bai Lan2")]
		[ColumnEnum("SoBaiLan2", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoBaiLan2 = 33
	}//End enum

	#endregion ThuLaoChamBaiVhuColumn Enum

} // end namespace

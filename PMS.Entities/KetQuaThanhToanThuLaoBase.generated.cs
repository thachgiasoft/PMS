
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file KetQuaThanhToanThuLao.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'KetQuaThanhToanThuLao' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class KetQuaThanhToanThuLaoBase : EntityBase, IKetQuaThanhToanThuLao, IEntityId<KetQuaThanhToanThuLaoKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private KetQuaThanhToanThuLaoEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private KetQuaThanhToanThuLaoEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private KetQuaThanhToanThuLaoEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<KetQuaThanhToanThuLao> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event KetQuaThanhToanThuLaoEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event KetQuaThanhToanThuLaoEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="KetQuaThanhToanThuLaoBase"/> instance.
		///</summary>
		public KetQuaThanhToanThuLaoBase()
		{
			this.entityData = new KetQuaThanhToanThuLaoEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="KetQuaThanhToanThuLaoBase"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maDonVi"></param>
		///<param name="_loai"></param>
		///<param name="_phanLoai"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_nhom"></param>
		///<param name="_maLop"></param>
		///<param name="_lopClc"></param>
		///<param name="_siSo"></param>
		///<param name="_tietThucDay"></param>
		///<param name="_tietChuNhat"></param>
		///<param name="_heSoHocKy"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_donGia"></param>
		///<param name="_thanhTien"></param>
		///<param name="_lanChot"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_maHinhThucDaoTao"></param>
		///<param name="_donGiaTrongChuan"></param>
		///<param name="_donGiaNgoaiChuan"></param>
		///<param name="_tenCoSo"></param>
		///<param name="_heSoQuyDoiThucHanhSangLyThuyet"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_soGioThucGiangTrenLop"></param>
		///<param name="_soGioChuanTinhThem"></param>
		///<param name="_heSoChucDanhChuyenMon"></param>
		///<param name="_heSoClcCntn"></param>
		///<param name="_heSoThinhGiangMonChuyenNganh"></param>
		///<param name="_maNhomMonHoc"></param>
		///<param name="_loaiLop"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_malopHocPhan"></param>
		///<param name="_maKhoaHoc"></param>
		///<param name="_heSoTroCap"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_heSoLuong"></param>
		///<param name="_heSoMonMoi"></param>
		///<param name="_heSoNienCheTinChi"></param>
		///<param name="_heSoNgonNgu"></param>
		///<param name="_heSoBacDaoTao"></param>
		///<param name="_ngayChiTra"></param>
		///<param name="_xacNhanChiTra"></param>
		///<param name="_ghiChu"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_heSoCongViec"></param>
		///<param name="_ngonNguGiangDay"></param>
		///<param name="_maCoSo"></param>
		///<param name="_mucThanhToan"></param>
		///<param name="_dotChiTra"></param>
		///<param name="_heSoKhoiNganh"></param>
		///<param name="_maCauHinhChotGio"></param>
		///<param name="_maKhoaCuaMonHoc"></param>
		///<param name="_heSoThamNien"></param>
		///<param name="_maLoaiHinhDaoTao"></param>
		public KetQuaThanhToanThuLaoBase(System.Int32? _maGiangVien, System.String _namHoc, 
			System.String _hocKy, System.Int32? _maHocHam, System.Int32? _maHocVi, 
			System.Int32? _maLoaiGiangVien, System.String _maDonVi, System.String _loai, 
			System.String _phanLoai, System.String _maMonHoc, System.String _tenMonHoc, 
			System.String _loaiHocPhan, System.String _nhom, System.String _maLop, 
			System.Boolean? _lopClc, System.Int32? _siSo, System.Decimal? _tietThucDay, 
			System.Decimal? _tietChuNhat, System.Decimal? _heSoHocKy, System.Decimal? _heSoLopDong, 
			System.Decimal? _tietQuyDoi, System.Decimal? _donGia, System.Decimal? _thanhTien, 
			System.Int32? _lanChot, System.DateTime? _ngayCapNhat, System.String _maHinhThucDaoTao, 
			System.Decimal? _donGiaTrongChuan, System.Decimal? _donGiaNgoaiChuan, System.String _tenCoSo, 
			System.Decimal? _heSoQuyDoiThucHanhSangLyThuyet, System.Decimal? _heSoCoSo, System.Decimal? _soGioThucGiangTrenLop, 
			System.Decimal? _soGioChuanTinhThem, System.Decimal? _heSoChucDanhChuyenMon, System.Decimal? _heSoClcCntn, 
			System.Decimal? _heSoThinhGiangMonChuyenNganh, System.String _maNhomMonHoc, System.String _loaiLop, 
			System.String _maBacDaoTao, System.String _malopHocPhan, System.String _maKhoaHoc, 
			System.Decimal? _heSoTroCap, System.Decimal? _heSoNgoaiGio, System.Decimal? _heSoLuong, 
			System.Decimal? _heSoMonMoi, System.Decimal? _heSoNienCheTinChi, System.Decimal? _heSoNgonNgu, 
			System.Decimal? _heSoBacDaoTao, System.String _ngayChiTra, System.Boolean? _xacNhanChiTra, 
			System.String _ghiChu, System.String _nguoiCapNhat, System.Decimal? _heSoCongViec, 
			System.String _ngonNguGiangDay, System.String _maCoSo, System.Decimal? _mucThanhToan, 
			System.String _dotChiTra, System.Decimal? _heSoKhoiNganh, System.Int32? _maCauHinhChotGio, 
			System.String _maKhoaCuaMonHoc, System.Decimal? _heSoThamNien, System.String _maLoaiHinhDaoTao)
		{
			this.entityData = new KetQuaThanhToanThuLaoEntityData();
			this.backupData = null;

			this.MaGiangVien = _maGiangVien;
			this.NamHoc = _namHoc;
			this.HocKy = _hocKy;
			this.MaHocHam = _maHocHam;
			this.MaHocVi = _maHocVi;
			this.MaLoaiGiangVien = _maLoaiGiangVien;
			this.MaDonVi = _maDonVi;
			this.Loai = _loai;
			this.PhanLoai = _phanLoai;
			this.MaMonHoc = _maMonHoc;
			this.TenMonHoc = _tenMonHoc;
			this.LoaiHocPhan = _loaiHocPhan;
			this.Nhom = _nhom;
			this.MaLop = _maLop;
			this.LopClc = _lopClc;
			this.SiSo = _siSo;
			this.TietThucDay = _tietThucDay;
			this.TietChuNhat = _tietChuNhat;
			this.HeSoHocKy = _heSoHocKy;
			this.HeSoLopDong = _heSoLopDong;
			this.TietQuyDoi = _tietQuyDoi;
			this.DonGia = _donGia;
			this.ThanhTien = _thanhTien;
			this.LanChot = _lanChot;
			this.NgayCapNhat = _ngayCapNhat;
			this.MaHinhThucDaoTao = _maHinhThucDaoTao;
			this.DonGiaTrongChuan = _donGiaTrongChuan;
			this.DonGiaNgoaiChuan = _donGiaNgoaiChuan;
			this.TenCoSo = _tenCoSo;
			this.HeSoQuyDoiThucHanhSangLyThuyet = _heSoQuyDoiThucHanhSangLyThuyet;
			this.HeSoCoSo = _heSoCoSo;
			this.SoGioThucGiangTrenLop = _soGioThucGiangTrenLop;
			this.SoGioChuanTinhThem = _soGioChuanTinhThem;
			this.HeSoChucDanhChuyenMon = _heSoChucDanhChuyenMon;
			this.HeSoClcCntn = _heSoClcCntn;
			this.HeSoThinhGiangMonChuyenNganh = _heSoThinhGiangMonChuyenNganh;
			this.MaNhomMonHoc = _maNhomMonHoc;
			this.LoaiLop = _loaiLop;
			this.MaBacDaoTao = _maBacDaoTao;
			this.MalopHocPhan = _malopHocPhan;
			this.MaKhoaHoc = _maKhoaHoc;
			this.HeSoTroCap = _heSoTroCap;
			this.HeSoNgoaiGio = _heSoNgoaiGio;
			this.HeSoLuong = _heSoLuong;
			this.HeSoMonMoi = _heSoMonMoi;
			this.HeSoNienCheTinChi = _heSoNienCheTinChi;
			this.HeSoNgonNgu = _heSoNgonNgu;
			this.HeSoBacDaoTao = _heSoBacDaoTao;
			this.NgayChiTra = _ngayChiTra;
			this.XacNhanChiTra = _xacNhanChiTra;
			this.GhiChu = _ghiChu;
			this.NguoiCapNhat = _nguoiCapNhat;
			this.HeSoCongViec = _heSoCongViec;
			this.NgonNguGiangDay = _ngonNguGiangDay;
			this.MaCoSo = _maCoSo;
			this.MucThanhToan = _mucThanhToan;
			this.DotChiTra = _dotChiTra;
			this.HeSoKhoiNganh = _heSoKhoiNganh;
			this.MaCauHinhChotGio = _maCauHinhChotGio;
			this.MaKhoaCuaMonHoc = _maKhoaCuaMonHoc;
			this.HeSoThamNien = _heSoThamNien;
			this.MaLoaiHinhDaoTao = _maLoaiHinhDaoTao;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="KetQuaThanhToanThuLao"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maDonVi"></param>
		///<param name="_loai"></param>
		///<param name="_phanLoai"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_nhom"></param>
		///<param name="_maLop"></param>
		///<param name="_lopClc"></param>
		///<param name="_siSo"></param>
		///<param name="_tietThucDay"></param>
		///<param name="_tietChuNhat"></param>
		///<param name="_heSoHocKy"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_donGia"></param>
		///<param name="_thanhTien"></param>
		///<param name="_lanChot"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_maHinhThucDaoTao"></param>
		///<param name="_donGiaTrongChuan"></param>
		///<param name="_donGiaNgoaiChuan"></param>
		///<param name="_tenCoSo"></param>
		///<param name="_heSoQuyDoiThucHanhSangLyThuyet"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_soGioThucGiangTrenLop"></param>
		///<param name="_soGioChuanTinhThem"></param>
		///<param name="_heSoChucDanhChuyenMon"></param>
		///<param name="_heSoClcCntn"></param>
		///<param name="_heSoThinhGiangMonChuyenNganh"></param>
		///<param name="_maNhomMonHoc"></param>
		///<param name="_loaiLop"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_malopHocPhan"></param>
		///<param name="_maKhoaHoc"></param>
		///<param name="_heSoTroCap"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_heSoLuong"></param>
		///<param name="_heSoMonMoi"></param>
		///<param name="_heSoNienCheTinChi"></param>
		///<param name="_heSoNgonNgu"></param>
		///<param name="_heSoBacDaoTao"></param>
		///<param name="_ngayChiTra"></param>
		///<param name="_xacNhanChiTra"></param>
		///<param name="_ghiChu"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_heSoCongViec"></param>
		///<param name="_ngonNguGiangDay"></param>
		///<param name="_maCoSo"></param>
		///<param name="_mucThanhToan"></param>
		///<param name="_dotChiTra"></param>
		///<param name="_heSoKhoiNganh"></param>
		///<param name="_maCauHinhChotGio"></param>
		///<param name="_maKhoaCuaMonHoc"></param>
		///<param name="_heSoThamNien"></param>
		///<param name="_maLoaiHinhDaoTao"></param>
		public static KetQuaThanhToanThuLao CreateKetQuaThanhToanThuLao(System.Int32? _maGiangVien, System.String _namHoc, 
			System.String _hocKy, System.Int32? _maHocHam, System.Int32? _maHocVi, 
			System.Int32? _maLoaiGiangVien, System.String _maDonVi, System.String _loai, 
			System.String _phanLoai, System.String _maMonHoc, System.String _tenMonHoc, 
			System.String _loaiHocPhan, System.String _nhom, System.String _maLop, 
			System.Boolean? _lopClc, System.Int32? _siSo, System.Decimal? _tietThucDay, 
			System.Decimal? _tietChuNhat, System.Decimal? _heSoHocKy, System.Decimal? _heSoLopDong, 
			System.Decimal? _tietQuyDoi, System.Decimal? _donGia, System.Decimal? _thanhTien, 
			System.Int32? _lanChot, System.DateTime? _ngayCapNhat, System.String _maHinhThucDaoTao, 
			System.Decimal? _donGiaTrongChuan, System.Decimal? _donGiaNgoaiChuan, System.String _tenCoSo, 
			System.Decimal? _heSoQuyDoiThucHanhSangLyThuyet, System.Decimal? _heSoCoSo, System.Decimal? _soGioThucGiangTrenLop, 
			System.Decimal? _soGioChuanTinhThem, System.Decimal? _heSoChucDanhChuyenMon, System.Decimal? _heSoClcCntn, 
			System.Decimal? _heSoThinhGiangMonChuyenNganh, System.String _maNhomMonHoc, System.String _loaiLop, 
			System.String _maBacDaoTao, System.String _malopHocPhan, System.String _maKhoaHoc, 
			System.Decimal? _heSoTroCap, System.Decimal? _heSoNgoaiGio, System.Decimal? _heSoLuong, 
			System.Decimal? _heSoMonMoi, System.Decimal? _heSoNienCheTinChi, System.Decimal? _heSoNgonNgu, 
			System.Decimal? _heSoBacDaoTao, System.String _ngayChiTra, System.Boolean? _xacNhanChiTra, 
			System.String _ghiChu, System.String _nguoiCapNhat, System.Decimal? _heSoCongViec, 
			System.String _ngonNguGiangDay, System.String _maCoSo, System.Decimal? _mucThanhToan, 
			System.String _dotChiTra, System.Decimal? _heSoKhoiNganh, System.Int32? _maCauHinhChotGio, 
			System.String _maKhoaCuaMonHoc, System.Decimal? _heSoThamNien, System.String _maLoaiHinhDaoTao)
		{
			KetQuaThanhToanThuLao newKetQuaThanhToanThuLao = new KetQuaThanhToanThuLao();
			newKetQuaThanhToanThuLao.MaGiangVien = _maGiangVien;
			newKetQuaThanhToanThuLao.NamHoc = _namHoc;
			newKetQuaThanhToanThuLao.HocKy = _hocKy;
			newKetQuaThanhToanThuLao.MaHocHam = _maHocHam;
			newKetQuaThanhToanThuLao.MaHocVi = _maHocVi;
			newKetQuaThanhToanThuLao.MaLoaiGiangVien = _maLoaiGiangVien;
			newKetQuaThanhToanThuLao.MaDonVi = _maDonVi;
			newKetQuaThanhToanThuLao.Loai = _loai;
			newKetQuaThanhToanThuLao.PhanLoai = _phanLoai;
			newKetQuaThanhToanThuLao.MaMonHoc = _maMonHoc;
			newKetQuaThanhToanThuLao.TenMonHoc = _tenMonHoc;
			newKetQuaThanhToanThuLao.LoaiHocPhan = _loaiHocPhan;
			newKetQuaThanhToanThuLao.Nhom = _nhom;
			newKetQuaThanhToanThuLao.MaLop = _maLop;
			newKetQuaThanhToanThuLao.LopClc = _lopClc;
			newKetQuaThanhToanThuLao.SiSo = _siSo;
			newKetQuaThanhToanThuLao.TietThucDay = _tietThucDay;
			newKetQuaThanhToanThuLao.TietChuNhat = _tietChuNhat;
			newKetQuaThanhToanThuLao.HeSoHocKy = _heSoHocKy;
			newKetQuaThanhToanThuLao.HeSoLopDong = _heSoLopDong;
			newKetQuaThanhToanThuLao.TietQuyDoi = _tietQuyDoi;
			newKetQuaThanhToanThuLao.DonGia = _donGia;
			newKetQuaThanhToanThuLao.ThanhTien = _thanhTien;
			newKetQuaThanhToanThuLao.LanChot = _lanChot;
			newKetQuaThanhToanThuLao.NgayCapNhat = _ngayCapNhat;
			newKetQuaThanhToanThuLao.MaHinhThucDaoTao = _maHinhThucDaoTao;
			newKetQuaThanhToanThuLao.DonGiaTrongChuan = _donGiaTrongChuan;
			newKetQuaThanhToanThuLao.DonGiaNgoaiChuan = _donGiaNgoaiChuan;
			newKetQuaThanhToanThuLao.TenCoSo = _tenCoSo;
			newKetQuaThanhToanThuLao.HeSoQuyDoiThucHanhSangLyThuyet = _heSoQuyDoiThucHanhSangLyThuyet;
			newKetQuaThanhToanThuLao.HeSoCoSo = _heSoCoSo;
			newKetQuaThanhToanThuLao.SoGioThucGiangTrenLop = _soGioThucGiangTrenLop;
			newKetQuaThanhToanThuLao.SoGioChuanTinhThem = _soGioChuanTinhThem;
			newKetQuaThanhToanThuLao.HeSoChucDanhChuyenMon = _heSoChucDanhChuyenMon;
			newKetQuaThanhToanThuLao.HeSoClcCntn = _heSoClcCntn;
			newKetQuaThanhToanThuLao.HeSoThinhGiangMonChuyenNganh = _heSoThinhGiangMonChuyenNganh;
			newKetQuaThanhToanThuLao.MaNhomMonHoc = _maNhomMonHoc;
			newKetQuaThanhToanThuLao.LoaiLop = _loaiLop;
			newKetQuaThanhToanThuLao.MaBacDaoTao = _maBacDaoTao;
			newKetQuaThanhToanThuLao.MalopHocPhan = _malopHocPhan;
			newKetQuaThanhToanThuLao.MaKhoaHoc = _maKhoaHoc;
			newKetQuaThanhToanThuLao.HeSoTroCap = _heSoTroCap;
			newKetQuaThanhToanThuLao.HeSoNgoaiGio = _heSoNgoaiGio;
			newKetQuaThanhToanThuLao.HeSoLuong = _heSoLuong;
			newKetQuaThanhToanThuLao.HeSoMonMoi = _heSoMonMoi;
			newKetQuaThanhToanThuLao.HeSoNienCheTinChi = _heSoNienCheTinChi;
			newKetQuaThanhToanThuLao.HeSoNgonNgu = _heSoNgonNgu;
			newKetQuaThanhToanThuLao.HeSoBacDaoTao = _heSoBacDaoTao;
			newKetQuaThanhToanThuLao.NgayChiTra = _ngayChiTra;
			newKetQuaThanhToanThuLao.XacNhanChiTra = _xacNhanChiTra;
			newKetQuaThanhToanThuLao.GhiChu = _ghiChu;
			newKetQuaThanhToanThuLao.NguoiCapNhat = _nguoiCapNhat;
			newKetQuaThanhToanThuLao.HeSoCongViec = _heSoCongViec;
			newKetQuaThanhToanThuLao.NgonNguGiangDay = _ngonNguGiangDay;
			newKetQuaThanhToanThuLao.MaCoSo = _maCoSo;
			newKetQuaThanhToanThuLao.MucThanhToan = _mucThanhToan;
			newKetQuaThanhToanThuLao.DotChiTra = _dotChiTra;
			newKetQuaThanhToanThuLao.HeSoKhoiNganh = _heSoKhoiNganh;
			newKetQuaThanhToanThuLao.MaCauHinhChotGio = _maCauHinhChotGio;
			newKetQuaThanhToanThuLao.MaKhoaCuaMonHoc = _maKhoaCuaMonHoc;
			newKetQuaThanhToanThuLao.HeSoThamNien = _heSoThamNien;
			newKetQuaThanhToanThuLao.MaLoaiHinhDaoTao = _maLoaiHinhDaoTao;
			return newKetQuaThanhToanThuLao;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
				
                OnPropertyChanging("Id");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaGiangVien
		{
			get
			{
				return this.entityData.MaGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaGiangVien == value)
					return;
				
                OnPropertyChanging("MaGiangVien");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaGiangVien, this.entityData.MaGiangVien);
				this.entityData.MaGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaGiangVien, this.entityData.MaGiangVien);
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NamHoc
		{
			get
			{
				return this.entityData.NamHoc; 
			}
			
			set
			{
				if (this.entityData.NamHoc == value)
					return;
				
                OnPropertyChanging("NamHoc");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.NamHoc, this.entityData.NamHoc);
				this.entityData.NamHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.NamHoc, this.entityData.NamHoc);
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String HocKy
		{
			get
			{
				return this.entityData.HocKy; 
			}
			
			set
			{
				if (this.entityData.HocKy == value)
					return;
				
                OnPropertyChanging("HocKy");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HocKy, this.entityData.HocKy);
				this.entityData.HocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HocKy, this.entityData.HocKy);
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocHam property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocHam
		{
			get
			{
				return this.entityData.MaHocHam; 
			}
			
			set
			{
				if (this.entityData.MaHocHam == value)
					return;
				
                OnPropertyChanging("MaHocHam");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaHocHam, this.entityData.MaHocHam);
				this.entityData.MaHocHam = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaHocHam, this.entityData.MaHocHam);
				OnPropertyChanged("MaHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocVi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocVi
		{
			get
			{
				return this.entityData.MaHocVi; 
			}
			
			set
			{
				if (this.entityData.MaHocVi == value)
					return;
				
                OnPropertyChanging("MaHocVi");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaHocVi, this.entityData.MaHocVi);
				this.entityData.MaHocVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaHocVi, this.entityData.MaHocVi);
				OnPropertyChanged("MaHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this.entityData.MaLoaiGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaLoaiGiangVien == value)
					return;
				
                OnPropertyChanging("MaLoaiGiangVien");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				this.entityData.MaLoaiGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this.entityData.MaDonVi; 
			}
			
			set
			{
				if (this.entityData.MaDonVi == value)
					return;
				
                OnPropertyChanging("MaDonVi");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaDonVi, this.entityData.MaDonVi);
				this.entityData.MaDonVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaDonVi, this.entityData.MaDonVi);
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Loai property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Loai
		{
			get
			{
				return this.entityData.Loai; 
			}
			
			set
			{
				if (this.entityData.Loai == value)
					return;
				
                OnPropertyChanging("Loai");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.Loai, this.entityData.Loai);
				this.entityData.Loai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.Loai, this.entityData.Loai);
				OnPropertyChanged("Loai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PhanLoai property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String PhanLoai
		{
			get
			{
				return this.entityData.PhanLoai; 
			}
			
			set
			{
				if (this.entityData.PhanLoai == value)
					return;
				
                OnPropertyChanging("PhanLoai");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.PhanLoai, this.entityData.PhanLoai);
				this.entityData.PhanLoai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.PhanLoai, this.entityData.PhanLoai);
				OnPropertyChanged("PhanLoai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this.entityData.MaMonHoc; 
			}
			
			set
			{
				if (this.entityData.MaMonHoc == value)
					return;
				
                OnPropertyChanging("MaMonHoc");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaMonHoc, this.entityData.MaMonHoc);
				this.entityData.MaMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaMonHoc, this.entityData.MaMonHoc);
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this.entityData.TenMonHoc; 
			}
			
			set
			{
				if (this.entityData.TenMonHoc == value)
					return;
				
                OnPropertyChanging("TenMonHoc");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.TenMonHoc, this.entityData.TenMonHoc);
				this.entityData.TenMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.TenMonHoc, this.entityData.TenMonHoc);
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String LoaiHocPhan
		{
			get
			{
				return this.entityData.LoaiHocPhan; 
			}
			
			set
			{
				if (this.entityData.LoaiHocPhan == value)
					return;
				
                OnPropertyChanging("LoaiHocPhan");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.LoaiHocPhan, this.entityData.LoaiHocPhan);
				this.entityData.LoaiHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.LoaiHocPhan, this.entityData.LoaiHocPhan);
				OnPropertyChanged("LoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Nhom property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Nhom
		{
			get
			{
				return this.entityData.Nhom; 
			}
			
			set
			{
				if (this.entityData.Nhom == value)
					return;
				
                OnPropertyChanging("Nhom");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.Nhom, this.entityData.Nhom);
				this.entityData.Nhom = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.Nhom, this.entityData.Nhom);
				OnPropertyChanged("Nhom");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String MaLop
		{
			get
			{
				return this.entityData.MaLop; 
			}
			
			set
			{
				if (this.entityData.MaLop == value)
					return;
				
                OnPropertyChanging("MaLop");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaLop, this.entityData.MaLop);
				this.entityData.MaLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaLop, this.entityData.MaLop);
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LopClc property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? LopClc
		{
			get
			{
				return this.entityData.LopClc; 
			}
			
			set
			{
				if (this.entityData.LopClc == value)
					return;
				
                OnPropertyChanging("LopClc");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.LopClc, this.entityData.LopClc);
				this.entityData.LopClc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.LopClc, this.entityData.LopClc);
				OnPropertyChanged("LopClc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SiSo property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SiSo
		{
			get
			{
				return this.entityData.SiSo; 
			}
			
			set
			{
				if (this.entityData.SiSo == value)
					return;
				
                OnPropertyChanging("SiSo");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.SiSo, this.entityData.SiSo);
				this.entityData.SiSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.SiSo, this.entityData.SiSo);
				OnPropertyChanged("SiSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietThucDay property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietThucDay
		{
			get
			{
				return this.entityData.TietThucDay; 
			}
			
			set
			{
				if (this.entityData.TietThucDay == value)
					return;
				
                OnPropertyChanging("TietThucDay");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.TietThucDay, this.entityData.TietThucDay);
				this.entityData.TietThucDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.TietThucDay, this.entityData.TietThucDay);
				OnPropertyChanged("TietThucDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietChuNhat property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietChuNhat
		{
			get
			{
				return this.entityData.TietChuNhat; 
			}
			
			set
			{
				if (this.entityData.TietChuNhat == value)
					return;
				
                OnPropertyChanging("TietChuNhat");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.TietChuNhat, this.entityData.TietChuNhat);
				this.entityData.TietChuNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.TietChuNhat, this.entityData.TietChuNhat);
				OnPropertyChanged("TietChuNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoHocKy property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoHocKy
		{
			get
			{
				return this.entityData.HeSoHocKy; 
			}
			
			set
			{
				if (this.entityData.HeSoHocKy == value)
					return;
				
                OnPropertyChanging("HeSoHocKy");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoHocKy, this.entityData.HeSoHocKy);
				this.entityData.HeSoHocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoHocKy, this.entityData.HeSoHocKy);
				OnPropertyChanged("HeSoHocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoLopDong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoLopDong
		{
			get
			{
				return this.entityData.HeSoLopDong; 
			}
			
			set
			{
				if (this.entityData.HeSoLopDong == value)
					return;
				
                OnPropertyChanging("HeSoLopDong");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				this.entityData.HeSoLopDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				OnPropertyChanged("HeSoLopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this.entityData.TietQuyDoi; 
			}
			
			set
			{
				if (this.entityData.TietQuyDoi == value)
					return;
				
                OnPropertyChanging("TietQuyDoi");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.TietQuyDoi, this.entityData.TietQuyDoi);
				this.entityData.TietQuyDoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.TietQuyDoi, this.entityData.TietQuyDoi);
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DonGia property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DonGia
		{
			get
			{
				return this.entityData.DonGia; 
			}
			
			set
			{
				if (this.entityData.DonGia == value)
					return;
				
                OnPropertyChanging("DonGia");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.DonGia, this.entityData.DonGia);
				this.entityData.DonGia = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.DonGia, this.entityData.DonGia);
				OnPropertyChanged("DonGia");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThanhTien property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThanhTien
		{
			get
			{
				return this.entityData.ThanhTien; 
			}
			
			set
			{
				if (this.entityData.ThanhTien == value)
					return;
				
                OnPropertyChanging("ThanhTien");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.ThanhTien, this.entityData.ThanhTien);
				this.entityData.ThanhTien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.ThanhTien, this.entityData.ThanhTien);
				OnPropertyChanged("ThanhTien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LanChot property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? LanChot
		{
			get
			{
				return this.entityData.LanChot; 
			}
			
			set
			{
				if (this.entityData.LanChot == value)
					return;
				
                OnPropertyChanging("LanChot");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.LanChot, this.entityData.LanChot);
				this.entityData.LanChot = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.LanChot, this.entityData.LanChot);
				OnPropertyChanged("LanChot");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayCapNhat
		{
			get
			{
				return this.entityData.NgayCapNhat; 
			}
			
			set
			{
				if (this.entityData.NgayCapNhat == value)
					return;
				
                OnPropertyChanging("NgayCapNhat");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				this.entityData.NgayCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHinhThucDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaHinhThucDaoTao
		{
			get
			{
				return this.entityData.MaHinhThucDaoTao; 
			}
			
			set
			{
				if (this.entityData.MaHinhThucDaoTao == value)
					return;
				
                OnPropertyChanging("MaHinhThucDaoTao");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaHinhThucDaoTao, this.entityData.MaHinhThucDaoTao);
				this.entityData.MaHinhThucDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaHinhThucDaoTao, this.entityData.MaHinhThucDaoTao);
				OnPropertyChanged("MaHinhThucDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DonGiaTrongChuan property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DonGiaTrongChuan
		{
			get
			{
				return this.entityData.DonGiaTrongChuan; 
			}
			
			set
			{
				if (this.entityData.DonGiaTrongChuan == value)
					return;
				
                OnPropertyChanging("DonGiaTrongChuan");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.DonGiaTrongChuan, this.entityData.DonGiaTrongChuan);
				this.entityData.DonGiaTrongChuan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.DonGiaTrongChuan, this.entityData.DonGiaTrongChuan);
				OnPropertyChanged("DonGiaTrongChuan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DonGiaNgoaiChuan property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DonGiaNgoaiChuan
		{
			get
			{
				return this.entityData.DonGiaNgoaiChuan; 
			}
			
			set
			{
				if (this.entityData.DonGiaNgoaiChuan == value)
					return;
				
                OnPropertyChanging("DonGiaNgoaiChuan");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.DonGiaNgoaiChuan, this.entityData.DonGiaNgoaiChuan);
				this.entityData.DonGiaNgoaiChuan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.DonGiaNgoaiChuan, this.entityData.DonGiaNgoaiChuan);
				OnPropertyChanged("DonGiaNgoaiChuan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenCoSo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String TenCoSo
		{
			get
			{
				return this.entityData.TenCoSo; 
			}
			
			set
			{
				if (this.entityData.TenCoSo == value)
					return;
				
                OnPropertyChanging("TenCoSo");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.TenCoSo, this.entityData.TenCoSo);
				this.entityData.TenCoSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.TenCoSo, this.entityData.TenCoSo);
				OnPropertyChanged("TenCoSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoQuyDoiThucHanhSangLyThuyet property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoQuyDoiThucHanhSangLyThuyet
		{
			get
			{
				return this.entityData.HeSoQuyDoiThucHanhSangLyThuyet; 
			}
			
			set
			{
				if (this.entityData.HeSoQuyDoiThucHanhSangLyThuyet == value)
					return;
				
                OnPropertyChanging("HeSoQuyDoiThucHanhSangLyThuyet");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoQuyDoiThucHanhSangLyThuyet, this.entityData.HeSoQuyDoiThucHanhSangLyThuyet);
				this.entityData.HeSoQuyDoiThucHanhSangLyThuyet = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoQuyDoiThucHanhSangLyThuyet, this.entityData.HeSoQuyDoiThucHanhSangLyThuyet);
				OnPropertyChanged("HeSoQuyDoiThucHanhSangLyThuyet");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoCoSo property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoCoSo
		{
			get
			{
				return this.entityData.HeSoCoSo; 
			}
			
			set
			{
				if (this.entityData.HeSoCoSo == value)
					return;
				
                OnPropertyChanging("HeSoCoSo");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoCoSo, this.entityData.HeSoCoSo);
				this.entityData.HeSoCoSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoCoSo, this.entityData.HeSoCoSo);
				OnPropertyChanged("HeSoCoSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoGioThucGiangTrenLop property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoGioThucGiangTrenLop
		{
			get
			{
				return this.entityData.SoGioThucGiangTrenLop; 
			}
			
			set
			{
				if (this.entityData.SoGioThucGiangTrenLop == value)
					return;
				
                OnPropertyChanging("SoGioThucGiangTrenLop");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.SoGioThucGiangTrenLop, this.entityData.SoGioThucGiangTrenLop);
				this.entityData.SoGioThucGiangTrenLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.SoGioThucGiangTrenLop, this.entityData.SoGioThucGiangTrenLop);
				OnPropertyChanged("SoGioThucGiangTrenLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoGioChuanTinhThem property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoGioChuanTinhThem
		{
			get
			{
				return this.entityData.SoGioChuanTinhThem; 
			}
			
			set
			{
				if (this.entityData.SoGioChuanTinhThem == value)
					return;
				
                OnPropertyChanging("SoGioChuanTinhThem");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.SoGioChuanTinhThem, this.entityData.SoGioChuanTinhThem);
				this.entityData.SoGioChuanTinhThem = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.SoGioChuanTinhThem, this.entityData.SoGioChuanTinhThem);
				OnPropertyChanged("SoGioChuanTinhThem");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoChucDanhChuyenMon property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoChucDanhChuyenMon
		{
			get
			{
				return this.entityData.HeSoChucDanhChuyenMon; 
			}
			
			set
			{
				if (this.entityData.HeSoChucDanhChuyenMon == value)
					return;
				
                OnPropertyChanging("HeSoChucDanhChuyenMon");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoChucDanhChuyenMon, this.entityData.HeSoChucDanhChuyenMon);
				this.entityData.HeSoChucDanhChuyenMon = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoChucDanhChuyenMon, this.entityData.HeSoChucDanhChuyenMon);
				OnPropertyChanged("HeSoChucDanhChuyenMon");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoClcCntn property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoClcCntn
		{
			get
			{
				return this.entityData.HeSoClcCntn; 
			}
			
			set
			{
				if (this.entityData.HeSoClcCntn == value)
					return;
				
                OnPropertyChanging("HeSoClcCntn");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoClcCntn, this.entityData.HeSoClcCntn);
				this.entityData.HeSoClcCntn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoClcCntn, this.entityData.HeSoClcCntn);
				OnPropertyChanged("HeSoClcCntn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoThinhGiangMonChuyenNganh property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoThinhGiangMonChuyenNganh
		{
			get
			{
				return this.entityData.HeSoThinhGiangMonChuyenNganh; 
			}
			
			set
			{
				if (this.entityData.HeSoThinhGiangMonChuyenNganh == value)
					return;
				
                OnPropertyChanging("HeSoThinhGiangMonChuyenNganh");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoThinhGiangMonChuyenNganh, this.entityData.HeSoThinhGiangMonChuyenNganh);
				this.entityData.HeSoThinhGiangMonChuyenNganh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoThinhGiangMonChuyenNganh, this.entityData.HeSoThinhGiangMonChuyenNganh);
				OnPropertyChanged("HeSoThinhGiangMonChuyenNganh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaNhomMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaNhomMonHoc
		{
			get
			{
				return this.entityData.MaNhomMonHoc; 
			}
			
			set
			{
				if (this.entityData.MaNhomMonHoc == value)
					return;
				
                OnPropertyChanging("MaNhomMonHoc");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaNhomMonHoc, this.entityData.MaNhomMonHoc);
				this.entityData.MaNhomMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaNhomMonHoc, this.entityData.MaNhomMonHoc);
				OnPropertyChanged("MaNhomMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoaiLop property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String LoaiLop
		{
			get
			{
				return this.entityData.LoaiLop; 
			}
			
			set
			{
				if (this.entityData.LoaiLop == value)
					return;
				
                OnPropertyChanging("LoaiLop");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.LoaiLop, this.entityData.LoaiLop);
				this.entityData.LoaiLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.LoaiLop, this.entityData.LoaiLop);
				OnPropertyChanged("LoaiLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaBacDaoTao
		{
			get
			{
				return this.entityData.MaBacDaoTao; 
			}
			
			set
			{
				if (this.entityData.MaBacDaoTao == value)
					return;
				
                OnPropertyChanging("MaBacDaoTao");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaBacDaoTao, this.entityData.MaBacDaoTao);
				this.entityData.MaBacDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaBacDaoTao, this.entityData.MaBacDaoTao);
				OnPropertyChanged("MaBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MalopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MalopHocPhan
		{
			get
			{
				return this.entityData.MalopHocPhan; 
			}
			
			set
			{
				if (this.entityData.MalopHocPhan == value)
					return;
				
                OnPropertyChanging("MalopHocPhan");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MalopHocPhan, this.entityData.MalopHocPhan);
				this.entityData.MalopHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MalopHocPhan, this.entityData.MalopHocPhan);
				OnPropertyChanged("MalopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaKhoaHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaKhoaHoc
		{
			get
			{
				return this.entityData.MaKhoaHoc; 
			}
			
			set
			{
				if (this.entityData.MaKhoaHoc == value)
					return;
				
                OnPropertyChanging("MaKhoaHoc");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaKhoaHoc, this.entityData.MaKhoaHoc);
				this.entityData.MaKhoaHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaKhoaHoc, this.entityData.MaKhoaHoc);
				OnPropertyChanged("MaKhoaHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoTroCap property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoTroCap
		{
			get
			{
				return this.entityData.HeSoTroCap; 
			}
			
			set
			{
				if (this.entityData.HeSoTroCap == value)
					return;
				
                OnPropertyChanging("HeSoTroCap");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoTroCap, this.entityData.HeSoTroCap);
				this.entityData.HeSoTroCap = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoTroCap, this.entityData.HeSoTroCap);
				OnPropertyChanged("HeSoTroCap");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNgoaiGio
		{
			get
			{
				return this.entityData.HeSoNgoaiGio; 
			}
			
			set
			{
				if (this.entityData.HeSoNgoaiGio == value)
					return;
				
                OnPropertyChanging("HeSoNgoaiGio");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoNgoaiGio, this.entityData.HeSoNgoaiGio);
				this.entityData.HeSoNgoaiGio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoNgoaiGio, this.entityData.HeSoNgoaiGio);
				OnPropertyChanged("HeSoNgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoLuong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoLuong
		{
			get
			{
				return this.entityData.HeSoLuong; 
			}
			
			set
			{
				if (this.entityData.HeSoLuong == value)
					return;
				
                OnPropertyChanging("HeSoLuong");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoLuong, this.entityData.HeSoLuong);
				this.entityData.HeSoLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoLuong, this.entityData.HeSoLuong);
				OnPropertyChanged("HeSoLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoMonMoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoMonMoi
		{
			get
			{
				return this.entityData.HeSoMonMoi; 
			}
			
			set
			{
				if (this.entityData.HeSoMonMoi == value)
					return;
				
                OnPropertyChanging("HeSoMonMoi");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoMonMoi, this.entityData.HeSoMonMoi);
				this.entityData.HeSoMonMoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoMonMoi, this.entityData.HeSoMonMoi);
				OnPropertyChanged("HeSoMonMoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNienCheTinChi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNienCheTinChi
		{
			get
			{
				return this.entityData.HeSoNienCheTinChi; 
			}
			
			set
			{
				if (this.entityData.HeSoNienCheTinChi == value)
					return;
				
                OnPropertyChanging("HeSoNienCheTinChi");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoNienCheTinChi, this.entityData.HeSoNienCheTinChi);
				this.entityData.HeSoNienCheTinChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoNienCheTinChi, this.entityData.HeSoNienCheTinChi);
				OnPropertyChanged("HeSoNienCheTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNgonNgu property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNgonNgu
		{
			get
			{
				return this.entityData.HeSoNgonNgu; 
			}
			
			set
			{
				if (this.entityData.HeSoNgonNgu == value)
					return;
				
                OnPropertyChanging("HeSoNgonNgu");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoNgonNgu, this.entityData.HeSoNgonNgu);
				this.entityData.HeSoNgonNgu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoNgonNgu, this.entityData.HeSoNgonNgu);
				OnPropertyChanged("HeSoNgonNgu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoBacDaoTao
		{
			get
			{
				return this.entityData.HeSoBacDaoTao; 
			}
			
			set
			{
				if (this.entityData.HeSoBacDaoTao == value)
					return;
				
                OnPropertyChanging("HeSoBacDaoTao");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoBacDaoTao, this.entityData.HeSoBacDaoTao);
				this.entityData.HeSoBacDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoBacDaoTao, this.entityData.HeSoBacDaoTao);
				OnPropertyChanged("HeSoBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayChiTra property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NgayChiTra
		{
			get
			{
				return this.entityData.NgayChiTra; 
			}
			
			set
			{
				if (this.entityData.NgayChiTra == value)
					return;
				
                OnPropertyChanging("NgayChiTra");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.NgayChiTra, this.entityData.NgayChiTra);
				this.entityData.NgayChiTra = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.NgayChiTra, this.entityData.NgayChiTra);
				OnPropertyChanged("NgayChiTra");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the XacNhanChiTra property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? XacNhanChiTra
		{
			get
			{
				return this.entityData.XacNhanChiTra; 
			}
			
			set
			{
				if (this.entityData.XacNhanChiTra == value)
					return;
				
                OnPropertyChanging("XacNhanChiTra");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.XacNhanChiTra, this.entityData.XacNhanChiTra);
				this.entityData.XacNhanChiTra = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.XacNhanChiTra, this.entityData.XacNhanChiTra);
				OnPropertyChanged("XacNhanChiTra");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GhiChu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String GhiChu
		{
			get
			{
				return this.entityData.GhiChu; 
			}
			
			set
			{
				if (this.entityData.GhiChu == value)
					return;
				
                OnPropertyChanging("GhiChu");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.GhiChu, this.entityData.GhiChu);
				this.entityData.GhiChu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.GhiChu, this.entityData.GhiChu);
				OnPropertyChanged("GhiChu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NguoiCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String NguoiCapNhat
		{
			get
			{
				return this.entityData.NguoiCapNhat; 
			}
			
			set
			{
				if (this.entityData.NguoiCapNhat == value)
					return;
				
                OnPropertyChanging("NguoiCapNhat");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				this.entityData.NguoiCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				OnPropertyChanged("NguoiCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoCongViec property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoCongViec
		{
			get
			{
				return this.entityData.HeSoCongViec; 
			}
			
			set
			{
				if (this.entityData.HeSoCongViec == value)
					return;
				
                OnPropertyChanging("HeSoCongViec");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoCongViec, this.entityData.HeSoCongViec);
				this.entityData.HeSoCongViec = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoCongViec, this.entityData.HeSoCongViec);
				OnPropertyChanged("HeSoCongViec");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgonNguGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NgonNguGiangDay
		{
			get
			{
				return this.entityData.NgonNguGiangDay; 
			}
			
			set
			{
				if (this.entityData.NgonNguGiangDay == value)
					return;
				
                OnPropertyChanging("NgonNguGiangDay");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.NgonNguGiangDay, this.entityData.NgonNguGiangDay);
				this.entityData.NgonNguGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.NgonNguGiangDay, this.entityData.NgonNguGiangDay);
				OnPropertyChanged("NgonNguGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaCoSo property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaCoSo
		{
			get
			{
				return this.entityData.MaCoSo; 
			}
			
			set
			{
				if (this.entityData.MaCoSo == value)
					return;
				
                OnPropertyChanging("MaCoSo");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaCoSo, this.entityData.MaCoSo);
				this.entityData.MaCoSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaCoSo, this.entityData.MaCoSo);
				OnPropertyChanged("MaCoSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MucThanhToan property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MucThanhToan
		{
			get
			{
				return this.entityData.MucThanhToan; 
			}
			
			set
			{
				if (this.entityData.MucThanhToan == value)
					return;
				
                OnPropertyChanging("MucThanhToan");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MucThanhToan, this.entityData.MucThanhToan);
				this.entityData.MucThanhToan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MucThanhToan, this.entityData.MucThanhToan);
				OnPropertyChanged("MucThanhToan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DotChiTra property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String DotChiTra
		{
			get
			{
				return this.entityData.DotChiTra; 
			}
			
			set
			{
				if (this.entityData.DotChiTra == value)
					return;
				
                OnPropertyChanging("DotChiTra");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.DotChiTra, this.entityData.DotChiTra);
				this.entityData.DotChiTra = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.DotChiTra, this.entityData.DotChiTra);
				OnPropertyChanged("DotChiTra");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoKhoiNganh property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoKhoiNganh
		{
			get
			{
				return this.entityData.HeSoKhoiNganh; 
			}
			
			set
			{
				if (this.entityData.HeSoKhoiNganh == value)
					return;
				
                OnPropertyChanging("HeSoKhoiNganh");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoKhoiNganh, this.entityData.HeSoKhoiNganh);
				this.entityData.HeSoKhoiNganh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoKhoiNganh, this.entityData.HeSoKhoiNganh);
				OnPropertyChanged("HeSoKhoiNganh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaCauHinhChotGio property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaCauHinhChotGio
		{
			get
			{
				return this.entityData.MaCauHinhChotGio; 
			}
			
			set
			{
				if (this.entityData.MaCauHinhChotGio == value)
					return;
				
                OnPropertyChanging("MaCauHinhChotGio");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaCauHinhChotGio, this.entityData.MaCauHinhChotGio);
				this.entityData.MaCauHinhChotGio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaCauHinhChotGio, this.entityData.MaCauHinhChotGio);
				OnPropertyChanged("MaCauHinhChotGio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaKhoaCuaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaKhoaCuaMonHoc
		{
			get
			{
				return this.entityData.MaKhoaCuaMonHoc; 
			}
			
			set
			{
				if (this.entityData.MaKhoaCuaMonHoc == value)
					return;
				
                OnPropertyChanging("MaKhoaCuaMonHoc");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaKhoaCuaMonHoc, this.entityData.MaKhoaCuaMonHoc);
				this.entityData.MaKhoaCuaMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaKhoaCuaMonHoc, this.entityData.MaKhoaCuaMonHoc);
				OnPropertyChanged("MaKhoaCuaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoThamNien property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoThamNien
		{
			get
			{
				return this.entityData.HeSoThamNien; 
			}
			
			set
			{
				if (this.entityData.HeSoThamNien == value)
					return;
				
                OnPropertyChanging("HeSoThamNien");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.HeSoThamNien, this.entityData.HeSoThamNien);
				this.entityData.HeSoThamNien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.HeSoThamNien, this.entityData.HeSoThamNien);
				OnPropertyChanged("HeSoThamNien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiHinhDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaLoaiHinhDaoTao
		{
			get
			{
				return this.entityData.MaLoaiHinhDaoTao; 
			}
			
			set
			{
				if (this.entityData.MaLoaiHinhDaoTao == value)
					return;
				
                OnPropertyChanging("MaLoaiHinhDaoTao");                    
				OnColumnChanging(KetQuaThanhToanThuLaoColumn.MaLoaiHinhDaoTao, this.entityData.MaLoaiHinhDaoTao);
				this.entityData.MaLoaiHinhDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KetQuaThanhToanThuLaoColumn.MaLoaiHinhDaoTao, this.entityData.MaLoaiHinhDaoTao);
				OnPropertyChanged("MaLoaiHinhDaoTao");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NamHoc", "Nam Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HocKy", "Hoc Ky", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaDonVi", "Ma Don Vi", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Loai", "Loai", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PhanLoai", "Phan Loai", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaMonHoc", "Ma Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenMonHoc", "Ten Mon Hoc", 1000));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LoaiHocPhan", "Loai Hoc Phan", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Nhom", "Nhom", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLop", "Ma Lop", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaHinhThucDaoTao", "Ma Hinh Thuc Dao Tao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenCoSo", "Ten Co So", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaNhomMonHoc", "Ma Nhom Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LoaiLop", "Loai Lop", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaBacDaoTao", "Ma Bac Dao Tao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MalopHocPhan", "Malop Hoc Phan", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaKhoaHoc", "Ma Khoa Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayChiTra", "Ngay Chi Tra", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GhiChu", "Ghi Chu", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NguoiCapNhat", "Nguoi Cap Nhat", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgonNguGiangDay", "Ngon Ngu Giang Day", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaCoSo", "Ma Co So", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DotChiTra", "Dot Chi Tra", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaKhoaCuaMonHoc", "Ma Khoa Cua Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLoaiHinhDaoTao", "Ma Loai Hinh Dao Tao", 20));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "KetQuaThanhToanThuLao"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Id", "MaGiangVien", "NamHoc", "HocKy", "MaHocHam", "MaHocVi", "MaLoaiGiangVien", "MaDonVi", "Loai", "PhanLoai", "MaMonHoc", "TenMonHoc", "LoaiHocPhan", "Nhom", "MaLop", "LopClc", "SiSo", "TietThucDay", "TietChuNhat", "HeSoHocKy", "HeSoLopDong", "TietQuyDoi", "DonGia", "ThanhTien", "LanChot", "NgayCapNhat", "MaHinhThucDaoTao", "DonGiaTrongChuan", "DonGiaNgoaiChuan", "TenCoSo", "HeSoQuyDoiThucHanhSangLyThuyet", "HeSoCoSo", "SoGioThucGiangTrenLop", "SoGioChuanTinhThem", "HeSoChucDanhChuyenMon", "HeSoClcCntn", "HeSoThinhGiangMonChuyenNganh", "MaNhomMonHoc", "LoaiLop", "MaBacDaoTao", "MalopHocPhan", "MaKhoaHoc", "HeSoTroCap", "HeSoNgoaiGio", "HeSoLuong", "HeSoMonMoi", "HeSoNienCheTinChi", "HeSoNgonNgu", "HeSoBacDaoTao", "NgayChiTra", "XacNhanChiTra", "GhiChu", "NguoiCapNhat", "HeSoCongViec", "NgonNguGiangDay", "MaCoSo", "MucThanhToan", "DotChiTra", "HeSoKhoiNganh", "MaCauHinhChotGio", "MaKhoaCuaMonHoc", "HeSoThamNien", "MaLoaiHinhDaoTao"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as KetQuaThanhToanThuLaoEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (KetQuaThanhToanThuLao) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<KetQuaThanhToanThuLao>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as KetQuaThanhToanThuLao);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed KetQuaThanhToanThuLao Entity 
		///</summary>
		protected virtual KetQuaThanhToanThuLao Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			KetQuaThanhToanThuLao copy = new KetQuaThanhToanThuLao();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.Id = this.Id;
				copy.MaGiangVien = this.MaGiangVien;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.MaHocHam = this.MaHocHam;
				copy.MaHocVi = this.MaHocVi;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.MaDonVi = this.MaDonVi;
				copy.Loai = this.Loai;
				copy.PhanLoai = this.PhanLoai;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.LoaiHocPhan = this.LoaiHocPhan;
				copy.Nhom = this.Nhom;
				copy.MaLop = this.MaLop;
				copy.LopClc = this.LopClc;
				copy.SiSo = this.SiSo;
				copy.TietThucDay = this.TietThucDay;
				copy.TietChuNhat = this.TietChuNhat;
				copy.HeSoHocKy = this.HeSoHocKy;
				copy.HeSoLopDong = this.HeSoLopDong;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.DonGia = this.DonGia;
				copy.ThanhTien = this.ThanhTien;
				copy.LanChot = this.LanChot;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.MaHinhThucDaoTao = this.MaHinhThucDaoTao;
				copy.DonGiaTrongChuan = this.DonGiaTrongChuan;
				copy.DonGiaNgoaiChuan = this.DonGiaNgoaiChuan;
				copy.TenCoSo = this.TenCoSo;
				copy.HeSoQuyDoiThucHanhSangLyThuyet = this.HeSoQuyDoiThucHanhSangLyThuyet;
				copy.HeSoCoSo = this.HeSoCoSo;
				copy.SoGioThucGiangTrenLop = this.SoGioThucGiangTrenLop;
				copy.SoGioChuanTinhThem = this.SoGioChuanTinhThem;
				copy.HeSoChucDanhChuyenMon = this.HeSoChucDanhChuyenMon;
				copy.HeSoClcCntn = this.HeSoClcCntn;
				copy.HeSoThinhGiangMonChuyenNganh = this.HeSoThinhGiangMonChuyenNganh;
				copy.MaNhomMonHoc = this.MaNhomMonHoc;
				copy.LoaiLop = this.LoaiLop;
				copy.MaBacDaoTao = this.MaBacDaoTao;
				copy.MalopHocPhan = this.MalopHocPhan;
				copy.MaKhoaHoc = this.MaKhoaHoc;
				copy.HeSoTroCap = this.HeSoTroCap;
				copy.HeSoNgoaiGio = this.HeSoNgoaiGio;
				copy.HeSoLuong = this.HeSoLuong;
				copy.HeSoMonMoi = this.HeSoMonMoi;
				copy.HeSoNienCheTinChi = this.HeSoNienCheTinChi;
				copy.HeSoNgonNgu = this.HeSoNgonNgu;
				copy.HeSoBacDaoTao = this.HeSoBacDaoTao;
				copy.NgayChiTra = this.NgayChiTra;
				copy.XacNhanChiTra = this.XacNhanChiTra;
				copy.GhiChu = this.GhiChu;
				copy.NguoiCapNhat = this.NguoiCapNhat;
				copy.HeSoCongViec = this.HeSoCongViec;
				copy.NgonNguGiangDay = this.NgonNguGiangDay;
				copy.MaCoSo = this.MaCoSo;
				copy.MucThanhToan = this.MucThanhToan;
				copy.DotChiTra = this.DotChiTra;
				copy.HeSoKhoiNganh = this.HeSoKhoiNganh;
				copy.MaCauHinhChotGio = this.MaCauHinhChotGio;
				copy.MaKhoaCuaMonHoc = this.MaKhoaCuaMonHoc;
				copy.HeSoThamNien = this.HeSoThamNien;
				copy.MaLoaiHinhDaoTao = this.MaLoaiHinhDaoTao;
			
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed KetQuaThanhToanThuLao Entity 
		///</summary>
		public virtual KetQuaThanhToanThuLao Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed KetQuaThanhToanThuLao Entity which is a deep copy of the current entity.
		///</summary>
		public virtual KetQuaThanhToanThuLao DeepCopy()
		{
			return EntityHelper.Clone<KetQuaThanhToanThuLao>(this as KetQuaThanhToanThuLao);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as KetQuaThanhToanThuLaoEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new KetQuaThanhToanThuLaoEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as KetQuaThanhToanThuLaoEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(KetQuaThanhToanThuLaoColumn column)
		{
			switch(column)
			{
					case KetQuaThanhToanThuLaoColumn.Id:
					return entityData.Id != _originalData.Id;
					case KetQuaThanhToanThuLaoColumn.MaGiangVien:
					return entityData.MaGiangVien != _originalData.MaGiangVien;
					case KetQuaThanhToanThuLaoColumn.NamHoc:
					return entityData.NamHoc != _originalData.NamHoc;
					case KetQuaThanhToanThuLaoColumn.HocKy:
					return entityData.HocKy != _originalData.HocKy;
					case KetQuaThanhToanThuLaoColumn.MaHocHam:
					return entityData.MaHocHam != _originalData.MaHocHam;
					case KetQuaThanhToanThuLaoColumn.MaHocVi:
					return entityData.MaHocVi != _originalData.MaHocVi;
					case KetQuaThanhToanThuLaoColumn.MaLoaiGiangVien:
					return entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
					case KetQuaThanhToanThuLaoColumn.MaDonVi:
					return entityData.MaDonVi != _originalData.MaDonVi;
					case KetQuaThanhToanThuLaoColumn.Loai:
					return entityData.Loai != _originalData.Loai;
					case KetQuaThanhToanThuLaoColumn.PhanLoai:
					return entityData.PhanLoai != _originalData.PhanLoai;
					case KetQuaThanhToanThuLaoColumn.MaMonHoc:
					return entityData.MaMonHoc != _originalData.MaMonHoc;
					case KetQuaThanhToanThuLaoColumn.TenMonHoc:
					return entityData.TenMonHoc != _originalData.TenMonHoc;
					case KetQuaThanhToanThuLaoColumn.LoaiHocPhan:
					return entityData.LoaiHocPhan != _originalData.LoaiHocPhan;
					case KetQuaThanhToanThuLaoColumn.Nhom:
					return entityData.Nhom != _originalData.Nhom;
					case KetQuaThanhToanThuLaoColumn.MaLop:
					return entityData.MaLop != _originalData.MaLop;
					case KetQuaThanhToanThuLaoColumn.LopClc:
					return entityData.LopClc != _originalData.LopClc;
					case KetQuaThanhToanThuLaoColumn.SiSo:
					return entityData.SiSo != _originalData.SiSo;
					case KetQuaThanhToanThuLaoColumn.TietThucDay:
					return entityData.TietThucDay != _originalData.TietThucDay;
					case KetQuaThanhToanThuLaoColumn.TietChuNhat:
					return entityData.TietChuNhat != _originalData.TietChuNhat;
					case KetQuaThanhToanThuLaoColumn.HeSoHocKy:
					return entityData.HeSoHocKy != _originalData.HeSoHocKy;
					case KetQuaThanhToanThuLaoColumn.HeSoLopDong:
					return entityData.HeSoLopDong != _originalData.HeSoLopDong;
					case KetQuaThanhToanThuLaoColumn.TietQuyDoi:
					return entityData.TietQuyDoi != _originalData.TietQuyDoi;
					case KetQuaThanhToanThuLaoColumn.DonGia:
					return entityData.DonGia != _originalData.DonGia;
					case KetQuaThanhToanThuLaoColumn.ThanhTien:
					return entityData.ThanhTien != _originalData.ThanhTien;
					case KetQuaThanhToanThuLaoColumn.LanChot:
					return entityData.LanChot != _originalData.LanChot;
					case KetQuaThanhToanThuLaoColumn.NgayCapNhat:
					return entityData.NgayCapNhat != _originalData.NgayCapNhat;
					case KetQuaThanhToanThuLaoColumn.MaHinhThucDaoTao:
					return entityData.MaHinhThucDaoTao != _originalData.MaHinhThucDaoTao;
					case KetQuaThanhToanThuLaoColumn.DonGiaTrongChuan:
					return entityData.DonGiaTrongChuan != _originalData.DonGiaTrongChuan;
					case KetQuaThanhToanThuLaoColumn.DonGiaNgoaiChuan:
					return entityData.DonGiaNgoaiChuan != _originalData.DonGiaNgoaiChuan;
					case KetQuaThanhToanThuLaoColumn.TenCoSo:
					return entityData.TenCoSo != _originalData.TenCoSo;
					case KetQuaThanhToanThuLaoColumn.HeSoQuyDoiThucHanhSangLyThuyet:
					return entityData.HeSoQuyDoiThucHanhSangLyThuyet != _originalData.HeSoQuyDoiThucHanhSangLyThuyet;
					case KetQuaThanhToanThuLaoColumn.HeSoCoSo:
					return entityData.HeSoCoSo != _originalData.HeSoCoSo;
					case KetQuaThanhToanThuLaoColumn.SoGioThucGiangTrenLop:
					return entityData.SoGioThucGiangTrenLop != _originalData.SoGioThucGiangTrenLop;
					case KetQuaThanhToanThuLaoColumn.SoGioChuanTinhThem:
					return entityData.SoGioChuanTinhThem != _originalData.SoGioChuanTinhThem;
					case KetQuaThanhToanThuLaoColumn.HeSoChucDanhChuyenMon:
					return entityData.HeSoChucDanhChuyenMon != _originalData.HeSoChucDanhChuyenMon;
					case KetQuaThanhToanThuLaoColumn.HeSoClcCntn:
					return entityData.HeSoClcCntn != _originalData.HeSoClcCntn;
					case KetQuaThanhToanThuLaoColumn.HeSoThinhGiangMonChuyenNganh:
					return entityData.HeSoThinhGiangMonChuyenNganh != _originalData.HeSoThinhGiangMonChuyenNganh;
					case KetQuaThanhToanThuLaoColumn.MaNhomMonHoc:
					return entityData.MaNhomMonHoc != _originalData.MaNhomMonHoc;
					case KetQuaThanhToanThuLaoColumn.LoaiLop:
					return entityData.LoaiLop != _originalData.LoaiLop;
					case KetQuaThanhToanThuLaoColumn.MaBacDaoTao:
					return entityData.MaBacDaoTao != _originalData.MaBacDaoTao;
					case KetQuaThanhToanThuLaoColumn.MalopHocPhan:
					return entityData.MalopHocPhan != _originalData.MalopHocPhan;
					case KetQuaThanhToanThuLaoColumn.MaKhoaHoc:
					return entityData.MaKhoaHoc != _originalData.MaKhoaHoc;
					case KetQuaThanhToanThuLaoColumn.HeSoTroCap:
					return entityData.HeSoTroCap != _originalData.HeSoTroCap;
					case KetQuaThanhToanThuLaoColumn.HeSoNgoaiGio:
					return entityData.HeSoNgoaiGio != _originalData.HeSoNgoaiGio;
					case KetQuaThanhToanThuLaoColumn.HeSoLuong:
					return entityData.HeSoLuong != _originalData.HeSoLuong;
					case KetQuaThanhToanThuLaoColumn.HeSoMonMoi:
					return entityData.HeSoMonMoi != _originalData.HeSoMonMoi;
					case KetQuaThanhToanThuLaoColumn.HeSoNienCheTinChi:
					return entityData.HeSoNienCheTinChi != _originalData.HeSoNienCheTinChi;
					case KetQuaThanhToanThuLaoColumn.HeSoNgonNgu:
					return entityData.HeSoNgonNgu != _originalData.HeSoNgonNgu;
					case KetQuaThanhToanThuLaoColumn.HeSoBacDaoTao:
					return entityData.HeSoBacDaoTao != _originalData.HeSoBacDaoTao;
					case KetQuaThanhToanThuLaoColumn.NgayChiTra:
					return entityData.NgayChiTra != _originalData.NgayChiTra;
					case KetQuaThanhToanThuLaoColumn.XacNhanChiTra:
					return entityData.XacNhanChiTra != _originalData.XacNhanChiTra;
					case KetQuaThanhToanThuLaoColumn.GhiChu:
					return entityData.GhiChu != _originalData.GhiChu;
					case KetQuaThanhToanThuLaoColumn.NguoiCapNhat:
					return entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
					case KetQuaThanhToanThuLaoColumn.HeSoCongViec:
					return entityData.HeSoCongViec != _originalData.HeSoCongViec;
					case KetQuaThanhToanThuLaoColumn.NgonNguGiangDay:
					return entityData.NgonNguGiangDay != _originalData.NgonNguGiangDay;
					case KetQuaThanhToanThuLaoColumn.MaCoSo:
					return entityData.MaCoSo != _originalData.MaCoSo;
					case KetQuaThanhToanThuLaoColumn.MucThanhToan:
					return entityData.MucThanhToan != _originalData.MucThanhToan;
					case KetQuaThanhToanThuLaoColumn.DotChiTra:
					return entityData.DotChiTra != _originalData.DotChiTra;
					case KetQuaThanhToanThuLaoColumn.HeSoKhoiNganh:
					return entityData.HeSoKhoiNganh != _originalData.HeSoKhoiNganh;
					case KetQuaThanhToanThuLaoColumn.MaCauHinhChotGio:
					return entityData.MaCauHinhChotGio != _originalData.MaCauHinhChotGio;
					case KetQuaThanhToanThuLaoColumn.MaKhoaCuaMonHoc:
					return entityData.MaKhoaCuaMonHoc != _originalData.MaKhoaCuaMonHoc;
					case KetQuaThanhToanThuLaoColumn.HeSoThamNien:
					return entityData.HeSoThamNien != _originalData.HeSoThamNien;
					case KetQuaThanhToanThuLaoColumn.MaLoaiHinhDaoTao:
					return entityData.MaLoaiHinhDaoTao != _originalData.MaLoaiHinhDaoTao;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< KetQuaThanhToanThuLaoColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.MaGiangVien != _originalData.MaGiangVien;
			result = result || entityData.NamHoc != _originalData.NamHoc;
			result = result || entityData.HocKy != _originalData.HocKy;
			result = result || entityData.MaHocHam != _originalData.MaHocHam;
			result = result || entityData.MaHocVi != _originalData.MaHocVi;
			result = result || entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
			result = result || entityData.MaDonVi != _originalData.MaDonVi;
			result = result || entityData.Loai != _originalData.Loai;
			result = result || entityData.PhanLoai != _originalData.PhanLoai;
			result = result || entityData.MaMonHoc != _originalData.MaMonHoc;
			result = result || entityData.TenMonHoc != _originalData.TenMonHoc;
			result = result || entityData.LoaiHocPhan != _originalData.LoaiHocPhan;
			result = result || entityData.Nhom != _originalData.Nhom;
			result = result || entityData.MaLop != _originalData.MaLop;
			result = result || entityData.LopClc != _originalData.LopClc;
			result = result || entityData.SiSo != _originalData.SiSo;
			result = result || entityData.TietThucDay != _originalData.TietThucDay;
			result = result || entityData.TietChuNhat != _originalData.TietChuNhat;
			result = result || entityData.HeSoHocKy != _originalData.HeSoHocKy;
			result = result || entityData.HeSoLopDong != _originalData.HeSoLopDong;
			result = result || entityData.TietQuyDoi != _originalData.TietQuyDoi;
			result = result || entityData.DonGia != _originalData.DonGia;
			result = result || entityData.ThanhTien != _originalData.ThanhTien;
			result = result || entityData.LanChot != _originalData.LanChot;
			result = result || entityData.NgayCapNhat != _originalData.NgayCapNhat;
			result = result || entityData.MaHinhThucDaoTao != _originalData.MaHinhThucDaoTao;
			result = result || entityData.DonGiaTrongChuan != _originalData.DonGiaTrongChuan;
			result = result || entityData.DonGiaNgoaiChuan != _originalData.DonGiaNgoaiChuan;
			result = result || entityData.TenCoSo != _originalData.TenCoSo;
			result = result || entityData.HeSoQuyDoiThucHanhSangLyThuyet != _originalData.HeSoQuyDoiThucHanhSangLyThuyet;
			result = result || entityData.HeSoCoSo != _originalData.HeSoCoSo;
			result = result || entityData.SoGioThucGiangTrenLop != _originalData.SoGioThucGiangTrenLop;
			result = result || entityData.SoGioChuanTinhThem != _originalData.SoGioChuanTinhThem;
			result = result || entityData.HeSoChucDanhChuyenMon != _originalData.HeSoChucDanhChuyenMon;
			result = result || entityData.HeSoClcCntn != _originalData.HeSoClcCntn;
			result = result || entityData.HeSoThinhGiangMonChuyenNganh != _originalData.HeSoThinhGiangMonChuyenNganh;
			result = result || entityData.MaNhomMonHoc != _originalData.MaNhomMonHoc;
			result = result || entityData.LoaiLop != _originalData.LoaiLop;
			result = result || entityData.MaBacDaoTao != _originalData.MaBacDaoTao;
			result = result || entityData.MalopHocPhan != _originalData.MalopHocPhan;
			result = result || entityData.MaKhoaHoc != _originalData.MaKhoaHoc;
			result = result || entityData.HeSoTroCap != _originalData.HeSoTroCap;
			result = result || entityData.HeSoNgoaiGio != _originalData.HeSoNgoaiGio;
			result = result || entityData.HeSoLuong != _originalData.HeSoLuong;
			result = result || entityData.HeSoMonMoi != _originalData.HeSoMonMoi;
			result = result || entityData.HeSoNienCheTinChi != _originalData.HeSoNienCheTinChi;
			result = result || entityData.HeSoNgonNgu != _originalData.HeSoNgonNgu;
			result = result || entityData.HeSoBacDaoTao != _originalData.HeSoBacDaoTao;
			result = result || entityData.NgayChiTra != _originalData.NgayChiTra;
			result = result || entityData.XacNhanChiTra != _originalData.XacNhanChiTra;
			result = result || entityData.GhiChu != _originalData.GhiChu;
			result = result || entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
			result = result || entityData.HeSoCongViec != _originalData.HeSoCongViec;
			result = result || entityData.NgonNguGiangDay != _originalData.NgonNguGiangDay;
			result = result || entityData.MaCoSo != _originalData.MaCoSo;
			result = result || entityData.MucThanhToan != _originalData.MucThanhToan;
			result = result || entityData.DotChiTra != _originalData.DotChiTra;
			result = result || entityData.HeSoKhoiNganh != _originalData.HeSoKhoiNganh;
			result = result || entityData.MaCauHinhChotGio != _originalData.MaCauHinhChotGio;
			result = result || entityData.MaKhoaCuaMonHoc != _originalData.MaKhoaCuaMonHoc;
			result = result || entityData.HeSoThamNien != _originalData.HeSoThamNien;
			result = result || entityData.MaLoaiHinhDaoTao != _originalData.MaLoaiHinhDaoTao;
			return result;
		}	
		
		///<summary>
		///  Returns a KetQuaThanhToanThuLao Entity with the original data.
		///</summary>
		public KetQuaThanhToanThuLao GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateKetQuaThanhToanThuLao(
				_originalData.MaGiangVien,
				_originalData.NamHoc,
				_originalData.HocKy,
				_originalData.MaHocHam,
				_originalData.MaHocVi,
				_originalData.MaLoaiGiangVien,
				_originalData.MaDonVi,
				_originalData.Loai,
				_originalData.PhanLoai,
				_originalData.MaMonHoc,
				_originalData.TenMonHoc,
				_originalData.LoaiHocPhan,
				_originalData.Nhom,
				_originalData.MaLop,
				_originalData.LopClc,
				_originalData.SiSo,
				_originalData.TietThucDay,
				_originalData.TietChuNhat,
				_originalData.HeSoHocKy,
				_originalData.HeSoLopDong,
				_originalData.TietQuyDoi,
				_originalData.DonGia,
				_originalData.ThanhTien,
				_originalData.LanChot,
				_originalData.NgayCapNhat,
				_originalData.MaHinhThucDaoTao,
				_originalData.DonGiaTrongChuan,
				_originalData.DonGiaNgoaiChuan,
				_originalData.TenCoSo,
				_originalData.HeSoQuyDoiThucHanhSangLyThuyet,
				_originalData.HeSoCoSo,
				_originalData.SoGioThucGiangTrenLop,
				_originalData.SoGioChuanTinhThem,
				_originalData.HeSoChucDanhChuyenMon,
				_originalData.HeSoClcCntn,
				_originalData.HeSoThinhGiangMonChuyenNganh,
				_originalData.MaNhomMonHoc,
				_originalData.LoaiLop,
				_originalData.MaBacDaoTao,
				_originalData.MalopHocPhan,
				_originalData.MaKhoaHoc,
				_originalData.HeSoTroCap,
				_originalData.HeSoNgoaiGio,
				_originalData.HeSoLuong,
				_originalData.HeSoMonMoi,
				_originalData.HeSoNienCheTinChi,
				_originalData.HeSoNgonNgu,
				_originalData.HeSoBacDaoTao,
				_originalData.NgayChiTra,
				_originalData.XacNhanChiTra,
				_originalData.GhiChu,
				_originalData.NguoiCapNhat,
				_originalData.HeSoCongViec,
				_originalData.NgonNguGiangDay,
				_originalData.MaCoSo,
				_originalData.MucThanhToan,
				_originalData.DotChiTra,
				_originalData.HeSoKhoiNganh,
				_originalData.MaCauHinhChotGio,
				_originalData.MaKhoaCuaMonHoc,
				_originalData.HeSoThamNien,
				_originalData.MaLoaiHinhDaoTao
				);
				
			return (KetQuaThanhToanThuLao)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="KetQuaThanhToanThuLaoBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is KetQuaThanhToanThuLaoBase)
				return ValueEquals(this, (KetQuaThanhToanThuLaoBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="KetQuaThanhToanThuLaoBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString()).GetHashCode() ^ 
					((this.NamHoc == null) ? string.Empty : this.NamHoc.ToString()).GetHashCode() ^ 
					((this.HocKy == null) ? string.Empty : this.HocKy.ToString()).GetHashCode() ^ 
					((this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString()).GetHashCode() ^ 
					((this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString()).GetHashCode() ^ 
					((this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString()).GetHashCode() ^ 
					((this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString()).GetHashCode() ^ 
					((this.Loai == null) ? string.Empty : this.Loai.ToString()).GetHashCode() ^ 
					((this.PhanLoai == null) ? string.Empty : this.PhanLoai.ToString()).GetHashCode() ^ 
					((this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString()).GetHashCode() ^ 
					((this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString()).GetHashCode() ^ 
					((this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString()).GetHashCode() ^ 
					((this.Nhom == null) ? string.Empty : this.Nhom.ToString()).GetHashCode() ^ 
					((this.MaLop == null) ? string.Empty : this.MaLop.ToString()).GetHashCode() ^ 
					((this.LopClc == null) ? string.Empty : this.LopClc.ToString()).GetHashCode() ^ 
					((this.SiSo == null) ? string.Empty : this.SiSo.ToString()).GetHashCode() ^ 
					((this.TietThucDay == null) ? string.Empty : this.TietThucDay.ToString()).GetHashCode() ^ 
					((this.TietChuNhat == null) ? string.Empty : this.TietChuNhat.ToString()).GetHashCode() ^ 
					((this.HeSoHocKy == null) ? string.Empty : this.HeSoHocKy.ToString()).GetHashCode() ^ 
					((this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString()).GetHashCode() ^ 
					((this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString()).GetHashCode() ^ 
					((this.DonGia == null) ? string.Empty : this.DonGia.ToString()).GetHashCode() ^ 
					((this.ThanhTien == null) ? string.Empty : this.ThanhTien.ToString()).GetHashCode() ^ 
					((this.LanChot == null) ? string.Empty : this.LanChot.ToString()).GetHashCode() ^ 
					((this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString()).GetHashCode() ^ 
					((this.MaHinhThucDaoTao == null) ? string.Empty : this.MaHinhThucDaoTao.ToString()).GetHashCode() ^ 
					((this.DonGiaTrongChuan == null) ? string.Empty : this.DonGiaTrongChuan.ToString()).GetHashCode() ^ 
					((this.DonGiaNgoaiChuan == null) ? string.Empty : this.DonGiaNgoaiChuan.ToString()).GetHashCode() ^ 
					((this.TenCoSo == null) ? string.Empty : this.TenCoSo.ToString()).GetHashCode() ^ 
					((this.HeSoQuyDoiThucHanhSangLyThuyet == null) ? string.Empty : this.HeSoQuyDoiThucHanhSangLyThuyet.ToString()).GetHashCode() ^ 
					((this.HeSoCoSo == null) ? string.Empty : this.HeSoCoSo.ToString()).GetHashCode() ^ 
					((this.SoGioThucGiangTrenLop == null) ? string.Empty : this.SoGioThucGiangTrenLop.ToString()).GetHashCode() ^ 
					((this.SoGioChuanTinhThem == null) ? string.Empty : this.SoGioChuanTinhThem.ToString()).GetHashCode() ^ 
					((this.HeSoChucDanhChuyenMon == null) ? string.Empty : this.HeSoChucDanhChuyenMon.ToString()).GetHashCode() ^ 
					((this.HeSoClcCntn == null) ? string.Empty : this.HeSoClcCntn.ToString()).GetHashCode() ^ 
					((this.HeSoThinhGiangMonChuyenNganh == null) ? string.Empty : this.HeSoThinhGiangMonChuyenNganh.ToString()).GetHashCode() ^ 
					((this.MaNhomMonHoc == null) ? string.Empty : this.MaNhomMonHoc.ToString()).GetHashCode() ^ 
					((this.LoaiLop == null) ? string.Empty : this.LoaiLop.ToString()).GetHashCode() ^ 
					((this.MaBacDaoTao == null) ? string.Empty : this.MaBacDaoTao.ToString()).GetHashCode() ^ 
					((this.MalopHocPhan == null) ? string.Empty : this.MalopHocPhan.ToString()).GetHashCode() ^ 
					((this.MaKhoaHoc == null) ? string.Empty : this.MaKhoaHoc.ToString()).GetHashCode() ^ 
					((this.HeSoTroCap == null) ? string.Empty : this.HeSoTroCap.ToString()).GetHashCode() ^ 
					((this.HeSoNgoaiGio == null) ? string.Empty : this.HeSoNgoaiGio.ToString()).GetHashCode() ^ 
					((this.HeSoLuong == null) ? string.Empty : this.HeSoLuong.ToString()).GetHashCode() ^ 
					((this.HeSoMonMoi == null) ? string.Empty : this.HeSoMonMoi.ToString()).GetHashCode() ^ 
					((this.HeSoNienCheTinChi == null) ? string.Empty : this.HeSoNienCheTinChi.ToString()).GetHashCode() ^ 
					((this.HeSoNgonNgu == null) ? string.Empty : this.HeSoNgonNgu.ToString()).GetHashCode() ^ 
					((this.HeSoBacDaoTao == null) ? string.Empty : this.HeSoBacDaoTao.ToString()).GetHashCode() ^ 
					((this.NgayChiTra == null) ? string.Empty : this.NgayChiTra.ToString()).GetHashCode() ^ 
					((this.XacNhanChiTra == null) ? string.Empty : this.XacNhanChiTra.ToString()).GetHashCode() ^ 
					((this.GhiChu == null) ? string.Empty : this.GhiChu.ToString()).GetHashCode() ^ 
					((this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString()).GetHashCode() ^ 
					((this.HeSoCongViec == null) ? string.Empty : this.HeSoCongViec.ToString()).GetHashCode() ^ 
					((this.NgonNguGiangDay == null) ? string.Empty : this.NgonNguGiangDay.ToString()).GetHashCode() ^ 
					((this.MaCoSo == null) ? string.Empty : this.MaCoSo.ToString()).GetHashCode() ^ 
					((this.MucThanhToan == null) ? string.Empty : this.MucThanhToan.ToString()).GetHashCode() ^ 
					((this.DotChiTra == null) ? string.Empty : this.DotChiTra.ToString()).GetHashCode() ^ 
					((this.HeSoKhoiNganh == null) ? string.Empty : this.HeSoKhoiNganh.ToString()).GetHashCode() ^ 
					((this.MaCauHinhChotGio == null) ? string.Empty : this.MaCauHinhChotGio.ToString()).GetHashCode() ^ 
					((this.MaKhoaCuaMonHoc == null) ? string.Empty : this.MaKhoaCuaMonHoc.ToString()).GetHashCode() ^ 
					((this.HeSoThamNien == null) ? string.Empty : this.HeSoThamNien.ToString()).GetHashCode() ^ 
					((this.MaLoaiHinhDaoTao == null) ? string.Empty : this.MaLoaiHinhDaoTao.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="KetQuaThanhToanThuLaoBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(KetQuaThanhToanThuLaoBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="KetQuaThanhToanThuLaoBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="KetQuaThanhToanThuLaoBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="KetQuaThanhToanThuLaoBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(KetQuaThanhToanThuLaoBase Object1, KetQuaThanhToanThuLaoBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.MaGiangVien != null && Object2.MaGiangVien != null )
			{
				if (Object1.MaGiangVien != Object2.MaGiangVien)
					equal = false;
			}
			else if (Object1.MaGiangVien == null ^ Object2.MaGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object2.NamHoc == null )
			{
				equal = false;
			}
			if ( Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object2.HocKy == null )
			{
				equal = false;
			}
			if ( Object1.MaHocHam != null && Object2.MaHocHam != null )
			{
				if (Object1.MaHocHam != Object2.MaHocHam)
					equal = false;
			}
			else if (Object1.MaHocHam == null ^ Object2.MaHocHam == null )
			{
				equal = false;
			}
			if ( Object1.MaHocVi != null && Object2.MaHocVi != null )
			{
				if (Object1.MaHocVi != Object2.MaHocVi)
					equal = false;
			}
			else if (Object1.MaHocVi == null ^ Object2.MaHocVi == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object2.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.MaDonVi != null && Object2.MaDonVi != null )
			{
				if (Object1.MaDonVi != Object2.MaDonVi)
					equal = false;
			}
			else if (Object1.MaDonVi == null ^ Object2.MaDonVi == null )
			{
				equal = false;
			}
			if ( Object1.Loai != null && Object2.Loai != null )
			{
				if (Object1.Loai != Object2.Loai)
					equal = false;
			}
			else if (Object1.Loai == null ^ Object2.Loai == null )
			{
				equal = false;
			}
			if ( Object1.PhanLoai != null && Object2.PhanLoai != null )
			{
				if (Object1.PhanLoai != Object2.PhanLoai)
					equal = false;
			}
			else if (Object1.PhanLoai == null ^ Object2.PhanLoai == null )
			{
				equal = false;
			}
			if ( Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object2.MaMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.TenMonHoc != null && Object2.TenMonHoc != null )
			{
				if (Object1.TenMonHoc != Object2.TenMonHoc)
					equal = false;
			}
			else if (Object1.TenMonHoc == null ^ Object2.TenMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.LoaiHocPhan != null && Object2.LoaiHocPhan != null )
			{
				if (Object1.LoaiHocPhan != Object2.LoaiHocPhan)
					equal = false;
			}
			else if (Object1.LoaiHocPhan == null ^ Object2.LoaiHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.Nhom != null && Object2.Nhom != null )
			{
				if (Object1.Nhom != Object2.Nhom)
					equal = false;
			}
			else if (Object1.Nhom == null ^ Object2.Nhom == null )
			{
				equal = false;
			}
			if ( Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object2.MaLop == null )
			{
				equal = false;
			}
			if ( Object1.LopClc != null && Object2.LopClc != null )
			{
				if (Object1.LopClc != Object2.LopClc)
					equal = false;
			}
			else if (Object1.LopClc == null ^ Object2.LopClc == null )
			{
				equal = false;
			}
			if ( Object1.SiSo != null && Object2.SiSo != null )
			{
				if (Object1.SiSo != Object2.SiSo)
					equal = false;
			}
			else if (Object1.SiSo == null ^ Object2.SiSo == null )
			{
				equal = false;
			}
			if ( Object1.TietThucDay != null && Object2.TietThucDay != null )
			{
				if (Object1.TietThucDay != Object2.TietThucDay)
					equal = false;
			}
			else if (Object1.TietThucDay == null ^ Object2.TietThucDay == null )
			{
				equal = false;
			}
			if ( Object1.TietChuNhat != null && Object2.TietChuNhat != null )
			{
				if (Object1.TietChuNhat != Object2.TietChuNhat)
					equal = false;
			}
			else if (Object1.TietChuNhat == null ^ Object2.TietChuNhat == null )
			{
				equal = false;
			}
			if ( Object1.HeSoHocKy != null && Object2.HeSoHocKy != null )
			{
				if (Object1.HeSoHocKy != Object2.HeSoHocKy)
					equal = false;
			}
			else if (Object1.HeSoHocKy == null ^ Object2.HeSoHocKy == null )
			{
				equal = false;
			}
			if ( Object1.HeSoLopDong != null && Object2.HeSoLopDong != null )
			{
				if (Object1.HeSoLopDong != Object2.HeSoLopDong)
					equal = false;
			}
			else if (Object1.HeSoLopDong == null ^ Object2.HeSoLopDong == null )
			{
				equal = false;
			}
			if ( Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object2.TietQuyDoi == null )
			{
				equal = false;
			}
			if ( Object1.DonGia != null && Object2.DonGia != null )
			{
				if (Object1.DonGia != Object2.DonGia)
					equal = false;
			}
			else if (Object1.DonGia == null ^ Object2.DonGia == null )
			{
				equal = false;
			}
			if ( Object1.ThanhTien != null && Object2.ThanhTien != null )
			{
				if (Object1.ThanhTien != Object2.ThanhTien)
					equal = false;
			}
			else if (Object1.ThanhTien == null ^ Object2.ThanhTien == null )
			{
				equal = false;
			}
			if ( Object1.LanChot != null && Object2.LanChot != null )
			{
				if (Object1.LanChot != Object2.LanChot)
					equal = false;
			}
			else if (Object1.LanChot == null ^ Object2.LanChot == null )
			{
				equal = false;
			}
			if ( Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object2.NgayCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.MaHinhThucDaoTao != null && Object2.MaHinhThucDaoTao != null )
			{
				if (Object1.MaHinhThucDaoTao != Object2.MaHinhThucDaoTao)
					equal = false;
			}
			else if (Object1.MaHinhThucDaoTao == null ^ Object2.MaHinhThucDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.DonGiaTrongChuan != null && Object2.DonGiaTrongChuan != null )
			{
				if (Object1.DonGiaTrongChuan != Object2.DonGiaTrongChuan)
					equal = false;
			}
			else if (Object1.DonGiaTrongChuan == null ^ Object2.DonGiaTrongChuan == null )
			{
				equal = false;
			}
			if ( Object1.DonGiaNgoaiChuan != null && Object2.DonGiaNgoaiChuan != null )
			{
				if (Object1.DonGiaNgoaiChuan != Object2.DonGiaNgoaiChuan)
					equal = false;
			}
			else if (Object1.DonGiaNgoaiChuan == null ^ Object2.DonGiaNgoaiChuan == null )
			{
				equal = false;
			}
			if ( Object1.TenCoSo != null && Object2.TenCoSo != null )
			{
				if (Object1.TenCoSo != Object2.TenCoSo)
					equal = false;
			}
			else if (Object1.TenCoSo == null ^ Object2.TenCoSo == null )
			{
				equal = false;
			}
			if ( Object1.HeSoQuyDoiThucHanhSangLyThuyet != null && Object2.HeSoQuyDoiThucHanhSangLyThuyet != null )
			{
				if (Object1.HeSoQuyDoiThucHanhSangLyThuyet != Object2.HeSoQuyDoiThucHanhSangLyThuyet)
					equal = false;
			}
			else if (Object1.HeSoQuyDoiThucHanhSangLyThuyet == null ^ Object2.HeSoQuyDoiThucHanhSangLyThuyet == null )
			{
				equal = false;
			}
			if ( Object1.HeSoCoSo != null && Object2.HeSoCoSo != null )
			{
				if (Object1.HeSoCoSo != Object2.HeSoCoSo)
					equal = false;
			}
			else if (Object1.HeSoCoSo == null ^ Object2.HeSoCoSo == null )
			{
				equal = false;
			}
			if ( Object1.SoGioThucGiangTrenLop != null && Object2.SoGioThucGiangTrenLop != null )
			{
				if (Object1.SoGioThucGiangTrenLop != Object2.SoGioThucGiangTrenLop)
					equal = false;
			}
			else if (Object1.SoGioThucGiangTrenLop == null ^ Object2.SoGioThucGiangTrenLop == null )
			{
				equal = false;
			}
			if ( Object1.SoGioChuanTinhThem != null && Object2.SoGioChuanTinhThem != null )
			{
				if (Object1.SoGioChuanTinhThem != Object2.SoGioChuanTinhThem)
					equal = false;
			}
			else if (Object1.SoGioChuanTinhThem == null ^ Object2.SoGioChuanTinhThem == null )
			{
				equal = false;
			}
			if ( Object1.HeSoChucDanhChuyenMon != null && Object2.HeSoChucDanhChuyenMon != null )
			{
				if (Object1.HeSoChucDanhChuyenMon != Object2.HeSoChucDanhChuyenMon)
					equal = false;
			}
			else if (Object1.HeSoChucDanhChuyenMon == null ^ Object2.HeSoChucDanhChuyenMon == null )
			{
				equal = false;
			}
			if ( Object1.HeSoClcCntn != null && Object2.HeSoClcCntn != null )
			{
				if (Object1.HeSoClcCntn != Object2.HeSoClcCntn)
					equal = false;
			}
			else if (Object1.HeSoClcCntn == null ^ Object2.HeSoClcCntn == null )
			{
				equal = false;
			}
			if ( Object1.HeSoThinhGiangMonChuyenNganh != null && Object2.HeSoThinhGiangMonChuyenNganh != null )
			{
				if (Object1.HeSoThinhGiangMonChuyenNganh != Object2.HeSoThinhGiangMonChuyenNganh)
					equal = false;
			}
			else if (Object1.HeSoThinhGiangMonChuyenNganh == null ^ Object2.HeSoThinhGiangMonChuyenNganh == null )
			{
				equal = false;
			}
			if ( Object1.MaNhomMonHoc != null && Object2.MaNhomMonHoc != null )
			{
				if (Object1.MaNhomMonHoc != Object2.MaNhomMonHoc)
					equal = false;
			}
			else if (Object1.MaNhomMonHoc == null ^ Object2.MaNhomMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.LoaiLop != null && Object2.LoaiLop != null )
			{
				if (Object1.LoaiLop != Object2.LoaiLop)
					equal = false;
			}
			else if (Object1.LoaiLop == null ^ Object2.LoaiLop == null )
			{
				equal = false;
			}
			if ( Object1.MaBacDaoTao != null && Object2.MaBacDaoTao != null )
			{
				if (Object1.MaBacDaoTao != Object2.MaBacDaoTao)
					equal = false;
			}
			else if (Object1.MaBacDaoTao == null ^ Object2.MaBacDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.MalopHocPhan != null && Object2.MalopHocPhan != null )
			{
				if (Object1.MalopHocPhan != Object2.MalopHocPhan)
					equal = false;
			}
			else if (Object1.MalopHocPhan == null ^ Object2.MalopHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.MaKhoaHoc != null && Object2.MaKhoaHoc != null )
			{
				if (Object1.MaKhoaHoc != Object2.MaKhoaHoc)
					equal = false;
			}
			else if (Object1.MaKhoaHoc == null ^ Object2.MaKhoaHoc == null )
			{
				equal = false;
			}
			if ( Object1.HeSoTroCap != null && Object2.HeSoTroCap != null )
			{
				if (Object1.HeSoTroCap != Object2.HeSoTroCap)
					equal = false;
			}
			else if (Object1.HeSoTroCap == null ^ Object2.HeSoTroCap == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNgoaiGio != null && Object2.HeSoNgoaiGio != null )
			{
				if (Object1.HeSoNgoaiGio != Object2.HeSoNgoaiGio)
					equal = false;
			}
			else if (Object1.HeSoNgoaiGio == null ^ Object2.HeSoNgoaiGio == null )
			{
				equal = false;
			}
			if ( Object1.HeSoLuong != null && Object2.HeSoLuong != null )
			{
				if (Object1.HeSoLuong != Object2.HeSoLuong)
					equal = false;
			}
			else if (Object1.HeSoLuong == null ^ Object2.HeSoLuong == null )
			{
				equal = false;
			}
			if ( Object1.HeSoMonMoi != null && Object2.HeSoMonMoi != null )
			{
				if (Object1.HeSoMonMoi != Object2.HeSoMonMoi)
					equal = false;
			}
			else if (Object1.HeSoMonMoi == null ^ Object2.HeSoMonMoi == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNienCheTinChi != null && Object2.HeSoNienCheTinChi != null )
			{
				if (Object1.HeSoNienCheTinChi != Object2.HeSoNienCheTinChi)
					equal = false;
			}
			else if (Object1.HeSoNienCheTinChi == null ^ Object2.HeSoNienCheTinChi == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNgonNgu != null && Object2.HeSoNgonNgu != null )
			{
				if (Object1.HeSoNgonNgu != Object2.HeSoNgonNgu)
					equal = false;
			}
			else if (Object1.HeSoNgonNgu == null ^ Object2.HeSoNgonNgu == null )
			{
				equal = false;
			}
			if ( Object1.HeSoBacDaoTao != null && Object2.HeSoBacDaoTao != null )
			{
				if (Object1.HeSoBacDaoTao != Object2.HeSoBacDaoTao)
					equal = false;
			}
			else if (Object1.HeSoBacDaoTao == null ^ Object2.HeSoBacDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.NgayChiTra != null && Object2.NgayChiTra != null )
			{
				if (Object1.NgayChiTra != Object2.NgayChiTra)
					equal = false;
			}
			else if (Object1.NgayChiTra == null ^ Object2.NgayChiTra == null )
			{
				equal = false;
			}
			if ( Object1.XacNhanChiTra != null && Object2.XacNhanChiTra != null )
			{
				if (Object1.XacNhanChiTra != Object2.XacNhanChiTra)
					equal = false;
			}
			else if (Object1.XacNhanChiTra == null ^ Object2.XacNhanChiTra == null )
			{
				equal = false;
			}
			if ( Object1.GhiChu != null && Object2.GhiChu != null )
			{
				if (Object1.GhiChu != Object2.GhiChu)
					equal = false;
			}
			else if (Object1.GhiChu == null ^ Object2.GhiChu == null )
			{
				equal = false;
			}
			if ( Object1.NguoiCapNhat != null && Object2.NguoiCapNhat != null )
			{
				if (Object1.NguoiCapNhat != Object2.NguoiCapNhat)
					equal = false;
			}
			else if (Object1.NguoiCapNhat == null ^ Object2.NguoiCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.HeSoCongViec != null && Object2.HeSoCongViec != null )
			{
				if (Object1.HeSoCongViec != Object2.HeSoCongViec)
					equal = false;
			}
			else if (Object1.HeSoCongViec == null ^ Object2.HeSoCongViec == null )
			{
				equal = false;
			}
			if ( Object1.NgonNguGiangDay != null && Object2.NgonNguGiangDay != null )
			{
				if (Object1.NgonNguGiangDay != Object2.NgonNguGiangDay)
					equal = false;
			}
			else if (Object1.NgonNguGiangDay == null ^ Object2.NgonNguGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.MaCoSo != null && Object2.MaCoSo != null )
			{
				if (Object1.MaCoSo != Object2.MaCoSo)
					equal = false;
			}
			else if (Object1.MaCoSo == null ^ Object2.MaCoSo == null )
			{
				equal = false;
			}
			if ( Object1.MucThanhToan != null && Object2.MucThanhToan != null )
			{
				if (Object1.MucThanhToan != Object2.MucThanhToan)
					equal = false;
			}
			else if (Object1.MucThanhToan == null ^ Object2.MucThanhToan == null )
			{
				equal = false;
			}
			if ( Object1.DotChiTra != null && Object2.DotChiTra != null )
			{
				if (Object1.DotChiTra != Object2.DotChiTra)
					equal = false;
			}
			else if (Object1.DotChiTra == null ^ Object2.DotChiTra == null )
			{
				equal = false;
			}
			if ( Object1.HeSoKhoiNganh != null && Object2.HeSoKhoiNganh != null )
			{
				if (Object1.HeSoKhoiNganh != Object2.HeSoKhoiNganh)
					equal = false;
			}
			else if (Object1.HeSoKhoiNganh == null ^ Object2.HeSoKhoiNganh == null )
			{
				equal = false;
			}
			if ( Object1.MaCauHinhChotGio != null && Object2.MaCauHinhChotGio != null )
			{
				if (Object1.MaCauHinhChotGio != Object2.MaCauHinhChotGio)
					equal = false;
			}
			else if (Object1.MaCauHinhChotGio == null ^ Object2.MaCauHinhChotGio == null )
			{
				equal = false;
			}
			if ( Object1.MaKhoaCuaMonHoc != null && Object2.MaKhoaCuaMonHoc != null )
			{
				if (Object1.MaKhoaCuaMonHoc != Object2.MaKhoaCuaMonHoc)
					equal = false;
			}
			else if (Object1.MaKhoaCuaMonHoc == null ^ Object2.MaKhoaCuaMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.HeSoThamNien != null && Object2.HeSoThamNien != null )
			{
				if (Object1.HeSoThamNien != Object2.HeSoThamNien)
					equal = false;
			}
			else if (Object1.HeSoThamNien == null ^ Object2.HeSoThamNien == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiHinhDaoTao != null && Object2.MaLoaiHinhDaoTao != null )
			{
				if (Object1.MaLoaiHinhDaoTao != Object2.MaLoaiHinhDaoTao)
					equal = false;
			}
			else if (Object1.MaLoaiHinhDaoTao == null ^ Object2.MaLoaiHinhDaoTao == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((KetQuaThanhToanThuLaoBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static KetQuaThanhToanThuLaoComparer GetComparer()
        {
            return new KetQuaThanhToanThuLaoComparer();
        }
        */

        // Comparer delegates back to KetQuaThanhToanThuLao
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(KetQuaThanhToanThuLao rhs, KetQuaThanhToanThuLaoColumn which)
        {
            switch (which)
            {
            	
            	
            	case KetQuaThanhToanThuLaoColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaGiangVien:
            		return this.MaGiangVien.Value.CompareTo(rhs.MaGiangVien.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.NamHoc:
            		return this.NamHoc.CompareTo(rhs.NamHoc);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HocKy:
            		return this.HocKy.CompareTo(rhs.HocKy);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaHocHam:
            		return this.MaHocHam.Value.CompareTo(rhs.MaHocHam.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaHocVi:
            		return this.MaHocVi.Value.CompareTo(rhs.MaHocVi.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaLoaiGiangVien:
            		return this.MaLoaiGiangVien.Value.CompareTo(rhs.MaLoaiGiangVien.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaDonVi:
            		return this.MaDonVi.CompareTo(rhs.MaDonVi);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.Loai:
            		return this.Loai.CompareTo(rhs.Loai);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.PhanLoai:
            		return this.PhanLoai.CompareTo(rhs.PhanLoai);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaMonHoc:
            		return this.MaMonHoc.CompareTo(rhs.MaMonHoc);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.TenMonHoc:
            		return this.TenMonHoc.CompareTo(rhs.TenMonHoc);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.LoaiHocPhan:
            		return this.LoaiHocPhan.CompareTo(rhs.LoaiHocPhan);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.Nhom:
            		return this.Nhom.CompareTo(rhs.Nhom);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaLop:
            		return this.MaLop.CompareTo(rhs.MaLop);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.LopClc:
            		return this.LopClc.Value.CompareTo(rhs.LopClc.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.SiSo:
            		return this.SiSo.Value.CompareTo(rhs.SiSo.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.TietThucDay:
            		return this.TietThucDay.Value.CompareTo(rhs.TietThucDay.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.TietChuNhat:
            		return this.TietChuNhat.Value.CompareTo(rhs.TietChuNhat.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoHocKy:
            		return this.HeSoHocKy.Value.CompareTo(rhs.HeSoHocKy.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoLopDong:
            		return this.HeSoLopDong.Value.CompareTo(rhs.HeSoLopDong.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.TietQuyDoi:
            		return this.TietQuyDoi.Value.CompareTo(rhs.TietQuyDoi.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.DonGia:
            		return this.DonGia.Value.CompareTo(rhs.DonGia.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.ThanhTien:
            		return this.ThanhTien.Value.CompareTo(rhs.ThanhTien.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.LanChot:
            		return this.LanChot.Value.CompareTo(rhs.LanChot.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.NgayCapNhat:
            		return this.NgayCapNhat.Value.CompareTo(rhs.NgayCapNhat.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaHinhThucDaoTao:
            		return this.MaHinhThucDaoTao.CompareTo(rhs.MaHinhThucDaoTao);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.DonGiaTrongChuan:
            		return this.DonGiaTrongChuan.Value.CompareTo(rhs.DonGiaTrongChuan.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.DonGiaNgoaiChuan:
            		return this.DonGiaNgoaiChuan.Value.CompareTo(rhs.DonGiaNgoaiChuan.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.TenCoSo:
            		return this.TenCoSo.CompareTo(rhs.TenCoSo);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoQuyDoiThucHanhSangLyThuyet:
            		return this.HeSoQuyDoiThucHanhSangLyThuyet.Value.CompareTo(rhs.HeSoQuyDoiThucHanhSangLyThuyet.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoCoSo:
            		return this.HeSoCoSo.Value.CompareTo(rhs.HeSoCoSo.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.SoGioThucGiangTrenLop:
            		return this.SoGioThucGiangTrenLop.Value.CompareTo(rhs.SoGioThucGiangTrenLop.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.SoGioChuanTinhThem:
            		return this.SoGioChuanTinhThem.Value.CompareTo(rhs.SoGioChuanTinhThem.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoChucDanhChuyenMon:
            		return this.HeSoChucDanhChuyenMon.Value.CompareTo(rhs.HeSoChucDanhChuyenMon.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoClcCntn:
            		return this.HeSoClcCntn.Value.CompareTo(rhs.HeSoClcCntn.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoThinhGiangMonChuyenNganh:
            		return this.HeSoThinhGiangMonChuyenNganh.Value.CompareTo(rhs.HeSoThinhGiangMonChuyenNganh.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaNhomMonHoc:
            		return this.MaNhomMonHoc.CompareTo(rhs.MaNhomMonHoc);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.LoaiLop:
            		return this.LoaiLop.CompareTo(rhs.LoaiLop);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaBacDaoTao:
            		return this.MaBacDaoTao.CompareTo(rhs.MaBacDaoTao);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MalopHocPhan:
            		return this.MalopHocPhan.CompareTo(rhs.MalopHocPhan);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaKhoaHoc:
            		return this.MaKhoaHoc.CompareTo(rhs.MaKhoaHoc);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoTroCap:
            		return this.HeSoTroCap.Value.CompareTo(rhs.HeSoTroCap.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoNgoaiGio:
            		return this.HeSoNgoaiGio.Value.CompareTo(rhs.HeSoNgoaiGio.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoLuong:
            		return this.HeSoLuong.Value.CompareTo(rhs.HeSoLuong.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoMonMoi:
            		return this.HeSoMonMoi.Value.CompareTo(rhs.HeSoMonMoi.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoNienCheTinChi:
            		return this.HeSoNienCheTinChi.Value.CompareTo(rhs.HeSoNienCheTinChi.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoNgonNgu:
            		return this.HeSoNgonNgu.Value.CompareTo(rhs.HeSoNgonNgu.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoBacDaoTao:
            		return this.HeSoBacDaoTao.Value.CompareTo(rhs.HeSoBacDaoTao.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.NgayChiTra:
            		return this.NgayChiTra.CompareTo(rhs.NgayChiTra);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.XacNhanChiTra:
            		return this.XacNhanChiTra.Value.CompareTo(rhs.XacNhanChiTra.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.GhiChu:
            		return this.GhiChu.CompareTo(rhs.GhiChu);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.NguoiCapNhat:
            		return this.NguoiCapNhat.CompareTo(rhs.NguoiCapNhat);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoCongViec:
            		return this.HeSoCongViec.Value.CompareTo(rhs.HeSoCongViec.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.NgonNguGiangDay:
            		return this.NgonNguGiangDay.CompareTo(rhs.NgonNguGiangDay);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaCoSo:
            		return this.MaCoSo.CompareTo(rhs.MaCoSo);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MucThanhToan:
            		return this.MucThanhToan.Value.CompareTo(rhs.MucThanhToan.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.DotChiTra:
            		return this.DotChiTra.CompareTo(rhs.DotChiTra);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoKhoiNganh:
            		return this.HeSoKhoiNganh.Value.CompareTo(rhs.HeSoKhoiNganh.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaCauHinhChotGio:
            		return this.MaCauHinhChotGio.Value.CompareTo(rhs.MaCauHinhChotGio.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaKhoaCuaMonHoc:
            		return this.MaKhoaCuaMonHoc.CompareTo(rhs.MaKhoaCuaMonHoc);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.HeSoThamNien:
            		return this.HeSoThamNien.Value.CompareTo(rhs.HeSoThamNien.Value);
            		
            		                 
            	
            	
            	case KetQuaThanhToanThuLaoColumn.MaLoaiHinhDaoTao:
            		return this.MaLoaiHinhDaoTao.CompareTo(rhs.MaLoaiHinhDaoTao);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<KetQuaThanhToanThuLaoKey> Members
		
		// member variable for the EntityId property
		private KetQuaThanhToanThuLaoKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual KetQuaThanhToanThuLaoKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new KetQuaThanhToanThuLaoKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("KetQuaThanhToanThuLao")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{64}{63}- Id: {0}{63}- MaGiangVien: {1}{63}- NamHoc: {2}{63}- HocKy: {3}{63}- MaHocHam: {4}{63}- MaHocVi: {5}{63}- MaLoaiGiangVien: {6}{63}- MaDonVi: {7}{63}- Loai: {8}{63}- PhanLoai: {9}{63}- MaMonHoc: {10}{63}- TenMonHoc: {11}{63}- LoaiHocPhan: {12}{63}- Nhom: {13}{63}- MaLop: {14}{63}- LopClc: {15}{63}- SiSo: {16}{63}- TietThucDay: {17}{63}- TietChuNhat: {18}{63}- HeSoHocKy: {19}{63}- HeSoLopDong: {20}{63}- TietQuyDoi: {21}{63}- DonGia: {22}{63}- ThanhTien: {23}{63}- LanChot: {24}{63}- NgayCapNhat: {25}{63}- MaHinhThucDaoTao: {26}{63}- DonGiaTrongChuan: {27}{63}- DonGiaNgoaiChuan: {28}{63}- TenCoSo: {29}{63}- HeSoQuyDoiThucHanhSangLyThuyet: {30}{63}- HeSoCoSo: {31}{63}- SoGioThucGiangTrenLop: {32}{63}- SoGioChuanTinhThem: {33}{63}- HeSoChucDanhChuyenMon: {34}{63}- HeSoClcCntn: {35}{63}- HeSoThinhGiangMonChuyenNganh: {36}{63}- MaNhomMonHoc: {37}{63}- LoaiLop: {38}{63}- MaBacDaoTao: {39}{63}- MalopHocPhan: {40}{63}- MaKhoaHoc: {41}{63}- HeSoTroCap: {42}{63}- HeSoNgoaiGio: {43}{63}- HeSoLuong: {44}{63}- HeSoMonMoi: {45}{63}- HeSoNienCheTinChi: {46}{63}- HeSoNgonNgu: {47}{63}- HeSoBacDaoTao: {48}{63}- NgayChiTra: {49}{63}- XacNhanChiTra: {50}{63}- GhiChu: {51}{63}- NguoiCapNhat: {52}{63}- HeSoCongViec: {53}{63}- NgonNguGiangDay: {54}{63}- MaCoSo: {55}{63}- MucThanhToan: {56}{63}- DotChiTra: {57}{63}- HeSoKhoiNganh: {58}{63}- MaCauHinhChotGio: {59}{63}- MaKhoaCuaMonHoc: {60}{63}- HeSoThamNien: {61}{63}- MaLoaiHinhDaoTao: {62}{63}{65}", 
				this.Id,
				(this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString(),
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
				(this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString(),
				(this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString(),
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
				(this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString(),
				(this.Loai == null) ? string.Empty : this.Loai.ToString(),
				(this.PhanLoai == null) ? string.Empty : this.PhanLoai.ToString(),
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
				(this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString(),
				(this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString(),
				(this.Nhom == null) ? string.Empty : this.Nhom.ToString(),
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
				(this.LopClc == null) ? string.Empty : this.LopClc.ToString(),
				(this.SiSo == null) ? string.Empty : this.SiSo.ToString(),
				(this.TietThucDay == null) ? string.Empty : this.TietThucDay.ToString(),
				(this.TietChuNhat == null) ? string.Empty : this.TietChuNhat.ToString(),
				(this.HeSoHocKy == null) ? string.Empty : this.HeSoHocKy.ToString(),
				(this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString(),
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
				(this.DonGia == null) ? string.Empty : this.DonGia.ToString(),
				(this.ThanhTien == null) ? string.Empty : this.ThanhTien.ToString(),
				(this.LanChot == null) ? string.Empty : this.LanChot.ToString(),
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
				(this.MaHinhThucDaoTao == null) ? string.Empty : this.MaHinhThucDaoTao.ToString(),
				(this.DonGiaTrongChuan == null) ? string.Empty : this.DonGiaTrongChuan.ToString(),
				(this.DonGiaNgoaiChuan == null) ? string.Empty : this.DonGiaNgoaiChuan.ToString(),
				(this.TenCoSo == null) ? string.Empty : this.TenCoSo.ToString(),
				(this.HeSoQuyDoiThucHanhSangLyThuyet == null) ? string.Empty : this.HeSoQuyDoiThucHanhSangLyThuyet.ToString(),
				(this.HeSoCoSo == null) ? string.Empty : this.HeSoCoSo.ToString(),
				(this.SoGioThucGiangTrenLop == null) ? string.Empty : this.SoGioThucGiangTrenLop.ToString(),
				(this.SoGioChuanTinhThem == null) ? string.Empty : this.SoGioChuanTinhThem.ToString(),
				(this.HeSoChucDanhChuyenMon == null) ? string.Empty : this.HeSoChucDanhChuyenMon.ToString(),
				(this.HeSoClcCntn == null) ? string.Empty : this.HeSoClcCntn.ToString(),
				(this.HeSoThinhGiangMonChuyenNganh == null) ? string.Empty : this.HeSoThinhGiangMonChuyenNganh.ToString(),
				(this.MaNhomMonHoc == null) ? string.Empty : this.MaNhomMonHoc.ToString(),
				(this.LoaiLop == null) ? string.Empty : this.LoaiLop.ToString(),
				(this.MaBacDaoTao == null) ? string.Empty : this.MaBacDaoTao.ToString(),
				(this.MalopHocPhan == null) ? string.Empty : this.MalopHocPhan.ToString(),
				(this.MaKhoaHoc == null) ? string.Empty : this.MaKhoaHoc.ToString(),
				(this.HeSoTroCap == null) ? string.Empty : this.HeSoTroCap.ToString(),
				(this.HeSoNgoaiGio == null) ? string.Empty : this.HeSoNgoaiGio.ToString(),
				(this.HeSoLuong == null) ? string.Empty : this.HeSoLuong.ToString(),
				(this.HeSoMonMoi == null) ? string.Empty : this.HeSoMonMoi.ToString(),
				(this.HeSoNienCheTinChi == null) ? string.Empty : this.HeSoNienCheTinChi.ToString(),
				(this.HeSoNgonNgu == null) ? string.Empty : this.HeSoNgonNgu.ToString(),
				(this.HeSoBacDaoTao == null) ? string.Empty : this.HeSoBacDaoTao.ToString(),
				(this.NgayChiTra == null) ? string.Empty : this.NgayChiTra.ToString(),
				(this.XacNhanChiTra == null) ? string.Empty : this.XacNhanChiTra.ToString(),
				(this.GhiChu == null) ? string.Empty : this.GhiChu.ToString(),
				(this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString(),
				(this.HeSoCongViec == null) ? string.Empty : this.HeSoCongViec.ToString(),
				(this.NgonNguGiangDay == null) ? string.Empty : this.NgonNguGiangDay.ToString(),
				(this.MaCoSo == null) ? string.Empty : this.MaCoSo.ToString(),
				(this.MucThanhToan == null) ? string.Empty : this.MucThanhToan.ToString(),
				(this.DotChiTra == null) ? string.Empty : this.DotChiTra.ToString(),
				(this.HeSoKhoiNganh == null) ? string.Empty : this.HeSoKhoiNganh.ToString(),
				(this.MaCauHinhChotGio == null) ? string.Empty : this.MaCauHinhChotGio.ToString(),
				(this.MaKhoaCuaMonHoc == null) ? string.Empty : this.MaKhoaCuaMonHoc.ToString(),
				(this.HeSoThamNien == null) ? string.Empty : this.HeSoThamNien.ToString(),
				(this.MaLoaiHinhDaoTao == null) ? string.Empty : this.MaLoaiHinhDaoTao.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'KetQuaThanhToanThuLao' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class KetQuaThanhToanThuLaoEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "KetQuaThanhToanThuLao"</remarks>
		public System.Int32 Id;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		public System.Int32? MaGiangVien = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		public System.String NamHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		public System.String HocKy = null;
		
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		public System.Int32? MaHocHam = null;
		
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		public System.Int32? MaHocVi = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		public System.Int32? MaLoaiGiangVien = null;
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		public System.String MaDonVi = null;
		
		/// <summary>
		/// Loai : 
		/// </summary>
		public System.String Loai = null;
		
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		public System.String PhanLoai = null;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		public System.String MaMonHoc = null;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		public System.String TenMonHoc = null;
		
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		public System.String LoaiHocPhan = null;
		
		/// <summary>
		/// Nhom : 
		/// </summary>
		public System.String Nhom = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		public System.String MaLop = null;
		
		/// <summary>
		/// LopClc : 
		/// </summary>
		public System.Boolean? LopClc = null;
		
		/// <summary>
		/// SiSo : 
		/// </summary>
		public System.Int32? SiSo = null;
		
		/// <summary>
		/// TietThucDay : 
		/// </summary>
		public System.Decimal? TietThucDay = null;
		
		/// <summary>
		/// TietChuNhat : 
		/// </summary>
		public System.Decimal? TietChuNhat = null;
		
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		public System.Decimal? HeSoHocKy = null;
		
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		public System.Decimal? HeSoLopDong = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		public System.Decimal? TietQuyDoi = null;
		
		/// <summary>
		/// DonGia : 
		/// </summary>
		public System.Decimal? DonGia = null;
		
		/// <summary>
		/// ThanhTien : 
		/// </summary>
		public System.Decimal? ThanhTien = null;
		
		/// <summary>
		/// LanChot : 
		/// </summary>
		public System.Int32? LanChot = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		public System.DateTime? NgayCapNhat = null;
		
		/// <summary>
		/// MaHinhThucDaoTao : 
		/// </summary>
		public System.String MaHinhThucDaoTao = null;
		
		/// <summary>
		/// DonGiaTrongChuan : 
		/// </summary>
		public System.Decimal? DonGiaTrongChuan = null;
		
		/// <summary>
		/// DonGiaNgoaiChuan : 
		/// </summary>
		public System.Decimal? DonGiaNgoaiChuan = null;
		
		/// <summary>
		/// TenCoSo : 
		/// </summary>
		public System.String TenCoSo = null;
		
		/// <summary>
		/// HeSoQuyDoiThucHanhSangLyThuyet : 
		/// </summary>
		public System.Decimal? HeSoQuyDoiThucHanhSangLyThuyet = null;
		
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		public System.Decimal? HeSoCoSo = null;
		
		/// <summary>
		/// SoGioThucGiangTrenLop : 
		/// </summary>
		public System.Decimal? SoGioThucGiangTrenLop = null;
		
		/// <summary>
		/// SoGioChuanTinhThem : 
		/// </summary>
		public System.Decimal? SoGioChuanTinhThem = null;
		
		/// <summary>
		/// HeSoChucDanhChuyenMon : 
		/// </summary>
		public System.Decimal? HeSoChucDanhChuyenMon = null;
		
		/// <summary>
		/// HeSoClcCntn : 
		/// </summary>
		public System.Decimal? HeSoClcCntn = null;
		
		/// <summary>
		/// HeSoThinhGiangMonChuyenNganh : 
		/// </summary>
		public System.Decimal? HeSoThinhGiangMonChuyenNganh = null;
		
		/// <summary>
		/// MaNhomMonHoc : 
		/// </summary>
		public System.String MaNhomMonHoc = null;
		
		/// <summary>
		/// LoaiLop : 
		/// </summary>
		public System.String LoaiLop = null;
		
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		public System.String MaBacDaoTao = null;
		
		/// <summary>
		/// MalopHocPhan : 
		/// </summary>
		public System.String MalopHocPhan = null;
		
		/// <summary>
		/// MaKhoaHoc : 
		/// </summary>
		public System.String MaKhoaHoc = null;
		
		/// <summary>
		/// HeSoTroCap : 
		/// </summary>
		public System.Decimal? HeSoTroCap = null;
		
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		public System.Decimal? HeSoNgoaiGio = null;
		
		/// <summary>
		/// HeSoLuong : 
		/// </summary>
		public System.Decimal? HeSoLuong = null;
		
		/// <summary>
		/// HeSoMonMoi : 
		/// </summary>
		public System.Decimal? HeSoMonMoi = null;
		
		/// <summary>
		/// HeSoNienCheTinChi : 
		/// </summary>
		public System.Decimal? HeSoNienCheTinChi = null;
		
		/// <summary>
		/// HeSoNgonNgu : 
		/// </summary>
		public System.Decimal? HeSoNgonNgu = null;
		
		/// <summary>
		/// HeSoBacDaoTao : 
		/// </summary>
		public System.Decimal? HeSoBacDaoTao = null;
		
		/// <summary>
		/// NgayChiTra : 
		/// </summary>
		public System.String NgayChiTra = null;
		
		/// <summary>
		/// XacNhanChiTra : 
		/// </summary>
		public System.Boolean? XacNhanChiTra = null;
		
		/// <summary>
		/// GhiChu : 
		/// </summary>
		public System.String GhiChu = null;
		
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		public System.String NguoiCapNhat = null;
		
		/// <summary>
		/// HeSoCongViec : 
		/// </summary>
		public System.Decimal? HeSoCongViec = null;
		
		/// <summary>
		/// NgonNguGiangDay : 
		/// </summary>
		public System.String NgonNguGiangDay = null;
		
		/// <summary>
		/// MaCoSo : 
		/// </summary>
		public System.String MaCoSo = null;
		
		/// <summary>
		/// MucThanhToan : 
		/// </summary>
		public System.Decimal? MucThanhToan = null;
		
		/// <summary>
		/// DotChiTra : 
		/// </summary>
		public System.String DotChiTra = null;
		
		/// <summary>
		/// HeSoKhoiNganh : 
		/// </summary>
		public System.Decimal? HeSoKhoiNganh = null;
		
		/// <summary>
		/// MaCauHinhChotGio : 
		/// </summary>
		public System.Int32? MaCauHinhChotGio = null;
		
		/// <summary>
		/// MaKhoaCuaMonHoc : 
		/// </summary>
		public System.String MaKhoaCuaMonHoc = null;
		
		/// <summary>
		/// HeSoThamNien : 
		/// </summary>
		public System.Decimal? HeSoThamNien = null;
		
		/// <summary>
		/// MaLoaiHinhDaoTao : 
		/// </summary>
		public System.String MaLoaiHinhDaoTao = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			KetQuaThanhToanThuLaoEntityData _tmp = new KetQuaThanhToanThuLaoEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaDonVi = this.MaDonVi;
			_tmp.Loai = this.Loai;
			_tmp.PhanLoai = this.PhanLoai;
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.TenMonHoc = this.TenMonHoc;
			_tmp.LoaiHocPhan = this.LoaiHocPhan;
			_tmp.Nhom = this.Nhom;
			_tmp.MaLop = this.MaLop;
			_tmp.LopClc = this.LopClc;
			_tmp.SiSo = this.SiSo;
			_tmp.TietThucDay = this.TietThucDay;
			_tmp.TietChuNhat = this.TietChuNhat;
			_tmp.HeSoHocKy = this.HeSoHocKy;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.TietQuyDoi = this.TietQuyDoi;
			_tmp.DonGia = this.DonGia;
			_tmp.ThanhTien = this.ThanhTien;
			_tmp.LanChot = this.LanChot;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.MaHinhThucDaoTao = this.MaHinhThucDaoTao;
			_tmp.DonGiaTrongChuan = this.DonGiaTrongChuan;
			_tmp.DonGiaNgoaiChuan = this.DonGiaNgoaiChuan;
			_tmp.TenCoSo = this.TenCoSo;
			_tmp.HeSoQuyDoiThucHanhSangLyThuyet = this.HeSoQuyDoiThucHanhSangLyThuyet;
			_tmp.HeSoCoSo = this.HeSoCoSo;
			_tmp.SoGioThucGiangTrenLop = this.SoGioThucGiangTrenLop;
			_tmp.SoGioChuanTinhThem = this.SoGioChuanTinhThem;
			_tmp.HeSoChucDanhChuyenMon = this.HeSoChucDanhChuyenMon;
			_tmp.HeSoClcCntn = this.HeSoClcCntn;
			_tmp.HeSoThinhGiangMonChuyenNganh = this.HeSoThinhGiangMonChuyenNganh;
			_tmp.MaNhomMonHoc = this.MaNhomMonHoc;
			_tmp.LoaiLop = this.LoaiLop;
			_tmp.MaBacDaoTao = this.MaBacDaoTao;
			_tmp.MalopHocPhan = this.MalopHocPhan;
			_tmp.MaKhoaHoc = this.MaKhoaHoc;
			_tmp.HeSoTroCap = this.HeSoTroCap;
			_tmp.HeSoNgoaiGio = this.HeSoNgoaiGio;
			_tmp.HeSoLuong = this.HeSoLuong;
			_tmp.HeSoMonMoi = this.HeSoMonMoi;
			_tmp.HeSoNienCheTinChi = this.HeSoNienCheTinChi;
			_tmp.HeSoNgonNgu = this.HeSoNgonNgu;
			_tmp.HeSoBacDaoTao = this.HeSoBacDaoTao;
			_tmp.NgayChiTra = this.NgayChiTra;
			_tmp.XacNhanChiTra = this.XacNhanChiTra;
			_tmp.GhiChu = this.GhiChu;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.HeSoCongViec = this.HeSoCongViec;
			_tmp.NgonNguGiangDay = this.NgonNguGiangDay;
			_tmp.MaCoSo = this.MaCoSo;
			_tmp.MucThanhToan = this.MucThanhToan;
			_tmp.DotChiTra = this.DotChiTra;
			_tmp.HeSoKhoiNganh = this.HeSoKhoiNganh;
			_tmp.MaCauHinhChotGio = this.MaCauHinhChotGio;
			_tmp.MaKhoaCuaMonHoc = this.MaKhoaCuaMonHoc;
			_tmp.HeSoThamNien = this.HeSoThamNien;
			_tmp.MaLoaiHinhDaoTao = this.MaLoaiHinhDaoTao;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			KetQuaThanhToanThuLaoEntityData _tmp = new KetQuaThanhToanThuLaoEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaDonVi = this.MaDonVi;
			_tmp.Loai = this.Loai;
			_tmp.PhanLoai = this.PhanLoai;
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.TenMonHoc = this.TenMonHoc;
			_tmp.LoaiHocPhan = this.LoaiHocPhan;
			_tmp.Nhom = this.Nhom;
			_tmp.MaLop = this.MaLop;
			_tmp.LopClc = this.LopClc;
			_tmp.SiSo = this.SiSo;
			_tmp.TietThucDay = this.TietThucDay;
			_tmp.TietChuNhat = this.TietChuNhat;
			_tmp.HeSoHocKy = this.HeSoHocKy;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.TietQuyDoi = this.TietQuyDoi;
			_tmp.DonGia = this.DonGia;
			_tmp.ThanhTien = this.ThanhTien;
			_tmp.LanChot = this.LanChot;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.MaHinhThucDaoTao = this.MaHinhThucDaoTao;
			_tmp.DonGiaTrongChuan = this.DonGiaTrongChuan;
			_tmp.DonGiaNgoaiChuan = this.DonGiaNgoaiChuan;
			_tmp.TenCoSo = this.TenCoSo;
			_tmp.HeSoQuyDoiThucHanhSangLyThuyet = this.HeSoQuyDoiThucHanhSangLyThuyet;
			_tmp.HeSoCoSo = this.HeSoCoSo;
			_tmp.SoGioThucGiangTrenLop = this.SoGioThucGiangTrenLop;
			_tmp.SoGioChuanTinhThem = this.SoGioChuanTinhThem;
			_tmp.HeSoChucDanhChuyenMon = this.HeSoChucDanhChuyenMon;
			_tmp.HeSoClcCntn = this.HeSoClcCntn;
			_tmp.HeSoThinhGiangMonChuyenNganh = this.HeSoThinhGiangMonChuyenNganh;
			_tmp.MaNhomMonHoc = this.MaNhomMonHoc;
			_tmp.LoaiLop = this.LoaiLop;
			_tmp.MaBacDaoTao = this.MaBacDaoTao;
			_tmp.MalopHocPhan = this.MalopHocPhan;
			_tmp.MaKhoaHoc = this.MaKhoaHoc;
			_tmp.HeSoTroCap = this.HeSoTroCap;
			_tmp.HeSoNgoaiGio = this.HeSoNgoaiGio;
			_tmp.HeSoLuong = this.HeSoLuong;
			_tmp.HeSoMonMoi = this.HeSoMonMoi;
			_tmp.HeSoNienCheTinChi = this.HeSoNienCheTinChi;
			_tmp.HeSoNgonNgu = this.HeSoNgonNgu;
			_tmp.HeSoBacDaoTao = this.HeSoBacDaoTao;
			_tmp.NgayChiTra = this.NgayChiTra;
			_tmp.XacNhanChiTra = this.XacNhanChiTra;
			_tmp.GhiChu = this.GhiChu;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.HeSoCongViec = this.HeSoCongViec;
			_tmp.NgonNguGiangDay = this.NgonNguGiangDay;
			_tmp.MaCoSo = this.MaCoSo;
			_tmp.MucThanhToan = this.MucThanhToan;
			_tmp.DotChiTra = this.DotChiTra;
			_tmp.HeSoKhoiNganh = this.HeSoKhoiNganh;
			_tmp.MaCauHinhChotGio = this.MaCauHinhChotGio;
			_tmp.MaKhoaCuaMonHoc = this.MaKhoaCuaMonHoc;
			_tmp.HeSoThamNien = this.HeSoThamNien;
			_tmp.MaLoaiHinhDaoTao = this.MaLoaiHinhDaoTao;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KetQuaThanhToanThuLaoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(KetQuaThanhToanThuLaoColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KetQuaThanhToanThuLaoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(KetQuaThanhToanThuLaoColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KetQuaThanhToanThuLaoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(KetQuaThanhToanThuLaoColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				KetQuaThanhToanThuLaoEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new KetQuaThanhToanThuLaoEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KetQuaThanhToanThuLaoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(KetQuaThanhToanThuLaoColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				KetQuaThanhToanThuLaoEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new KetQuaThanhToanThuLaoEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region KetQuaThanhToanThuLaoEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="KetQuaThanhToanThuLao"/> object.
	/// </remarks>
	public class KetQuaThanhToanThuLaoEventArgs : System.EventArgs
	{
		private KetQuaThanhToanThuLaoColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the KetQuaThanhToanThuLaoEventArgs class.
		///</summary>
		public KetQuaThanhToanThuLaoEventArgs(KetQuaThanhToanThuLaoColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the KetQuaThanhToanThuLaoEventArgs class.
		///</summary>
		public KetQuaThanhToanThuLaoEventArgs(KetQuaThanhToanThuLaoColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The KetQuaThanhToanThuLaoColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="KetQuaThanhToanThuLaoColumn" />
		public KetQuaThanhToanThuLaoColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all KetQuaThanhToanThuLao related events.
	///</summary>
	public delegate void KetQuaThanhToanThuLaoEventHandler(object sender, KetQuaThanhToanThuLaoEventArgs e);
	
	#region KetQuaThanhToanThuLaoComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class KetQuaThanhToanThuLaoComparer : System.Collections.Generic.IComparer<KetQuaThanhToanThuLao>
	{
		KetQuaThanhToanThuLaoColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:KetQuaThanhToanThuLaoComparer"/> class.
        /// </summary>
		public KetQuaThanhToanThuLaoComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:KetQuaThanhToanThuLaoComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public KetQuaThanhToanThuLaoComparer(KetQuaThanhToanThuLaoColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="KetQuaThanhToanThuLao"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="KetQuaThanhToanThuLao"/> to compare.</param>
        /// <param name="b">The second <c>KetQuaThanhToanThuLao</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(KetQuaThanhToanThuLao a, KetQuaThanhToanThuLao b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(KetQuaThanhToanThuLao entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(KetQuaThanhToanThuLao a, KetQuaThanhToanThuLao b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public KetQuaThanhToanThuLaoColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region KetQuaThanhToanThuLaoKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="KetQuaThanhToanThuLao"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class KetQuaThanhToanThuLaoKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the KetQuaThanhToanThuLaoKey class.
		/// </summary>
		public KetQuaThanhToanThuLaoKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the KetQuaThanhToanThuLaoKey class.
		/// </summary>
		public KetQuaThanhToanThuLaoKey(KetQuaThanhToanThuLaoBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the KetQuaThanhToanThuLaoKey class.
		/// </summary>
		public KetQuaThanhToanThuLaoKey(System.Int32 _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private KetQuaThanhToanThuLaoBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public KetQuaThanhToanThuLaoBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.Int32 _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.Int32 Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["Id"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region KetQuaThanhToanThuLaoColumn Enum
	
	/// <summary>
	/// Enumerate the KetQuaThanhToanThuLao columns.
	/// </summary>
	[Serializable]
	public enum KetQuaThanhToanThuLaoColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		Id = 1,
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Giang Vien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaGiangVien = 2,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("Nam Hoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc = 3,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("Hoc Ky")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy = 4,
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		[EnumTextValue("Ma Hoc Ham")]
		[ColumnEnum("MaHocHam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocHam = 5,
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		[EnumTextValue("Ma Hoc Vi")]
		[ColumnEnum("MaHocVi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocVi = 6,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Loai Giang Vien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien = 7,
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("Ma Don Vi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDonVi = 8,
		/// <summary>
		/// Loai : 
		/// </summary>
		[EnumTextValue("Loai")]
		[ColumnEnum("Loai", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Loai = 9,
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		[EnumTextValue("Phan Loai")]
		[ColumnEnum("PhanLoai", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		PhanLoai = 10,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("Ma Mon Hoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc = 11,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("Ten Mon Hoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		TenMonHoc = 12,
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		[EnumTextValue("Loai Hoc Phan")]
		[ColumnEnum("LoaiHocPhan", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		LoaiHocPhan = 13,
		/// <summary>
		/// Nhom : 
		/// </summary>
		[EnumTextValue("Nhom")]
		[ColumnEnum("Nhom", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Nhom = 14,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("Ma Lop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		MaLop = 15,
		/// <summary>
		/// LopClc : 
		/// </summary>
		[EnumTextValue("Lop Clc")]
		[ColumnEnum("LopClc", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		LopClc = 16,
		/// <summary>
		/// SiSo : 
		/// </summary>
		[EnumTextValue("Si So")]
		[ColumnEnum("SiSo", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSo = 17,
		/// <summary>
		/// TietThucDay : 
		/// </summary>
		[EnumTextValue("Tiet Thuc Day")]
		[ColumnEnum("TietThucDay", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietThucDay = 18,
		/// <summary>
		/// TietChuNhat : 
		/// </summary>
		[EnumTextValue("Tiet Chu Nhat")]
		[ColumnEnum("TietChuNhat", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietChuNhat = 19,
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		[EnumTextValue("He So Hoc Ky")]
		[ColumnEnum("HeSoHocKy", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoHocKy = 20,
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		[EnumTextValue("He So Lop Dong")]
		[ColumnEnum("HeSoLopDong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDong = 21,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("Tiet Quy Doi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi = 22,
		/// <summary>
		/// DonGia : 
		/// </summary>
		[EnumTextValue("Don Gia")]
		[ColumnEnum("DonGia", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGia = 23,
		/// <summary>
		/// ThanhTien : 
		/// </summary>
		[EnumTextValue("Thanh Tien")]
		[ColumnEnum("ThanhTien", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThanhTien = 24,
		/// <summary>
		/// LanChot : 
		/// </summary>
		[EnumTextValue("Lan Chot")]
		[ColumnEnum("LanChot", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		LanChot = 25,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("Ngay Cap Nhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayCapNhat = 26,
		/// <summary>
		/// MaHinhThucDaoTao : 
		/// </summary>
		[EnumTextValue("Ma Hinh Thuc Dao Tao")]
		[ColumnEnum("MaHinhThucDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHinhThucDaoTao = 27,
		/// <summary>
		/// DonGiaTrongChuan : 
		/// </summary>
		[EnumTextValue("Don Gia Trong Chuan")]
		[ColumnEnum("DonGiaTrongChuan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGiaTrongChuan = 28,
		/// <summary>
		/// DonGiaNgoaiChuan : 
		/// </summary>
		[EnumTextValue("Don Gia Ngoai Chuan")]
		[ColumnEnum("DonGiaNgoaiChuan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGiaNgoaiChuan = 29,
		/// <summary>
		/// TenCoSo : 
		/// </summary>
		[EnumTextValue("Ten Co So")]
		[ColumnEnum("TenCoSo", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenCoSo = 30,
		/// <summary>
		/// HeSoQuyDoiThucHanhSangLyThuyet : 
		/// </summary>
		[EnumTextValue("He So Quy Doi Thuc Hanh Sang Ly Thuyet")]
		[ColumnEnum("HeSoQuyDoiThucHanhSangLyThuyet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoQuyDoiThucHanhSangLyThuyet = 31,
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		[EnumTextValue("He So Co So")]
		[ColumnEnum("HeSoCoSo", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoCoSo = 32,
		/// <summary>
		/// SoGioThucGiangTrenLop : 
		/// </summary>
		[EnumTextValue("So Gio Thuc Giang Tren Lop")]
		[ColumnEnum("SoGioThucGiangTrenLop", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoGioThucGiangTrenLop = 33,
		/// <summary>
		/// SoGioChuanTinhThem : 
		/// </summary>
		[EnumTextValue("So Gio Chuan Tinh Them")]
		[ColumnEnum("SoGioChuanTinhThem", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoGioChuanTinhThem = 34,
		/// <summary>
		/// HeSoChucDanhChuyenMon : 
		/// </summary>
		[EnumTextValue("He So Chuc Danh Chuyen Mon")]
		[ColumnEnum("HeSoChucDanhChuyenMon", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoChucDanhChuyenMon = 35,
		/// <summary>
		/// HeSoClcCntn : 
		/// </summary>
		[EnumTextValue("He So Clc Cntn")]
		[ColumnEnum("HeSoClcCntn", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoClcCntn = 36,
		/// <summary>
		/// HeSoThinhGiangMonChuyenNganh : 
		/// </summary>
		[EnumTextValue("He So Thinh Giang Mon Chuyen Nganh")]
		[ColumnEnum("HeSoThinhGiangMonChuyenNganh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoThinhGiangMonChuyenNganh = 37,
		/// <summary>
		/// MaNhomMonHoc : 
		/// </summary>
		[EnumTextValue("Ma Nhom Mon Hoc")]
		[ColumnEnum("MaNhomMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaNhomMonHoc = 38,
		/// <summary>
		/// LoaiLop : 
		/// </summary>
		[EnumTextValue("Loai Lop")]
		[ColumnEnum("LoaiLop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		LoaiLop = 39,
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		[EnumTextValue("Ma Bac Dao Tao")]
		[ColumnEnum("MaBacDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaBacDaoTao = 40,
		/// <summary>
		/// MalopHocPhan : 
		/// </summary>
		[EnumTextValue("Malop Hoc Phan")]
		[ColumnEnum("MalopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MalopHocPhan = 41,
		/// <summary>
		/// MaKhoaHoc : 
		/// </summary>
		[EnumTextValue("Ma Khoa Hoc")]
		[ColumnEnum("MaKhoaHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaKhoaHoc = 42,
		/// <summary>
		/// HeSoTroCap : 
		/// </summary>
		[EnumTextValue("He So Tro Cap")]
		[ColumnEnum("HeSoTroCap", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoTroCap = 43,
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		[EnumTextValue("He So Ngoai Gio")]
		[ColumnEnum("HeSoNgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNgoaiGio = 44,
		/// <summary>
		/// HeSoLuong : 
		/// </summary>
		[EnumTextValue("He So Luong")]
		[ColumnEnum("HeSoLuong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLuong = 45,
		/// <summary>
		/// HeSoMonMoi : 
		/// </summary>
		[EnumTextValue("He So Mon Moi")]
		[ColumnEnum("HeSoMonMoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoMonMoi = 46,
		/// <summary>
		/// HeSoNienCheTinChi : 
		/// </summary>
		[EnumTextValue("He So Nien Che Tin Chi")]
		[ColumnEnum("HeSoNienCheTinChi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNienCheTinChi = 47,
		/// <summary>
		/// HeSoNgonNgu : 
		/// </summary>
		[EnumTextValue("He So Ngon Ngu")]
		[ColumnEnum("HeSoNgonNgu", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNgonNgu = 48,
		/// <summary>
		/// HeSoBacDaoTao : 
		/// </summary>
		[EnumTextValue("He So Bac Dao Tao")]
		[ColumnEnum("HeSoBacDaoTao", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoBacDaoTao = 49,
		/// <summary>
		/// NgayChiTra : 
		/// </summary>
		[EnumTextValue("Ngay Chi Tra")]
		[ColumnEnum("NgayChiTra", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgayChiTra = 50,
		/// <summary>
		/// XacNhanChiTra : 
		/// </summary>
		[EnumTextValue("Xac Nhan Chi Tra")]
		[ColumnEnum("XacNhanChiTra", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		XacNhanChiTra = 51,
		/// <summary>
		/// GhiChu : 
		/// </summary>
		[EnumTextValue("Ghi Chu")]
		[ColumnEnum("GhiChu", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		GhiChu = 52,
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		[EnumTextValue("Nguoi Cap Nhat")]
		[ColumnEnum("NguoiCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NguoiCapNhat = 53,
		/// <summary>
		/// HeSoCongViec : 
		/// </summary>
		[EnumTextValue("He So Cong Viec")]
		[ColumnEnum("HeSoCongViec", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoCongViec = 54,
		/// <summary>
		/// NgonNguGiangDay : 
		/// </summary>
		[EnumTextValue("Ngon Ngu Giang Day")]
		[ColumnEnum("NgonNguGiangDay", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NgonNguGiangDay = 55,
		/// <summary>
		/// MaCoSo : 
		/// </summary>
		[EnumTextValue("Ma Co So")]
		[ColumnEnum("MaCoSo", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaCoSo = 56,
		/// <summary>
		/// MucThanhToan : 
		/// </summary>
		[EnumTextValue("Muc Thanh Toan")]
		[ColumnEnum("MucThanhToan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MucThanhToan = 57,
		/// <summary>
		/// DotChiTra : 
		/// </summary>
		[EnumTextValue("Dot Chi Tra")]
		[ColumnEnum("DotChiTra", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		DotChiTra = 58,
		/// <summary>
		/// HeSoKhoiNganh : 
		/// </summary>
		[EnumTextValue("He So Khoi Nganh")]
		[ColumnEnum("HeSoKhoiNganh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoKhoiNganh = 59,
		/// <summary>
		/// MaCauHinhChotGio : 
		/// </summary>
		[EnumTextValue("Ma Cau Hinh Chot Gio")]
		[ColumnEnum("MaCauHinhChotGio", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaCauHinhChotGio = 60,
		/// <summary>
		/// MaKhoaCuaMonHoc : 
		/// </summary>
		[EnumTextValue("Ma Khoa Cua Mon Hoc")]
		[ColumnEnum("MaKhoaCuaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaKhoaCuaMonHoc = 61,
		/// <summary>
		/// HeSoThamNien : 
		/// </summary>
		[EnumTextValue("He So Tham Nien")]
		[ColumnEnum("HeSoThamNien", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoThamNien = 62,
		/// <summary>
		/// MaLoaiHinhDaoTao : 
		/// </summary>
		[EnumTextValue("Ma Loai Hinh Dao Tao")]
		[ColumnEnum("MaLoaiHinhDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLoaiHinhDaoTao = 63
	}//End enum

	#endregion KetQuaThanhToanThuLaoColumn Enum

} // end namespace

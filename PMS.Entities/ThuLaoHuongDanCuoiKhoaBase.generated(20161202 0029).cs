
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ThuLaoHuongDanCuoiKhoa.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'ThuLaoHuongDanCuoiKhoa' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class ThuLaoHuongDanCuoiKhoaBase : EntityBase, IThuLaoHuongDanCuoiKhoa, IEntityId<ThuLaoHuongDanCuoiKhoaKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private ThuLaoHuongDanCuoiKhoaEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private ThuLaoHuongDanCuoiKhoaEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private ThuLaoHuongDanCuoiKhoaEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<ThuLaoHuongDanCuoiKhoa> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event ThuLaoHuongDanCuoiKhoaEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event ThuLaoHuongDanCuoiKhoaEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ThuLaoHuongDanCuoiKhoaBase"/> instance.
		///</summary>
		public ThuLaoHuongDanCuoiKhoaBase()
		{
			this.entityData = new ThuLaoHuongDanCuoiKhoaEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="ThuLaoHuongDanCuoiKhoaBase"/> instance.
		///</summary>
		///<param name="_maGiangVienQuanLy"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_dotChiTra"></param>
		///<param name="_huongDanVietBaoCaoTotNghiep"></param>
		///<param name="_huongDanChuyenDeThucTapTotNghiep"></param>
		///<param name="_huongDanKhoaLuanTotNghiep"></param>
		///<param name="_phanBienKhoaLuanTotNghiep"></param>
		///<param name="_soTietQuyDoi"></param>
		///<param name="_donGia"></param>
		///<param name="_thanhTienKhoaLuanChuyenDeTotNghiep"></param>
		///<param name="_soLuongThamGiaHoiDongTotNghiep"></param>
		///<param name="_thanhTienThamGiaHoiDongTotNghiep"></param>
		///<param name="_soTietNoGioChuan"></param>
		///<param name="_thanhTienNoGioChuan"></param>
		///<param name="_thue"></param>
		///<param name="_thucLanh"></param>
		///<param name="_noiDung"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_chotKhoiLuong"></param>
		public ThuLaoHuongDanCuoiKhoaBase(System.String _maGiangVienQuanLy, System.String _namHoc, 
			System.String _hocKy, System.String _dotChiTra, System.Int32? _huongDanVietBaoCaoTotNghiep, 
			System.Int32? _huongDanChuyenDeThucTapTotNghiep, System.Int32? _huongDanKhoaLuanTotNghiep, 
			System.Int32? _phanBienKhoaLuanTotNghiep, System.Decimal? _soTietQuyDoi, System.Decimal? _donGia, 
			System.Decimal? _thanhTienKhoaLuanChuyenDeTotNghiep, System.Int32? _soLuongThamGiaHoiDongTotNghiep, 
			System.Decimal? _thanhTienThamGiaHoiDongTotNghiep, System.Decimal? _soTietNoGioChuan, 
			System.Decimal? _thanhTienNoGioChuan, System.Decimal? _thue, System.Decimal? _thucLanh, 
			System.String _noiDung, System.DateTime? _ngayCapNhat, System.String _nguoiCapNhat, 
			System.Int32? _chotKhoiLuong)
		{
			this.entityData = new ThuLaoHuongDanCuoiKhoaEntityData();
			this.backupData = null;

			this.MaGiangVienQuanLy = _maGiangVienQuanLy;
			this.NamHoc = _namHoc;
			this.HocKy = _hocKy;
			this.DotChiTra = _dotChiTra;
			this.HuongDanVietBaoCaoTotNghiep = _huongDanVietBaoCaoTotNghiep;
			this.HuongDanChuyenDeThucTapTotNghiep = _huongDanChuyenDeThucTapTotNghiep;
			this.HuongDanKhoaLuanTotNghiep = _huongDanKhoaLuanTotNghiep;
			this.PhanBienKhoaLuanTotNghiep = _phanBienKhoaLuanTotNghiep;
			this.SoTietQuyDoi = _soTietQuyDoi;
			this.DonGia = _donGia;
			this.ThanhTienKhoaLuanChuyenDeTotNghiep = _thanhTienKhoaLuanChuyenDeTotNghiep;
			this.SoLuongThamGiaHoiDongTotNghiep = _soLuongThamGiaHoiDongTotNghiep;
			this.ThanhTienThamGiaHoiDongTotNghiep = _thanhTienThamGiaHoiDongTotNghiep;
			this.SoTietNoGioChuan = _soTietNoGioChuan;
			this.ThanhTienNoGioChuan = _thanhTienNoGioChuan;
			this.Thue = _thue;
			this.ThucLanh = _thucLanh;
			this.NoiDung = _noiDung;
			this.NgayCapNhat = _ngayCapNhat;
			this.NguoiCapNhat = _nguoiCapNhat;
			this.ChotKhoiLuong = _chotKhoiLuong;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ThuLaoHuongDanCuoiKhoa"/> instance.
		///</summary>
		///<param name="_maGiangVienQuanLy"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_dotChiTra"></param>
		///<param name="_huongDanVietBaoCaoTotNghiep"></param>
		///<param name="_huongDanChuyenDeThucTapTotNghiep"></param>
		///<param name="_huongDanKhoaLuanTotNghiep"></param>
		///<param name="_phanBienKhoaLuanTotNghiep"></param>
		///<param name="_soTietQuyDoi"></param>
		///<param name="_donGia"></param>
		///<param name="_thanhTienKhoaLuanChuyenDeTotNghiep"></param>
		///<param name="_soLuongThamGiaHoiDongTotNghiep"></param>
		///<param name="_thanhTienThamGiaHoiDongTotNghiep"></param>
		///<param name="_soTietNoGioChuan"></param>
		///<param name="_thanhTienNoGioChuan"></param>
		///<param name="_thue"></param>
		///<param name="_thucLanh"></param>
		///<param name="_noiDung"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_chotKhoiLuong"></param>
		public static ThuLaoHuongDanCuoiKhoa CreateThuLaoHuongDanCuoiKhoa(System.String _maGiangVienQuanLy, System.String _namHoc, 
			System.String _hocKy, System.String _dotChiTra, System.Int32? _huongDanVietBaoCaoTotNghiep, 
			System.Int32? _huongDanChuyenDeThucTapTotNghiep, System.Int32? _huongDanKhoaLuanTotNghiep, 
			System.Int32? _phanBienKhoaLuanTotNghiep, System.Decimal? _soTietQuyDoi, System.Decimal? _donGia, 
			System.Decimal? _thanhTienKhoaLuanChuyenDeTotNghiep, System.Int32? _soLuongThamGiaHoiDongTotNghiep, 
			System.Decimal? _thanhTienThamGiaHoiDongTotNghiep, System.Decimal? _soTietNoGioChuan, 
			System.Decimal? _thanhTienNoGioChuan, System.Decimal? _thue, System.Decimal? _thucLanh, 
			System.String _noiDung, System.DateTime? _ngayCapNhat, System.String _nguoiCapNhat, 
			System.Int32? _chotKhoiLuong)
		{
			ThuLaoHuongDanCuoiKhoa newThuLaoHuongDanCuoiKhoa = new ThuLaoHuongDanCuoiKhoa();
			newThuLaoHuongDanCuoiKhoa.MaGiangVienQuanLy = _maGiangVienQuanLy;
			newThuLaoHuongDanCuoiKhoa.NamHoc = _namHoc;
			newThuLaoHuongDanCuoiKhoa.HocKy = _hocKy;
			newThuLaoHuongDanCuoiKhoa.DotChiTra = _dotChiTra;
			newThuLaoHuongDanCuoiKhoa.HuongDanVietBaoCaoTotNghiep = _huongDanVietBaoCaoTotNghiep;
			newThuLaoHuongDanCuoiKhoa.HuongDanChuyenDeThucTapTotNghiep = _huongDanChuyenDeThucTapTotNghiep;
			newThuLaoHuongDanCuoiKhoa.HuongDanKhoaLuanTotNghiep = _huongDanKhoaLuanTotNghiep;
			newThuLaoHuongDanCuoiKhoa.PhanBienKhoaLuanTotNghiep = _phanBienKhoaLuanTotNghiep;
			newThuLaoHuongDanCuoiKhoa.SoTietQuyDoi = _soTietQuyDoi;
			newThuLaoHuongDanCuoiKhoa.DonGia = _donGia;
			newThuLaoHuongDanCuoiKhoa.ThanhTienKhoaLuanChuyenDeTotNghiep = _thanhTienKhoaLuanChuyenDeTotNghiep;
			newThuLaoHuongDanCuoiKhoa.SoLuongThamGiaHoiDongTotNghiep = _soLuongThamGiaHoiDongTotNghiep;
			newThuLaoHuongDanCuoiKhoa.ThanhTienThamGiaHoiDongTotNghiep = _thanhTienThamGiaHoiDongTotNghiep;
			newThuLaoHuongDanCuoiKhoa.SoTietNoGioChuan = _soTietNoGioChuan;
			newThuLaoHuongDanCuoiKhoa.ThanhTienNoGioChuan = _thanhTienNoGioChuan;
			newThuLaoHuongDanCuoiKhoa.Thue = _thue;
			newThuLaoHuongDanCuoiKhoa.ThucLanh = _thucLanh;
			newThuLaoHuongDanCuoiKhoa.NoiDung = _noiDung;
			newThuLaoHuongDanCuoiKhoa.NgayCapNhat = _ngayCapNhat;
			newThuLaoHuongDanCuoiKhoa.NguoiCapNhat = _nguoiCapNhat;
			newThuLaoHuongDanCuoiKhoa.ChotKhoiLuong = _chotKhoiLuong;
			return newThuLaoHuongDanCuoiKhoa;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
				
                OnPropertyChanging("Id");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaGiangVienQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaGiangVienQuanLy
		{
			get
			{
				return this.entityData.MaGiangVienQuanLy; 
			}
			
			set
			{
				if (this.entityData.MaGiangVienQuanLy == value)
					return;
				
                OnPropertyChanging("MaGiangVienQuanLy");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.MaGiangVienQuanLy, this.entityData.MaGiangVienQuanLy);
				this.entityData.MaGiangVienQuanLy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.MaGiangVienQuanLy, this.entityData.MaGiangVienQuanLy);
				OnPropertyChanged("MaGiangVienQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NamHoc
		{
			get
			{
				return this.entityData.NamHoc; 
			}
			
			set
			{
				if (this.entityData.NamHoc == value)
					return;
				
                OnPropertyChanging("NamHoc");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.NamHoc, this.entityData.NamHoc);
				this.entityData.NamHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.NamHoc, this.entityData.NamHoc);
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String HocKy
		{
			get
			{
				return this.entityData.HocKy; 
			}
			
			set
			{
				if (this.entityData.HocKy == value)
					return;
				
                OnPropertyChanging("HocKy");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.HocKy, this.entityData.HocKy);
				this.entityData.HocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.HocKy, this.entityData.HocKy);
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DotChiTra property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String DotChiTra
		{
			get
			{
				return this.entityData.DotChiTra; 
			}
			
			set
			{
				if (this.entityData.DotChiTra == value)
					return;
				
                OnPropertyChanging("DotChiTra");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.DotChiTra, this.entityData.DotChiTra);
				this.entityData.DotChiTra = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.DotChiTra, this.entityData.DotChiTra);
				OnPropertyChanged("DotChiTra");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HuongDanVietBaoCaoTotNghiep property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? HuongDanVietBaoCaoTotNghiep
		{
			get
			{
				return this.entityData.HuongDanVietBaoCaoTotNghiep; 
			}
			
			set
			{
				if (this.entityData.HuongDanVietBaoCaoTotNghiep == value)
					return;
				
                OnPropertyChanging("HuongDanVietBaoCaoTotNghiep");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.HuongDanVietBaoCaoTotNghiep, this.entityData.HuongDanVietBaoCaoTotNghiep);
				this.entityData.HuongDanVietBaoCaoTotNghiep = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.HuongDanVietBaoCaoTotNghiep, this.entityData.HuongDanVietBaoCaoTotNghiep);
				OnPropertyChanged("HuongDanVietBaoCaoTotNghiep");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HuongDanChuyenDeThucTapTotNghiep property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? HuongDanChuyenDeThucTapTotNghiep
		{
			get
			{
				return this.entityData.HuongDanChuyenDeThucTapTotNghiep; 
			}
			
			set
			{
				if (this.entityData.HuongDanChuyenDeThucTapTotNghiep == value)
					return;
				
                OnPropertyChanging("HuongDanChuyenDeThucTapTotNghiep");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.HuongDanChuyenDeThucTapTotNghiep, this.entityData.HuongDanChuyenDeThucTapTotNghiep);
				this.entityData.HuongDanChuyenDeThucTapTotNghiep = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.HuongDanChuyenDeThucTapTotNghiep, this.entityData.HuongDanChuyenDeThucTapTotNghiep);
				OnPropertyChanged("HuongDanChuyenDeThucTapTotNghiep");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HuongDanKhoaLuanTotNghiep property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? HuongDanKhoaLuanTotNghiep
		{
			get
			{
				return this.entityData.HuongDanKhoaLuanTotNghiep; 
			}
			
			set
			{
				if (this.entityData.HuongDanKhoaLuanTotNghiep == value)
					return;
				
                OnPropertyChanging("HuongDanKhoaLuanTotNghiep");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.HuongDanKhoaLuanTotNghiep, this.entityData.HuongDanKhoaLuanTotNghiep);
				this.entityData.HuongDanKhoaLuanTotNghiep = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.HuongDanKhoaLuanTotNghiep, this.entityData.HuongDanKhoaLuanTotNghiep);
				OnPropertyChanged("HuongDanKhoaLuanTotNghiep");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PhanBienKhoaLuanTotNghiep property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? PhanBienKhoaLuanTotNghiep
		{
			get
			{
				return this.entityData.PhanBienKhoaLuanTotNghiep; 
			}
			
			set
			{
				if (this.entityData.PhanBienKhoaLuanTotNghiep == value)
					return;
				
                OnPropertyChanging("PhanBienKhoaLuanTotNghiep");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.PhanBienKhoaLuanTotNghiep, this.entityData.PhanBienKhoaLuanTotNghiep);
				this.entityData.PhanBienKhoaLuanTotNghiep = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.PhanBienKhoaLuanTotNghiep, this.entityData.PhanBienKhoaLuanTotNghiep);
				OnPropertyChanged("PhanBienKhoaLuanTotNghiep");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTietQuyDoi
		{
			get
			{
				return this.entityData.SoTietQuyDoi; 
			}
			
			set
			{
				if (this.entityData.SoTietQuyDoi == value)
					return;
				
                OnPropertyChanging("SoTietQuyDoi");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.SoTietQuyDoi, this.entityData.SoTietQuyDoi);
				this.entityData.SoTietQuyDoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.SoTietQuyDoi, this.entityData.SoTietQuyDoi);
				OnPropertyChanged("SoTietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DonGia property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DonGia
		{
			get
			{
				return this.entityData.DonGia; 
			}
			
			set
			{
				if (this.entityData.DonGia == value)
					return;
				
                OnPropertyChanging("DonGia");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.DonGia, this.entityData.DonGia);
				this.entityData.DonGia = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.DonGia, this.entityData.DonGia);
				OnPropertyChanged("DonGia");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThanhTienKhoaLuanChuyenDeTotNghiep property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThanhTienKhoaLuanChuyenDeTotNghiep
		{
			get
			{
				return this.entityData.ThanhTienKhoaLuanChuyenDeTotNghiep; 
			}
			
			set
			{
				if (this.entityData.ThanhTienKhoaLuanChuyenDeTotNghiep == value)
					return;
				
                OnPropertyChanging("ThanhTienKhoaLuanChuyenDeTotNghiep");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.ThanhTienKhoaLuanChuyenDeTotNghiep, this.entityData.ThanhTienKhoaLuanChuyenDeTotNghiep);
				this.entityData.ThanhTienKhoaLuanChuyenDeTotNghiep = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.ThanhTienKhoaLuanChuyenDeTotNghiep, this.entityData.ThanhTienKhoaLuanChuyenDeTotNghiep);
				OnPropertyChanged("ThanhTienKhoaLuanChuyenDeTotNghiep");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoLuongThamGiaHoiDongTotNghiep property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoLuongThamGiaHoiDongTotNghiep
		{
			get
			{
				return this.entityData.SoLuongThamGiaHoiDongTotNghiep; 
			}
			
			set
			{
				if (this.entityData.SoLuongThamGiaHoiDongTotNghiep == value)
					return;
				
                OnPropertyChanging("SoLuongThamGiaHoiDongTotNghiep");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.SoLuongThamGiaHoiDongTotNghiep, this.entityData.SoLuongThamGiaHoiDongTotNghiep);
				this.entityData.SoLuongThamGiaHoiDongTotNghiep = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.SoLuongThamGiaHoiDongTotNghiep, this.entityData.SoLuongThamGiaHoiDongTotNghiep);
				OnPropertyChanged("SoLuongThamGiaHoiDongTotNghiep");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThanhTienThamGiaHoiDongTotNghiep property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThanhTienThamGiaHoiDongTotNghiep
		{
			get
			{
				return this.entityData.ThanhTienThamGiaHoiDongTotNghiep; 
			}
			
			set
			{
				if (this.entityData.ThanhTienThamGiaHoiDongTotNghiep == value)
					return;
				
                OnPropertyChanging("ThanhTienThamGiaHoiDongTotNghiep");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.ThanhTienThamGiaHoiDongTotNghiep, this.entityData.ThanhTienThamGiaHoiDongTotNghiep);
				this.entityData.ThanhTienThamGiaHoiDongTotNghiep = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.ThanhTienThamGiaHoiDongTotNghiep, this.entityData.ThanhTienThamGiaHoiDongTotNghiep);
				OnPropertyChanged("ThanhTienThamGiaHoiDongTotNghiep");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTietNoGioChuan property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTietNoGioChuan
		{
			get
			{
				return this.entityData.SoTietNoGioChuan; 
			}
			
			set
			{
				if (this.entityData.SoTietNoGioChuan == value)
					return;
				
                OnPropertyChanging("SoTietNoGioChuan");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.SoTietNoGioChuan, this.entityData.SoTietNoGioChuan);
				this.entityData.SoTietNoGioChuan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.SoTietNoGioChuan, this.entityData.SoTietNoGioChuan);
				OnPropertyChanged("SoTietNoGioChuan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThanhTienNoGioChuan property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThanhTienNoGioChuan
		{
			get
			{
				return this.entityData.ThanhTienNoGioChuan; 
			}
			
			set
			{
				if (this.entityData.ThanhTienNoGioChuan == value)
					return;
				
                OnPropertyChanging("ThanhTienNoGioChuan");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.ThanhTienNoGioChuan, this.entityData.ThanhTienNoGioChuan);
				this.entityData.ThanhTienNoGioChuan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.ThanhTienNoGioChuan, this.entityData.ThanhTienNoGioChuan);
				OnPropertyChanged("ThanhTienNoGioChuan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Thue property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? Thue
		{
			get
			{
				return this.entityData.Thue; 
			}
			
			set
			{
				if (this.entityData.Thue == value)
					return;
				
                OnPropertyChanging("Thue");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.Thue, this.entityData.Thue);
				this.entityData.Thue = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.Thue, this.entityData.Thue);
				OnPropertyChanged("Thue");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThucLanh property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThucLanh
		{
			get
			{
				return this.entityData.ThucLanh; 
			}
			
			set
			{
				if (this.entityData.ThucLanh == value)
					return;
				
                OnPropertyChanging("ThucLanh");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.ThucLanh, this.entityData.ThucLanh);
				this.entityData.ThucLanh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.ThucLanh, this.entityData.ThucLanh);
				OnPropertyChanged("ThucLanh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoiDung property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String NoiDung
		{
			get
			{
				return this.entityData.NoiDung; 
			}
			
			set
			{
				if (this.entityData.NoiDung == value)
					return;
				
                OnPropertyChanging("NoiDung");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.NoiDung, this.entityData.NoiDung);
				this.entityData.NoiDung = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.NoiDung, this.entityData.NoiDung);
				OnPropertyChanged("NoiDung");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayCapNhat
		{
			get
			{
				return this.entityData.NgayCapNhat; 
			}
			
			set
			{
				if (this.entityData.NgayCapNhat == value)
					return;
				
                OnPropertyChanging("NgayCapNhat");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				this.entityData.NgayCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NguoiCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String NguoiCapNhat
		{
			get
			{
				return this.entityData.NguoiCapNhat; 
			}
			
			set
			{
				if (this.entityData.NguoiCapNhat == value)
					return;
				
                OnPropertyChanging("NguoiCapNhat");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				this.entityData.NguoiCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				OnPropertyChanged("NguoiCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChotKhoiLuong property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? ChotKhoiLuong
		{
			get
			{
				return this.entityData.ChotKhoiLuong; 
			}
			
			set
			{
				if (this.entityData.ChotKhoiLuong == value)
					return;
				
                OnPropertyChanging("ChotKhoiLuong");                    
				OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn.ChotKhoiLuong, this.entityData.ChotKhoiLuong);
				this.entityData.ChotKhoiLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn.ChotKhoiLuong, this.entityData.ChotKhoiLuong);
				OnPropertyChanged("ChotKhoiLuong");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaGiangVienQuanLy", "Ma Giang Vien Quan Ly", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NamHoc", "Nam Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HocKy", "Hoc Ky", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DotChiTra", "Dot Chi Tra", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoiDung", "Noi Dung", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NguoiCapNhat", "Nguoi Cap Nhat", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ThuLaoHuongDanCuoiKhoa"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Id", "MaGiangVienQuanLy", "NamHoc", "HocKy", "DotChiTra", "HuongDanVietBaoCaoTotNghiep", "HuongDanChuyenDeThucTapTotNghiep", "HuongDanKhoaLuanTotNghiep", "PhanBienKhoaLuanTotNghiep", "SoTietQuyDoi", "DonGia", "ThanhTienKhoaLuanChuyenDeTotNghiep", "SoLuongThamGiaHoiDongTotNghiep", "ThanhTienThamGiaHoiDongTotNghiep", "SoTietNoGioChuan", "ThanhTienNoGioChuan", "Thue", "ThucLanh", "NoiDung", "NgayCapNhat", "NguoiCapNhat", "ChotKhoiLuong"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as ThuLaoHuongDanCuoiKhoaEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (ThuLaoHuongDanCuoiKhoa) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<ThuLaoHuongDanCuoiKhoa>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as ThuLaoHuongDanCuoiKhoa);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ThuLaoHuongDanCuoiKhoa Entity 
		///</summary>
		protected virtual ThuLaoHuongDanCuoiKhoa Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			ThuLaoHuongDanCuoiKhoa copy = new ThuLaoHuongDanCuoiKhoa();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.Id = this.Id;
				copy.MaGiangVienQuanLy = this.MaGiangVienQuanLy;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.DotChiTra = this.DotChiTra;
				copy.HuongDanVietBaoCaoTotNghiep = this.HuongDanVietBaoCaoTotNghiep;
				copy.HuongDanChuyenDeThucTapTotNghiep = this.HuongDanChuyenDeThucTapTotNghiep;
				copy.HuongDanKhoaLuanTotNghiep = this.HuongDanKhoaLuanTotNghiep;
				copy.PhanBienKhoaLuanTotNghiep = this.PhanBienKhoaLuanTotNghiep;
				copy.SoTietQuyDoi = this.SoTietQuyDoi;
				copy.DonGia = this.DonGia;
				copy.ThanhTienKhoaLuanChuyenDeTotNghiep = this.ThanhTienKhoaLuanChuyenDeTotNghiep;
				copy.SoLuongThamGiaHoiDongTotNghiep = this.SoLuongThamGiaHoiDongTotNghiep;
				copy.ThanhTienThamGiaHoiDongTotNghiep = this.ThanhTienThamGiaHoiDongTotNghiep;
				copy.SoTietNoGioChuan = this.SoTietNoGioChuan;
				copy.ThanhTienNoGioChuan = this.ThanhTienNoGioChuan;
				copy.Thue = this.Thue;
				copy.ThucLanh = this.ThucLanh;
				copy.NoiDung = this.NoiDung;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.NguoiCapNhat = this.NguoiCapNhat;
				copy.ChotKhoiLuong = this.ChotKhoiLuong;
			
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed ThuLaoHuongDanCuoiKhoa Entity 
		///</summary>
		public virtual ThuLaoHuongDanCuoiKhoa Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed ThuLaoHuongDanCuoiKhoa Entity which is a deep copy of the current entity.
		///</summary>
		public virtual ThuLaoHuongDanCuoiKhoa DeepCopy()
		{
			return EntityHelper.Clone<ThuLaoHuongDanCuoiKhoa>(this as ThuLaoHuongDanCuoiKhoa);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as ThuLaoHuongDanCuoiKhoaEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new ThuLaoHuongDanCuoiKhoaEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as ThuLaoHuongDanCuoiKhoaEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(ThuLaoHuongDanCuoiKhoaColumn column)
		{
			switch(column)
			{
					case ThuLaoHuongDanCuoiKhoaColumn.Id:
					return entityData.Id != _originalData.Id;
					case ThuLaoHuongDanCuoiKhoaColumn.MaGiangVienQuanLy:
					return entityData.MaGiangVienQuanLy != _originalData.MaGiangVienQuanLy;
					case ThuLaoHuongDanCuoiKhoaColumn.NamHoc:
					return entityData.NamHoc != _originalData.NamHoc;
					case ThuLaoHuongDanCuoiKhoaColumn.HocKy:
					return entityData.HocKy != _originalData.HocKy;
					case ThuLaoHuongDanCuoiKhoaColumn.DotChiTra:
					return entityData.DotChiTra != _originalData.DotChiTra;
					case ThuLaoHuongDanCuoiKhoaColumn.HuongDanVietBaoCaoTotNghiep:
					return entityData.HuongDanVietBaoCaoTotNghiep != _originalData.HuongDanVietBaoCaoTotNghiep;
					case ThuLaoHuongDanCuoiKhoaColumn.HuongDanChuyenDeThucTapTotNghiep:
					return entityData.HuongDanChuyenDeThucTapTotNghiep != _originalData.HuongDanChuyenDeThucTapTotNghiep;
					case ThuLaoHuongDanCuoiKhoaColumn.HuongDanKhoaLuanTotNghiep:
					return entityData.HuongDanKhoaLuanTotNghiep != _originalData.HuongDanKhoaLuanTotNghiep;
					case ThuLaoHuongDanCuoiKhoaColumn.PhanBienKhoaLuanTotNghiep:
					return entityData.PhanBienKhoaLuanTotNghiep != _originalData.PhanBienKhoaLuanTotNghiep;
					case ThuLaoHuongDanCuoiKhoaColumn.SoTietQuyDoi:
					return entityData.SoTietQuyDoi != _originalData.SoTietQuyDoi;
					case ThuLaoHuongDanCuoiKhoaColumn.DonGia:
					return entityData.DonGia != _originalData.DonGia;
					case ThuLaoHuongDanCuoiKhoaColumn.ThanhTienKhoaLuanChuyenDeTotNghiep:
					return entityData.ThanhTienKhoaLuanChuyenDeTotNghiep != _originalData.ThanhTienKhoaLuanChuyenDeTotNghiep;
					case ThuLaoHuongDanCuoiKhoaColumn.SoLuongThamGiaHoiDongTotNghiep:
					return entityData.SoLuongThamGiaHoiDongTotNghiep != _originalData.SoLuongThamGiaHoiDongTotNghiep;
					case ThuLaoHuongDanCuoiKhoaColumn.ThanhTienThamGiaHoiDongTotNghiep:
					return entityData.ThanhTienThamGiaHoiDongTotNghiep != _originalData.ThanhTienThamGiaHoiDongTotNghiep;
					case ThuLaoHuongDanCuoiKhoaColumn.SoTietNoGioChuan:
					return entityData.SoTietNoGioChuan != _originalData.SoTietNoGioChuan;
					case ThuLaoHuongDanCuoiKhoaColumn.ThanhTienNoGioChuan:
					return entityData.ThanhTienNoGioChuan != _originalData.ThanhTienNoGioChuan;
					case ThuLaoHuongDanCuoiKhoaColumn.Thue:
					return entityData.Thue != _originalData.Thue;
					case ThuLaoHuongDanCuoiKhoaColumn.ThucLanh:
					return entityData.ThucLanh != _originalData.ThucLanh;
					case ThuLaoHuongDanCuoiKhoaColumn.NoiDung:
					return entityData.NoiDung != _originalData.NoiDung;
					case ThuLaoHuongDanCuoiKhoaColumn.NgayCapNhat:
					return entityData.NgayCapNhat != _originalData.NgayCapNhat;
					case ThuLaoHuongDanCuoiKhoaColumn.NguoiCapNhat:
					return entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
					case ThuLaoHuongDanCuoiKhoaColumn.ChotKhoiLuong:
					return entityData.ChotKhoiLuong != _originalData.ChotKhoiLuong;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< ThuLaoHuongDanCuoiKhoaColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.MaGiangVienQuanLy != _originalData.MaGiangVienQuanLy;
			result = result || entityData.NamHoc != _originalData.NamHoc;
			result = result || entityData.HocKy != _originalData.HocKy;
			result = result || entityData.DotChiTra != _originalData.DotChiTra;
			result = result || entityData.HuongDanVietBaoCaoTotNghiep != _originalData.HuongDanVietBaoCaoTotNghiep;
			result = result || entityData.HuongDanChuyenDeThucTapTotNghiep != _originalData.HuongDanChuyenDeThucTapTotNghiep;
			result = result || entityData.HuongDanKhoaLuanTotNghiep != _originalData.HuongDanKhoaLuanTotNghiep;
			result = result || entityData.PhanBienKhoaLuanTotNghiep != _originalData.PhanBienKhoaLuanTotNghiep;
			result = result || entityData.SoTietQuyDoi != _originalData.SoTietQuyDoi;
			result = result || entityData.DonGia != _originalData.DonGia;
			result = result || entityData.ThanhTienKhoaLuanChuyenDeTotNghiep != _originalData.ThanhTienKhoaLuanChuyenDeTotNghiep;
			result = result || entityData.SoLuongThamGiaHoiDongTotNghiep != _originalData.SoLuongThamGiaHoiDongTotNghiep;
			result = result || entityData.ThanhTienThamGiaHoiDongTotNghiep != _originalData.ThanhTienThamGiaHoiDongTotNghiep;
			result = result || entityData.SoTietNoGioChuan != _originalData.SoTietNoGioChuan;
			result = result || entityData.ThanhTienNoGioChuan != _originalData.ThanhTienNoGioChuan;
			result = result || entityData.Thue != _originalData.Thue;
			result = result || entityData.ThucLanh != _originalData.ThucLanh;
			result = result || entityData.NoiDung != _originalData.NoiDung;
			result = result || entityData.NgayCapNhat != _originalData.NgayCapNhat;
			result = result || entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
			result = result || entityData.ChotKhoiLuong != _originalData.ChotKhoiLuong;
			return result;
		}	
		
		///<summary>
		///  Returns a ThuLaoHuongDanCuoiKhoa Entity with the original data.
		///</summary>
		public ThuLaoHuongDanCuoiKhoa GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateThuLaoHuongDanCuoiKhoa(
				_originalData.MaGiangVienQuanLy,
				_originalData.NamHoc,
				_originalData.HocKy,
				_originalData.DotChiTra,
				_originalData.HuongDanVietBaoCaoTotNghiep,
				_originalData.HuongDanChuyenDeThucTapTotNghiep,
				_originalData.HuongDanKhoaLuanTotNghiep,
				_originalData.PhanBienKhoaLuanTotNghiep,
				_originalData.SoTietQuyDoi,
				_originalData.DonGia,
				_originalData.ThanhTienKhoaLuanChuyenDeTotNghiep,
				_originalData.SoLuongThamGiaHoiDongTotNghiep,
				_originalData.ThanhTienThamGiaHoiDongTotNghiep,
				_originalData.SoTietNoGioChuan,
				_originalData.ThanhTienNoGioChuan,
				_originalData.Thue,
				_originalData.ThucLanh,
				_originalData.NoiDung,
				_originalData.NgayCapNhat,
				_originalData.NguoiCapNhat,
				_originalData.ChotKhoiLuong
				);
				
			return (ThuLaoHuongDanCuoiKhoa)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="ThuLaoHuongDanCuoiKhoaBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is ThuLaoHuongDanCuoiKhoaBase)
				return ValueEquals(this, (ThuLaoHuongDanCuoiKhoaBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="ThuLaoHuongDanCuoiKhoaBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.MaGiangVienQuanLy == null) ? string.Empty : this.MaGiangVienQuanLy.ToString()).GetHashCode() ^ 
					((this.NamHoc == null) ? string.Empty : this.NamHoc.ToString()).GetHashCode() ^ 
					((this.HocKy == null) ? string.Empty : this.HocKy.ToString()).GetHashCode() ^ 
					((this.DotChiTra == null) ? string.Empty : this.DotChiTra.ToString()).GetHashCode() ^ 
					((this.HuongDanVietBaoCaoTotNghiep == null) ? string.Empty : this.HuongDanVietBaoCaoTotNghiep.ToString()).GetHashCode() ^ 
					((this.HuongDanChuyenDeThucTapTotNghiep == null) ? string.Empty : this.HuongDanChuyenDeThucTapTotNghiep.ToString()).GetHashCode() ^ 
					((this.HuongDanKhoaLuanTotNghiep == null) ? string.Empty : this.HuongDanKhoaLuanTotNghiep.ToString()).GetHashCode() ^ 
					((this.PhanBienKhoaLuanTotNghiep == null) ? string.Empty : this.PhanBienKhoaLuanTotNghiep.ToString()).GetHashCode() ^ 
					((this.SoTietQuyDoi == null) ? string.Empty : this.SoTietQuyDoi.ToString()).GetHashCode() ^ 
					((this.DonGia == null) ? string.Empty : this.DonGia.ToString()).GetHashCode() ^ 
					((this.ThanhTienKhoaLuanChuyenDeTotNghiep == null) ? string.Empty : this.ThanhTienKhoaLuanChuyenDeTotNghiep.ToString()).GetHashCode() ^ 
					((this.SoLuongThamGiaHoiDongTotNghiep == null) ? string.Empty : this.SoLuongThamGiaHoiDongTotNghiep.ToString()).GetHashCode() ^ 
					((this.ThanhTienThamGiaHoiDongTotNghiep == null) ? string.Empty : this.ThanhTienThamGiaHoiDongTotNghiep.ToString()).GetHashCode() ^ 
					((this.SoTietNoGioChuan == null) ? string.Empty : this.SoTietNoGioChuan.ToString()).GetHashCode() ^ 
					((this.ThanhTienNoGioChuan == null) ? string.Empty : this.ThanhTienNoGioChuan.ToString()).GetHashCode() ^ 
					((this.Thue == null) ? string.Empty : this.Thue.ToString()).GetHashCode() ^ 
					((this.ThucLanh == null) ? string.Empty : this.ThucLanh.ToString()).GetHashCode() ^ 
					((this.NoiDung == null) ? string.Empty : this.NoiDung.ToString()).GetHashCode() ^ 
					((this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString()).GetHashCode() ^ 
					((this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString()).GetHashCode() ^ 
					((this.ChotKhoiLuong == null) ? string.Empty : this.ChotKhoiLuong.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ThuLaoHuongDanCuoiKhoaBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ThuLaoHuongDanCuoiKhoaBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="ThuLaoHuongDanCuoiKhoaBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="ThuLaoHuongDanCuoiKhoaBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ThuLaoHuongDanCuoiKhoaBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(ThuLaoHuongDanCuoiKhoaBase Object1, ThuLaoHuongDanCuoiKhoaBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.MaGiangVienQuanLy != null && Object2.MaGiangVienQuanLy != null )
			{
				if (Object1.MaGiangVienQuanLy != Object2.MaGiangVienQuanLy)
					equal = false;
			}
			else if (Object1.MaGiangVienQuanLy == null ^ Object2.MaGiangVienQuanLy == null )
			{
				equal = false;
			}
			if ( Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object2.NamHoc == null )
			{
				equal = false;
			}
			if ( Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object2.HocKy == null )
			{
				equal = false;
			}
			if ( Object1.DotChiTra != null && Object2.DotChiTra != null )
			{
				if (Object1.DotChiTra != Object2.DotChiTra)
					equal = false;
			}
			else if (Object1.DotChiTra == null ^ Object2.DotChiTra == null )
			{
				equal = false;
			}
			if ( Object1.HuongDanVietBaoCaoTotNghiep != null && Object2.HuongDanVietBaoCaoTotNghiep != null )
			{
				if (Object1.HuongDanVietBaoCaoTotNghiep != Object2.HuongDanVietBaoCaoTotNghiep)
					equal = false;
			}
			else if (Object1.HuongDanVietBaoCaoTotNghiep == null ^ Object2.HuongDanVietBaoCaoTotNghiep == null )
			{
				equal = false;
			}
			if ( Object1.HuongDanChuyenDeThucTapTotNghiep != null && Object2.HuongDanChuyenDeThucTapTotNghiep != null )
			{
				if (Object1.HuongDanChuyenDeThucTapTotNghiep != Object2.HuongDanChuyenDeThucTapTotNghiep)
					equal = false;
			}
			else if (Object1.HuongDanChuyenDeThucTapTotNghiep == null ^ Object2.HuongDanChuyenDeThucTapTotNghiep == null )
			{
				equal = false;
			}
			if ( Object1.HuongDanKhoaLuanTotNghiep != null && Object2.HuongDanKhoaLuanTotNghiep != null )
			{
				if (Object1.HuongDanKhoaLuanTotNghiep != Object2.HuongDanKhoaLuanTotNghiep)
					equal = false;
			}
			else if (Object1.HuongDanKhoaLuanTotNghiep == null ^ Object2.HuongDanKhoaLuanTotNghiep == null )
			{
				equal = false;
			}
			if ( Object1.PhanBienKhoaLuanTotNghiep != null && Object2.PhanBienKhoaLuanTotNghiep != null )
			{
				if (Object1.PhanBienKhoaLuanTotNghiep != Object2.PhanBienKhoaLuanTotNghiep)
					equal = false;
			}
			else if (Object1.PhanBienKhoaLuanTotNghiep == null ^ Object2.PhanBienKhoaLuanTotNghiep == null )
			{
				equal = false;
			}
			if ( Object1.SoTietQuyDoi != null && Object2.SoTietQuyDoi != null )
			{
				if (Object1.SoTietQuyDoi != Object2.SoTietQuyDoi)
					equal = false;
			}
			else if (Object1.SoTietQuyDoi == null ^ Object2.SoTietQuyDoi == null )
			{
				equal = false;
			}
			if ( Object1.DonGia != null && Object2.DonGia != null )
			{
				if (Object1.DonGia != Object2.DonGia)
					equal = false;
			}
			else if (Object1.DonGia == null ^ Object2.DonGia == null )
			{
				equal = false;
			}
			if ( Object1.ThanhTienKhoaLuanChuyenDeTotNghiep != null && Object2.ThanhTienKhoaLuanChuyenDeTotNghiep != null )
			{
				if (Object1.ThanhTienKhoaLuanChuyenDeTotNghiep != Object2.ThanhTienKhoaLuanChuyenDeTotNghiep)
					equal = false;
			}
			else if (Object1.ThanhTienKhoaLuanChuyenDeTotNghiep == null ^ Object2.ThanhTienKhoaLuanChuyenDeTotNghiep == null )
			{
				equal = false;
			}
			if ( Object1.SoLuongThamGiaHoiDongTotNghiep != null && Object2.SoLuongThamGiaHoiDongTotNghiep != null )
			{
				if (Object1.SoLuongThamGiaHoiDongTotNghiep != Object2.SoLuongThamGiaHoiDongTotNghiep)
					equal = false;
			}
			else if (Object1.SoLuongThamGiaHoiDongTotNghiep == null ^ Object2.SoLuongThamGiaHoiDongTotNghiep == null )
			{
				equal = false;
			}
			if ( Object1.ThanhTienThamGiaHoiDongTotNghiep != null && Object2.ThanhTienThamGiaHoiDongTotNghiep != null )
			{
				if (Object1.ThanhTienThamGiaHoiDongTotNghiep != Object2.ThanhTienThamGiaHoiDongTotNghiep)
					equal = false;
			}
			else if (Object1.ThanhTienThamGiaHoiDongTotNghiep == null ^ Object2.ThanhTienThamGiaHoiDongTotNghiep == null )
			{
				equal = false;
			}
			if ( Object1.SoTietNoGioChuan != null && Object2.SoTietNoGioChuan != null )
			{
				if (Object1.SoTietNoGioChuan != Object2.SoTietNoGioChuan)
					equal = false;
			}
			else if (Object1.SoTietNoGioChuan == null ^ Object2.SoTietNoGioChuan == null )
			{
				equal = false;
			}
			if ( Object1.ThanhTienNoGioChuan != null && Object2.ThanhTienNoGioChuan != null )
			{
				if (Object1.ThanhTienNoGioChuan != Object2.ThanhTienNoGioChuan)
					equal = false;
			}
			else if (Object1.ThanhTienNoGioChuan == null ^ Object2.ThanhTienNoGioChuan == null )
			{
				equal = false;
			}
			if ( Object1.Thue != null && Object2.Thue != null )
			{
				if (Object1.Thue != Object2.Thue)
					equal = false;
			}
			else if (Object1.Thue == null ^ Object2.Thue == null )
			{
				equal = false;
			}
			if ( Object1.ThucLanh != null && Object2.ThucLanh != null )
			{
				if (Object1.ThucLanh != Object2.ThucLanh)
					equal = false;
			}
			else if (Object1.ThucLanh == null ^ Object2.ThucLanh == null )
			{
				equal = false;
			}
			if ( Object1.NoiDung != null && Object2.NoiDung != null )
			{
				if (Object1.NoiDung != Object2.NoiDung)
					equal = false;
			}
			else if (Object1.NoiDung == null ^ Object2.NoiDung == null )
			{
				equal = false;
			}
			if ( Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object2.NgayCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.NguoiCapNhat != null && Object2.NguoiCapNhat != null )
			{
				if (Object1.NguoiCapNhat != Object2.NguoiCapNhat)
					equal = false;
			}
			else if (Object1.NguoiCapNhat == null ^ Object2.NguoiCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.ChotKhoiLuong != null && Object2.ChotKhoiLuong != null )
			{
				if (Object1.ChotKhoiLuong != Object2.ChotKhoiLuong)
					equal = false;
			}
			else if (Object1.ChotKhoiLuong == null ^ Object2.ChotKhoiLuong == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((ThuLaoHuongDanCuoiKhoaBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static ThuLaoHuongDanCuoiKhoaComparer GetComparer()
        {
            return new ThuLaoHuongDanCuoiKhoaComparer();
        }
        */

        // Comparer delegates back to ThuLaoHuongDanCuoiKhoa
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(ThuLaoHuongDanCuoiKhoa rhs, ThuLaoHuongDanCuoiKhoaColumn which)
        {
            switch (which)
            {
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.MaGiangVienQuanLy:
            		return this.MaGiangVienQuanLy.CompareTo(rhs.MaGiangVienQuanLy);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.NamHoc:
            		return this.NamHoc.CompareTo(rhs.NamHoc);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.HocKy:
            		return this.HocKy.CompareTo(rhs.HocKy);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.DotChiTra:
            		return this.DotChiTra.CompareTo(rhs.DotChiTra);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.HuongDanVietBaoCaoTotNghiep:
            		return this.HuongDanVietBaoCaoTotNghiep.Value.CompareTo(rhs.HuongDanVietBaoCaoTotNghiep.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.HuongDanChuyenDeThucTapTotNghiep:
            		return this.HuongDanChuyenDeThucTapTotNghiep.Value.CompareTo(rhs.HuongDanChuyenDeThucTapTotNghiep.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.HuongDanKhoaLuanTotNghiep:
            		return this.HuongDanKhoaLuanTotNghiep.Value.CompareTo(rhs.HuongDanKhoaLuanTotNghiep.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.PhanBienKhoaLuanTotNghiep:
            		return this.PhanBienKhoaLuanTotNghiep.Value.CompareTo(rhs.PhanBienKhoaLuanTotNghiep.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.SoTietQuyDoi:
            		return this.SoTietQuyDoi.Value.CompareTo(rhs.SoTietQuyDoi.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.DonGia:
            		return this.DonGia.Value.CompareTo(rhs.DonGia.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.ThanhTienKhoaLuanChuyenDeTotNghiep:
            		return this.ThanhTienKhoaLuanChuyenDeTotNghiep.Value.CompareTo(rhs.ThanhTienKhoaLuanChuyenDeTotNghiep.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.SoLuongThamGiaHoiDongTotNghiep:
            		return this.SoLuongThamGiaHoiDongTotNghiep.Value.CompareTo(rhs.SoLuongThamGiaHoiDongTotNghiep.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.ThanhTienThamGiaHoiDongTotNghiep:
            		return this.ThanhTienThamGiaHoiDongTotNghiep.Value.CompareTo(rhs.ThanhTienThamGiaHoiDongTotNghiep.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.SoTietNoGioChuan:
            		return this.SoTietNoGioChuan.Value.CompareTo(rhs.SoTietNoGioChuan.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.ThanhTienNoGioChuan:
            		return this.ThanhTienNoGioChuan.Value.CompareTo(rhs.ThanhTienNoGioChuan.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.Thue:
            		return this.Thue.Value.CompareTo(rhs.Thue.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.ThucLanh:
            		return this.ThucLanh.Value.CompareTo(rhs.ThucLanh.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.NoiDung:
            		return this.NoiDung.CompareTo(rhs.NoiDung);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.NgayCapNhat:
            		return this.NgayCapNhat.Value.CompareTo(rhs.NgayCapNhat.Value);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.NguoiCapNhat:
            		return this.NguoiCapNhat.CompareTo(rhs.NguoiCapNhat);
            		
            		                 
            	
            	
            	case ThuLaoHuongDanCuoiKhoaColumn.ChotKhoiLuong:
            		return this.ChotKhoiLuong.Value.CompareTo(rhs.ChotKhoiLuong.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<ThuLaoHuongDanCuoiKhoaKey> Members
		
		// member variable for the EntityId property
		private ThuLaoHuongDanCuoiKhoaKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual ThuLaoHuongDanCuoiKhoaKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new ThuLaoHuongDanCuoiKhoaKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("ThuLaoHuongDanCuoiKhoa")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{23}{22}- Id: {0}{22}- MaGiangVienQuanLy: {1}{22}- NamHoc: {2}{22}- HocKy: {3}{22}- DotChiTra: {4}{22}- HuongDanVietBaoCaoTotNghiep: {5}{22}- HuongDanChuyenDeThucTapTotNghiep: {6}{22}- HuongDanKhoaLuanTotNghiep: {7}{22}- PhanBienKhoaLuanTotNghiep: {8}{22}- SoTietQuyDoi: {9}{22}- DonGia: {10}{22}- ThanhTienKhoaLuanChuyenDeTotNghiep: {11}{22}- SoLuongThamGiaHoiDongTotNghiep: {12}{22}- ThanhTienThamGiaHoiDongTotNghiep: {13}{22}- SoTietNoGioChuan: {14}{22}- ThanhTienNoGioChuan: {15}{22}- Thue: {16}{22}- ThucLanh: {17}{22}- NoiDung: {18}{22}- NgayCapNhat: {19}{22}- NguoiCapNhat: {20}{22}- ChotKhoiLuong: {21}{22}{24}", 
				this.Id,
				(this.MaGiangVienQuanLy == null) ? string.Empty : this.MaGiangVienQuanLy.ToString(),
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
				(this.DotChiTra == null) ? string.Empty : this.DotChiTra.ToString(),
				(this.HuongDanVietBaoCaoTotNghiep == null) ? string.Empty : this.HuongDanVietBaoCaoTotNghiep.ToString(),
				(this.HuongDanChuyenDeThucTapTotNghiep == null) ? string.Empty : this.HuongDanChuyenDeThucTapTotNghiep.ToString(),
				(this.HuongDanKhoaLuanTotNghiep == null) ? string.Empty : this.HuongDanKhoaLuanTotNghiep.ToString(),
				(this.PhanBienKhoaLuanTotNghiep == null) ? string.Empty : this.PhanBienKhoaLuanTotNghiep.ToString(),
				(this.SoTietQuyDoi == null) ? string.Empty : this.SoTietQuyDoi.ToString(),
				(this.DonGia == null) ? string.Empty : this.DonGia.ToString(),
				(this.ThanhTienKhoaLuanChuyenDeTotNghiep == null) ? string.Empty : this.ThanhTienKhoaLuanChuyenDeTotNghiep.ToString(),
				(this.SoLuongThamGiaHoiDongTotNghiep == null) ? string.Empty : this.SoLuongThamGiaHoiDongTotNghiep.ToString(),
				(this.ThanhTienThamGiaHoiDongTotNghiep == null) ? string.Empty : this.ThanhTienThamGiaHoiDongTotNghiep.ToString(),
				(this.SoTietNoGioChuan == null) ? string.Empty : this.SoTietNoGioChuan.ToString(),
				(this.ThanhTienNoGioChuan == null) ? string.Empty : this.ThanhTienNoGioChuan.ToString(),
				(this.Thue == null) ? string.Empty : this.Thue.ToString(),
				(this.ThucLanh == null) ? string.Empty : this.ThucLanh.ToString(),
				(this.NoiDung == null) ? string.Empty : this.NoiDung.ToString(),
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
				(this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString(),
				(this.ChotKhoiLuong == null) ? string.Empty : this.ChotKhoiLuong.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ThuLaoHuongDanCuoiKhoa' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class ThuLaoHuongDanCuoiKhoaEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ThuLaoHuongDanCuoiKhoa"</remarks>
		public System.Int32 Id;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaGiangVienQuanLy : 
		/// </summary>
		public System.String MaGiangVienQuanLy = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		public System.String NamHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		public System.String HocKy = null;
		
		/// <summary>
		/// DotChiTra : 
		/// </summary>
		public System.String DotChiTra = null;
		
		/// <summary>
		/// HuongDanVietBaoCaoTotNghiep : 
		/// </summary>
		public System.Int32? HuongDanVietBaoCaoTotNghiep = null;
		
		/// <summary>
		/// HuongDanChuyenDeThucTapTotNghiep : 
		/// </summary>
		public System.Int32? HuongDanChuyenDeThucTapTotNghiep = null;
		
		/// <summary>
		/// HuongDanKhoaLuanTotNghiep : 
		/// </summary>
		public System.Int32? HuongDanKhoaLuanTotNghiep = null;
		
		/// <summary>
		/// PhanBienKhoaLuanTotNghiep : 
		/// </summary>
		public System.Int32? PhanBienKhoaLuanTotNghiep = null;
		
		/// <summary>
		/// SoTietQuyDoi : 
		/// </summary>
		public System.Decimal? SoTietQuyDoi = null;
		
		/// <summary>
		/// DonGia : 
		/// </summary>
		public System.Decimal? DonGia = null;
		
		/// <summary>
		/// ThanhTienKhoaLuanChuyenDeTotNghiep : 
		/// </summary>
		public System.Decimal? ThanhTienKhoaLuanChuyenDeTotNghiep = null;
		
		/// <summary>
		/// SoLuongThamGiaHoiDongTotNghiep : 
		/// </summary>
		public System.Int32? SoLuongThamGiaHoiDongTotNghiep = null;
		
		/// <summary>
		/// ThanhTienThamGiaHoiDongTotNghiep : 
		/// </summary>
		public System.Decimal? ThanhTienThamGiaHoiDongTotNghiep = null;
		
		/// <summary>
		/// SoTietNoGioChuan : 
		/// </summary>
		public System.Decimal? SoTietNoGioChuan = null;
		
		/// <summary>
		/// ThanhTienNoGioChuan : 
		/// </summary>
		public System.Decimal? ThanhTienNoGioChuan = null;
		
		/// <summary>
		/// Thue : 
		/// </summary>
		public System.Decimal? Thue = null;
		
		/// <summary>
		/// ThucLanh : 
		/// </summary>
		public System.Decimal? ThucLanh = null;
		
		/// <summary>
		/// NoiDung : 
		/// </summary>
		public System.String NoiDung = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		public System.DateTime? NgayCapNhat = null;
		
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		public System.String NguoiCapNhat = null;
		
		/// <summary>
		/// ChotKhoiLuong : 
		/// </summary>
		public System.Int32? ChotKhoiLuong = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			ThuLaoHuongDanCuoiKhoaEntityData _tmp = new ThuLaoHuongDanCuoiKhoaEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaGiangVienQuanLy = this.MaGiangVienQuanLy;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.DotChiTra = this.DotChiTra;
			_tmp.HuongDanVietBaoCaoTotNghiep = this.HuongDanVietBaoCaoTotNghiep;
			_tmp.HuongDanChuyenDeThucTapTotNghiep = this.HuongDanChuyenDeThucTapTotNghiep;
			_tmp.HuongDanKhoaLuanTotNghiep = this.HuongDanKhoaLuanTotNghiep;
			_tmp.PhanBienKhoaLuanTotNghiep = this.PhanBienKhoaLuanTotNghiep;
			_tmp.SoTietQuyDoi = this.SoTietQuyDoi;
			_tmp.DonGia = this.DonGia;
			_tmp.ThanhTienKhoaLuanChuyenDeTotNghiep = this.ThanhTienKhoaLuanChuyenDeTotNghiep;
			_tmp.SoLuongThamGiaHoiDongTotNghiep = this.SoLuongThamGiaHoiDongTotNghiep;
			_tmp.ThanhTienThamGiaHoiDongTotNghiep = this.ThanhTienThamGiaHoiDongTotNghiep;
			_tmp.SoTietNoGioChuan = this.SoTietNoGioChuan;
			_tmp.ThanhTienNoGioChuan = this.ThanhTienNoGioChuan;
			_tmp.Thue = this.Thue;
			_tmp.ThucLanh = this.ThucLanh;
			_tmp.NoiDung = this.NoiDung;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.ChotKhoiLuong = this.ChotKhoiLuong;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			ThuLaoHuongDanCuoiKhoaEntityData _tmp = new ThuLaoHuongDanCuoiKhoaEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaGiangVienQuanLy = this.MaGiangVienQuanLy;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.DotChiTra = this.DotChiTra;
			_tmp.HuongDanVietBaoCaoTotNghiep = this.HuongDanVietBaoCaoTotNghiep;
			_tmp.HuongDanChuyenDeThucTapTotNghiep = this.HuongDanChuyenDeThucTapTotNghiep;
			_tmp.HuongDanKhoaLuanTotNghiep = this.HuongDanKhoaLuanTotNghiep;
			_tmp.PhanBienKhoaLuanTotNghiep = this.PhanBienKhoaLuanTotNghiep;
			_tmp.SoTietQuyDoi = this.SoTietQuyDoi;
			_tmp.DonGia = this.DonGia;
			_tmp.ThanhTienKhoaLuanChuyenDeTotNghiep = this.ThanhTienKhoaLuanChuyenDeTotNghiep;
			_tmp.SoLuongThamGiaHoiDongTotNghiep = this.SoLuongThamGiaHoiDongTotNghiep;
			_tmp.ThanhTienThamGiaHoiDongTotNghiep = this.ThanhTienThamGiaHoiDongTotNghiep;
			_tmp.SoTietNoGioChuan = this.SoTietNoGioChuan;
			_tmp.ThanhTienNoGioChuan = this.ThanhTienNoGioChuan;
			_tmp.Thue = this.Thue;
			_tmp.ThucLanh = this.ThucLanh;
			_tmp.NoiDung = this.NoiDung;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.ChotKhoiLuong = this.ChotKhoiLuong;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ThuLaoHuongDanCuoiKhoaColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ThuLaoHuongDanCuoiKhoaColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ThuLaoHuongDanCuoiKhoaColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(ThuLaoHuongDanCuoiKhoaColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				ThuLaoHuongDanCuoiKhoaEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new ThuLaoHuongDanCuoiKhoaEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ThuLaoHuongDanCuoiKhoaColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(ThuLaoHuongDanCuoiKhoaColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				ThuLaoHuongDanCuoiKhoaEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new ThuLaoHuongDanCuoiKhoaEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region ThuLaoHuongDanCuoiKhoaEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="ThuLaoHuongDanCuoiKhoa"/> object.
	/// </remarks>
	public class ThuLaoHuongDanCuoiKhoaEventArgs : System.EventArgs
	{
		private ThuLaoHuongDanCuoiKhoaColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the ThuLaoHuongDanCuoiKhoaEventArgs class.
		///</summary>
		public ThuLaoHuongDanCuoiKhoaEventArgs(ThuLaoHuongDanCuoiKhoaColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the ThuLaoHuongDanCuoiKhoaEventArgs class.
		///</summary>
		public ThuLaoHuongDanCuoiKhoaEventArgs(ThuLaoHuongDanCuoiKhoaColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The ThuLaoHuongDanCuoiKhoaColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="ThuLaoHuongDanCuoiKhoaColumn" />
		public ThuLaoHuongDanCuoiKhoaColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all ThuLaoHuongDanCuoiKhoa related events.
	///</summary>
	public delegate void ThuLaoHuongDanCuoiKhoaEventHandler(object sender, ThuLaoHuongDanCuoiKhoaEventArgs e);
	
	#region ThuLaoHuongDanCuoiKhoaComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class ThuLaoHuongDanCuoiKhoaComparer : System.Collections.Generic.IComparer<ThuLaoHuongDanCuoiKhoa>
	{
		ThuLaoHuongDanCuoiKhoaColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:ThuLaoHuongDanCuoiKhoaComparer"/> class.
        /// </summary>
		public ThuLaoHuongDanCuoiKhoaComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:ThuLaoHuongDanCuoiKhoaComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public ThuLaoHuongDanCuoiKhoaComparer(ThuLaoHuongDanCuoiKhoaColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="ThuLaoHuongDanCuoiKhoa"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="ThuLaoHuongDanCuoiKhoa"/> to compare.</param>
        /// <param name="b">The second <c>ThuLaoHuongDanCuoiKhoa</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(ThuLaoHuongDanCuoiKhoa a, ThuLaoHuongDanCuoiKhoa b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(ThuLaoHuongDanCuoiKhoa entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(ThuLaoHuongDanCuoiKhoa a, ThuLaoHuongDanCuoiKhoa b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public ThuLaoHuongDanCuoiKhoaColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region ThuLaoHuongDanCuoiKhoaKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="ThuLaoHuongDanCuoiKhoa"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class ThuLaoHuongDanCuoiKhoaKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the ThuLaoHuongDanCuoiKhoaKey class.
		/// </summary>
		public ThuLaoHuongDanCuoiKhoaKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the ThuLaoHuongDanCuoiKhoaKey class.
		/// </summary>
		public ThuLaoHuongDanCuoiKhoaKey(ThuLaoHuongDanCuoiKhoaBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the ThuLaoHuongDanCuoiKhoaKey class.
		/// </summary>
		public ThuLaoHuongDanCuoiKhoaKey(System.Int32 _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private ThuLaoHuongDanCuoiKhoaBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public ThuLaoHuongDanCuoiKhoaBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.Int32 _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.Int32 Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["Id"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region ThuLaoHuongDanCuoiKhoaColumn Enum
	
	/// <summary>
	/// Enumerate the ThuLaoHuongDanCuoiKhoa columns.
	/// </summary>
	[Serializable]
	public enum ThuLaoHuongDanCuoiKhoaColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		Id = 1,
		/// <summary>
		/// MaGiangVienQuanLy : 
		/// </summary>
		[EnumTextValue("Ma Giang Vien Quan Ly")]
		[ColumnEnum("MaGiangVienQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaGiangVienQuanLy = 2,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("Nam Hoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc = 3,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("Hoc Ky")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy = 4,
		/// <summary>
		/// DotChiTra : 
		/// </summary>
		[EnumTextValue("Dot Chi Tra")]
		[ColumnEnum("DotChiTra", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		DotChiTra = 5,
		/// <summary>
		/// HuongDanVietBaoCaoTotNghiep : 
		/// </summary>
		[EnumTextValue("Huong Dan Viet Bao Cao Tot Nghiep")]
		[ColumnEnum("HuongDanVietBaoCaoTotNghiep", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		HuongDanVietBaoCaoTotNghiep = 6,
		/// <summary>
		/// HuongDanChuyenDeThucTapTotNghiep : 
		/// </summary>
		[EnumTextValue("Huong Dan Chuyen De Thuc Tap Tot Nghiep")]
		[ColumnEnum("HuongDanChuyenDeThucTapTotNghiep", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		HuongDanChuyenDeThucTapTotNghiep = 7,
		/// <summary>
		/// HuongDanKhoaLuanTotNghiep : 
		/// </summary>
		[EnumTextValue("Huong Dan Khoa Luan Tot Nghiep")]
		[ColumnEnum("HuongDanKhoaLuanTotNghiep", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		HuongDanKhoaLuanTotNghiep = 8,
		/// <summary>
		/// PhanBienKhoaLuanTotNghiep : 
		/// </summary>
		[EnumTextValue("Phan Bien Khoa Luan Tot Nghiep")]
		[ColumnEnum("PhanBienKhoaLuanTotNghiep", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		PhanBienKhoaLuanTotNghiep = 9,
		/// <summary>
		/// SoTietQuyDoi : 
		/// </summary>
		[EnumTextValue("So Tiet Quy Doi")]
		[ColumnEnum("SoTietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTietQuyDoi = 10,
		/// <summary>
		/// DonGia : 
		/// </summary>
		[EnumTextValue("Don Gia")]
		[ColumnEnum("DonGia", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGia = 11,
		/// <summary>
		/// ThanhTienKhoaLuanChuyenDeTotNghiep : 
		/// </summary>
		[EnumTextValue("Thanh Tien Khoa Luan Chuyen De Tot Nghiep")]
		[ColumnEnum("ThanhTienKhoaLuanChuyenDeTotNghiep", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThanhTienKhoaLuanChuyenDeTotNghiep = 12,
		/// <summary>
		/// SoLuongThamGiaHoiDongTotNghiep : 
		/// </summary>
		[EnumTextValue("So Luong Tham Gia Hoi Dong Tot Nghiep")]
		[ColumnEnum("SoLuongThamGiaHoiDongTotNghiep", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoLuongThamGiaHoiDongTotNghiep = 13,
		/// <summary>
		/// ThanhTienThamGiaHoiDongTotNghiep : 
		/// </summary>
		[EnumTextValue("Thanh Tien Tham Gia Hoi Dong Tot Nghiep")]
		[ColumnEnum("ThanhTienThamGiaHoiDongTotNghiep", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThanhTienThamGiaHoiDongTotNghiep = 14,
		/// <summary>
		/// SoTietNoGioChuan : 
		/// </summary>
		[EnumTextValue("So Tiet No Gio Chuan")]
		[ColumnEnum("SoTietNoGioChuan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTietNoGioChuan = 15,
		/// <summary>
		/// ThanhTienNoGioChuan : 
		/// </summary>
		[EnumTextValue("Thanh Tien No Gio Chuan")]
		[ColumnEnum("ThanhTienNoGioChuan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThanhTienNoGioChuan = 16,
		/// <summary>
		/// Thue : 
		/// </summary>
		[EnumTextValue("Thue")]
		[ColumnEnum("Thue", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		Thue = 17,
		/// <summary>
		/// ThucLanh : 
		/// </summary>
		[EnumTextValue("Thuc Lanh")]
		[ColumnEnum("ThucLanh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThucLanh = 18,
		/// <summary>
		/// NoiDung : 
		/// </summary>
		[EnumTextValue("Noi Dung")]
		[ColumnEnum("NoiDung", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		NoiDung = 19,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("Ngay Cap Nhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayCapNhat = 20,
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		[EnumTextValue("Nguoi Cap Nhat")]
		[ColumnEnum("NguoiCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NguoiCapNhat = 21,
		/// <summary>
		/// ChotKhoiLuong : 
		/// </summary>
		[EnumTextValue("Chot Khoi Luong")]
		[ColumnEnum("ChotKhoiLuong", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ChotKhoiLuong = 22
	}//End enum

	#endregion ThuLaoHuongDanCuoiKhoaColumn Enum

} // end namespace

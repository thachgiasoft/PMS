
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file GiangVienTamUngChiTiet.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'GiangVienTamUngChiTiet' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class GiangVienTamUngChiTietBase : EntityBase, IGiangVienTamUngChiTiet, IEntityId<GiangVienTamUngChiTietKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private GiangVienTamUngChiTietEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private GiangVienTamUngChiTietEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private GiangVienTamUngChiTietEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<GiangVienTamUngChiTiet> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GiangVienTamUngChiTietEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GiangVienTamUngChiTietEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="GiangVienTamUngChiTietBase"/> instance.
		///</summary>
		public GiangVienTamUngChiTietBase()
		{
			this.entityData = new GiangVienTamUngChiTietEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="GiangVienTamUngChiTietBase"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_nhom"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSo"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_soTietThucDay"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_maKhoa"></param>
		///<param name="_maNhomMonHoc"></param>
		///<param name="_maKhoaHoc"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maChucVu"></param>
		///<param name="_maHinhThucDaoTao"></param>
		///<param name="_lopHocPhanChuyenNganh"></param>
		///<param name="_daoTaoTinChi"></param>
		///<param name="_heSoCongViec"></param>
		///<param name="_heSoBacDaoTao"></param>
		///<param name="_heSoNgonNgu"></param>
		///<param name="_heSoChucDanhChuyenMon"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_heSoNienCheTinChi"></param>
		///<param name="_soTietThucTeQuyDoi"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_heSoQuyDoiThucHanhSangLyThuyet"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_loaiLop"></param>
		///<param name="_heSoClcCntn"></param>
		///<param name="_heSoThinhGiangMonChuyenNganh"></param>
		///<param name="_ngonNguGiangDay"></param>
		///<param name="_heSoTroCap"></param>
		///<param name="_heSoLuong"></param>
		///<param name="_heSoMonMoi"></param>
		///<param name="_donGia"></param>
		///<param name="_thanhTien"></param>
		///<param name="_ghiChu"></param>
		///<param name="_mucThanhToan"></param>
		///<param name="_ngayTamUng"></param>
		///<param name="_dotTamUng"></param>
		public GiangVienTamUngChiTietBase(System.Int32? _maGiangVien, System.String _maLopHocPhan, 
			System.String _namHoc, System.String _hocKy, System.String _maMonHoc, 
			System.String _tenMonHoc, System.String _nhom, System.Decimal? _soTinChi, 
			System.Int32? _siSo, System.Byte? _maLoaiHocPhan, System.String _loaiHocPhan, 
			System.String _maLop, System.Decimal? _soTietThucDay, System.String _maBacDaoTao, 
			System.String _maKhoa, System.String _maNhomMonHoc, System.String _maKhoaHoc, 
			System.Int32? _maHocHam, System.Int32? _maHocVi, System.Int32? _maLoaiGiangVien, 
			System.Int32? _maChucVu, System.String _maHinhThucDaoTao, System.Boolean? _lopHocPhanChuyenNganh, 
			System.Boolean? _daoTaoTinChi, System.Decimal? _heSoCongViec, System.Decimal? _heSoBacDaoTao, 
			System.Decimal? _heSoNgonNgu, System.Decimal? _heSoChucDanhChuyenMon, System.Decimal? _heSoLopDong, 
			System.Decimal? _heSoCoSo, System.Decimal? _heSoNienCheTinChi, System.Decimal? _soTietThucTeQuyDoi, 
			System.Decimal? _tietQuyDoi, System.Decimal? _heSoQuyDoiThucHanhSangLyThuyet, 
			System.Decimal? _heSoNgoaiGio, System.String _loaiLop, System.Decimal? _heSoClcCntn, 
			System.Decimal? _heSoThinhGiangMonChuyenNganh, System.String _ngonNguGiangDay, 
			System.Decimal? _heSoTroCap, System.Decimal? _heSoLuong, System.Decimal? _heSoMonMoi, 
			System.Decimal? _donGia, System.Decimal? _thanhTien, System.String _ghiChu, 
			System.Decimal? _mucThanhToan, System.DateTime? _ngayTamUng, System.String _dotTamUng)
		{
			this.entityData = new GiangVienTamUngChiTietEntityData();
			this.backupData = null;

			this.MaGiangVien = _maGiangVien;
			this.MaLopHocPhan = _maLopHocPhan;
			this.NamHoc = _namHoc;
			this.HocKy = _hocKy;
			this.MaMonHoc = _maMonHoc;
			this.TenMonHoc = _tenMonHoc;
			this.Nhom = _nhom;
			this.SoTinChi = _soTinChi;
			this.SiSo = _siSo;
			this.MaLoaiHocPhan = _maLoaiHocPhan;
			this.LoaiHocPhan = _loaiHocPhan;
			this.MaLop = _maLop;
			this.SoTietThucDay = _soTietThucDay;
			this.MaBacDaoTao = _maBacDaoTao;
			this.MaKhoa = _maKhoa;
			this.MaNhomMonHoc = _maNhomMonHoc;
			this.MaKhoaHoc = _maKhoaHoc;
			this.MaHocHam = _maHocHam;
			this.MaHocVi = _maHocVi;
			this.MaLoaiGiangVien = _maLoaiGiangVien;
			this.MaChucVu = _maChucVu;
			this.MaHinhThucDaoTao = _maHinhThucDaoTao;
			this.LopHocPhanChuyenNganh = _lopHocPhanChuyenNganh;
			this.DaoTaoTinChi = _daoTaoTinChi;
			this.HeSoCongViec = _heSoCongViec;
			this.HeSoBacDaoTao = _heSoBacDaoTao;
			this.HeSoNgonNgu = _heSoNgonNgu;
			this.HeSoChucDanhChuyenMon = _heSoChucDanhChuyenMon;
			this.HeSoLopDong = _heSoLopDong;
			this.HeSoCoSo = _heSoCoSo;
			this.HeSoNienCheTinChi = _heSoNienCheTinChi;
			this.SoTietThucTeQuyDoi = _soTietThucTeQuyDoi;
			this.TietQuyDoi = _tietQuyDoi;
			this.HeSoQuyDoiThucHanhSangLyThuyet = _heSoQuyDoiThucHanhSangLyThuyet;
			this.HeSoNgoaiGio = _heSoNgoaiGio;
			this.LoaiLop = _loaiLop;
			this.HeSoClcCntn = _heSoClcCntn;
			this.HeSoThinhGiangMonChuyenNganh = _heSoThinhGiangMonChuyenNganh;
			this.NgonNguGiangDay = _ngonNguGiangDay;
			this.HeSoTroCap = _heSoTroCap;
			this.HeSoLuong = _heSoLuong;
			this.HeSoMonMoi = _heSoMonMoi;
			this.DonGia = _donGia;
			this.ThanhTien = _thanhTien;
			this.GhiChu = _ghiChu;
			this.MucThanhToan = _mucThanhToan;
			this.NgayTamUng = _ngayTamUng;
			this.DotTamUng = _dotTamUng;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="GiangVienTamUngChiTiet"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_nhom"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSo"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_soTietThucDay"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_maKhoa"></param>
		///<param name="_maNhomMonHoc"></param>
		///<param name="_maKhoaHoc"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maChucVu"></param>
		///<param name="_maHinhThucDaoTao"></param>
		///<param name="_lopHocPhanChuyenNganh"></param>
		///<param name="_daoTaoTinChi"></param>
		///<param name="_heSoCongViec"></param>
		///<param name="_heSoBacDaoTao"></param>
		///<param name="_heSoNgonNgu"></param>
		///<param name="_heSoChucDanhChuyenMon"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_heSoNienCheTinChi"></param>
		///<param name="_soTietThucTeQuyDoi"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_heSoQuyDoiThucHanhSangLyThuyet"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_loaiLop"></param>
		///<param name="_heSoClcCntn"></param>
		///<param name="_heSoThinhGiangMonChuyenNganh"></param>
		///<param name="_ngonNguGiangDay"></param>
		///<param name="_heSoTroCap"></param>
		///<param name="_heSoLuong"></param>
		///<param name="_heSoMonMoi"></param>
		///<param name="_donGia"></param>
		///<param name="_thanhTien"></param>
		///<param name="_ghiChu"></param>
		///<param name="_mucThanhToan"></param>
		///<param name="_ngayTamUng"></param>
		///<param name="_dotTamUng"></param>
		public static GiangVienTamUngChiTiet CreateGiangVienTamUngChiTiet(System.Int32? _maGiangVien, System.String _maLopHocPhan, 
			System.String _namHoc, System.String _hocKy, System.String _maMonHoc, 
			System.String _tenMonHoc, System.String _nhom, System.Decimal? _soTinChi, 
			System.Int32? _siSo, System.Byte? _maLoaiHocPhan, System.String _loaiHocPhan, 
			System.String _maLop, System.Decimal? _soTietThucDay, System.String _maBacDaoTao, 
			System.String _maKhoa, System.String _maNhomMonHoc, System.String _maKhoaHoc, 
			System.Int32? _maHocHam, System.Int32? _maHocVi, System.Int32? _maLoaiGiangVien, 
			System.Int32? _maChucVu, System.String _maHinhThucDaoTao, System.Boolean? _lopHocPhanChuyenNganh, 
			System.Boolean? _daoTaoTinChi, System.Decimal? _heSoCongViec, System.Decimal? _heSoBacDaoTao, 
			System.Decimal? _heSoNgonNgu, System.Decimal? _heSoChucDanhChuyenMon, System.Decimal? _heSoLopDong, 
			System.Decimal? _heSoCoSo, System.Decimal? _heSoNienCheTinChi, System.Decimal? _soTietThucTeQuyDoi, 
			System.Decimal? _tietQuyDoi, System.Decimal? _heSoQuyDoiThucHanhSangLyThuyet, 
			System.Decimal? _heSoNgoaiGio, System.String _loaiLop, System.Decimal? _heSoClcCntn, 
			System.Decimal? _heSoThinhGiangMonChuyenNganh, System.String _ngonNguGiangDay, 
			System.Decimal? _heSoTroCap, System.Decimal? _heSoLuong, System.Decimal? _heSoMonMoi, 
			System.Decimal? _donGia, System.Decimal? _thanhTien, System.String _ghiChu, 
			System.Decimal? _mucThanhToan, System.DateTime? _ngayTamUng, System.String _dotTamUng)
		{
			GiangVienTamUngChiTiet newGiangVienTamUngChiTiet = new GiangVienTamUngChiTiet();
			newGiangVienTamUngChiTiet.MaGiangVien = _maGiangVien;
			newGiangVienTamUngChiTiet.MaLopHocPhan = _maLopHocPhan;
			newGiangVienTamUngChiTiet.NamHoc = _namHoc;
			newGiangVienTamUngChiTiet.HocKy = _hocKy;
			newGiangVienTamUngChiTiet.MaMonHoc = _maMonHoc;
			newGiangVienTamUngChiTiet.TenMonHoc = _tenMonHoc;
			newGiangVienTamUngChiTiet.Nhom = _nhom;
			newGiangVienTamUngChiTiet.SoTinChi = _soTinChi;
			newGiangVienTamUngChiTiet.SiSo = _siSo;
			newGiangVienTamUngChiTiet.MaLoaiHocPhan = _maLoaiHocPhan;
			newGiangVienTamUngChiTiet.LoaiHocPhan = _loaiHocPhan;
			newGiangVienTamUngChiTiet.MaLop = _maLop;
			newGiangVienTamUngChiTiet.SoTietThucDay = _soTietThucDay;
			newGiangVienTamUngChiTiet.MaBacDaoTao = _maBacDaoTao;
			newGiangVienTamUngChiTiet.MaKhoa = _maKhoa;
			newGiangVienTamUngChiTiet.MaNhomMonHoc = _maNhomMonHoc;
			newGiangVienTamUngChiTiet.MaKhoaHoc = _maKhoaHoc;
			newGiangVienTamUngChiTiet.MaHocHam = _maHocHam;
			newGiangVienTamUngChiTiet.MaHocVi = _maHocVi;
			newGiangVienTamUngChiTiet.MaLoaiGiangVien = _maLoaiGiangVien;
			newGiangVienTamUngChiTiet.MaChucVu = _maChucVu;
			newGiangVienTamUngChiTiet.MaHinhThucDaoTao = _maHinhThucDaoTao;
			newGiangVienTamUngChiTiet.LopHocPhanChuyenNganh = _lopHocPhanChuyenNganh;
			newGiangVienTamUngChiTiet.DaoTaoTinChi = _daoTaoTinChi;
			newGiangVienTamUngChiTiet.HeSoCongViec = _heSoCongViec;
			newGiangVienTamUngChiTiet.HeSoBacDaoTao = _heSoBacDaoTao;
			newGiangVienTamUngChiTiet.HeSoNgonNgu = _heSoNgonNgu;
			newGiangVienTamUngChiTiet.HeSoChucDanhChuyenMon = _heSoChucDanhChuyenMon;
			newGiangVienTamUngChiTiet.HeSoLopDong = _heSoLopDong;
			newGiangVienTamUngChiTiet.HeSoCoSo = _heSoCoSo;
			newGiangVienTamUngChiTiet.HeSoNienCheTinChi = _heSoNienCheTinChi;
			newGiangVienTamUngChiTiet.SoTietThucTeQuyDoi = _soTietThucTeQuyDoi;
			newGiangVienTamUngChiTiet.TietQuyDoi = _tietQuyDoi;
			newGiangVienTamUngChiTiet.HeSoQuyDoiThucHanhSangLyThuyet = _heSoQuyDoiThucHanhSangLyThuyet;
			newGiangVienTamUngChiTiet.HeSoNgoaiGio = _heSoNgoaiGio;
			newGiangVienTamUngChiTiet.LoaiLop = _loaiLop;
			newGiangVienTamUngChiTiet.HeSoClcCntn = _heSoClcCntn;
			newGiangVienTamUngChiTiet.HeSoThinhGiangMonChuyenNganh = _heSoThinhGiangMonChuyenNganh;
			newGiangVienTamUngChiTiet.NgonNguGiangDay = _ngonNguGiangDay;
			newGiangVienTamUngChiTiet.HeSoTroCap = _heSoTroCap;
			newGiangVienTamUngChiTiet.HeSoLuong = _heSoLuong;
			newGiangVienTamUngChiTiet.HeSoMonMoi = _heSoMonMoi;
			newGiangVienTamUngChiTiet.DonGia = _donGia;
			newGiangVienTamUngChiTiet.ThanhTien = _thanhTien;
			newGiangVienTamUngChiTiet.GhiChu = _ghiChu;
			newGiangVienTamUngChiTiet.MucThanhToan = _mucThanhToan;
			newGiangVienTamUngChiTiet.NgayTamUng = _ngayTamUng;
			newGiangVienTamUngChiTiet.DotTamUng = _dotTamUng;
			return newGiangVienTamUngChiTiet;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
				
                OnPropertyChanging("Id");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaGiangVien
		{
			get
			{
				return this.entityData.MaGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaGiangVien == value)
					return;
				
                OnPropertyChanging("MaGiangVien");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaGiangVien, this.entityData.MaGiangVien);
				this.entityData.MaGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaGiangVien, this.entityData.MaGiangVien);
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this.entityData.MaLopHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaLopHocPhan == value)
					return;
				
                OnPropertyChanging("MaLopHocPhan");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				this.entityData.MaLopHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NamHoc
		{
			get
			{
				return this.entityData.NamHoc; 
			}
			
			set
			{
				if (this.entityData.NamHoc == value)
					return;
				
                OnPropertyChanging("NamHoc");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.NamHoc, this.entityData.NamHoc);
				this.entityData.NamHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.NamHoc, this.entityData.NamHoc);
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String HocKy
		{
			get
			{
				return this.entityData.HocKy; 
			}
			
			set
			{
				if (this.entityData.HocKy == value)
					return;
				
                OnPropertyChanging("HocKy");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HocKy, this.entityData.HocKy);
				this.entityData.HocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HocKy, this.entityData.HocKy);
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this.entityData.MaMonHoc; 
			}
			
			set
			{
				if (this.entityData.MaMonHoc == value)
					return;
				
                OnPropertyChanging("MaMonHoc");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaMonHoc, this.entityData.MaMonHoc);
				this.entityData.MaMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaMonHoc, this.entityData.MaMonHoc);
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this.entityData.TenMonHoc; 
			}
			
			set
			{
				if (this.entityData.TenMonHoc == value)
					return;
				
                OnPropertyChanging("TenMonHoc");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.TenMonHoc, this.entityData.TenMonHoc);
				this.entityData.TenMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.TenMonHoc, this.entityData.TenMonHoc);
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Nhom property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Nhom
		{
			get
			{
				return this.entityData.Nhom; 
			}
			
			set
			{
				if (this.entityData.Nhom == value)
					return;
				
                OnPropertyChanging("Nhom");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.Nhom, this.entityData.Nhom);
				this.entityData.Nhom = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.Nhom, this.entityData.Nhom);
				OnPropertyChanged("Nhom");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTinChi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTinChi
		{
			get
			{
				return this.entityData.SoTinChi; 
			}
			
			set
			{
				if (this.entityData.SoTinChi == value)
					return;
				
                OnPropertyChanging("SoTinChi");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.SoTinChi, this.entityData.SoTinChi);
				this.entityData.SoTinChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.SoTinChi, this.entityData.SoTinChi);
				OnPropertyChanged("SoTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SiSo property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SiSo
		{
			get
			{
				return this.entityData.SiSo; 
			}
			
			set
			{
				if (this.entityData.SiSo == value)
					return;
				
                OnPropertyChanging("SiSo");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.SiSo, this.entityData.SiSo);
				this.entityData.SiSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.SiSo, this.entityData.SiSo);
				OnPropertyChanged("SiSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is tinyint.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte? MaLoaiHocPhan
		{
			get
			{
				return this.entityData.MaLoaiHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaLoaiHocPhan == value)
					return;
				
                OnPropertyChanging("MaLoaiHocPhan");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaLoaiHocPhan, this.entityData.MaLoaiHocPhan);
				this.entityData.MaLoaiHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaLoaiHocPhan, this.entityData.MaLoaiHocPhan);
				OnPropertyChanged("MaLoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String LoaiHocPhan
		{
			get
			{
				return this.entityData.LoaiHocPhan; 
			}
			
			set
			{
				if (this.entityData.LoaiHocPhan == value)
					return;
				
                OnPropertyChanging("LoaiHocPhan");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.LoaiHocPhan, this.entityData.LoaiHocPhan);
				this.entityData.LoaiHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.LoaiHocPhan, this.entityData.LoaiHocPhan);
				OnPropertyChanged("LoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String MaLop
		{
			get
			{
				return this.entityData.MaLop; 
			}
			
			set
			{
				if (this.entityData.MaLop == value)
					return;
				
                OnPropertyChanging("MaLop");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaLop, this.entityData.MaLop);
				this.entityData.MaLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaLop, this.entityData.MaLop);
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTietThucDay property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTietThucDay
		{
			get
			{
				return this.entityData.SoTietThucDay; 
			}
			
			set
			{
				if (this.entityData.SoTietThucDay == value)
					return;
				
                OnPropertyChanging("SoTietThucDay");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.SoTietThucDay, this.entityData.SoTietThucDay);
				this.entityData.SoTietThucDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.SoTietThucDay, this.entityData.SoTietThucDay);
				OnPropertyChanged("SoTietThucDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaBacDaoTao
		{
			get
			{
				return this.entityData.MaBacDaoTao; 
			}
			
			set
			{
				if (this.entityData.MaBacDaoTao == value)
					return;
				
                OnPropertyChanging("MaBacDaoTao");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaBacDaoTao, this.entityData.MaBacDaoTao);
				this.entityData.MaBacDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaBacDaoTao, this.entityData.MaBacDaoTao);
				OnPropertyChanged("MaBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaKhoa property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String MaKhoa
		{
			get
			{
				return this.entityData.MaKhoa; 
			}
			
			set
			{
				if (this.entityData.MaKhoa == value)
					return;
				
                OnPropertyChanging("MaKhoa");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaKhoa, this.entityData.MaKhoa);
				this.entityData.MaKhoa = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaKhoa, this.entityData.MaKhoa);
				OnPropertyChanged("MaKhoa");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaNhomMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaNhomMonHoc
		{
			get
			{
				return this.entityData.MaNhomMonHoc; 
			}
			
			set
			{
				if (this.entityData.MaNhomMonHoc == value)
					return;
				
                OnPropertyChanging("MaNhomMonHoc");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaNhomMonHoc, this.entityData.MaNhomMonHoc);
				this.entityData.MaNhomMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaNhomMonHoc, this.entityData.MaNhomMonHoc);
				OnPropertyChanged("MaNhomMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaKhoaHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaKhoaHoc
		{
			get
			{
				return this.entityData.MaKhoaHoc; 
			}
			
			set
			{
				if (this.entityData.MaKhoaHoc == value)
					return;
				
                OnPropertyChanging("MaKhoaHoc");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaKhoaHoc, this.entityData.MaKhoaHoc);
				this.entityData.MaKhoaHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaKhoaHoc, this.entityData.MaKhoaHoc);
				OnPropertyChanged("MaKhoaHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocHam property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocHam
		{
			get
			{
				return this.entityData.MaHocHam; 
			}
			
			set
			{
				if (this.entityData.MaHocHam == value)
					return;
				
                OnPropertyChanging("MaHocHam");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaHocHam, this.entityData.MaHocHam);
				this.entityData.MaHocHam = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaHocHam, this.entityData.MaHocHam);
				OnPropertyChanged("MaHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocVi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocVi
		{
			get
			{
				return this.entityData.MaHocVi; 
			}
			
			set
			{
				if (this.entityData.MaHocVi == value)
					return;
				
                OnPropertyChanging("MaHocVi");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaHocVi, this.entityData.MaHocVi);
				this.entityData.MaHocVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaHocVi, this.entityData.MaHocVi);
				OnPropertyChanged("MaHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this.entityData.MaLoaiGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaLoaiGiangVien == value)
					return;
				
                OnPropertyChanging("MaLoaiGiangVien");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				this.entityData.MaLoaiGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaChucVu property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaChucVu
		{
			get
			{
				return this.entityData.MaChucVu; 
			}
			
			set
			{
				if (this.entityData.MaChucVu == value)
					return;
				
                OnPropertyChanging("MaChucVu");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaChucVu, this.entityData.MaChucVu);
				this.entityData.MaChucVu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaChucVu, this.entityData.MaChucVu);
				OnPropertyChanged("MaChucVu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHinhThucDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaHinhThucDaoTao
		{
			get
			{
				return this.entityData.MaHinhThucDaoTao; 
			}
			
			set
			{
				if (this.entityData.MaHinhThucDaoTao == value)
					return;
				
                OnPropertyChanging("MaHinhThucDaoTao");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MaHinhThucDaoTao, this.entityData.MaHinhThucDaoTao);
				this.entityData.MaHinhThucDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MaHinhThucDaoTao, this.entityData.MaHinhThucDaoTao);
				OnPropertyChanged("MaHinhThucDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LopHocPhanChuyenNganh property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? LopHocPhanChuyenNganh
		{
			get
			{
				return this.entityData.LopHocPhanChuyenNganh; 
			}
			
			set
			{
				if (this.entityData.LopHocPhanChuyenNganh == value)
					return;
				
                OnPropertyChanging("LopHocPhanChuyenNganh");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.LopHocPhanChuyenNganh, this.entityData.LopHocPhanChuyenNganh);
				this.entityData.LopHocPhanChuyenNganh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.LopHocPhanChuyenNganh, this.entityData.LopHocPhanChuyenNganh);
				OnPropertyChanged("LopHocPhanChuyenNganh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DaoTaoTinChi property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DaoTaoTinChi
		{
			get
			{
				return this.entityData.DaoTaoTinChi; 
			}
			
			set
			{
				if (this.entityData.DaoTaoTinChi == value)
					return;
				
                OnPropertyChanging("DaoTaoTinChi");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.DaoTaoTinChi, this.entityData.DaoTaoTinChi);
				this.entityData.DaoTaoTinChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.DaoTaoTinChi, this.entityData.DaoTaoTinChi);
				OnPropertyChanged("DaoTaoTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoCongViec property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoCongViec
		{
			get
			{
				return this.entityData.HeSoCongViec; 
			}
			
			set
			{
				if (this.entityData.HeSoCongViec == value)
					return;
				
                OnPropertyChanging("HeSoCongViec");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoCongViec, this.entityData.HeSoCongViec);
				this.entityData.HeSoCongViec = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoCongViec, this.entityData.HeSoCongViec);
				OnPropertyChanged("HeSoCongViec");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoBacDaoTao
		{
			get
			{
				return this.entityData.HeSoBacDaoTao; 
			}
			
			set
			{
				if (this.entityData.HeSoBacDaoTao == value)
					return;
				
                OnPropertyChanging("HeSoBacDaoTao");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoBacDaoTao, this.entityData.HeSoBacDaoTao);
				this.entityData.HeSoBacDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoBacDaoTao, this.entityData.HeSoBacDaoTao);
				OnPropertyChanged("HeSoBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNgonNgu property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNgonNgu
		{
			get
			{
				return this.entityData.HeSoNgonNgu; 
			}
			
			set
			{
				if (this.entityData.HeSoNgonNgu == value)
					return;
				
                OnPropertyChanging("HeSoNgonNgu");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoNgonNgu, this.entityData.HeSoNgonNgu);
				this.entityData.HeSoNgonNgu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoNgonNgu, this.entityData.HeSoNgonNgu);
				OnPropertyChanged("HeSoNgonNgu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoChucDanhChuyenMon property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoChucDanhChuyenMon
		{
			get
			{
				return this.entityData.HeSoChucDanhChuyenMon; 
			}
			
			set
			{
				if (this.entityData.HeSoChucDanhChuyenMon == value)
					return;
				
                OnPropertyChanging("HeSoChucDanhChuyenMon");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoChucDanhChuyenMon, this.entityData.HeSoChucDanhChuyenMon);
				this.entityData.HeSoChucDanhChuyenMon = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoChucDanhChuyenMon, this.entityData.HeSoChucDanhChuyenMon);
				OnPropertyChanged("HeSoChucDanhChuyenMon");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoLopDong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoLopDong
		{
			get
			{
				return this.entityData.HeSoLopDong; 
			}
			
			set
			{
				if (this.entityData.HeSoLopDong == value)
					return;
				
                OnPropertyChanging("HeSoLopDong");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				this.entityData.HeSoLopDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				OnPropertyChanged("HeSoLopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoCoSo property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoCoSo
		{
			get
			{
				return this.entityData.HeSoCoSo; 
			}
			
			set
			{
				if (this.entityData.HeSoCoSo == value)
					return;
				
                OnPropertyChanging("HeSoCoSo");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoCoSo, this.entityData.HeSoCoSo);
				this.entityData.HeSoCoSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoCoSo, this.entityData.HeSoCoSo);
				OnPropertyChanged("HeSoCoSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNienCheTinChi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNienCheTinChi
		{
			get
			{
				return this.entityData.HeSoNienCheTinChi; 
			}
			
			set
			{
				if (this.entityData.HeSoNienCheTinChi == value)
					return;
				
                OnPropertyChanging("HeSoNienCheTinChi");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoNienCheTinChi, this.entityData.HeSoNienCheTinChi);
				this.entityData.HeSoNienCheTinChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoNienCheTinChi, this.entityData.HeSoNienCheTinChi);
				OnPropertyChanged("HeSoNienCheTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTietThucTeQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTietThucTeQuyDoi
		{
			get
			{
				return this.entityData.SoTietThucTeQuyDoi; 
			}
			
			set
			{
				if (this.entityData.SoTietThucTeQuyDoi == value)
					return;
				
                OnPropertyChanging("SoTietThucTeQuyDoi");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.SoTietThucTeQuyDoi, this.entityData.SoTietThucTeQuyDoi);
				this.entityData.SoTietThucTeQuyDoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.SoTietThucTeQuyDoi, this.entityData.SoTietThucTeQuyDoi);
				OnPropertyChanged("SoTietThucTeQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this.entityData.TietQuyDoi; 
			}
			
			set
			{
				if (this.entityData.TietQuyDoi == value)
					return;
				
                OnPropertyChanging("TietQuyDoi");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.TietQuyDoi, this.entityData.TietQuyDoi);
				this.entityData.TietQuyDoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.TietQuyDoi, this.entityData.TietQuyDoi);
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoQuyDoiThucHanhSangLyThuyet property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoQuyDoiThucHanhSangLyThuyet
		{
			get
			{
				return this.entityData.HeSoQuyDoiThucHanhSangLyThuyet; 
			}
			
			set
			{
				if (this.entityData.HeSoQuyDoiThucHanhSangLyThuyet == value)
					return;
				
                OnPropertyChanging("HeSoQuyDoiThucHanhSangLyThuyet");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoQuyDoiThucHanhSangLyThuyet, this.entityData.HeSoQuyDoiThucHanhSangLyThuyet);
				this.entityData.HeSoQuyDoiThucHanhSangLyThuyet = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoQuyDoiThucHanhSangLyThuyet, this.entityData.HeSoQuyDoiThucHanhSangLyThuyet);
				OnPropertyChanged("HeSoQuyDoiThucHanhSangLyThuyet");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNgoaiGio
		{
			get
			{
				return this.entityData.HeSoNgoaiGio; 
			}
			
			set
			{
				if (this.entityData.HeSoNgoaiGio == value)
					return;
				
                OnPropertyChanging("HeSoNgoaiGio");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoNgoaiGio, this.entityData.HeSoNgoaiGio);
				this.entityData.HeSoNgoaiGio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoNgoaiGio, this.entityData.HeSoNgoaiGio);
				OnPropertyChanged("HeSoNgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoaiLop property. 
		///		
		/// </summary>
		/// <value>This type is nchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String LoaiLop
		{
			get
			{
				return this.entityData.LoaiLop; 
			}
			
			set
			{
				if (this.entityData.LoaiLop == value)
					return;
				
                OnPropertyChanging("LoaiLop");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.LoaiLop, this.entityData.LoaiLop);
				this.entityData.LoaiLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.LoaiLop, this.entityData.LoaiLop);
				OnPropertyChanged("LoaiLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoClcCntn property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoClcCntn
		{
			get
			{
				return this.entityData.HeSoClcCntn; 
			}
			
			set
			{
				if (this.entityData.HeSoClcCntn == value)
					return;
				
                OnPropertyChanging("HeSoClcCntn");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoClcCntn, this.entityData.HeSoClcCntn);
				this.entityData.HeSoClcCntn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoClcCntn, this.entityData.HeSoClcCntn);
				OnPropertyChanged("HeSoClcCntn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoThinhGiangMonChuyenNganh property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoThinhGiangMonChuyenNganh
		{
			get
			{
				return this.entityData.HeSoThinhGiangMonChuyenNganh; 
			}
			
			set
			{
				if (this.entityData.HeSoThinhGiangMonChuyenNganh == value)
					return;
				
                OnPropertyChanging("HeSoThinhGiangMonChuyenNganh");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoThinhGiangMonChuyenNganh, this.entityData.HeSoThinhGiangMonChuyenNganh);
				this.entityData.HeSoThinhGiangMonChuyenNganh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoThinhGiangMonChuyenNganh, this.entityData.HeSoThinhGiangMonChuyenNganh);
				OnPropertyChanged("HeSoThinhGiangMonChuyenNganh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgonNguGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String NgonNguGiangDay
		{
			get
			{
				return this.entityData.NgonNguGiangDay; 
			}
			
			set
			{
				if (this.entityData.NgonNguGiangDay == value)
					return;
				
                OnPropertyChanging("NgonNguGiangDay");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.NgonNguGiangDay, this.entityData.NgonNguGiangDay);
				this.entityData.NgonNguGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.NgonNguGiangDay, this.entityData.NgonNguGiangDay);
				OnPropertyChanged("NgonNguGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoTroCap property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoTroCap
		{
			get
			{
				return this.entityData.HeSoTroCap; 
			}
			
			set
			{
				if (this.entityData.HeSoTroCap == value)
					return;
				
                OnPropertyChanging("HeSoTroCap");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoTroCap, this.entityData.HeSoTroCap);
				this.entityData.HeSoTroCap = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoTroCap, this.entityData.HeSoTroCap);
				OnPropertyChanged("HeSoTroCap");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoLuong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoLuong
		{
			get
			{
				return this.entityData.HeSoLuong; 
			}
			
			set
			{
				if (this.entityData.HeSoLuong == value)
					return;
				
                OnPropertyChanging("HeSoLuong");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoLuong, this.entityData.HeSoLuong);
				this.entityData.HeSoLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoLuong, this.entityData.HeSoLuong);
				OnPropertyChanged("HeSoLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoMonMoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoMonMoi
		{
			get
			{
				return this.entityData.HeSoMonMoi; 
			}
			
			set
			{
				if (this.entityData.HeSoMonMoi == value)
					return;
				
                OnPropertyChanging("HeSoMonMoi");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.HeSoMonMoi, this.entityData.HeSoMonMoi);
				this.entityData.HeSoMonMoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.HeSoMonMoi, this.entityData.HeSoMonMoi);
				OnPropertyChanged("HeSoMonMoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DonGia property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DonGia
		{
			get
			{
				return this.entityData.DonGia; 
			}
			
			set
			{
				if (this.entityData.DonGia == value)
					return;
				
                OnPropertyChanging("DonGia");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.DonGia, this.entityData.DonGia);
				this.entityData.DonGia = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.DonGia, this.entityData.DonGia);
				OnPropertyChanged("DonGia");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThanhTien property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThanhTien
		{
			get
			{
				return this.entityData.ThanhTien; 
			}
			
			set
			{
				if (this.entityData.ThanhTien == value)
					return;
				
                OnPropertyChanging("ThanhTien");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.ThanhTien, this.entityData.ThanhTien);
				this.entityData.ThanhTien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.ThanhTien, this.entityData.ThanhTien);
				OnPropertyChanged("ThanhTien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GhiChu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String GhiChu
		{
			get
			{
				return this.entityData.GhiChu; 
			}
			
			set
			{
				if (this.entityData.GhiChu == value)
					return;
				
                OnPropertyChanging("GhiChu");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.GhiChu, this.entityData.GhiChu);
				this.entityData.GhiChu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.GhiChu, this.entityData.GhiChu);
				OnPropertyChanged("GhiChu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MucThanhToan property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MucThanhToan
		{
			get
			{
				return this.entityData.MucThanhToan; 
			}
			
			set
			{
				if (this.entityData.MucThanhToan == value)
					return;
				
                OnPropertyChanging("MucThanhToan");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.MucThanhToan, this.entityData.MucThanhToan);
				this.entityData.MucThanhToan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.MucThanhToan, this.entityData.MucThanhToan);
				OnPropertyChanged("MucThanhToan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayTamUng property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayTamUng
		{
			get
			{
				return this.entityData.NgayTamUng; 
			}
			
			set
			{
				if (this.entityData.NgayTamUng == value)
					return;
				
                OnPropertyChanging("NgayTamUng");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.NgayTamUng, this.entityData.NgayTamUng);
				this.entityData.NgayTamUng = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.NgayTamUng, this.entityData.NgayTamUng);
				OnPropertyChanged("NgayTamUng");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DotTamUng property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String DotTamUng
		{
			get
			{
				return this.entityData.DotTamUng; 
			}
			
			set
			{
				if (this.entityData.DotTamUng == value)
					return;
				
                OnPropertyChanging("DotTamUng");                    
				OnColumnChanging(GiangVienTamUngChiTietColumn.DotTamUng, this.entityData.DotTamUng);
				this.entityData.DotTamUng = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienTamUngChiTietColumn.DotTamUng, this.entityData.DotTamUng);
				OnPropertyChanged("DotTamUng");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLopHocPhan", "Ma Lop Hoc Phan", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NamHoc", "Nam Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HocKy", "Hoc Ky", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaMonHoc", "Ma Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenMonHoc", "Ten Mon Hoc", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Nhom", "Nhom", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LoaiHocPhan", "Loai Hoc Phan", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLop", "Ma Lop", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaBacDaoTao", "Ma Bac Dao Tao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaKhoa", "Ma Khoa", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaNhomMonHoc", "Ma Nhom Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaKhoaHoc", "Ma Khoa Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaHinhThucDaoTao", "Ma Hinh Thuc Dao Tao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LoaiLop", "Loai Lop", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgonNguGiangDay", "Ngon Ngu Giang Day", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GhiChu", "Ghi Chu", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DotTamUng", "Dot Tam Ung", 500));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "GiangVienTamUngChiTiet"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Id", "MaGiangVien", "MaLopHocPhan", "NamHoc", "HocKy", "MaMonHoc", "TenMonHoc", "Nhom", "SoTinChi", "SiSo", "MaLoaiHocPhan", "LoaiHocPhan", "MaLop", "SoTietThucDay", "MaBacDaoTao", "MaKhoa", "MaNhomMonHoc", "MaKhoaHoc", "MaHocHam", "MaHocVi", "MaLoaiGiangVien", "MaChucVu", "MaHinhThucDaoTao", "LopHocPhanChuyenNganh", "DaoTaoTinChi", "HeSoCongViec", "HeSoBacDaoTao", "HeSoNgonNgu", "HeSoChucDanhChuyenMon", "HeSoLopDong", "HeSoCoSo", "HeSoNienCheTinChi", "SoTietThucTeQuyDoi", "TietQuyDoi", "HeSoQuyDoiThucHanhSangLyThuyet", "HeSoNgoaiGio", "LoaiLop", "HeSoClcCntn", "HeSoThinhGiangMonChuyenNganh", "NgonNguGiangDay", "HeSoTroCap", "HeSoLuong", "HeSoMonMoi", "DonGia", "ThanhTien", "GhiChu", "MucThanhToan", "NgayTamUng", "DotTamUng"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as GiangVienTamUngChiTietEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (GiangVienTamUngChiTiet) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<GiangVienTamUngChiTiet>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as GiangVienTamUngChiTiet);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed GiangVienTamUngChiTiet Entity 
		///</summary>
		protected virtual GiangVienTamUngChiTiet Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			GiangVienTamUngChiTiet copy = new GiangVienTamUngChiTiet();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.Id = this.Id;
				copy.MaGiangVien = this.MaGiangVien;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.Nhom = this.Nhom;
				copy.SoTinChi = this.SoTinChi;
				copy.SiSo = this.SiSo;
				copy.MaLoaiHocPhan = this.MaLoaiHocPhan;
				copy.LoaiHocPhan = this.LoaiHocPhan;
				copy.MaLop = this.MaLop;
				copy.SoTietThucDay = this.SoTietThucDay;
				copy.MaBacDaoTao = this.MaBacDaoTao;
				copy.MaKhoa = this.MaKhoa;
				copy.MaNhomMonHoc = this.MaNhomMonHoc;
				copy.MaKhoaHoc = this.MaKhoaHoc;
				copy.MaHocHam = this.MaHocHam;
				copy.MaHocVi = this.MaHocVi;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.MaChucVu = this.MaChucVu;
				copy.MaHinhThucDaoTao = this.MaHinhThucDaoTao;
				copy.LopHocPhanChuyenNganh = this.LopHocPhanChuyenNganh;
				copy.DaoTaoTinChi = this.DaoTaoTinChi;
				copy.HeSoCongViec = this.HeSoCongViec;
				copy.HeSoBacDaoTao = this.HeSoBacDaoTao;
				copy.HeSoNgonNgu = this.HeSoNgonNgu;
				copy.HeSoChucDanhChuyenMon = this.HeSoChucDanhChuyenMon;
				copy.HeSoLopDong = this.HeSoLopDong;
				copy.HeSoCoSo = this.HeSoCoSo;
				copy.HeSoNienCheTinChi = this.HeSoNienCheTinChi;
				copy.SoTietThucTeQuyDoi = this.SoTietThucTeQuyDoi;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.HeSoQuyDoiThucHanhSangLyThuyet = this.HeSoQuyDoiThucHanhSangLyThuyet;
				copy.HeSoNgoaiGio = this.HeSoNgoaiGio;
				copy.LoaiLop = this.LoaiLop;
				copy.HeSoClcCntn = this.HeSoClcCntn;
				copy.HeSoThinhGiangMonChuyenNganh = this.HeSoThinhGiangMonChuyenNganh;
				copy.NgonNguGiangDay = this.NgonNguGiangDay;
				copy.HeSoTroCap = this.HeSoTroCap;
				copy.HeSoLuong = this.HeSoLuong;
				copy.HeSoMonMoi = this.HeSoMonMoi;
				copy.DonGia = this.DonGia;
				copy.ThanhTien = this.ThanhTien;
				copy.GhiChu = this.GhiChu;
				copy.MucThanhToan = this.MucThanhToan;
				copy.NgayTamUng = this.NgayTamUng;
				copy.DotTamUng = this.DotTamUng;
			
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed GiangVienTamUngChiTiet Entity 
		///</summary>
		public virtual GiangVienTamUngChiTiet Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed GiangVienTamUngChiTiet Entity which is a deep copy of the current entity.
		///</summary>
		public virtual GiangVienTamUngChiTiet DeepCopy()
		{
			return EntityHelper.Clone<GiangVienTamUngChiTiet>(this as GiangVienTamUngChiTiet);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as GiangVienTamUngChiTietEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new GiangVienTamUngChiTietEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as GiangVienTamUngChiTietEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(GiangVienTamUngChiTietColumn column)
		{
			switch(column)
			{
					case GiangVienTamUngChiTietColumn.Id:
					return entityData.Id != _originalData.Id;
					case GiangVienTamUngChiTietColumn.MaGiangVien:
					return entityData.MaGiangVien != _originalData.MaGiangVien;
					case GiangVienTamUngChiTietColumn.MaLopHocPhan:
					return entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
					case GiangVienTamUngChiTietColumn.NamHoc:
					return entityData.NamHoc != _originalData.NamHoc;
					case GiangVienTamUngChiTietColumn.HocKy:
					return entityData.HocKy != _originalData.HocKy;
					case GiangVienTamUngChiTietColumn.MaMonHoc:
					return entityData.MaMonHoc != _originalData.MaMonHoc;
					case GiangVienTamUngChiTietColumn.TenMonHoc:
					return entityData.TenMonHoc != _originalData.TenMonHoc;
					case GiangVienTamUngChiTietColumn.Nhom:
					return entityData.Nhom != _originalData.Nhom;
					case GiangVienTamUngChiTietColumn.SoTinChi:
					return entityData.SoTinChi != _originalData.SoTinChi;
					case GiangVienTamUngChiTietColumn.SiSo:
					return entityData.SiSo != _originalData.SiSo;
					case GiangVienTamUngChiTietColumn.MaLoaiHocPhan:
					return entityData.MaLoaiHocPhan != _originalData.MaLoaiHocPhan;
					case GiangVienTamUngChiTietColumn.LoaiHocPhan:
					return entityData.LoaiHocPhan != _originalData.LoaiHocPhan;
					case GiangVienTamUngChiTietColumn.MaLop:
					return entityData.MaLop != _originalData.MaLop;
					case GiangVienTamUngChiTietColumn.SoTietThucDay:
					return entityData.SoTietThucDay != _originalData.SoTietThucDay;
					case GiangVienTamUngChiTietColumn.MaBacDaoTao:
					return entityData.MaBacDaoTao != _originalData.MaBacDaoTao;
					case GiangVienTamUngChiTietColumn.MaKhoa:
					return entityData.MaKhoa != _originalData.MaKhoa;
					case GiangVienTamUngChiTietColumn.MaNhomMonHoc:
					return entityData.MaNhomMonHoc != _originalData.MaNhomMonHoc;
					case GiangVienTamUngChiTietColumn.MaKhoaHoc:
					return entityData.MaKhoaHoc != _originalData.MaKhoaHoc;
					case GiangVienTamUngChiTietColumn.MaHocHam:
					return entityData.MaHocHam != _originalData.MaHocHam;
					case GiangVienTamUngChiTietColumn.MaHocVi:
					return entityData.MaHocVi != _originalData.MaHocVi;
					case GiangVienTamUngChiTietColumn.MaLoaiGiangVien:
					return entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
					case GiangVienTamUngChiTietColumn.MaChucVu:
					return entityData.MaChucVu != _originalData.MaChucVu;
					case GiangVienTamUngChiTietColumn.MaHinhThucDaoTao:
					return entityData.MaHinhThucDaoTao != _originalData.MaHinhThucDaoTao;
					case GiangVienTamUngChiTietColumn.LopHocPhanChuyenNganh:
					return entityData.LopHocPhanChuyenNganh != _originalData.LopHocPhanChuyenNganh;
					case GiangVienTamUngChiTietColumn.DaoTaoTinChi:
					return entityData.DaoTaoTinChi != _originalData.DaoTaoTinChi;
					case GiangVienTamUngChiTietColumn.HeSoCongViec:
					return entityData.HeSoCongViec != _originalData.HeSoCongViec;
					case GiangVienTamUngChiTietColumn.HeSoBacDaoTao:
					return entityData.HeSoBacDaoTao != _originalData.HeSoBacDaoTao;
					case GiangVienTamUngChiTietColumn.HeSoNgonNgu:
					return entityData.HeSoNgonNgu != _originalData.HeSoNgonNgu;
					case GiangVienTamUngChiTietColumn.HeSoChucDanhChuyenMon:
					return entityData.HeSoChucDanhChuyenMon != _originalData.HeSoChucDanhChuyenMon;
					case GiangVienTamUngChiTietColumn.HeSoLopDong:
					return entityData.HeSoLopDong != _originalData.HeSoLopDong;
					case GiangVienTamUngChiTietColumn.HeSoCoSo:
					return entityData.HeSoCoSo != _originalData.HeSoCoSo;
					case GiangVienTamUngChiTietColumn.HeSoNienCheTinChi:
					return entityData.HeSoNienCheTinChi != _originalData.HeSoNienCheTinChi;
					case GiangVienTamUngChiTietColumn.SoTietThucTeQuyDoi:
					return entityData.SoTietThucTeQuyDoi != _originalData.SoTietThucTeQuyDoi;
					case GiangVienTamUngChiTietColumn.TietQuyDoi:
					return entityData.TietQuyDoi != _originalData.TietQuyDoi;
					case GiangVienTamUngChiTietColumn.HeSoQuyDoiThucHanhSangLyThuyet:
					return entityData.HeSoQuyDoiThucHanhSangLyThuyet != _originalData.HeSoQuyDoiThucHanhSangLyThuyet;
					case GiangVienTamUngChiTietColumn.HeSoNgoaiGio:
					return entityData.HeSoNgoaiGio != _originalData.HeSoNgoaiGio;
					case GiangVienTamUngChiTietColumn.LoaiLop:
					return entityData.LoaiLop != _originalData.LoaiLop;
					case GiangVienTamUngChiTietColumn.HeSoClcCntn:
					return entityData.HeSoClcCntn != _originalData.HeSoClcCntn;
					case GiangVienTamUngChiTietColumn.HeSoThinhGiangMonChuyenNganh:
					return entityData.HeSoThinhGiangMonChuyenNganh != _originalData.HeSoThinhGiangMonChuyenNganh;
					case GiangVienTamUngChiTietColumn.NgonNguGiangDay:
					return entityData.NgonNguGiangDay != _originalData.NgonNguGiangDay;
					case GiangVienTamUngChiTietColumn.HeSoTroCap:
					return entityData.HeSoTroCap != _originalData.HeSoTroCap;
					case GiangVienTamUngChiTietColumn.HeSoLuong:
					return entityData.HeSoLuong != _originalData.HeSoLuong;
					case GiangVienTamUngChiTietColumn.HeSoMonMoi:
					return entityData.HeSoMonMoi != _originalData.HeSoMonMoi;
					case GiangVienTamUngChiTietColumn.DonGia:
					return entityData.DonGia != _originalData.DonGia;
					case GiangVienTamUngChiTietColumn.ThanhTien:
					return entityData.ThanhTien != _originalData.ThanhTien;
					case GiangVienTamUngChiTietColumn.GhiChu:
					return entityData.GhiChu != _originalData.GhiChu;
					case GiangVienTamUngChiTietColumn.MucThanhToan:
					return entityData.MucThanhToan != _originalData.MucThanhToan;
					case GiangVienTamUngChiTietColumn.NgayTamUng:
					return entityData.NgayTamUng != _originalData.NgayTamUng;
					case GiangVienTamUngChiTietColumn.DotTamUng:
					return entityData.DotTamUng != _originalData.DotTamUng;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< GiangVienTamUngChiTietColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.MaGiangVien != _originalData.MaGiangVien;
			result = result || entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
			result = result || entityData.NamHoc != _originalData.NamHoc;
			result = result || entityData.HocKy != _originalData.HocKy;
			result = result || entityData.MaMonHoc != _originalData.MaMonHoc;
			result = result || entityData.TenMonHoc != _originalData.TenMonHoc;
			result = result || entityData.Nhom != _originalData.Nhom;
			result = result || entityData.SoTinChi != _originalData.SoTinChi;
			result = result || entityData.SiSo != _originalData.SiSo;
			result = result || entityData.MaLoaiHocPhan != _originalData.MaLoaiHocPhan;
			result = result || entityData.LoaiHocPhan != _originalData.LoaiHocPhan;
			result = result || entityData.MaLop != _originalData.MaLop;
			result = result || entityData.SoTietThucDay != _originalData.SoTietThucDay;
			result = result || entityData.MaBacDaoTao != _originalData.MaBacDaoTao;
			result = result || entityData.MaKhoa != _originalData.MaKhoa;
			result = result || entityData.MaNhomMonHoc != _originalData.MaNhomMonHoc;
			result = result || entityData.MaKhoaHoc != _originalData.MaKhoaHoc;
			result = result || entityData.MaHocHam != _originalData.MaHocHam;
			result = result || entityData.MaHocVi != _originalData.MaHocVi;
			result = result || entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
			result = result || entityData.MaChucVu != _originalData.MaChucVu;
			result = result || entityData.MaHinhThucDaoTao != _originalData.MaHinhThucDaoTao;
			result = result || entityData.LopHocPhanChuyenNganh != _originalData.LopHocPhanChuyenNganh;
			result = result || entityData.DaoTaoTinChi != _originalData.DaoTaoTinChi;
			result = result || entityData.HeSoCongViec != _originalData.HeSoCongViec;
			result = result || entityData.HeSoBacDaoTao != _originalData.HeSoBacDaoTao;
			result = result || entityData.HeSoNgonNgu != _originalData.HeSoNgonNgu;
			result = result || entityData.HeSoChucDanhChuyenMon != _originalData.HeSoChucDanhChuyenMon;
			result = result || entityData.HeSoLopDong != _originalData.HeSoLopDong;
			result = result || entityData.HeSoCoSo != _originalData.HeSoCoSo;
			result = result || entityData.HeSoNienCheTinChi != _originalData.HeSoNienCheTinChi;
			result = result || entityData.SoTietThucTeQuyDoi != _originalData.SoTietThucTeQuyDoi;
			result = result || entityData.TietQuyDoi != _originalData.TietQuyDoi;
			result = result || entityData.HeSoQuyDoiThucHanhSangLyThuyet != _originalData.HeSoQuyDoiThucHanhSangLyThuyet;
			result = result || entityData.HeSoNgoaiGio != _originalData.HeSoNgoaiGio;
			result = result || entityData.LoaiLop != _originalData.LoaiLop;
			result = result || entityData.HeSoClcCntn != _originalData.HeSoClcCntn;
			result = result || entityData.HeSoThinhGiangMonChuyenNganh != _originalData.HeSoThinhGiangMonChuyenNganh;
			result = result || entityData.NgonNguGiangDay != _originalData.NgonNguGiangDay;
			result = result || entityData.HeSoTroCap != _originalData.HeSoTroCap;
			result = result || entityData.HeSoLuong != _originalData.HeSoLuong;
			result = result || entityData.HeSoMonMoi != _originalData.HeSoMonMoi;
			result = result || entityData.DonGia != _originalData.DonGia;
			result = result || entityData.ThanhTien != _originalData.ThanhTien;
			result = result || entityData.GhiChu != _originalData.GhiChu;
			result = result || entityData.MucThanhToan != _originalData.MucThanhToan;
			result = result || entityData.NgayTamUng != _originalData.NgayTamUng;
			result = result || entityData.DotTamUng != _originalData.DotTamUng;
			return result;
		}	
		
		///<summary>
		///  Returns a GiangVienTamUngChiTiet Entity with the original data.
		///</summary>
		public GiangVienTamUngChiTiet GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateGiangVienTamUngChiTiet(
				_originalData.MaGiangVien,
				_originalData.MaLopHocPhan,
				_originalData.NamHoc,
				_originalData.HocKy,
				_originalData.MaMonHoc,
				_originalData.TenMonHoc,
				_originalData.Nhom,
				_originalData.SoTinChi,
				_originalData.SiSo,
				_originalData.MaLoaiHocPhan,
				_originalData.LoaiHocPhan,
				_originalData.MaLop,
				_originalData.SoTietThucDay,
				_originalData.MaBacDaoTao,
				_originalData.MaKhoa,
				_originalData.MaNhomMonHoc,
				_originalData.MaKhoaHoc,
				_originalData.MaHocHam,
				_originalData.MaHocVi,
				_originalData.MaLoaiGiangVien,
				_originalData.MaChucVu,
				_originalData.MaHinhThucDaoTao,
				_originalData.LopHocPhanChuyenNganh,
				_originalData.DaoTaoTinChi,
				_originalData.HeSoCongViec,
				_originalData.HeSoBacDaoTao,
				_originalData.HeSoNgonNgu,
				_originalData.HeSoChucDanhChuyenMon,
				_originalData.HeSoLopDong,
				_originalData.HeSoCoSo,
				_originalData.HeSoNienCheTinChi,
				_originalData.SoTietThucTeQuyDoi,
				_originalData.TietQuyDoi,
				_originalData.HeSoQuyDoiThucHanhSangLyThuyet,
				_originalData.HeSoNgoaiGio,
				_originalData.LoaiLop,
				_originalData.HeSoClcCntn,
				_originalData.HeSoThinhGiangMonChuyenNganh,
				_originalData.NgonNguGiangDay,
				_originalData.HeSoTroCap,
				_originalData.HeSoLuong,
				_originalData.HeSoMonMoi,
				_originalData.DonGia,
				_originalData.ThanhTien,
				_originalData.GhiChu,
				_originalData.MucThanhToan,
				_originalData.NgayTamUng,
				_originalData.DotTamUng
				);
				
			return (GiangVienTamUngChiTiet)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="GiangVienTamUngChiTietBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is GiangVienTamUngChiTietBase)
				return ValueEquals(this, (GiangVienTamUngChiTietBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="GiangVienTamUngChiTietBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString()).GetHashCode() ^ 
					((this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString()).GetHashCode() ^ 
					((this.NamHoc == null) ? string.Empty : this.NamHoc.ToString()).GetHashCode() ^ 
					((this.HocKy == null) ? string.Empty : this.HocKy.ToString()).GetHashCode() ^ 
					((this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString()).GetHashCode() ^ 
					((this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString()).GetHashCode() ^ 
					((this.Nhom == null) ? string.Empty : this.Nhom.ToString()).GetHashCode() ^ 
					((this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString()).GetHashCode() ^ 
					((this.SiSo == null) ? string.Empty : this.SiSo.ToString()).GetHashCode() ^ 
					((this.MaLoaiHocPhan == null) ? string.Empty : this.MaLoaiHocPhan.ToString()).GetHashCode() ^ 
					((this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString()).GetHashCode() ^ 
					((this.MaLop == null) ? string.Empty : this.MaLop.ToString()).GetHashCode() ^ 
					((this.SoTietThucDay == null) ? string.Empty : this.SoTietThucDay.ToString()).GetHashCode() ^ 
					((this.MaBacDaoTao == null) ? string.Empty : this.MaBacDaoTao.ToString()).GetHashCode() ^ 
					((this.MaKhoa == null) ? string.Empty : this.MaKhoa.ToString()).GetHashCode() ^ 
					((this.MaNhomMonHoc == null) ? string.Empty : this.MaNhomMonHoc.ToString()).GetHashCode() ^ 
					((this.MaKhoaHoc == null) ? string.Empty : this.MaKhoaHoc.ToString()).GetHashCode() ^ 
					((this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString()).GetHashCode() ^ 
					((this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString()).GetHashCode() ^ 
					((this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString()).GetHashCode() ^ 
					((this.MaChucVu == null) ? string.Empty : this.MaChucVu.ToString()).GetHashCode() ^ 
					((this.MaHinhThucDaoTao == null) ? string.Empty : this.MaHinhThucDaoTao.ToString()).GetHashCode() ^ 
					((this.LopHocPhanChuyenNganh == null) ? string.Empty : this.LopHocPhanChuyenNganh.ToString()).GetHashCode() ^ 
					((this.DaoTaoTinChi == null) ? string.Empty : this.DaoTaoTinChi.ToString()).GetHashCode() ^ 
					((this.HeSoCongViec == null) ? string.Empty : this.HeSoCongViec.ToString()).GetHashCode() ^ 
					((this.HeSoBacDaoTao == null) ? string.Empty : this.HeSoBacDaoTao.ToString()).GetHashCode() ^ 
					((this.HeSoNgonNgu == null) ? string.Empty : this.HeSoNgonNgu.ToString()).GetHashCode() ^ 
					((this.HeSoChucDanhChuyenMon == null) ? string.Empty : this.HeSoChucDanhChuyenMon.ToString()).GetHashCode() ^ 
					((this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString()).GetHashCode() ^ 
					((this.HeSoCoSo == null) ? string.Empty : this.HeSoCoSo.ToString()).GetHashCode() ^ 
					((this.HeSoNienCheTinChi == null) ? string.Empty : this.HeSoNienCheTinChi.ToString()).GetHashCode() ^ 
					((this.SoTietThucTeQuyDoi == null) ? string.Empty : this.SoTietThucTeQuyDoi.ToString()).GetHashCode() ^ 
					((this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString()).GetHashCode() ^ 
					((this.HeSoQuyDoiThucHanhSangLyThuyet == null) ? string.Empty : this.HeSoQuyDoiThucHanhSangLyThuyet.ToString()).GetHashCode() ^ 
					((this.HeSoNgoaiGio == null) ? string.Empty : this.HeSoNgoaiGio.ToString()).GetHashCode() ^ 
					((this.LoaiLop == null) ? string.Empty : this.LoaiLop.ToString()).GetHashCode() ^ 
					((this.HeSoClcCntn == null) ? string.Empty : this.HeSoClcCntn.ToString()).GetHashCode() ^ 
					((this.HeSoThinhGiangMonChuyenNganh == null) ? string.Empty : this.HeSoThinhGiangMonChuyenNganh.ToString()).GetHashCode() ^ 
					((this.NgonNguGiangDay == null) ? string.Empty : this.NgonNguGiangDay.ToString()).GetHashCode() ^ 
					((this.HeSoTroCap == null) ? string.Empty : this.HeSoTroCap.ToString()).GetHashCode() ^ 
					((this.HeSoLuong == null) ? string.Empty : this.HeSoLuong.ToString()).GetHashCode() ^ 
					((this.HeSoMonMoi == null) ? string.Empty : this.HeSoMonMoi.ToString()).GetHashCode() ^ 
					((this.DonGia == null) ? string.Empty : this.DonGia.ToString()).GetHashCode() ^ 
					((this.ThanhTien == null) ? string.Empty : this.ThanhTien.ToString()).GetHashCode() ^ 
					((this.GhiChu == null) ? string.Empty : this.GhiChu.ToString()).GetHashCode() ^ 
					((this.MucThanhToan == null) ? string.Empty : this.MucThanhToan.ToString()).GetHashCode() ^ 
					((this.NgayTamUng == null) ? string.Empty : this.NgayTamUng.ToString()).GetHashCode() ^ 
					((this.DotTamUng == null) ? string.Empty : this.DotTamUng.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="GiangVienTamUngChiTietBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(GiangVienTamUngChiTietBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="GiangVienTamUngChiTietBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="GiangVienTamUngChiTietBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="GiangVienTamUngChiTietBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(GiangVienTamUngChiTietBase Object1, GiangVienTamUngChiTietBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.MaGiangVien != null && Object2.MaGiangVien != null )
			{
				if (Object1.MaGiangVien != Object2.MaGiangVien)
					equal = false;
			}
			else if (Object1.MaGiangVien == null ^ Object2.MaGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object2.MaLopHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object2.NamHoc == null )
			{
				equal = false;
			}
			if ( Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object2.HocKy == null )
			{
				equal = false;
			}
			if ( Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object2.MaMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.TenMonHoc != null && Object2.TenMonHoc != null )
			{
				if (Object1.TenMonHoc != Object2.TenMonHoc)
					equal = false;
			}
			else if (Object1.TenMonHoc == null ^ Object2.TenMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.Nhom != null && Object2.Nhom != null )
			{
				if (Object1.Nhom != Object2.Nhom)
					equal = false;
			}
			else if (Object1.Nhom == null ^ Object2.Nhom == null )
			{
				equal = false;
			}
			if ( Object1.SoTinChi != null && Object2.SoTinChi != null )
			{
				if (Object1.SoTinChi != Object2.SoTinChi)
					equal = false;
			}
			else if (Object1.SoTinChi == null ^ Object2.SoTinChi == null )
			{
				equal = false;
			}
			if ( Object1.SiSo != null && Object2.SiSo != null )
			{
				if (Object1.SiSo != Object2.SiSo)
					equal = false;
			}
			else if (Object1.SiSo == null ^ Object2.SiSo == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiHocPhan != null && Object2.MaLoaiHocPhan != null )
			{
				if (Object1.MaLoaiHocPhan != Object2.MaLoaiHocPhan)
					equal = false;
			}
			else if (Object1.MaLoaiHocPhan == null ^ Object2.MaLoaiHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.LoaiHocPhan != null && Object2.LoaiHocPhan != null )
			{
				if (Object1.LoaiHocPhan != Object2.LoaiHocPhan)
					equal = false;
			}
			else if (Object1.LoaiHocPhan == null ^ Object2.LoaiHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object2.MaLop == null )
			{
				equal = false;
			}
			if ( Object1.SoTietThucDay != null && Object2.SoTietThucDay != null )
			{
				if (Object1.SoTietThucDay != Object2.SoTietThucDay)
					equal = false;
			}
			else if (Object1.SoTietThucDay == null ^ Object2.SoTietThucDay == null )
			{
				equal = false;
			}
			if ( Object1.MaBacDaoTao != null && Object2.MaBacDaoTao != null )
			{
				if (Object1.MaBacDaoTao != Object2.MaBacDaoTao)
					equal = false;
			}
			else if (Object1.MaBacDaoTao == null ^ Object2.MaBacDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.MaKhoa != null && Object2.MaKhoa != null )
			{
				if (Object1.MaKhoa != Object2.MaKhoa)
					equal = false;
			}
			else if (Object1.MaKhoa == null ^ Object2.MaKhoa == null )
			{
				equal = false;
			}
			if ( Object1.MaNhomMonHoc != null && Object2.MaNhomMonHoc != null )
			{
				if (Object1.MaNhomMonHoc != Object2.MaNhomMonHoc)
					equal = false;
			}
			else if (Object1.MaNhomMonHoc == null ^ Object2.MaNhomMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.MaKhoaHoc != null && Object2.MaKhoaHoc != null )
			{
				if (Object1.MaKhoaHoc != Object2.MaKhoaHoc)
					equal = false;
			}
			else if (Object1.MaKhoaHoc == null ^ Object2.MaKhoaHoc == null )
			{
				equal = false;
			}
			if ( Object1.MaHocHam != null && Object2.MaHocHam != null )
			{
				if (Object1.MaHocHam != Object2.MaHocHam)
					equal = false;
			}
			else if (Object1.MaHocHam == null ^ Object2.MaHocHam == null )
			{
				equal = false;
			}
			if ( Object1.MaHocVi != null && Object2.MaHocVi != null )
			{
				if (Object1.MaHocVi != Object2.MaHocVi)
					equal = false;
			}
			else if (Object1.MaHocVi == null ^ Object2.MaHocVi == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object2.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.MaChucVu != null && Object2.MaChucVu != null )
			{
				if (Object1.MaChucVu != Object2.MaChucVu)
					equal = false;
			}
			else if (Object1.MaChucVu == null ^ Object2.MaChucVu == null )
			{
				equal = false;
			}
			if ( Object1.MaHinhThucDaoTao != null && Object2.MaHinhThucDaoTao != null )
			{
				if (Object1.MaHinhThucDaoTao != Object2.MaHinhThucDaoTao)
					equal = false;
			}
			else if (Object1.MaHinhThucDaoTao == null ^ Object2.MaHinhThucDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.LopHocPhanChuyenNganh != null && Object2.LopHocPhanChuyenNganh != null )
			{
				if (Object1.LopHocPhanChuyenNganh != Object2.LopHocPhanChuyenNganh)
					equal = false;
			}
			else if (Object1.LopHocPhanChuyenNganh == null ^ Object2.LopHocPhanChuyenNganh == null )
			{
				equal = false;
			}
			if ( Object1.DaoTaoTinChi != null && Object2.DaoTaoTinChi != null )
			{
				if (Object1.DaoTaoTinChi != Object2.DaoTaoTinChi)
					equal = false;
			}
			else if (Object1.DaoTaoTinChi == null ^ Object2.DaoTaoTinChi == null )
			{
				equal = false;
			}
			if ( Object1.HeSoCongViec != null && Object2.HeSoCongViec != null )
			{
				if (Object1.HeSoCongViec != Object2.HeSoCongViec)
					equal = false;
			}
			else if (Object1.HeSoCongViec == null ^ Object2.HeSoCongViec == null )
			{
				equal = false;
			}
			if ( Object1.HeSoBacDaoTao != null && Object2.HeSoBacDaoTao != null )
			{
				if (Object1.HeSoBacDaoTao != Object2.HeSoBacDaoTao)
					equal = false;
			}
			else if (Object1.HeSoBacDaoTao == null ^ Object2.HeSoBacDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNgonNgu != null && Object2.HeSoNgonNgu != null )
			{
				if (Object1.HeSoNgonNgu != Object2.HeSoNgonNgu)
					equal = false;
			}
			else if (Object1.HeSoNgonNgu == null ^ Object2.HeSoNgonNgu == null )
			{
				equal = false;
			}
			if ( Object1.HeSoChucDanhChuyenMon != null && Object2.HeSoChucDanhChuyenMon != null )
			{
				if (Object1.HeSoChucDanhChuyenMon != Object2.HeSoChucDanhChuyenMon)
					equal = false;
			}
			else if (Object1.HeSoChucDanhChuyenMon == null ^ Object2.HeSoChucDanhChuyenMon == null )
			{
				equal = false;
			}
			if ( Object1.HeSoLopDong != null && Object2.HeSoLopDong != null )
			{
				if (Object1.HeSoLopDong != Object2.HeSoLopDong)
					equal = false;
			}
			else if (Object1.HeSoLopDong == null ^ Object2.HeSoLopDong == null )
			{
				equal = false;
			}
			if ( Object1.HeSoCoSo != null && Object2.HeSoCoSo != null )
			{
				if (Object1.HeSoCoSo != Object2.HeSoCoSo)
					equal = false;
			}
			else if (Object1.HeSoCoSo == null ^ Object2.HeSoCoSo == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNienCheTinChi != null && Object2.HeSoNienCheTinChi != null )
			{
				if (Object1.HeSoNienCheTinChi != Object2.HeSoNienCheTinChi)
					equal = false;
			}
			else if (Object1.HeSoNienCheTinChi == null ^ Object2.HeSoNienCheTinChi == null )
			{
				equal = false;
			}
			if ( Object1.SoTietThucTeQuyDoi != null && Object2.SoTietThucTeQuyDoi != null )
			{
				if (Object1.SoTietThucTeQuyDoi != Object2.SoTietThucTeQuyDoi)
					equal = false;
			}
			else if (Object1.SoTietThucTeQuyDoi == null ^ Object2.SoTietThucTeQuyDoi == null )
			{
				equal = false;
			}
			if ( Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object2.TietQuyDoi == null )
			{
				equal = false;
			}
			if ( Object1.HeSoQuyDoiThucHanhSangLyThuyet != null && Object2.HeSoQuyDoiThucHanhSangLyThuyet != null )
			{
				if (Object1.HeSoQuyDoiThucHanhSangLyThuyet != Object2.HeSoQuyDoiThucHanhSangLyThuyet)
					equal = false;
			}
			else if (Object1.HeSoQuyDoiThucHanhSangLyThuyet == null ^ Object2.HeSoQuyDoiThucHanhSangLyThuyet == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNgoaiGio != null && Object2.HeSoNgoaiGio != null )
			{
				if (Object1.HeSoNgoaiGio != Object2.HeSoNgoaiGio)
					equal = false;
			}
			else if (Object1.HeSoNgoaiGio == null ^ Object2.HeSoNgoaiGio == null )
			{
				equal = false;
			}
			if ( Object1.LoaiLop != null && Object2.LoaiLop != null )
			{
				if (Object1.LoaiLop != Object2.LoaiLop)
					equal = false;
			}
			else if (Object1.LoaiLop == null ^ Object2.LoaiLop == null )
			{
				equal = false;
			}
			if ( Object1.HeSoClcCntn != null && Object2.HeSoClcCntn != null )
			{
				if (Object1.HeSoClcCntn != Object2.HeSoClcCntn)
					equal = false;
			}
			else if (Object1.HeSoClcCntn == null ^ Object2.HeSoClcCntn == null )
			{
				equal = false;
			}
			if ( Object1.HeSoThinhGiangMonChuyenNganh != null && Object2.HeSoThinhGiangMonChuyenNganh != null )
			{
				if (Object1.HeSoThinhGiangMonChuyenNganh != Object2.HeSoThinhGiangMonChuyenNganh)
					equal = false;
			}
			else if (Object1.HeSoThinhGiangMonChuyenNganh == null ^ Object2.HeSoThinhGiangMonChuyenNganh == null )
			{
				equal = false;
			}
			if ( Object1.NgonNguGiangDay != null && Object2.NgonNguGiangDay != null )
			{
				if (Object1.NgonNguGiangDay != Object2.NgonNguGiangDay)
					equal = false;
			}
			else if (Object1.NgonNguGiangDay == null ^ Object2.NgonNguGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.HeSoTroCap != null && Object2.HeSoTroCap != null )
			{
				if (Object1.HeSoTroCap != Object2.HeSoTroCap)
					equal = false;
			}
			else if (Object1.HeSoTroCap == null ^ Object2.HeSoTroCap == null )
			{
				equal = false;
			}
			if ( Object1.HeSoLuong != null && Object2.HeSoLuong != null )
			{
				if (Object1.HeSoLuong != Object2.HeSoLuong)
					equal = false;
			}
			else if (Object1.HeSoLuong == null ^ Object2.HeSoLuong == null )
			{
				equal = false;
			}
			if ( Object1.HeSoMonMoi != null && Object2.HeSoMonMoi != null )
			{
				if (Object1.HeSoMonMoi != Object2.HeSoMonMoi)
					equal = false;
			}
			else if (Object1.HeSoMonMoi == null ^ Object2.HeSoMonMoi == null )
			{
				equal = false;
			}
			if ( Object1.DonGia != null && Object2.DonGia != null )
			{
				if (Object1.DonGia != Object2.DonGia)
					equal = false;
			}
			else if (Object1.DonGia == null ^ Object2.DonGia == null )
			{
				equal = false;
			}
			if ( Object1.ThanhTien != null && Object2.ThanhTien != null )
			{
				if (Object1.ThanhTien != Object2.ThanhTien)
					equal = false;
			}
			else if (Object1.ThanhTien == null ^ Object2.ThanhTien == null )
			{
				equal = false;
			}
			if ( Object1.GhiChu != null && Object2.GhiChu != null )
			{
				if (Object1.GhiChu != Object2.GhiChu)
					equal = false;
			}
			else if (Object1.GhiChu == null ^ Object2.GhiChu == null )
			{
				equal = false;
			}
			if ( Object1.MucThanhToan != null && Object2.MucThanhToan != null )
			{
				if (Object1.MucThanhToan != Object2.MucThanhToan)
					equal = false;
			}
			else if (Object1.MucThanhToan == null ^ Object2.MucThanhToan == null )
			{
				equal = false;
			}
			if ( Object1.NgayTamUng != null && Object2.NgayTamUng != null )
			{
				if (Object1.NgayTamUng != Object2.NgayTamUng)
					equal = false;
			}
			else if (Object1.NgayTamUng == null ^ Object2.NgayTamUng == null )
			{
				equal = false;
			}
			if ( Object1.DotTamUng != null && Object2.DotTamUng != null )
			{
				if (Object1.DotTamUng != Object2.DotTamUng)
					equal = false;
			}
			else if (Object1.DotTamUng == null ^ Object2.DotTamUng == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((GiangVienTamUngChiTietBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static GiangVienTamUngChiTietComparer GetComparer()
        {
            return new GiangVienTamUngChiTietComparer();
        }
        */

        // Comparer delegates back to GiangVienTamUngChiTiet
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(GiangVienTamUngChiTiet rhs, GiangVienTamUngChiTietColumn which)
        {
            switch (which)
            {
            	
            	
            	case GiangVienTamUngChiTietColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaGiangVien:
            		return this.MaGiangVien.Value.CompareTo(rhs.MaGiangVien.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaLopHocPhan:
            		return this.MaLopHocPhan.CompareTo(rhs.MaLopHocPhan);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.NamHoc:
            		return this.NamHoc.CompareTo(rhs.NamHoc);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HocKy:
            		return this.HocKy.CompareTo(rhs.HocKy);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaMonHoc:
            		return this.MaMonHoc.CompareTo(rhs.MaMonHoc);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.TenMonHoc:
            		return this.TenMonHoc.CompareTo(rhs.TenMonHoc);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.Nhom:
            		return this.Nhom.CompareTo(rhs.Nhom);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.SoTinChi:
            		return this.SoTinChi.Value.CompareTo(rhs.SoTinChi.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.SiSo:
            		return this.SiSo.Value.CompareTo(rhs.SiSo.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaLoaiHocPhan:
            		return this.MaLoaiHocPhan.Value.CompareTo(rhs.MaLoaiHocPhan.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.LoaiHocPhan:
            		return this.LoaiHocPhan.CompareTo(rhs.LoaiHocPhan);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaLop:
            		return this.MaLop.CompareTo(rhs.MaLop);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.SoTietThucDay:
            		return this.SoTietThucDay.Value.CompareTo(rhs.SoTietThucDay.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaBacDaoTao:
            		return this.MaBacDaoTao.CompareTo(rhs.MaBacDaoTao);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaKhoa:
            		return this.MaKhoa.CompareTo(rhs.MaKhoa);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaNhomMonHoc:
            		return this.MaNhomMonHoc.CompareTo(rhs.MaNhomMonHoc);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaKhoaHoc:
            		return this.MaKhoaHoc.CompareTo(rhs.MaKhoaHoc);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaHocHam:
            		return this.MaHocHam.Value.CompareTo(rhs.MaHocHam.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaHocVi:
            		return this.MaHocVi.Value.CompareTo(rhs.MaHocVi.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaLoaiGiangVien:
            		return this.MaLoaiGiangVien.Value.CompareTo(rhs.MaLoaiGiangVien.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaChucVu:
            		return this.MaChucVu.Value.CompareTo(rhs.MaChucVu.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MaHinhThucDaoTao:
            		return this.MaHinhThucDaoTao.CompareTo(rhs.MaHinhThucDaoTao);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.LopHocPhanChuyenNganh:
            		return this.LopHocPhanChuyenNganh.Value.CompareTo(rhs.LopHocPhanChuyenNganh.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.DaoTaoTinChi:
            		return this.DaoTaoTinChi.Value.CompareTo(rhs.DaoTaoTinChi.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoCongViec:
            		return this.HeSoCongViec.Value.CompareTo(rhs.HeSoCongViec.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoBacDaoTao:
            		return this.HeSoBacDaoTao.Value.CompareTo(rhs.HeSoBacDaoTao.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoNgonNgu:
            		return this.HeSoNgonNgu.Value.CompareTo(rhs.HeSoNgonNgu.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoChucDanhChuyenMon:
            		return this.HeSoChucDanhChuyenMon.Value.CompareTo(rhs.HeSoChucDanhChuyenMon.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoLopDong:
            		return this.HeSoLopDong.Value.CompareTo(rhs.HeSoLopDong.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoCoSo:
            		return this.HeSoCoSo.Value.CompareTo(rhs.HeSoCoSo.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoNienCheTinChi:
            		return this.HeSoNienCheTinChi.Value.CompareTo(rhs.HeSoNienCheTinChi.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.SoTietThucTeQuyDoi:
            		return this.SoTietThucTeQuyDoi.Value.CompareTo(rhs.SoTietThucTeQuyDoi.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.TietQuyDoi:
            		return this.TietQuyDoi.Value.CompareTo(rhs.TietQuyDoi.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoQuyDoiThucHanhSangLyThuyet:
            		return this.HeSoQuyDoiThucHanhSangLyThuyet.Value.CompareTo(rhs.HeSoQuyDoiThucHanhSangLyThuyet.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoNgoaiGio:
            		return this.HeSoNgoaiGio.Value.CompareTo(rhs.HeSoNgoaiGio.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.LoaiLop:
            		return this.LoaiLop.CompareTo(rhs.LoaiLop);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoClcCntn:
            		return this.HeSoClcCntn.Value.CompareTo(rhs.HeSoClcCntn.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoThinhGiangMonChuyenNganh:
            		return this.HeSoThinhGiangMonChuyenNganh.Value.CompareTo(rhs.HeSoThinhGiangMonChuyenNganh.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.NgonNguGiangDay:
            		return this.NgonNguGiangDay.CompareTo(rhs.NgonNguGiangDay);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoTroCap:
            		return this.HeSoTroCap.Value.CompareTo(rhs.HeSoTroCap.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoLuong:
            		return this.HeSoLuong.Value.CompareTo(rhs.HeSoLuong.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.HeSoMonMoi:
            		return this.HeSoMonMoi.Value.CompareTo(rhs.HeSoMonMoi.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.DonGia:
            		return this.DonGia.Value.CompareTo(rhs.DonGia.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.ThanhTien:
            		return this.ThanhTien.Value.CompareTo(rhs.ThanhTien.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.GhiChu:
            		return this.GhiChu.CompareTo(rhs.GhiChu);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.MucThanhToan:
            		return this.MucThanhToan.Value.CompareTo(rhs.MucThanhToan.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.NgayTamUng:
            		return this.NgayTamUng.Value.CompareTo(rhs.NgayTamUng.Value);
            		
            		                 
            	
            	
            	case GiangVienTamUngChiTietColumn.DotTamUng:
            		return this.DotTamUng.CompareTo(rhs.DotTamUng);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<GiangVienTamUngChiTietKey> Members
		
		// member variable for the EntityId property
		private GiangVienTamUngChiTietKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual GiangVienTamUngChiTietKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new GiangVienTamUngChiTietKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("GiangVienTamUngChiTiet")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{50}{49}- Id: {0}{49}- MaGiangVien: {1}{49}- MaLopHocPhan: {2}{49}- NamHoc: {3}{49}- HocKy: {4}{49}- MaMonHoc: {5}{49}- TenMonHoc: {6}{49}- Nhom: {7}{49}- SoTinChi: {8}{49}- SiSo: {9}{49}- MaLoaiHocPhan: {10}{49}- LoaiHocPhan: {11}{49}- MaLop: {12}{49}- SoTietThucDay: {13}{49}- MaBacDaoTao: {14}{49}- MaKhoa: {15}{49}- MaNhomMonHoc: {16}{49}- MaKhoaHoc: {17}{49}- MaHocHam: {18}{49}- MaHocVi: {19}{49}- MaLoaiGiangVien: {20}{49}- MaChucVu: {21}{49}- MaHinhThucDaoTao: {22}{49}- LopHocPhanChuyenNganh: {23}{49}- DaoTaoTinChi: {24}{49}- HeSoCongViec: {25}{49}- HeSoBacDaoTao: {26}{49}- HeSoNgonNgu: {27}{49}- HeSoChucDanhChuyenMon: {28}{49}- HeSoLopDong: {29}{49}- HeSoCoSo: {30}{49}- HeSoNienCheTinChi: {31}{49}- SoTietThucTeQuyDoi: {32}{49}- TietQuyDoi: {33}{49}- HeSoQuyDoiThucHanhSangLyThuyet: {34}{49}- HeSoNgoaiGio: {35}{49}- LoaiLop: {36}{49}- HeSoClcCntn: {37}{49}- HeSoThinhGiangMonChuyenNganh: {38}{49}- NgonNguGiangDay: {39}{49}- HeSoTroCap: {40}{49}- HeSoLuong: {41}{49}- HeSoMonMoi: {42}{49}- DonGia: {43}{49}- ThanhTien: {44}{49}- GhiChu: {45}{49}- MucThanhToan: {46}{49}- NgayTamUng: {47}{49}- DotTamUng: {48}{49}{51}", 
				this.Id,
				(this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString(),
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
				(this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString(),
				(this.Nhom == null) ? string.Empty : this.Nhom.ToString(),
				(this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString(),
				(this.SiSo == null) ? string.Empty : this.SiSo.ToString(),
				(this.MaLoaiHocPhan == null) ? string.Empty : this.MaLoaiHocPhan.ToString(),
				(this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString(),
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
				(this.SoTietThucDay == null) ? string.Empty : this.SoTietThucDay.ToString(),
				(this.MaBacDaoTao == null) ? string.Empty : this.MaBacDaoTao.ToString(),
				(this.MaKhoa == null) ? string.Empty : this.MaKhoa.ToString(),
				(this.MaNhomMonHoc == null) ? string.Empty : this.MaNhomMonHoc.ToString(),
				(this.MaKhoaHoc == null) ? string.Empty : this.MaKhoaHoc.ToString(),
				(this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString(),
				(this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString(),
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
				(this.MaChucVu == null) ? string.Empty : this.MaChucVu.ToString(),
				(this.MaHinhThucDaoTao == null) ? string.Empty : this.MaHinhThucDaoTao.ToString(),
				(this.LopHocPhanChuyenNganh == null) ? string.Empty : this.LopHocPhanChuyenNganh.ToString(),
				(this.DaoTaoTinChi == null) ? string.Empty : this.DaoTaoTinChi.ToString(),
				(this.HeSoCongViec == null) ? string.Empty : this.HeSoCongViec.ToString(),
				(this.HeSoBacDaoTao == null) ? string.Empty : this.HeSoBacDaoTao.ToString(),
				(this.HeSoNgonNgu == null) ? string.Empty : this.HeSoNgonNgu.ToString(),
				(this.HeSoChucDanhChuyenMon == null) ? string.Empty : this.HeSoChucDanhChuyenMon.ToString(),
				(this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString(),
				(this.HeSoCoSo == null) ? string.Empty : this.HeSoCoSo.ToString(),
				(this.HeSoNienCheTinChi == null) ? string.Empty : this.HeSoNienCheTinChi.ToString(),
				(this.SoTietThucTeQuyDoi == null) ? string.Empty : this.SoTietThucTeQuyDoi.ToString(),
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
				(this.HeSoQuyDoiThucHanhSangLyThuyet == null) ? string.Empty : this.HeSoQuyDoiThucHanhSangLyThuyet.ToString(),
				(this.HeSoNgoaiGio == null) ? string.Empty : this.HeSoNgoaiGio.ToString(),
				(this.LoaiLop == null) ? string.Empty : this.LoaiLop.ToString(),
				(this.HeSoClcCntn == null) ? string.Empty : this.HeSoClcCntn.ToString(),
				(this.HeSoThinhGiangMonChuyenNganh == null) ? string.Empty : this.HeSoThinhGiangMonChuyenNganh.ToString(),
				(this.NgonNguGiangDay == null) ? string.Empty : this.NgonNguGiangDay.ToString(),
				(this.HeSoTroCap == null) ? string.Empty : this.HeSoTroCap.ToString(),
				(this.HeSoLuong == null) ? string.Empty : this.HeSoLuong.ToString(),
				(this.HeSoMonMoi == null) ? string.Empty : this.HeSoMonMoi.ToString(),
				(this.DonGia == null) ? string.Empty : this.DonGia.ToString(),
				(this.ThanhTien == null) ? string.Empty : this.ThanhTien.ToString(),
				(this.GhiChu == null) ? string.Empty : this.GhiChu.ToString(),
				(this.MucThanhToan == null) ? string.Empty : this.MucThanhToan.ToString(),
				(this.NgayTamUng == null) ? string.Empty : this.NgayTamUng.ToString(),
				(this.DotTamUng == null) ? string.Empty : this.DotTamUng.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'GiangVienTamUngChiTiet' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class GiangVienTamUngChiTietEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "GiangVienTamUngChiTiet"</remarks>
		public System.Int32 Id;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		public System.Int32? MaGiangVien = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		public System.String MaLopHocPhan = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		public System.String NamHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		public System.String HocKy = null;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		public System.String MaMonHoc = null;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		public System.String TenMonHoc = null;
		
		/// <summary>
		/// Nhom : 
		/// </summary>
		public System.String Nhom = null;
		
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		public System.Decimal? SoTinChi = null;
		
		/// <summary>
		/// SiSo : 
		/// </summary>
		public System.Int32? SiSo = null;
		
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		public System.Byte? MaLoaiHocPhan = null;
		
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		public System.String LoaiHocPhan = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		public System.String MaLop = null;
		
		/// <summary>
		/// SoTietThucDay : 
		/// </summary>
		public System.Decimal? SoTietThucDay = null;
		
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		public System.String MaBacDaoTao = null;
		
		/// <summary>
		/// MaKhoa : 
		/// </summary>
		public System.String MaKhoa = null;
		
		/// <summary>
		/// MaNhomMonHoc : 
		/// </summary>
		public System.String MaNhomMonHoc = null;
		
		/// <summary>
		/// MaKhoaHoc : 
		/// </summary>
		public System.String MaKhoaHoc = null;
		
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		public System.Int32? MaHocHam = null;
		
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		public System.Int32? MaHocVi = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		public System.Int32? MaLoaiGiangVien = null;
		
		/// <summary>
		/// MaChucVu : 
		/// </summary>
		public System.Int32? MaChucVu = null;
		
		/// <summary>
		/// MaHinhThucDaoTao : 
		/// </summary>
		public System.String MaHinhThucDaoTao = null;
		
		/// <summary>
		/// LopHocPhanChuyenNganh : 
		/// </summary>
		public System.Boolean? LopHocPhanChuyenNganh = null;
		
		/// <summary>
		/// DaoTaoTinChi : 
		/// </summary>
		public System.Boolean? DaoTaoTinChi = null;
		
		/// <summary>
		/// HeSoCongViec : 
		/// </summary>
		public System.Decimal? HeSoCongViec = null;
		
		/// <summary>
		/// HeSoBacDaoTao : 
		/// </summary>
		public System.Decimal? HeSoBacDaoTao = null;
		
		/// <summary>
		/// HeSoNgonNgu : 
		/// </summary>
		public System.Decimal? HeSoNgonNgu = null;
		
		/// <summary>
		/// HeSoChucDanhChuyenMon : 
		/// </summary>
		public System.Decimal? HeSoChucDanhChuyenMon = null;
		
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		public System.Decimal? HeSoLopDong = null;
		
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		public System.Decimal? HeSoCoSo = null;
		
		/// <summary>
		/// HeSoNienCheTinChi : 
		/// </summary>
		public System.Decimal? HeSoNienCheTinChi = null;
		
		/// <summary>
		/// SoTietThucTeQuyDoi : 
		/// </summary>
		public System.Decimal? SoTietThucTeQuyDoi = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		public System.Decimal? TietQuyDoi = null;
		
		/// <summary>
		/// HeSoQuyDoiThucHanhSangLyThuyet : 
		/// </summary>
		public System.Decimal? HeSoQuyDoiThucHanhSangLyThuyet = null;
		
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		public System.Decimal? HeSoNgoaiGio = null;
		
		/// <summary>
		/// LoaiLop : 
		/// </summary>
		public System.String LoaiLop = null;
		
		/// <summary>
		/// HeSoClcCntn : 
		/// </summary>
		public System.Decimal? HeSoClcCntn = null;
		
		/// <summary>
		/// HeSoThinhGiangMonChuyenNganh : 
		/// </summary>
		public System.Decimal? HeSoThinhGiangMonChuyenNganh = null;
		
		/// <summary>
		/// NgonNguGiangDay : 
		/// </summary>
		public System.String NgonNguGiangDay = null;
		
		/// <summary>
		/// HeSoTroCap : 
		/// </summary>
		public System.Decimal? HeSoTroCap = null;
		
		/// <summary>
		/// HeSoLuong : 
		/// </summary>
		public System.Decimal? HeSoLuong = null;
		
		/// <summary>
		/// HeSoMonMoi : 
		/// </summary>
		public System.Decimal? HeSoMonMoi = null;
		
		/// <summary>
		/// DonGia : 
		/// </summary>
		public System.Decimal? DonGia = null;
		
		/// <summary>
		/// ThanhTien : 
		/// </summary>
		public System.Decimal? ThanhTien = null;
		
		/// <summary>
		/// GhiChu : 
		/// </summary>
		public System.String GhiChu = null;
		
		/// <summary>
		/// MucThanhToan : 
		/// </summary>
		public System.Decimal? MucThanhToan = null;
		
		/// <summary>
		/// NgayTamUng : 
		/// </summary>
		public System.DateTime? NgayTamUng = null;
		
		/// <summary>
		/// DotTamUng : 
		/// </summary>
		public System.String DotTamUng = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			GiangVienTamUngChiTietEntityData _tmp = new GiangVienTamUngChiTietEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.TenMonHoc = this.TenMonHoc;
			_tmp.Nhom = this.Nhom;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.SiSo = this.SiSo;
			_tmp.MaLoaiHocPhan = this.MaLoaiHocPhan;
			_tmp.LoaiHocPhan = this.LoaiHocPhan;
			_tmp.MaLop = this.MaLop;
			_tmp.SoTietThucDay = this.SoTietThucDay;
			_tmp.MaBacDaoTao = this.MaBacDaoTao;
			_tmp.MaKhoa = this.MaKhoa;
			_tmp.MaNhomMonHoc = this.MaNhomMonHoc;
			_tmp.MaKhoaHoc = this.MaKhoaHoc;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaChucVu = this.MaChucVu;
			_tmp.MaHinhThucDaoTao = this.MaHinhThucDaoTao;
			_tmp.LopHocPhanChuyenNganh = this.LopHocPhanChuyenNganh;
			_tmp.DaoTaoTinChi = this.DaoTaoTinChi;
			_tmp.HeSoCongViec = this.HeSoCongViec;
			_tmp.HeSoBacDaoTao = this.HeSoBacDaoTao;
			_tmp.HeSoNgonNgu = this.HeSoNgonNgu;
			_tmp.HeSoChucDanhChuyenMon = this.HeSoChucDanhChuyenMon;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.HeSoCoSo = this.HeSoCoSo;
			_tmp.HeSoNienCheTinChi = this.HeSoNienCheTinChi;
			_tmp.SoTietThucTeQuyDoi = this.SoTietThucTeQuyDoi;
			_tmp.TietQuyDoi = this.TietQuyDoi;
			_tmp.HeSoQuyDoiThucHanhSangLyThuyet = this.HeSoQuyDoiThucHanhSangLyThuyet;
			_tmp.HeSoNgoaiGio = this.HeSoNgoaiGio;
			_tmp.LoaiLop = this.LoaiLop;
			_tmp.HeSoClcCntn = this.HeSoClcCntn;
			_tmp.HeSoThinhGiangMonChuyenNganh = this.HeSoThinhGiangMonChuyenNganh;
			_tmp.NgonNguGiangDay = this.NgonNguGiangDay;
			_tmp.HeSoTroCap = this.HeSoTroCap;
			_tmp.HeSoLuong = this.HeSoLuong;
			_tmp.HeSoMonMoi = this.HeSoMonMoi;
			_tmp.DonGia = this.DonGia;
			_tmp.ThanhTien = this.ThanhTien;
			_tmp.GhiChu = this.GhiChu;
			_tmp.MucThanhToan = this.MucThanhToan;
			_tmp.NgayTamUng = this.NgayTamUng;
			_tmp.DotTamUng = this.DotTamUng;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			GiangVienTamUngChiTietEntityData _tmp = new GiangVienTamUngChiTietEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.TenMonHoc = this.TenMonHoc;
			_tmp.Nhom = this.Nhom;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.SiSo = this.SiSo;
			_tmp.MaLoaiHocPhan = this.MaLoaiHocPhan;
			_tmp.LoaiHocPhan = this.LoaiHocPhan;
			_tmp.MaLop = this.MaLop;
			_tmp.SoTietThucDay = this.SoTietThucDay;
			_tmp.MaBacDaoTao = this.MaBacDaoTao;
			_tmp.MaKhoa = this.MaKhoa;
			_tmp.MaNhomMonHoc = this.MaNhomMonHoc;
			_tmp.MaKhoaHoc = this.MaKhoaHoc;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaChucVu = this.MaChucVu;
			_tmp.MaHinhThucDaoTao = this.MaHinhThucDaoTao;
			_tmp.LopHocPhanChuyenNganh = this.LopHocPhanChuyenNganh;
			_tmp.DaoTaoTinChi = this.DaoTaoTinChi;
			_tmp.HeSoCongViec = this.HeSoCongViec;
			_tmp.HeSoBacDaoTao = this.HeSoBacDaoTao;
			_tmp.HeSoNgonNgu = this.HeSoNgonNgu;
			_tmp.HeSoChucDanhChuyenMon = this.HeSoChucDanhChuyenMon;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.HeSoCoSo = this.HeSoCoSo;
			_tmp.HeSoNienCheTinChi = this.HeSoNienCheTinChi;
			_tmp.SoTietThucTeQuyDoi = this.SoTietThucTeQuyDoi;
			_tmp.TietQuyDoi = this.TietQuyDoi;
			_tmp.HeSoQuyDoiThucHanhSangLyThuyet = this.HeSoQuyDoiThucHanhSangLyThuyet;
			_tmp.HeSoNgoaiGio = this.HeSoNgoaiGio;
			_tmp.LoaiLop = this.LoaiLop;
			_tmp.HeSoClcCntn = this.HeSoClcCntn;
			_tmp.HeSoThinhGiangMonChuyenNganh = this.HeSoThinhGiangMonChuyenNganh;
			_tmp.NgonNguGiangDay = this.NgonNguGiangDay;
			_tmp.HeSoTroCap = this.HeSoTroCap;
			_tmp.HeSoLuong = this.HeSoLuong;
			_tmp.HeSoMonMoi = this.HeSoMonMoi;
			_tmp.DonGia = this.DonGia;
			_tmp.ThanhTien = this.ThanhTien;
			_tmp.GhiChu = this.GhiChu;
			_tmp.MucThanhToan = this.MucThanhToan;
			_tmp.NgayTamUng = this.NgayTamUng;
			_tmp.DotTamUng = this.DotTamUng;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienTamUngChiTietColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(GiangVienTamUngChiTietColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienTamUngChiTietColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(GiangVienTamUngChiTietColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienTamUngChiTietColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(GiangVienTamUngChiTietColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				GiangVienTamUngChiTietEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new GiangVienTamUngChiTietEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienTamUngChiTietColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(GiangVienTamUngChiTietColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				GiangVienTamUngChiTietEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new GiangVienTamUngChiTietEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region GiangVienTamUngChiTietEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="GiangVienTamUngChiTiet"/> object.
	/// </remarks>
	public class GiangVienTamUngChiTietEventArgs : System.EventArgs
	{
		private GiangVienTamUngChiTietColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the GiangVienTamUngChiTietEventArgs class.
		///</summary>
		public GiangVienTamUngChiTietEventArgs(GiangVienTamUngChiTietColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the GiangVienTamUngChiTietEventArgs class.
		///</summary>
		public GiangVienTamUngChiTietEventArgs(GiangVienTamUngChiTietColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The GiangVienTamUngChiTietColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="GiangVienTamUngChiTietColumn" />
		public GiangVienTamUngChiTietColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all GiangVienTamUngChiTiet related events.
	///</summary>
	public delegate void GiangVienTamUngChiTietEventHandler(object sender, GiangVienTamUngChiTietEventArgs e);
	
	#region GiangVienTamUngChiTietComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class GiangVienTamUngChiTietComparer : System.Collections.Generic.IComparer<GiangVienTamUngChiTiet>
	{
		GiangVienTamUngChiTietColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:GiangVienTamUngChiTietComparer"/> class.
        /// </summary>
		public GiangVienTamUngChiTietComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:GiangVienTamUngChiTietComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public GiangVienTamUngChiTietComparer(GiangVienTamUngChiTietColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="GiangVienTamUngChiTiet"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="GiangVienTamUngChiTiet"/> to compare.</param>
        /// <param name="b">The second <c>GiangVienTamUngChiTiet</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(GiangVienTamUngChiTiet a, GiangVienTamUngChiTiet b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(GiangVienTamUngChiTiet entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(GiangVienTamUngChiTiet a, GiangVienTamUngChiTiet b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public GiangVienTamUngChiTietColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region GiangVienTamUngChiTietKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="GiangVienTamUngChiTiet"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class GiangVienTamUngChiTietKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the GiangVienTamUngChiTietKey class.
		/// </summary>
		public GiangVienTamUngChiTietKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the GiangVienTamUngChiTietKey class.
		/// </summary>
		public GiangVienTamUngChiTietKey(GiangVienTamUngChiTietBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the GiangVienTamUngChiTietKey class.
		/// </summary>
		public GiangVienTamUngChiTietKey(System.Int32 _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private GiangVienTamUngChiTietBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public GiangVienTamUngChiTietBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.Int32 _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.Int32 Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["Id"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region GiangVienTamUngChiTietColumn Enum
	
	/// <summary>
	/// Enumerate the GiangVienTamUngChiTiet columns.
	/// </summary>
	[Serializable]
	public enum GiangVienTamUngChiTietColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		Id = 1,
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Giang Vien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaGiangVien = 2,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Lop Hoc Phan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MaLopHocPhan = 3,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("Nam Hoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc = 4,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("Hoc Ky")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy = 5,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("Ma Mon Hoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc = 6,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("Ten Mon Hoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		TenMonHoc = 7,
		/// <summary>
		/// Nhom : 
		/// </summary>
		[EnumTextValue("Nhom")]
		[ColumnEnum("Nhom", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Nhom = 8,
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		[EnumTextValue("So Tin Chi")]
		[ColumnEnum("SoTinChi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTinChi = 9,
		/// <summary>
		/// SiSo : 
		/// </summary>
		[EnumTextValue("Si So")]
		[ColumnEnum("SiSo", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSo = 10,
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Loai Hoc Phan")]
		[ColumnEnum("MaLoaiHocPhan", typeof(System.Byte), System.Data.DbType.Byte, false, false, true)]
		MaLoaiHocPhan = 11,
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		[EnumTextValue("Loai Hoc Phan")]
		[ColumnEnum("LoaiHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		LoaiHocPhan = 12,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("Ma Lop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		MaLop = 13,
		/// <summary>
		/// SoTietThucDay : 
		/// </summary>
		[EnumTextValue("So Tiet Thuc Day")]
		[ColumnEnum("SoTietThucDay", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTietThucDay = 14,
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		[EnumTextValue("Ma Bac Dao Tao")]
		[ColumnEnum("MaBacDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaBacDaoTao = 15,
		/// <summary>
		/// MaKhoa : 
		/// </summary>
		[EnumTextValue("Ma Khoa")]
		[ColumnEnum("MaKhoa", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 200)]
		MaKhoa = 16,
		/// <summary>
		/// MaNhomMonHoc : 
		/// </summary>
		[EnumTextValue("Ma Nhom Mon Hoc")]
		[ColumnEnum("MaNhomMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaNhomMonHoc = 17,
		/// <summary>
		/// MaKhoaHoc : 
		/// </summary>
		[EnumTextValue("Ma Khoa Hoc")]
		[ColumnEnum("MaKhoaHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaKhoaHoc = 18,
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		[EnumTextValue("Ma Hoc Ham")]
		[ColumnEnum("MaHocHam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocHam = 19,
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		[EnumTextValue("Ma Hoc Vi")]
		[ColumnEnum("MaHocVi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocVi = 20,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Loai Giang Vien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien = 21,
		/// <summary>
		/// MaChucVu : 
		/// </summary>
		[EnumTextValue("Ma Chuc Vu")]
		[ColumnEnum("MaChucVu", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaChucVu = 22,
		/// <summary>
		/// MaHinhThucDaoTao : 
		/// </summary>
		[EnumTextValue("Ma Hinh Thuc Dao Tao")]
		[ColumnEnum("MaHinhThucDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHinhThucDaoTao = 23,
		/// <summary>
		/// LopHocPhanChuyenNganh : 
		/// </summary>
		[EnumTextValue("Lop Hoc Phan Chuyen Nganh")]
		[ColumnEnum("LopHocPhanChuyenNganh", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		LopHocPhanChuyenNganh = 24,
		/// <summary>
		/// DaoTaoTinChi : 
		/// </summary>
		[EnumTextValue("Dao Tao Tin Chi")]
		[ColumnEnum("DaoTaoTinChi", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DaoTaoTinChi = 25,
		/// <summary>
		/// HeSoCongViec : 
		/// </summary>
		[EnumTextValue("He So Cong Viec")]
		[ColumnEnum("HeSoCongViec", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoCongViec = 26,
		/// <summary>
		/// HeSoBacDaoTao : 
		/// </summary>
		[EnumTextValue("He So Bac Dao Tao")]
		[ColumnEnum("HeSoBacDaoTao", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoBacDaoTao = 27,
		/// <summary>
		/// HeSoNgonNgu : 
		/// </summary>
		[EnumTextValue("He So Ngon Ngu")]
		[ColumnEnum("HeSoNgonNgu", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNgonNgu = 28,
		/// <summary>
		/// HeSoChucDanhChuyenMon : 
		/// </summary>
		[EnumTextValue("He So Chuc Danh Chuyen Mon")]
		[ColumnEnum("HeSoChucDanhChuyenMon", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoChucDanhChuyenMon = 29,
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		[EnumTextValue("He So Lop Dong")]
		[ColumnEnum("HeSoLopDong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDong = 30,
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		[EnumTextValue("He So Co So")]
		[ColumnEnum("HeSoCoSo", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoCoSo = 31,
		/// <summary>
		/// HeSoNienCheTinChi : 
		/// </summary>
		[EnumTextValue("He So Nien Che Tin Chi")]
		[ColumnEnum("HeSoNienCheTinChi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNienCheTinChi = 32,
		/// <summary>
		/// SoTietThucTeQuyDoi : 
		/// </summary>
		[EnumTextValue("So Tiet Thuc Te Quy Doi")]
		[ColumnEnum("SoTietThucTeQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTietThucTeQuyDoi = 33,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("Tiet Quy Doi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi = 34,
		/// <summary>
		/// HeSoQuyDoiThucHanhSangLyThuyet : 
		/// </summary>
		[EnumTextValue("He So Quy Doi Thuc Hanh Sang Ly Thuyet")]
		[ColumnEnum("HeSoQuyDoiThucHanhSangLyThuyet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoQuyDoiThucHanhSangLyThuyet = 35,
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		[EnumTextValue("He So Ngoai Gio")]
		[ColumnEnum("HeSoNgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNgoaiGio = 36,
		/// <summary>
		/// LoaiLop : 
		/// </summary>
		[EnumTextValue("Loai Lop")]
		[ColumnEnum("LoaiLop", typeof(System.String), System.Data.DbType.StringFixedLength, false, false, true, 10)]
		LoaiLop = 37,
		/// <summary>
		/// HeSoClcCntn : 
		/// </summary>
		[EnumTextValue("He So Clc Cntn")]
		[ColumnEnum("HeSoClcCntn", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoClcCntn = 38,
		/// <summary>
		/// HeSoThinhGiangMonChuyenNganh : 
		/// </summary>
		[EnumTextValue("He So Thinh Giang Mon Chuyen Nganh")]
		[ColumnEnum("HeSoThinhGiangMonChuyenNganh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoThinhGiangMonChuyenNganh = 39,
		/// <summary>
		/// NgonNguGiangDay : 
		/// </summary>
		[EnumTextValue("Ngon Ngu Giang Day")]
		[ColumnEnum("NgonNguGiangDay", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NgonNguGiangDay = 40,
		/// <summary>
		/// HeSoTroCap : 
		/// </summary>
		[EnumTextValue("He So Tro Cap")]
		[ColumnEnum("HeSoTroCap", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoTroCap = 41,
		/// <summary>
		/// HeSoLuong : 
		/// </summary>
		[EnumTextValue("He So Luong")]
		[ColumnEnum("HeSoLuong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLuong = 42,
		/// <summary>
		/// HeSoMonMoi : 
		/// </summary>
		[EnumTextValue("He So Mon Moi")]
		[ColumnEnum("HeSoMonMoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoMonMoi = 43,
		/// <summary>
		/// DonGia : 
		/// </summary>
		[EnumTextValue("Don Gia")]
		[ColumnEnum("DonGia", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGia = 44,
		/// <summary>
		/// ThanhTien : 
		/// </summary>
		[EnumTextValue("Thanh Tien")]
		[ColumnEnum("ThanhTien", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThanhTien = 45,
		/// <summary>
		/// GhiChu : 
		/// </summary>
		[EnumTextValue("Ghi Chu")]
		[ColumnEnum("GhiChu", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		GhiChu = 46,
		/// <summary>
		/// MucThanhToan : 
		/// </summary>
		[EnumTextValue("Muc Thanh Toan")]
		[ColumnEnum("MucThanhToan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MucThanhToan = 47,
		/// <summary>
		/// NgayTamUng : 
		/// </summary>
		[EnumTextValue("Ngay Tam Ung")]
		[ColumnEnum("NgayTamUng", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayTamUng = 48,
		/// <summary>
		/// DotTamUng : 
		/// </summary>
		[EnumTextValue("Dot Tam Ung")]
		[ColumnEnum("DotTamUng", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		DotTamUng = 49
	}//End enum

	#endregion GiangVienTamUngChiTietColumn Enum

} // end namespace

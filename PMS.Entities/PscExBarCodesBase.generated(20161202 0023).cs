
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file PscExBarCodes.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'psc_EX_BarCodes' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class PscExBarCodesBase : EntityBase, IPscExBarCodes, IEntityId<PscExBarCodesKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private PscExBarCodesEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private PscExBarCodesEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private PscExBarCodesEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<PscExBarCodes> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event PscExBarCodesEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event PscExBarCodesEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="PscExBarCodesBase"/> instance.
		///</summary>
		public PscExBarCodesBase()
		{
			this.entityData = new PscExBarCodesEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="PscExBarCodesBase"/> instance.
		///</summary>
		///<param name="_maLopHocPhan"></param>
		///<param name="_kyThi"></param>
		///<param name="_lanThi"></param>
		///<param name="_barCode"></param>
		///<param name="_maNhanDang"></param>
		///<param name="_giaoBai"></param>
		///<param name="_nhanBai"></param>
		///<param name="_ghiChu"></param>
		///<param name="_updateDate"></param>
		///<param name="_updateStaff"></param>
		///<param name="_ngayNhan"></param>
		///<param name="_nguoiNhan"></param>
		///<param name="_ngayGiao"></param>
		///<param name="_nguoiGiao"></param>
		///<param name="_daGuiMailNhacGiaoBai"></param>
		///<param name="_daGuiMailNhacThuHoiBai"></param>
		///<param name="_daGuiMailNhacNhanBai"></param>
		///<param name="_soBai"></param>
		///<param name="_soTo"></param>
		public PscExBarCodesBase(System.String _maLopHocPhan, System.String _kyThi, System.Int32 _lanThi, 
			System.String _barCode, System.String _maNhanDang, System.Boolean? _giaoBai, 
			System.Boolean? _nhanBai, System.String _ghiChu, System.DateTime? _updateDate, 
			System.String _updateStaff, System.DateTime? _ngayNhan, System.String _nguoiNhan, 
			System.DateTime? _ngayGiao, System.String _nguoiGiao, System.Boolean? _daGuiMailNhacGiaoBai, 
			System.Boolean? _daGuiMailNhacThuHoiBai, System.Boolean? _daGuiMailNhacNhanBai, System.Int32? _soBai, 
			System.Int32? _soTo)
		{
			this.entityData = new PscExBarCodesEntityData();
			this.backupData = null;

			this.MaLopHocPhan = _maLopHocPhan;
			this.KyThi = _kyThi;
			this.LanThi = _lanThi;
			this.BarCode = _barCode;
			this.MaNhanDang = _maNhanDang;
			this.GiaoBai = _giaoBai;
			this.NhanBai = _nhanBai;
			this.GhiChu = _ghiChu;
			this.UpdateDate = _updateDate;
			this.UpdateStaff = _updateStaff;
			this.NgayNhan = _ngayNhan;
			this.NguoiNhan = _nguoiNhan;
			this.NgayGiao = _ngayGiao;
			this.NguoiGiao = _nguoiGiao;
			this.DaGuiMailNhacGiaoBai = _daGuiMailNhacGiaoBai;
			this.DaGuiMailNhacThuHoiBai = _daGuiMailNhacThuHoiBai;
			this.DaGuiMailNhacNhanBai = _daGuiMailNhacNhanBai;
			this.SoBai = _soBai;
			this.SoTo = _soTo;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="PscExBarCodes"/> instance.
		///</summary>
		///<param name="_maLopHocPhan"></param>
		///<param name="_kyThi"></param>
		///<param name="_lanThi"></param>
		///<param name="_barCode"></param>
		///<param name="_maNhanDang"></param>
		///<param name="_giaoBai"></param>
		///<param name="_nhanBai"></param>
		///<param name="_ghiChu"></param>
		///<param name="_updateDate"></param>
		///<param name="_updateStaff"></param>
		///<param name="_ngayNhan"></param>
		///<param name="_nguoiNhan"></param>
		///<param name="_ngayGiao"></param>
		///<param name="_nguoiGiao"></param>
		///<param name="_daGuiMailNhacGiaoBai"></param>
		///<param name="_daGuiMailNhacThuHoiBai"></param>
		///<param name="_daGuiMailNhacNhanBai"></param>
		///<param name="_soBai"></param>
		///<param name="_soTo"></param>
		public static PscExBarCodes CreatePscExBarCodes(System.String _maLopHocPhan, System.String _kyThi, System.Int32 _lanThi, 
			System.String _barCode, System.String _maNhanDang, System.Boolean? _giaoBai, 
			System.Boolean? _nhanBai, System.String _ghiChu, System.DateTime? _updateDate, 
			System.String _updateStaff, System.DateTime? _ngayNhan, System.String _nguoiNhan, 
			System.DateTime? _ngayGiao, System.String _nguoiGiao, System.Boolean? _daGuiMailNhacGiaoBai, 
			System.Boolean? _daGuiMailNhacThuHoiBai, System.Boolean? _daGuiMailNhacNhanBai, System.Int32? _soBai, 
			System.Int32? _soTo)
		{
			PscExBarCodes newPscExBarCodes = new PscExBarCodes();
			newPscExBarCodes.MaLopHocPhan = _maLopHocPhan;
			newPscExBarCodes.KyThi = _kyThi;
			newPscExBarCodes.LanThi = _lanThi;
			newPscExBarCodes.BarCode = _barCode;
			newPscExBarCodes.MaNhanDang = _maNhanDang;
			newPscExBarCodes.GiaoBai = _giaoBai;
			newPscExBarCodes.NhanBai = _nhanBai;
			newPscExBarCodes.GhiChu = _ghiChu;
			newPscExBarCodes.UpdateDate = _updateDate;
			newPscExBarCodes.UpdateStaff = _updateStaff;
			newPscExBarCodes.NgayNhan = _ngayNhan;
			newPscExBarCodes.NguoiNhan = _nguoiNhan;
			newPscExBarCodes.NgayGiao = _ngayGiao;
			newPscExBarCodes.NguoiGiao = _nguoiGiao;
			newPscExBarCodes.DaGuiMailNhacGiaoBai = _daGuiMailNhacGiaoBai;
			newPscExBarCodes.DaGuiMailNhacThuHoiBai = _daGuiMailNhacThuHoiBai;
			newPscExBarCodes.DaGuiMailNhacNhanBai = _daGuiMailNhacNhanBai;
			newPscExBarCodes.SoBai = _soBai;
			newPscExBarCodes.SoTo = _soTo;
			return newPscExBarCodes;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false, 30)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this.entityData.MaLopHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaLopHocPhan == value)
					return;
				
                OnPropertyChanging("MaLopHocPhan");                    
				OnColumnChanging(PscExBarCodesColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				this.entityData.MaLopHocPhan = value;
				this.EntityId.MaLopHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the MaLopHocPhan property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the MaLopHocPhan property.</remarks>
		/// <value>This type is nvarchar</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.String OriginalMaLopHocPhan
		{
			get { return this.entityData.OriginalMaLopHocPhan; }
			set { this.entityData.OriginalMaLopHocPhan = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the KyThi property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false, 30)]
		public virtual System.String KyThi
		{
			get
			{
				return this.entityData.KyThi; 
			}
			
			set
			{
				if (this.entityData.KyThi == value)
					return;
				
                OnPropertyChanging("KyThi");                    
				OnColumnChanging(PscExBarCodesColumn.KyThi, this.entityData.KyThi);
				this.entityData.KyThi = value;
				this.EntityId.KyThi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.KyThi, this.entityData.KyThi);
				OnPropertyChanged("KyThi");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the KyThi property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the KyThi property.</remarks>
		/// <value>This type is varchar</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.String OriginalKyThi
		{
			get { return this.entityData.OriginalKyThi; }
			set { this.entityData.OriginalKyThi = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the LanThi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Int32 LanThi
		{
			get
			{
				return this.entityData.LanThi; 
			}
			
			set
			{
				if (this.entityData.LanThi == value)
					return;
				
                OnPropertyChanging("LanThi");                    
				OnColumnChanging(PscExBarCodesColumn.LanThi, this.entityData.LanThi);
				this.entityData.LanThi = value;
				this.EntityId.LanThi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.LanThi, this.entityData.LanThi);
				OnPropertyChanged("LanThi");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the LanThi property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the LanThi property.</remarks>
		/// <value>This type is int</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Int32 OriginalLanThi
		{
			get { return this.entityData.OriginalLanThi; }
			set { this.entityData.OriginalLanThi = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the BarCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false, 30)]
		public virtual System.String BarCode
		{
			get
			{
				return this.entityData.BarCode; 
			}
			
			set
			{
				if (this.entityData.BarCode == value)
					return;
				
                OnPropertyChanging("BarCode");                    
				OnColumnChanging(PscExBarCodesColumn.BarCode, this.entityData.BarCode);
				this.entityData.BarCode = value;
				this.EntityId.BarCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.BarCode, this.entityData.BarCode);
				OnPropertyChanged("BarCode");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the BarCode property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the BarCode property.</remarks>
		/// <value>This type is nvarchar</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.String OriginalBarCode
		{
			get { return this.entityData.OriginalBarCode; }
			set { this.entityData.OriginalBarCode = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the MaNhanDang property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String MaNhanDang
		{
			get
			{
				return this.entityData.MaNhanDang; 
			}
			
			set
			{
				if (this.entityData.MaNhanDang == value)
					return;
				
                OnPropertyChanging("MaNhanDang");                    
				OnColumnChanging(PscExBarCodesColumn.MaNhanDang, this.entityData.MaNhanDang);
				this.entityData.MaNhanDang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.MaNhanDang, this.entityData.MaNhanDang);
				OnPropertyChanged("MaNhanDang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GiaoBai property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? GiaoBai
		{
			get
			{
				return this.entityData.GiaoBai; 
			}
			
			set
			{
				if (this.entityData.GiaoBai == value)
					return;
				
                OnPropertyChanging("GiaoBai");                    
				OnColumnChanging(PscExBarCodesColumn.GiaoBai, this.entityData.GiaoBai);
				this.entityData.GiaoBai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.GiaoBai, this.entityData.GiaoBai);
				OnPropertyChanged("GiaoBai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NhanBai property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? NhanBai
		{
			get
			{
				return this.entityData.NhanBai; 
			}
			
			set
			{
				if (this.entityData.NhanBai == value)
					return;
				
                OnPropertyChanging("NhanBai");                    
				OnColumnChanging(PscExBarCodesColumn.NhanBai, this.entityData.NhanBai);
				this.entityData.NhanBai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.NhanBai, this.entityData.NhanBai);
				OnPropertyChanged("NhanBai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GhiChu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1024)]
		public virtual System.String GhiChu
		{
			get
			{
				return this.entityData.GhiChu; 
			}
			
			set
			{
				if (this.entityData.GhiChu == value)
					return;
				
                OnPropertyChanging("GhiChu");                    
				OnColumnChanging(PscExBarCodesColumn.GhiChu, this.entityData.GhiChu);
				this.entityData.GhiChu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.GhiChu, this.entityData.GhiChu);
				OnPropertyChanged("GhiChu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UpdateDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? UpdateDate
		{
			get
			{
				return this.entityData.UpdateDate; 
			}
			
			set
			{
				if (this.entityData.UpdateDate == value)
					return;
				
                OnPropertyChanging("UpdateDate");                    
				OnColumnChanging(PscExBarCodesColumn.UpdateDate, this.entityData.UpdateDate);
				this.entityData.UpdateDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.UpdateDate, this.entityData.UpdateDate);
				OnPropertyChanged("UpdateDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UpdateStaff property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String UpdateStaff
		{
			get
			{
				return this.entityData.UpdateStaff; 
			}
			
			set
			{
				if (this.entityData.UpdateStaff == value)
					return;
				
                OnPropertyChanging("UpdateStaff");                    
				OnColumnChanging(PscExBarCodesColumn.UpdateStaff, this.entityData.UpdateStaff);
				this.entityData.UpdateStaff = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.UpdateStaff, this.entityData.UpdateStaff);
				OnPropertyChanged("UpdateStaff");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayNhan property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayNhan
		{
			get
			{
				return this.entityData.NgayNhan; 
			}
			
			set
			{
				if (this.entityData.NgayNhan == value)
					return;
				
                OnPropertyChanging("NgayNhan");                    
				OnColumnChanging(PscExBarCodesColumn.NgayNhan, this.entityData.NgayNhan);
				this.entityData.NgayNhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.NgayNhan, this.entityData.NgayNhan);
				OnPropertyChanged("NgayNhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NguoiNhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String NguoiNhan
		{
			get
			{
				return this.entityData.NguoiNhan; 
			}
			
			set
			{
				if (this.entityData.NguoiNhan == value)
					return;
				
                OnPropertyChanging("NguoiNhan");                    
				OnColumnChanging(PscExBarCodesColumn.NguoiNhan, this.entityData.NguoiNhan);
				this.entityData.NguoiNhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.NguoiNhan, this.entityData.NguoiNhan);
				OnPropertyChanged("NguoiNhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayGiao property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayGiao
		{
			get
			{
				return this.entityData.NgayGiao; 
			}
			
			set
			{
				if (this.entityData.NgayGiao == value)
					return;
				
                OnPropertyChanging("NgayGiao");                    
				OnColumnChanging(PscExBarCodesColumn.NgayGiao, this.entityData.NgayGiao);
				this.entityData.NgayGiao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.NgayGiao, this.entityData.NgayGiao);
				OnPropertyChanged("NgayGiao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NguoiGiao property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String NguoiGiao
		{
			get
			{
				return this.entityData.NguoiGiao; 
			}
			
			set
			{
				if (this.entityData.NguoiGiao == value)
					return;
				
                OnPropertyChanging("NguoiGiao");                    
				OnColumnChanging(PscExBarCodesColumn.NguoiGiao, this.entityData.NguoiGiao);
				this.entityData.NguoiGiao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.NguoiGiao, this.entityData.NguoiGiao);
				OnPropertyChanged("NguoiGiao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DaGuiMailNhacGiaoBai property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DaGuiMailNhacGiaoBai
		{
			get
			{
				return this.entityData.DaGuiMailNhacGiaoBai; 
			}
			
			set
			{
				if (this.entityData.DaGuiMailNhacGiaoBai == value)
					return;
				
                OnPropertyChanging("DaGuiMailNhacGiaoBai");                    
				OnColumnChanging(PscExBarCodesColumn.DaGuiMailNhacGiaoBai, this.entityData.DaGuiMailNhacGiaoBai);
				this.entityData.DaGuiMailNhacGiaoBai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.DaGuiMailNhacGiaoBai, this.entityData.DaGuiMailNhacGiaoBai);
				OnPropertyChanged("DaGuiMailNhacGiaoBai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DaGuiMailNhacThuHoiBai property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DaGuiMailNhacThuHoiBai
		{
			get
			{
				return this.entityData.DaGuiMailNhacThuHoiBai; 
			}
			
			set
			{
				if (this.entityData.DaGuiMailNhacThuHoiBai == value)
					return;
				
                OnPropertyChanging("DaGuiMailNhacThuHoiBai");                    
				OnColumnChanging(PscExBarCodesColumn.DaGuiMailNhacThuHoiBai, this.entityData.DaGuiMailNhacThuHoiBai);
				this.entityData.DaGuiMailNhacThuHoiBai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.DaGuiMailNhacThuHoiBai, this.entityData.DaGuiMailNhacThuHoiBai);
				OnPropertyChanged("DaGuiMailNhacThuHoiBai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DaGuiMailNhacNhanBai property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DaGuiMailNhacNhanBai
		{
			get
			{
				return this.entityData.DaGuiMailNhacNhanBai; 
			}
			
			set
			{
				if (this.entityData.DaGuiMailNhacNhanBai == value)
					return;
				
                OnPropertyChanging("DaGuiMailNhacNhanBai");                    
				OnColumnChanging(PscExBarCodesColumn.DaGuiMailNhacNhanBai, this.entityData.DaGuiMailNhacNhanBai);
				this.entityData.DaGuiMailNhacNhanBai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.DaGuiMailNhacNhanBai, this.entityData.DaGuiMailNhacNhanBai);
				OnPropertyChanged("DaGuiMailNhacNhanBai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoBai property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoBai
		{
			get
			{
				return this.entityData.SoBai; 
			}
			
			set
			{
				if (this.entityData.SoBai == value)
					return;
				
                OnPropertyChanging("SoBai");                    
				OnColumnChanging(PscExBarCodesColumn.SoBai, this.entityData.SoBai);
				this.entityData.SoBai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.SoBai, this.entityData.SoBai);
				OnPropertyChanged("SoBai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTo property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoTo
		{
			get
			{
				return this.entityData.SoTo; 
			}
			
			set
			{
				if (this.entityData.SoTo == value)
					return;
				
                OnPropertyChanging("SoTo");                    
				OnColumnChanging(PscExBarCodesColumn.SoTo, this.entityData.SoTo);
				this.entityData.SoTo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PscExBarCodesColumn.SoTo, this.entityData.SoTo);
				OnPropertyChanged("SoTo");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("MaLopHocPhan", "Ma Lop Hoc Phan"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLopHocPhan", "Ma Lop Hoc Phan", 30));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("KyThi", "Ky Thi"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("KyThi", "Ky Thi", 30));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("BarCode", "Bar Code"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("BarCode", "Bar Code", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaNhanDang", "Ma Nhan Dang", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GhiChu", "Ghi Chu", 1024));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UpdateStaff", "Update Staff", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NguoiNhan", "Nguoi Nhan", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NguoiGiao", "Nguoi Giao", 512));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "psc_EX_BarCodes"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"MaLopHocPhan", "KyThi", "LanThi", "BarCode", "MaNhanDang", "GiaoBai", "NhanBai", "GhiChu", "UpdateDate", "UpdateStaff", "NgayNhan", "NguoiNhan", "NgayGiao", "NguoiGiao", "DaGuiMailNhacGiaoBai", "DaGuiMailNhacThuHoiBai", "DaGuiMailNhacNhanBai", "SoBai", "SoTo"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as PscExBarCodesEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (PscExBarCodes) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<PscExBarCodes>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as PscExBarCodes);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed PscExBarCodes Entity 
		///</summary>
		protected virtual PscExBarCodes Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			PscExBarCodes copy = new PscExBarCodes();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.MaLopHocPhan = this.MaLopHocPhan;
					copy.OriginalMaLopHocPhan = this.OriginalMaLopHocPhan;
				copy.KyThi = this.KyThi;
					copy.OriginalKyThi = this.OriginalKyThi;
				copy.LanThi = this.LanThi;
					copy.OriginalLanThi = this.OriginalLanThi;
				copy.BarCode = this.BarCode;
					copy.OriginalBarCode = this.OriginalBarCode;
				copy.MaNhanDang = this.MaNhanDang;
				copy.GiaoBai = this.GiaoBai;
				copy.NhanBai = this.NhanBai;
				copy.GhiChu = this.GhiChu;
				copy.UpdateDate = this.UpdateDate;
				copy.UpdateStaff = this.UpdateStaff;
				copy.NgayNhan = this.NgayNhan;
				copy.NguoiNhan = this.NguoiNhan;
				copy.NgayGiao = this.NgayGiao;
				copy.NguoiGiao = this.NguoiGiao;
				copy.DaGuiMailNhacGiaoBai = this.DaGuiMailNhacGiaoBai;
				copy.DaGuiMailNhacThuHoiBai = this.DaGuiMailNhacThuHoiBai;
				copy.DaGuiMailNhacNhanBai = this.DaGuiMailNhacNhanBai;
				copy.SoBai = this.SoBai;
				copy.SoTo = this.SoTo;
			
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed PscExBarCodes Entity 
		///</summary>
		public virtual PscExBarCodes Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed PscExBarCodes Entity which is a deep copy of the current entity.
		///</summary>
		public virtual PscExBarCodes DeepCopy()
		{
			return EntityHelper.Clone<PscExBarCodes>(this as PscExBarCodes);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as PscExBarCodesEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new PscExBarCodesEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as PscExBarCodesEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(PscExBarCodesColumn column)
		{
			switch(column)
			{
					case PscExBarCodesColumn.MaLopHocPhan:
					return entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
					case PscExBarCodesColumn.KyThi:
					return entityData.KyThi != _originalData.KyThi;
					case PscExBarCodesColumn.LanThi:
					return entityData.LanThi != _originalData.LanThi;
					case PscExBarCodesColumn.BarCode:
					return entityData.BarCode != _originalData.BarCode;
					case PscExBarCodesColumn.MaNhanDang:
					return entityData.MaNhanDang != _originalData.MaNhanDang;
					case PscExBarCodesColumn.GiaoBai:
					return entityData.GiaoBai != _originalData.GiaoBai;
					case PscExBarCodesColumn.NhanBai:
					return entityData.NhanBai != _originalData.NhanBai;
					case PscExBarCodesColumn.GhiChu:
					return entityData.GhiChu != _originalData.GhiChu;
					case PscExBarCodesColumn.UpdateDate:
					return entityData.UpdateDate != _originalData.UpdateDate;
					case PscExBarCodesColumn.UpdateStaff:
					return entityData.UpdateStaff != _originalData.UpdateStaff;
					case PscExBarCodesColumn.NgayNhan:
					return entityData.NgayNhan != _originalData.NgayNhan;
					case PscExBarCodesColumn.NguoiNhan:
					return entityData.NguoiNhan != _originalData.NguoiNhan;
					case PscExBarCodesColumn.NgayGiao:
					return entityData.NgayGiao != _originalData.NgayGiao;
					case PscExBarCodesColumn.NguoiGiao:
					return entityData.NguoiGiao != _originalData.NguoiGiao;
					case PscExBarCodesColumn.DaGuiMailNhacGiaoBai:
					return entityData.DaGuiMailNhacGiaoBai != _originalData.DaGuiMailNhacGiaoBai;
					case PscExBarCodesColumn.DaGuiMailNhacThuHoiBai:
					return entityData.DaGuiMailNhacThuHoiBai != _originalData.DaGuiMailNhacThuHoiBai;
					case PscExBarCodesColumn.DaGuiMailNhacNhanBai:
					return entityData.DaGuiMailNhacNhanBai != _originalData.DaGuiMailNhacNhanBai;
					case PscExBarCodesColumn.SoBai:
					return entityData.SoBai != _originalData.SoBai;
					case PscExBarCodesColumn.SoTo:
					return entityData.SoTo != _originalData.SoTo;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< PscExBarCodesColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
			result = result || entityData.KyThi != _originalData.KyThi;
			result = result || entityData.LanThi != _originalData.LanThi;
			result = result || entityData.BarCode != _originalData.BarCode;
			result = result || entityData.MaNhanDang != _originalData.MaNhanDang;
			result = result || entityData.GiaoBai != _originalData.GiaoBai;
			result = result || entityData.NhanBai != _originalData.NhanBai;
			result = result || entityData.GhiChu != _originalData.GhiChu;
			result = result || entityData.UpdateDate != _originalData.UpdateDate;
			result = result || entityData.UpdateStaff != _originalData.UpdateStaff;
			result = result || entityData.NgayNhan != _originalData.NgayNhan;
			result = result || entityData.NguoiNhan != _originalData.NguoiNhan;
			result = result || entityData.NgayGiao != _originalData.NgayGiao;
			result = result || entityData.NguoiGiao != _originalData.NguoiGiao;
			result = result || entityData.DaGuiMailNhacGiaoBai != _originalData.DaGuiMailNhacGiaoBai;
			result = result || entityData.DaGuiMailNhacThuHoiBai != _originalData.DaGuiMailNhacThuHoiBai;
			result = result || entityData.DaGuiMailNhacNhanBai != _originalData.DaGuiMailNhacNhanBai;
			result = result || entityData.SoBai != _originalData.SoBai;
			result = result || entityData.SoTo != _originalData.SoTo;
			return result;
		}	
		
		///<summary>
		///  Returns a PscExBarCodes Entity with the original data.
		///</summary>
		public PscExBarCodes GetOriginalEntity()
		{
			if (_originalData != null)
				return CreatePscExBarCodes(
				_originalData.MaLopHocPhan,
				_originalData.KyThi,
				_originalData.LanThi,
				_originalData.BarCode,
				_originalData.MaNhanDang,
				_originalData.GiaoBai,
				_originalData.NhanBai,
				_originalData.GhiChu,
				_originalData.UpdateDate,
				_originalData.UpdateStaff,
				_originalData.NgayNhan,
				_originalData.NguoiNhan,
				_originalData.NgayGiao,
				_originalData.NguoiGiao,
				_originalData.DaGuiMailNhacGiaoBai,
				_originalData.DaGuiMailNhacThuHoiBai,
				_originalData.DaGuiMailNhacNhanBai,
				_originalData.SoBai,
				_originalData.SoTo
				);
				
			return (PscExBarCodes)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="PscExBarCodesBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is PscExBarCodesBase)
				return ValueEquals(this, (PscExBarCodesBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="PscExBarCodesBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.MaLopHocPhan.GetHashCode() ^ 
					this.KyThi.GetHashCode() ^ 
					this.LanThi.GetHashCode() ^ 
					this.BarCode.GetHashCode() ^ 
					((this.MaNhanDang == null) ? string.Empty : this.MaNhanDang.ToString()).GetHashCode() ^ 
					((this.GiaoBai == null) ? string.Empty : this.GiaoBai.ToString()).GetHashCode() ^ 
					((this.NhanBai == null) ? string.Empty : this.NhanBai.ToString()).GetHashCode() ^ 
					((this.GhiChu == null) ? string.Empty : this.GhiChu.ToString()).GetHashCode() ^ 
					((this.UpdateDate == null) ? string.Empty : this.UpdateDate.ToString()).GetHashCode() ^ 
					((this.UpdateStaff == null) ? string.Empty : this.UpdateStaff.ToString()).GetHashCode() ^ 
					((this.NgayNhan == null) ? string.Empty : this.NgayNhan.ToString()).GetHashCode() ^ 
					((this.NguoiNhan == null) ? string.Empty : this.NguoiNhan.ToString()).GetHashCode() ^ 
					((this.NgayGiao == null) ? string.Empty : this.NgayGiao.ToString()).GetHashCode() ^ 
					((this.NguoiGiao == null) ? string.Empty : this.NguoiGiao.ToString()).GetHashCode() ^ 
					((this.DaGuiMailNhacGiaoBai == null) ? string.Empty : this.DaGuiMailNhacGiaoBai.ToString()).GetHashCode() ^ 
					((this.DaGuiMailNhacThuHoiBai == null) ? string.Empty : this.DaGuiMailNhacThuHoiBai.ToString()).GetHashCode() ^ 
					((this.DaGuiMailNhacNhanBai == null) ? string.Empty : this.DaGuiMailNhacNhanBai.ToString()).GetHashCode() ^ 
					((this.SoBai == null) ? string.Empty : this.SoBai.ToString()).GetHashCode() ^ 
					((this.SoTo == null) ? string.Empty : this.SoTo.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="PscExBarCodesBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(PscExBarCodesBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="PscExBarCodesBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="PscExBarCodesBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="PscExBarCodesBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(PscExBarCodesBase Object1, PscExBarCodesBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
				equal = false;
			if (Object1.KyThi != Object2.KyThi)
				equal = false;
			if (Object1.LanThi != Object2.LanThi)
				equal = false;
			if (Object1.BarCode != Object2.BarCode)
				equal = false;
			if ( Object1.MaNhanDang != null && Object2.MaNhanDang != null )
			{
				if (Object1.MaNhanDang != Object2.MaNhanDang)
					equal = false;
			}
			else if (Object1.MaNhanDang == null ^ Object2.MaNhanDang == null )
			{
				equal = false;
			}
			if ( Object1.GiaoBai != null && Object2.GiaoBai != null )
			{
				if (Object1.GiaoBai != Object2.GiaoBai)
					equal = false;
			}
			else if (Object1.GiaoBai == null ^ Object2.GiaoBai == null )
			{
				equal = false;
			}
			if ( Object1.NhanBai != null && Object2.NhanBai != null )
			{
				if (Object1.NhanBai != Object2.NhanBai)
					equal = false;
			}
			else if (Object1.NhanBai == null ^ Object2.NhanBai == null )
			{
				equal = false;
			}
			if ( Object1.GhiChu != null && Object2.GhiChu != null )
			{
				if (Object1.GhiChu != Object2.GhiChu)
					equal = false;
			}
			else if (Object1.GhiChu == null ^ Object2.GhiChu == null )
			{
				equal = false;
			}
			if ( Object1.UpdateDate != null && Object2.UpdateDate != null )
			{
				if (Object1.UpdateDate != Object2.UpdateDate)
					equal = false;
			}
			else if (Object1.UpdateDate == null ^ Object2.UpdateDate == null )
			{
				equal = false;
			}
			if ( Object1.UpdateStaff != null && Object2.UpdateStaff != null )
			{
				if (Object1.UpdateStaff != Object2.UpdateStaff)
					equal = false;
			}
			else if (Object1.UpdateStaff == null ^ Object2.UpdateStaff == null )
			{
				equal = false;
			}
			if ( Object1.NgayNhan != null && Object2.NgayNhan != null )
			{
				if (Object1.NgayNhan != Object2.NgayNhan)
					equal = false;
			}
			else if (Object1.NgayNhan == null ^ Object2.NgayNhan == null )
			{
				equal = false;
			}
			if ( Object1.NguoiNhan != null && Object2.NguoiNhan != null )
			{
				if (Object1.NguoiNhan != Object2.NguoiNhan)
					equal = false;
			}
			else if (Object1.NguoiNhan == null ^ Object2.NguoiNhan == null )
			{
				equal = false;
			}
			if ( Object1.NgayGiao != null && Object2.NgayGiao != null )
			{
				if (Object1.NgayGiao != Object2.NgayGiao)
					equal = false;
			}
			else if (Object1.NgayGiao == null ^ Object2.NgayGiao == null )
			{
				equal = false;
			}
			if ( Object1.NguoiGiao != null && Object2.NguoiGiao != null )
			{
				if (Object1.NguoiGiao != Object2.NguoiGiao)
					equal = false;
			}
			else if (Object1.NguoiGiao == null ^ Object2.NguoiGiao == null )
			{
				equal = false;
			}
			if ( Object1.DaGuiMailNhacGiaoBai != null && Object2.DaGuiMailNhacGiaoBai != null )
			{
				if (Object1.DaGuiMailNhacGiaoBai != Object2.DaGuiMailNhacGiaoBai)
					equal = false;
			}
			else if (Object1.DaGuiMailNhacGiaoBai == null ^ Object2.DaGuiMailNhacGiaoBai == null )
			{
				equal = false;
			}
			if ( Object1.DaGuiMailNhacThuHoiBai != null && Object2.DaGuiMailNhacThuHoiBai != null )
			{
				if (Object1.DaGuiMailNhacThuHoiBai != Object2.DaGuiMailNhacThuHoiBai)
					equal = false;
			}
			else if (Object1.DaGuiMailNhacThuHoiBai == null ^ Object2.DaGuiMailNhacThuHoiBai == null )
			{
				equal = false;
			}
			if ( Object1.DaGuiMailNhacNhanBai != null && Object2.DaGuiMailNhacNhanBai != null )
			{
				if (Object1.DaGuiMailNhacNhanBai != Object2.DaGuiMailNhacNhanBai)
					equal = false;
			}
			else if (Object1.DaGuiMailNhacNhanBai == null ^ Object2.DaGuiMailNhacNhanBai == null )
			{
				equal = false;
			}
			if ( Object1.SoBai != null && Object2.SoBai != null )
			{
				if (Object1.SoBai != Object2.SoBai)
					equal = false;
			}
			else if (Object1.SoBai == null ^ Object2.SoBai == null )
			{
				equal = false;
			}
			if ( Object1.SoTo != null && Object2.SoTo != null )
			{
				if (Object1.SoTo != Object2.SoTo)
					equal = false;
			}
			else if (Object1.SoTo == null ^ Object2.SoTo == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((PscExBarCodesBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static PscExBarCodesComparer GetComparer()
        {
            return new PscExBarCodesComparer();
        }
        */

        // Comparer delegates back to PscExBarCodes
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(PscExBarCodes rhs, PscExBarCodesColumn which)
        {
            switch (which)
            {
            	
            	
            	case PscExBarCodesColumn.MaLopHocPhan:
            		return this.MaLopHocPhan.CompareTo(rhs.MaLopHocPhan);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.KyThi:
            		return this.KyThi.CompareTo(rhs.KyThi);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.LanThi:
            		return this.LanThi.CompareTo(rhs.LanThi);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.BarCode:
            		return this.BarCode.CompareTo(rhs.BarCode);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.MaNhanDang:
            		return this.MaNhanDang.CompareTo(rhs.MaNhanDang);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.GiaoBai:
            		return this.GiaoBai.Value.CompareTo(rhs.GiaoBai.Value);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.NhanBai:
            		return this.NhanBai.Value.CompareTo(rhs.NhanBai.Value);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.GhiChu:
            		return this.GhiChu.CompareTo(rhs.GhiChu);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.UpdateDate:
            		return this.UpdateDate.Value.CompareTo(rhs.UpdateDate.Value);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.UpdateStaff:
            		return this.UpdateStaff.CompareTo(rhs.UpdateStaff);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.NgayNhan:
            		return this.NgayNhan.Value.CompareTo(rhs.NgayNhan.Value);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.NguoiNhan:
            		return this.NguoiNhan.CompareTo(rhs.NguoiNhan);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.NgayGiao:
            		return this.NgayGiao.Value.CompareTo(rhs.NgayGiao.Value);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.NguoiGiao:
            		return this.NguoiGiao.CompareTo(rhs.NguoiGiao);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.DaGuiMailNhacGiaoBai:
            		return this.DaGuiMailNhacGiaoBai.Value.CompareTo(rhs.DaGuiMailNhacGiaoBai.Value);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.DaGuiMailNhacThuHoiBai:
            		return this.DaGuiMailNhacThuHoiBai.Value.CompareTo(rhs.DaGuiMailNhacThuHoiBai.Value);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.DaGuiMailNhacNhanBai:
            		return this.DaGuiMailNhacNhanBai.Value.CompareTo(rhs.DaGuiMailNhacNhanBai.Value);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.SoBai:
            		return this.SoBai.Value.CompareTo(rhs.SoBai.Value);
            		
            		                 
            	
            	
            	case PscExBarCodesColumn.SoTo:
            		return this.SoTo.Value.CompareTo(rhs.SoTo.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<PscExBarCodesKey> Members
		
		// member variable for the EntityId property
		private PscExBarCodesKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual PscExBarCodesKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new PscExBarCodesKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("PscExBarCodes")
					.Append("|").Append( this.MaLopHocPhan.ToString())
					.Append("|").Append( this.KyThi.ToString())
					.Append("|").Append( this.LanThi.ToString())
					.Append("|").Append( this.BarCode.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{20}{19}- MaLopHocPhan: {0}{19}- KyThi: {1}{19}- LanThi: {2}{19}- BarCode: {3}{19}- MaNhanDang: {4}{19}- GiaoBai: {5}{19}- NhanBai: {6}{19}- GhiChu: {7}{19}- UpdateDate: {8}{19}- UpdateStaff: {9}{19}- NgayNhan: {10}{19}- NguoiNhan: {11}{19}- NgayGiao: {12}{19}- NguoiGiao: {13}{19}- DaGuiMailNhacGiaoBai: {14}{19}- DaGuiMailNhacThuHoiBai: {15}{19}- DaGuiMailNhacNhanBai: {16}{19}- SoBai: {17}{19}- SoTo: {18}{19}{21}", 
				this.MaLopHocPhan,
				this.KyThi,
				this.LanThi,
				this.BarCode,
				(this.MaNhanDang == null) ? string.Empty : this.MaNhanDang.ToString(),
				(this.GiaoBai == null) ? string.Empty : this.GiaoBai.ToString(),
				(this.NhanBai == null) ? string.Empty : this.NhanBai.ToString(),
				(this.GhiChu == null) ? string.Empty : this.GhiChu.ToString(),
				(this.UpdateDate == null) ? string.Empty : this.UpdateDate.ToString(),
				(this.UpdateStaff == null) ? string.Empty : this.UpdateStaff.ToString(),
				(this.NgayNhan == null) ? string.Empty : this.NgayNhan.ToString(),
				(this.NguoiNhan == null) ? string.Empty : this.NguoiNhan.ToString(),
				(this.NgayGiao == null) ? string.Empty : this.NgayGiao.ToString(),
				(this.NguoiGiao == null) ? string.Empty : this.NguoiGiao.ToString(),
				(this.DaGuiMailNhacGiaoBai == null) ? string.Empty : this.DaGuiMailNhacGiaoBai.ToString(),
				(this.DaGuiMailNhacThuHoiBai == null) ? string.Empty : this.DaGuiMailNhacThuHoiBai.ToString(),
				(this.DaGuiMailNhacNhanBai == null) ? string.Empty : this.DaGuiMailNhacNhanBai.ToString(),
				(this.SoBai == null) ? string.Empty : this.SoBai.ToString(),
				(this.SoTo == null) ? string.Empty : this.SoTo.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'psc_EX_BarCodes' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class PscExBarCodesEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// MaLopHocPhan : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "psc_EX_BarCodes"</remarks>
		public System.String MaLopHocPhan;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.String OriginalMaLopHocPhan;
		
		/// <summary>			
		/// KyThi : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "psc_EX_BarCodes"</remarks>
		public System.String KyThi;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.String OriginalKyThi;
		
		/// <summary>			
		/// LanThi : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "psc_EX_BarCodes"</remarks>
		public System.Int32 LanThi;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Int32 OriginalLanThi;
		
		/// <summary>			
		/// BarCode : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "psc_EX_BarCodes"</remarks>
		public System.String BarCode;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.String OriginalBarCode;
		
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaNhanDang : 
		/// </summary>
		public System.String MaNhanDang = null;
		
		/// <summary>
		/// GiaoBai : 
		/// </summary>
		public System.Boolean? GiaoBai = null;
		
		/// <summary>
		/// NhanBai : 
		/// </summary>
		public System.Boolean? NhanBai = null;
		
		/// <summary>
		/// GhiChu : 
		/// </summary>
		public System.String GhiChu = null;
		
		/// <summary>
		/// UpdateDate : 
		/// </summary>
		public System.DateTime? UpdateDate = null;
		
		/// <summary>
		/// UpdateStaff : 
		/// </summary>
		public System.String UpdateStaff = null;
		
		/// <summary>
		/// NgayNhan : 
		/// </summary>
		public System.DateTime? NgayNhan = null;
		
		/// <summary>
		/// NguoiNhan : 
		/// </summary>
		public System.String NguoiNhan = null;
		
		/// <summary>
		/// NgayGiao : 
		/// </summary>
		public System.DateTime? NgayGiao = null;
		
		/// <summary>
		/// NguoiGiao : 
		/// </summary>
		public System.String NguoiGiao = null;
		
		/// <summary>
		/// DaGuiMailNhacGiaoBai : 
		/// </summary>
		public System.Boolean? DaGuiMailNhacGiaoBai = null;
		
		/// <summary>
		/// DaGuiMailNhacThuHoiBai : 
		/// </summary>
		public System.Boolean? DaGuiMailNhacThuHoiBai = null;
		
		/// <summary>
		/// DaGuiMailNhacNhanBai : 
		/// </summary>
		public System.Boolean? DaGuiMailNhacNhanBai = null;
		
		/// <summary>
		/// SoBai : 
		/// </summary>
		public System.Int32? SoBai = null;
		
		/// <summary>
		/// SoTo : 
		/// </summary>
		public System.Int32? SoTo = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			PscExBarCodesEntityData _tmp = new PscExBarCodesEntityData();
						
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.OriginalMaLopHocPhan = this.OriginalMaLopHocPhan;
			_tmp.KyThi = this.KyThi;
			_tmp.OriginalKyThi = this.OriginalKyThi;
			_tmp.LanThi = this.LanThi;
			_tmp.OriginalLanThi = this.OriginalLanThi;
			_tmp.BarCode = this.BarCode;
			_tmp.OriginalBarCode = this.OriginalBarCode;
			
			_tmp.MaNhanDang = this.MaNhanDang;
			_tmp.GiaoBai = this.GiaoBai;
			_tmp.NhanBai = this.NhanBai;
			_tmp.GhiChu = this.GhiChu;
			_tmp.UpdateDate = this.UpdateDate;
			_tmp.UpdateStaff = this.UpdateStaff;
			_tmp.NgayNhan = this.NgayNhan;
			_tmp.NguoiNhan = this.NguoiNhan;
			_tmp.NgayGiao = this.NgayGiao;
			_tmp.NguoiGiao = this.NguoiGiao;
			_tmp.DaGuiMailNhacGiaoBai = this.DaGuiMailNhacGiaoBai;
			_tmp.DaGuiMailNhacThuHoiBai = this.DaGuiMailNhacThuHoiBai;
			_tmp.DaGuiMailNhacNhanBai = this.DaGuiMailNhacNhanBai;
			_tmp.SoBai = this.SoBai;
			_tmp.SoTo = this.SoTo;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			PscExBarCodesEntityData _tmp = new PscExBarCodesEntityData();
						
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.OriginalMaLopHocPhan = this.OriginalMaLopHocPhan;
			_tmp.KyThi = this.KyThi;
			_tmp.OriginalKyThi = this.OriginalKyThi;
			_tmp.LanThi = this.LanThi;
			_tmp.OriginalLanThi = this.OriginalLanThi;
			_tmp.BarCode = this.BarCode;
			_tmp.OriginalBarCode = this.OriginalBarCode;
			
			_tmp.MaNhanDang = this.MaNhanDang;
			_tmp.GiaoBai = this.GiaoBai;
			_tmp.NhanBai = this.NhanBai;
			_tmp.GhiChu = this.GhiChu;
			_tmp.UpdateDate = this.UpdateDate;
			_tmp.UpdateStaff = this.UpdateStaff;
			_tmp.NgayNhan = this.NgayNhan;
			_tmp.NguoiNhan = this.NguoiNhan;
			_tmp.NgayGiao = this.NgayGiao;
			_tmp.NguoiGiao = this.NguoiGiao;
			_tmp.DaGuiMailNhacGiaoBai = this.DaGuiMailNhacGiaoBai;
			_tmp.DaGuiMailNhacThuHoiBai = this.DaGuiMailNhacThuHoiBai;
			_tmp.DaGuiMailNhacNhanBai = this.DaGuiMailNhacNhanBai;
			_tmp.SoBai = this.SoBai;
			_tmp.SoTo = this.SoTo;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PscExBarCodesColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(PscExBarCodesColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PscExBarCodesColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(PscExBarCodesColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PscExBarCodesColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(PscExBarCodesColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				PscExBarCodesEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new PscExBarCodesEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PscExBarCodesColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(PscExBarCodesColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				PscExBarCodesEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new PscExBarCodesEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region PscExBarCodesEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="PscExBarCodes"/> object.
	/// </remarks>
	public class PscExBarCodesEventArgs : System.EventArgs
	{
		private PscExBarCodesColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the PscExBarCodesEventArgs class.
		///</summary>
		public PscExBarCodesEventArgs(PscExBarCodesColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the PscExBarCodesEventArgs class.
		///</summary>
		public PscExBarCodesEventArgs(PscExBarCodesColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The PscExBarCodesColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="PscExBarCodesColumn" />
		public PscExBarCodesColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all PscExBarCodes related events.
	///</summary>
	public delegate void PscExBarCodesEventHandler(object sender, PscExBarCodesEventArgs e);
	
	#region PscExBarCodesComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class PscExBarCodesComparer : System.Collections.Generic.IComparer<PscExBarCodes>
	{
		PscExBarCodesColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:PscExBarCodesComparer"/> class.
        /// </summary>
		public PscExBarCodesComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:PscExBarCodesComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public PscExBarCodesComparer(PscExBarCodesColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="PscExBarCodes"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="PscExBarCodes"/> to compare.</param>
        /// <param name="b">The second <c>PscExBarCodes</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(PscExBarCodes a, PscExBarCodes b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(PscExBarCodes entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(PscExBarCodes a, PscExBarCodes b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public PscExBarCodesColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region PscExBarCodesKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="PscExBarCodes"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class PscExBarCodesKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the PscExBarCodesKey class.
		/// </summary>
		public PscExBarCodesKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the PscExBarCodesKey class.
		/// </summary>
		public PscExBarCodesKey(PscExBarCodesBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.MaLopHocPhan = entity.MaLopHocPhan;
				this.KyThi = entity.KyThi;
				this.LanThi = entity.LanThi;
				this.BarCode = entity.BarCode;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the PscExBarCodesKey class.
		/// </summary>
		public PscExBarCodesKey(System.String _maLopHocPhan, System.String _kyThi, System.Int32 _lanThi, System.String _barCode)
		{
			#region Init Properties

			this.MaLopHocPhan = _maLopHocPhan;
			this.KyThi = _kyThi;
			this.LanThi = _lanThi;
			this.BarCode = _barCode;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private PscExBarCodesBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public PscExBarCodesBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the MaLopHocPhan property
		private System.String _maLopHocPhan;
		
		/// <summary>
		/// Gets or sets the MaLopHocPhan property.
		/// </summary>
		public System.String MaLopHocPhan
		{
			get { return _maLopHocPhan; }
			set
			{
				if ( this.Entity != null )
					this.Entity.MaLopHocPhan = value;
				
				_maLopHocPhan = value;
			}
		}
		
		// member variable for the KyThi property
		private System.String _kyThi;
		
		/// <summary>
		/// Gets or sets the KyThi property.
		/// </summary>
		public System.String KyThi
		{
			get { return _kyThi; }
			set
			{
				if ( this.Entity != null )
					this.Entity.KyThi = value;
				
				_kyThi = value;
			}
		}
		
		// member variable for the LanThi property
		private System.Int32 _lanThi;
		
		/// <summary>
		/// Gets or sets the LanThi property.
		/// </summary>
		public System.Int32 LanThi
		{
			get { return _lanThi; }
			set
			{
				if ( this.Entity != null )
					this.Entity.LanThi = value;
				
				_lanThi = value;
			}
		}
		
		// member variable for the BarCode property
		private System.String _barCode;
		
		/// <summary>
		/// Gets or sets the BarCode property.
		/// </summary>
		public System.String BarCode
		{
			get { return _barCode; }
			set
			{
				if ( this.Entity != null )
					this.Entity.BarCode = value;
				
				_barCode = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				MaLopHocPhan = ( values["MaLopHocPhan"] != null ) ? (System.String) EntityUtil.ChangeType(values["MaLopHocPhan"], typeof(System.String)) : string.Empty;
				KyThi = ( values["KyThi"] != null ) ? (System.String) EntityUtil.ChangeType(values["KyThi"], typeof(System.String)) : string.Empty;
				LanThi = ( values["LanThi"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["LanThi"], typeof(System.Int32)) : (int)0;
				BarCode = ( values["BarCode"] != null ) ? (System.String) EntityUtil.ChangeType(values["BarCode"], typeof(System.String)) : string.Empty;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("MaLopHocPhan", MaLopHocPhan);
			values.Add("KyThi", KyThi);
			values.Add("LanThi", LanThi);
			values.Add("BarCode", BarCode);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("MaLopHocPhan: {0}{4}KyThi: {1}{4}LanThi: {2}{4}BarCode: {3}{4}",
								MaLopHocPhan,
								KyThi,
								LanThi,
								BarCode,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region PscExBarCodesColumn Enum
	
	/// <summary>
	/// Enumerate the PscExBarCodes columns.
	/// </summary>
	[Serializable]
	public enum PscExBarCodesColumn : int
	{
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Lop Hoc Phan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.String, true, false, false, 30)]
		MaLopHocPhan = 1,
		/// <summary>
		/// KyThi : 
		/// </summary>
		[EnumTextValue("Ky Thi")]
		[ColumnEnum("KyThi", typeof(System.String), System.Data.DbType.AnsiString, true, false, false, 30)]
		KyThi = 2,
		/// <summary>
		/// LanThi : 
		/// </summary>
		[EnumTextValue("Lan Thi")]
		[ColumnEnum("LanThi", typeof(System.Int32), System.Data.DbType.Int32, true, false, false)]
		LanThi = 3,
		/// <summary>
		/// BarCode : 
		/// </summary>
		[EnumTextValue("Bar Code")]
		[ColumnEnum("BarCode", typeof(System.String), System.Data.DbType.String, true, false, false, 30)]
		BarCode = 4,
		/// <summary>
		/// MaNhanDang : 
		/// </summary>
		[EnumTextValue("Ma Nhan Dang")]
		[ColumnEnum("MaNhanDang", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		MaNhanDang = 5,
		/// <summary>
		/// GiaoBai : 
		/// </summary>
		[EnumTextValue("Giao Bai")]
		[ColumnEnum("GiaoBai", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		GiaoBai = 6,
		/// <summary>
		/// NhanBai : 
		/// </summary>
		[EnumTextValue("Nhan Bai")]
		[ColumnEnum("NhanBai", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		NhanBai = 7,
		/// <summary>
		/// GhiChu : 
		/// </summary>
		[EnumTextValue("Ghi Chu")]
		[ColumnEnum("GhiChu", typeof(System.String), System.Data.DbType.String, false, false, true, 1024)]
		GhiChu = 8,
		/// <summary>
		/// UpdateDate : 
		/// </summary>
		[EnumTextValue("Update Date")]
		[ColumnEnum("UpdateDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		UpdateDate = 9,
		/// <summary>
		/// UpdateStaff : 
		/// </summary>
		[EnumTextValue("Update Staff")]
		[ColumnEnum("UpdateStaff", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
		UpdateStaff = 10,
		/// <summary>
		/// NgayNhan : 
		/// </summary>
		[EnumTextValue("Ngay Nhan")]
		[ColumnEnum("NgayNhan", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayNhan = 11,
		/// <summary>
		/// NguoiNhan : 
		/// </summary>
		[EnumTextValue("Nguoi Nhan")]
		[ColumnEnum("NguoiNhan", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		NguoiNhan = 12,
		/// <summary>
		/// NgayGiao : 
		/// </summary>
		[EnumTextValue("Ngay Giao")]
		[ColumnEnum("NgayGiao", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayGiao = 13,
		/// <summary>
		/// NguoiGiao : 
		/// </summary>
		[EnumTextValue("Nguoi Giao")]
		[ColumnEnum("NguoiGiao", typeof(System.String), System.Data.DbType.String, false, false, true, 512)]
		NguoiGiao = 14,
		/// <summary>
		/// DaGuiMailNhacGiaoBai : 
		/// </summary>
		[EnumTextValue("Da Gui Mail Nhac Giao Bai")]
		[ColumnEnum("DaGuiMailNhacGiaoBai", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DaGuiMailNhacGiaoBai = 15,
		/// <summary>
		/// DaGuiMailNhacThuHoiBai : 
		/// </summary>
		[EnumTextValue("Da Gui Mail Nhac Thu Hoi Bai")]
		[ColumnEnum("DaGuiMailNhacThuHoiBai", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DaGuiMailNhacThuHoiBai = 16,
		/// <summary>
		/// DaGuiMailNhacNhanBai : 
		/// </summary>
		[EnumTextValue("Da Gui Mail Nhac Nhan Bai")]
		[ColumnEnum("DaGuiMailNhacNhanBai", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DaGuiMailNhacNhanBai = 17,
		/// <summary>
		/// SoBai : 
		/// </summary>
		[EnumTextValue("So Bai")]
		[ColumnEnum("SoBai", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoBai = 18,
		/// <summary>
		/// SoTo : 
		/// </summary>
		[EnumTextValue("So To")]
		[ColumnEnum("SoTo", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoTo = 19
	}//End enum

	#endregion PscExBarCodesColumn Enum

} // end namespace

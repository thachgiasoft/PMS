
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file GiangVienChoDuyetHoSo.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'GiangVienChoDuyetHoSo' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class GiangVienChoDuyetHoSoBase : EntityBase, IGiangVienChoDuyetHoSo, IEntityId<GiangVienChoDuyetHoSoKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private GiangVienChoDuyetHoSoEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private GiangVienChoDuyetHoSoEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private GiangVienChoDuyetHoSoEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<GiangVienChoDuyetHoSo> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GiangVienChoDuyetHoSoEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GiangVienChoDuyetHoSoEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="GiangVienChoDuyetHoSoBase"/> instance.
		///</summary>
		public GiangVienChoDuyetHoSoBase()
		{
			this.entityData = new GiangVienChoDuyetHoSoEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="GiangVienChoDuyetHoSoBase"/> instance.
		///</summary>
		///<param name="_maDanToc"></param>
		///<param name="_maTonGiao"></param>
		///<param name="_maDonVi"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maNguoiLap"></param>
		///<param name="_matKhau"></param>
		///<param name="_maTinhTrang"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_tenDem"></param>
		///<param name="_ten"></param>
		///<param name="_ngaySinh"></param>
		///<param name="_gioiTinh"></param>
		///<param name="_noiSinh"></param>
		///<param name="_cmnd"></param>
		///<param name="_ngayCap"></param>
		///<param name="_noiCap"></param>
		///<param name="_doanDang"></param>
		///<param name="_ngayVaoDoanDang"></param>
		///<param name="_ngayKyHopDong"></param>
		///<param name="_ngayKetThucHopDong"></param>
		///<param name="_hinhAnh"></param>
		///<param name="_diaChi"></param>
		///<param name="_thuongTru"></param>
		///<param name="_noiLamViec"></param>
		///<param name="_email"></param>
		///<param name="_dienThoai"></param>
		///<param name="_soDiDong"></param>
		///<param name="_soTaiKhoan"></param>
		///<param name="_tenNganHang"></param>
		///<param name="_maSoThue"></param>
		///<param name="_chiNhanh"></param>
		///<param name="_soSoBaoHiem"></param>
		///<param name="_thoiGianBatDau"></param>
		///<param name="_bacLuong"></param>
		///<param name="_ngayHuongLuong"></param>
		///<param name="_namLamViec"></param>
		///<param name="_chuyenNganh"></param>
		///<param name="_maHeSoThuLao"></param>
		///<param name="_ngach"></param>
		///<param name="_soHieuCongChuc"></param>
		///<param name="_hrmid"></param>
		///<param name="_noiCapBang"></param>
		///<param name="_khoaTaiKhoan"></param>
		///<param name="_maLoaiNhanVien"></param>
		///<param name="_maNgachCongChuc"></param>
		///<param name="_maTrinhDoChinhTri"></param>
		///<param name="_maTrinhDoSuPham"></param>
		///<param name="_maTrinhDoNgoaiNgu"></param>
		///<param name="_maTrinhDoTinHoc"></param>
		///<param name="_maTrinhDoQuanLyNhaNuoc"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_khoiKienThucGiangDay"></param>
		///<param name="_nganhDaoTao"></param>
		///<param name="_donViGiangDay"></param>
		///<param name="_daDuyet"></param>
		public GiangVienChoDuyetHoSoBase(System.String _maDanToc, System.String _maTonGiao, 
			System.String _maDonVi, System.Int32? _maHocHam, System.Int32? _maHocVi, 
			System.Int32? _maLoaiGiangVien, System.Int32? _maNguoiLap, System.String _matKhau, 
			System.Int32? _maTinhTrang, System.String _maQuanLy, System.String _ho, 
			System.String _tenDem, System.String _ten, System.String _ngaySinh, 
			System.Boolean? _gioiTinh, System.String _noiSinh, System.String _cmnd, 
			System.String _ngayCap, System.String _noiCap, System.Boolean? _doanDang, 
			System.String _ngayVaoDoanDang, System.DateTime? _ngayKyHopDong, System.DateTime? _ngayKetThucHopDong, 
			System.Byte[] _hinhAnh, System.String _diaChi, System.String _thuongTru, 
			System.String _noiLamViec, System.String _email, System.String _dienThoai, 
			System.String _soDiDong, System.String _soTaiKhoan, System.String _tenNganHang, 
			System.String _maSoThue, System.String _chiNhanh, System.String _soSoBaoHiem, 
			System.String _thoiGianBatDau, System.Decimal? _bacLuong, System.String _ngayHuongLuong, 
			System.String _namLamViec, System.String _chuyenNganh, System.String _maHeSoThuLao, 
			System.String _ngach, System.String _soHieuCongChuc, System.Guid? _hrmid, 
			System.String _noiCapBang, System.Boolean? _khoaTaiKhoan, System.Int32? _maLoaiNhanVien, 
			System.Int32? _maNgachCongChuc, System.Int32? _maTrinhDoChinhTri, System.Int32? _maTrinhDoSuPham, 
			System.Int32? _maTrinhDoNgoaiNgu, System.Int32? _maTrinhDoTinHoc, System.Int32? _maTrinhDoQuanLyNhaNuoc, 
			System.String _nguoiCapNhat, System.String _ngayCapNhat, System.String _khoiKienThucGiangDay, 
			System.String _nganhDaoTao, System.String _donViGiangDay, System.Boolean? _daDuyet)
		{
			this.entityData = new GiangVienChoDuyetHoSoEntityData();
			this.backupData = null;

			this.MaDanToc = _maDanToc;
			this.MaTonGiao = _maTonGiao;
			this.MaDonVi = _maDonVi;
			this.MaHocHam = _maHocHam;
			this.MaHocVi = _maHocVi;
			this.MaLoaiGiangVien = _maLoaiGiangVien;
			this.MaNguoiLap = _maNguoiLap;
			this.MatKhau = _matKhau;
			this.MaTinhTrang = _maTinhTrang;
			this.MaQuanLy = _maQuanLy;
			this.Ho = _ho;
			this.TenDem = _tenDem;
			this.Ten = _ten;
			this.NgaySinh = _ngaySinh;
			this.GioiTinh = _gioiTinh;
			this.NoiSinh = _noiSinh;
			this.Cmnd = _cmnd;
			this.NgayCap = _ngayCap;
			this.NoiCap = _noiCap;
			this.DoanDang = _doanDang;
			this.NgayVaoDoanDang = _ngayVaoDoanDang;
			this.NgayKyHopDong = _ngayKyHopDong;
			this.NgayKetThucHopDong = _ngayKetThucHopDong;
			this.HinhAnh = _hinhAnh;
			this.DiaChi = _diaChi;
			this.ThuongTru = _thuongTru;
			this.NoiLamViec = _noiLamViec;
			this.Email = _email;
			this.DienThoai = _dienThoai;
			this.SoDiDong = _soDiDong;
			this.SoTaiKhoan = _soTaiKhoan;
			this.TenNganHang = _tenNganHang;
			this.MaSoThue = _maSoThue;
			this.ChiNhanh = _chiNhanh;
			this.SoSoBaoHiem = _soSoBaoHiem;
			this.ThoiGianBatDau = _thoiGianBatDau;
			this.BacLuong = _bacLuong;
			this.NgayHuongLuong = _ngayHuongLuong;
			this.NamLamViec = _namLamViec;
			this.ChuyenNganh = _chuyenNganh;
			this.MaHeSoThuLao = _maHeSoThuLao;
			this.Ngach = _ngach;
			this.SoHieuCongChuc = _soHieuCongChuc;
			this.Hrmid = _hrmid;
			this.NoiCapBang = _noiCapBang;
			this.KhoaTaiKhoan = _khoaTaiKhoan;
			this.MaLoaiNhanVien = _maLoaiNhanVien;
			this.MaNgachCongChuc = _maNgachCongChuc;
			this.MaTrinhDoChinhTri = _maTrinhDoChinhTri;
			this.MaTrinhDoSuPham = _maTrinhDoSuPham;
			this.MaTrinhDoNgoaiNgu = _maTrinhDoNgoaiNgu;
			this.MaTrinhDoTinHoc = _maTrinhDoTinHoc;
			this.MaTrinhDoQuanLyNhaNuoc = _maTrinhDoQuanLyNhaNuoc;
			this.NguoiCapNhat = _nguoiCapNhat;
			this.NgayCapNhat = _ngayCapNhat;
			this.KhoiKienThucGiangDay = _khoiKienThucGiangDay;
			this.NganhDaoTao = _nganhDaoTao;
			this.DonViGiangDay = _donViGiangDay;
			this.DaDuyet = _daDuyet;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="GiangVienChoDuyetHoSo"/> instance.
		///</summary>
		///<param name="_maDanToc"></param>
		///<param name="_maTonGiao"></param>
		///<param name="_maDonVi"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maNguoiLap"></param>
		///<param name="_matKhau"></param>
		///<param name="_maTinhTrang"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_tenDem"></param>
		///<param name="_ten"></param>
		///<param name="_ngaySinh"></param>
		///<param name="_gioiTinh"></param>
		///<param name="_noiSinh"></param>
		///<param name="_cmnd"></param>
		///<param name="_ngayCap"></param>
		///<param name="_noiCap"></param>
		///<param name="_doanDang"></param>
		///<param name="_ngayVaoDoanDang"></param>
		///<param name="_ngayKyHopDong"></param>
		///<param name="_ngayKetThucHopDong"></param>
		///<param name="_hinhAnh"></param>
		///<param name="_diaChi"></param>
		///<param name="_thuongTru"></param>
		///<param name="_noiLamViec"></param>
		///<param name="_email"></param>
		///<param name="_dienThoai"></param>
		///<param name="_soDiDong"></param>
		///<param name="_soTaiKhoan"></param>
		///<param name="_tenNganHang"></param>
		///<param name="_maSoThue"></param>
		///<param name="_chiNhanh"></param>
		///<param name="_soSoBaoHiem"></param>
		///<param name="_thoiGianBatDau"></param>
		///<param name="_bacLuong"></param>
		///<param name="_ngayHuongLuong"></param>
		///<param name="_namLamViec"></param>
		///<param name="_chuyenNganh"></param>
		///<param name="_maHeSoThuLao"></param>
		///<param name="_ngach"></param>
		///<param name="_soHieuCongChuc"></param>
		///<param name="_hrmid"></param>
		///<param name="_noiCapBang"></param>
		///<param name="_khoaTaiKhoan"></param>
		///<param name="_maLoaiNhanVien"></param>
		///<param name="_maNgachCongChuc"></param>
		///<param name="_maTrinhDoChinhTri"></param>
		///<param name="_maTrinhDoSuPham"></param>
		///<param name="_maTrinhDoNgoaiNgu"></param>
		///<param name="_maTrinhDoTinHoc"></param>
		///<param name="_maTrinhDoQuanLyNhaNuoc"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_khoiKienThucGiangDay"></param>
		///<param name="_nganhDaoTao"></param>
		///<param name="_donViGiangDay"></param>
		///<param name="_daDuyet"></param>
		public static GiangVienChoDuyetHoSo CreateGiangVienChoDuyetHoSo(System.String _maDanToc, System.String _maTonGiao, 
			System.String _maDonVi, System.Int32? _maHocHam, System.Int32? _maHocVi, 
			System.Int32? _maLoaiGiangVien, System.Int32? _maNguoiLap, System.String _matKhau, 
			System.Int32? _maTinhTrang, System.String _maQuanLy, System.String _ho, 
			System.String _tenDem, System.String _ten, System.String _ngaySinh, 
			System.Boolean? _gioiTinh, System.String _noiSinh, System.String _cmnd, 
			System.String _ngayCap, System.String _noiCap, System.Boolean? _doanDang, 
			System.String _ngayVaoDoanDang, System.DateTime? _ngayKyHopDong, System.DateTime? _ngayKetThucHopDong, 
			System.Byte[] _hinhAnh, System.String _diaChi, System.String _thuongTru, 
			System.String _noiLamViec, System.String _email, System.String _dienThoai, 
			System.String _soDiDong, System.String _soTaiKhoan, System.String _tenNganHang, 
			System.String _maSoThue, System.String _chiNhanh, System.String _soSoBaoHiem, 
			System.String _thoiGianBatDau, System.Decimal? _bacLuong, System.String _ngayHuongLuong, 
			System.String _namLamViec, System.String _chuyenNganh, System.String _maHeSoThuLao, 
			System.String _ngach, System.String _soHieuCongChuc, System.Guid? _hrmid, 
			System.String _noiCapBang, System.Boolean? _khoaTaiKhoan, System.Int32? _maLoaiNhanVien, 
			System.Int32? _maNgachCongChuc, System.Int32? _maTrinhDoChinhTri, System.Int32? _maTrinhDoSuPham, 
			System.Int32? _maTrinhDoNgoaiNgu, System.Int32? _maTrinhDoTinHoc, System.Int32? _maTrinhDoQuanLyNhaNuoc, 
			System.String _nguoiCapNhat, System.String _ngayCapNhat, System.String _khoiKienThucGiangDay, 
			System.String _nganhDaoTao, System.String _donViGiangDay, System.Boolean? _daDuyet)
		{
			GiangVienChoDuyetHoSo newGiangVienChoDuyetHoSo = new GiangVienChoDuyetHoSo();
			newGiangVienChoDuyetHoSo.MaDanToc = _maDanToc;
			newGiangVienChoDuyetHoSo.MaTonGiao = _maTonGiao;
			newGiangVienChoDuyetHoSo.MaDonVi = _maDonVi;
			newGiangVienChoDuyetHoSo.MaHocHam = _maHocHam;
			newGiangVienChoDuyetHoSo.MaHocVi = _maHocVi;
			newGiangVienChoDuyetHoSo.MaLoaiGiangVien = _maLoaiGiangVien;
			newGiangVienChoDuyetHoSo.MaNguoiLap = _maNguoiLap;
			newGiangVienChoDuyetHoSo.MatKhau = _matKhau;
			newGiangVienChoDuyetHoSo.MaTinhTrang = _maTinhTrang;
			newGiangVienChoDuyetHoSo.MaQuanLy = _maQuanLy;
			newGiangVienChoDuyetHoSo.Ho = _ho;
			newGiangVienChoDuyetHoSo.TenDem = _tenDem;
			newGiangVienChoDuyetHoSo.Ten = _ten;
			newGiangVienChoDuyetHoSo.NgaySinh = _ngaySinh;
			newGiangVienChoDuyetHoSo.GioiTinh = _gioiTinh;
			newGiangVienChoDuyetHoSo.NoiSinh = _noiSinh;
			newGiangVienChoDuyetHoSo.Cmnd = _cmnd;
			newGiangVienChoDuyetHoSo.NgayCap = _ngayCap;
			newGiangVienChoDuyetHoSo.NoiCap = _noiCap;
			newGiangVienChoDuyetHoSo.DoanDang = _doanDang;
			newGiangVienChoDuyetHoSo.NgayVaoDoanDang = _ngayVaoDoanDang;
			newGiangVienChoDuyetHoSo.NgayKyHopDong = _ngayKyHopDong;
			newGiangVienChoDuyetHoSo.NgayKetThucHopDong = _ngayKetThucHopDong;
			newGiangVienChoDuyetHoSo.HinhAnh = _hinhAnh;
			newGiangVienChoDuyetHoSo.DiaChi = _diaChi;
			newGiangVienChoDuyetHoSo.ThuongTru = _thuongTru;
			newGiangVienChoDuyetHoSo.NoiLamViec = _noiLamViec;
			newGiangVienChoDuyetHoSo.Email = _email;
			newGiangVienChoDuyetHoSo.DienThoai = _dienThoai;
			newGiangVienChoDuyetHoSo.SoDiDong = _soDiDong;
			newGiangVienChoDuyetHoSo.SoTaiKhoan = _soTaiKhoan;
			newGiangVienChoDuyetHoSo.TenNganHang = _tenNganHang;
			newGiangVienChoDuyetHoSo.MaSoThue = _maSoThue;
			newGiangVienChoDuyetHoSo.ChiNhanh = _chiNhanh;
			newGiangVienChoDuyetHoSo.SoSoBaoHiem = _soSoBaoHiem;
			newGiangVienChoDuyetHoSo.ThoiGianBatDau = _thoiGianBatDau;
			newGiangVienChoDuyetHoSo.BacLuong = _bacLuong;
			newGiangVienChoDuyetHoSo.NgayHuongLuong = _ngayHuongLuong;
			newGiangVienChoDuyetHoSo.NamLamViec = _namLamViec;
			newGiangVienChoDuyetHoSo.ChuyenNganh = _chuyenNganh;
			newGiangVienChoDuyetHoSo.MaHeSoThuLao = _maHeSoThuLao;
			newGiangVienChoDuyetHoSo.Ngach = _ngach;
			newGiangVienChoDuyetHoSo.SoHieuCongChuc = _soHieuCongChuc;
			newGiangVienChoDuyetHoSo.Hrmid = _hrmid;
			newGiangVienChoDuyetHoSo.NoiCapBang = _noiCapBang;
			newGiangVienChoDuyetHoSo.KhoaTaiKhoan = _khoaTaiKhoan;
			newGiangVienChoDuyetHoSo.MaLoaiNhanVien = _maLoaiNhanVien;
			newGiangVienChoDuyetHoSo.MaNgachCongChuc = _maNgachCongChuc;
			newGiangVienChoDuyetHoSo.MaTrinhDoChinhTri = _maTrinhDoChinhTri;
			newGiangVienChoDuyetHoSo.MaTrinhDoSuPham = _maTrinhDoSuPham;
			newGiangVienChoDuyetHoSo.MaTrinhDoNgoaiNgu = _maTrinhDoNgoaiNgu;
			newGiangVienChoDuyetHoSo.MaTrinhDoTinHoc = _maTrinhDoTinHoc;
			newGiangVienChoDuyetHoSo.MaTrinhDoQuanLyNhaNuoc = _maTrinhDoQuanLyNhaNuoc;
			newGiangVienChoDuyetHoSo.NguoiCapNhat = _nguoiCapNhat;
			newGiangVienChoDuyetHoSo.NgayCapNhat = _ngayCapNhat;
			newGiangVienChoDuyetHoSo.KhoiKienThucGiangDay = _khoiKienThucGiangDay;
			newGiangVienChoDuyetHoSo.NganhDaoTao = _nganhDaoTao;
			newGiangVienChoDuyetHoSo.DonViGiangDay = _donViGiangDay;
			newGiangVienChoDuyetHoSo.DaDuyet = _daDuyet;
			return newGiangVienChoDuyetHoSo;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
				
                OnPropertyChanging("Id");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaDanToc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaDanToc
		{
			get
			{
				return this.entityData.MaDanToc; 
			}
			
			set
			{
				if (this.entityData.MaDanToc == value)
					return;
				
                OnPropertyChanging("MaDanToc");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaDanToc, this.entityData.MaDanToc);
				this.entityData.MaDanToc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaDanToc, this.entityData.MaDanToc);
				OnPropertyChanged("MaDanToc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTonGiao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaTonGiao
		{
			get
			{
				return this.entityData.MaTonGiao; 
			}
			
			set
			{
				if (this.entityData.MaTonGiao == value)
					return;
				
                OnPropertyChanging("MaTonGiao");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaTonGiao, this.entityData.MaTonGiao);
				this.entityData.MaTonGiao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaTonGiao, this.entityData.MaTonGiao);
				OnPropertyChanged("MaTonGiao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this.entityData.MaDonVi; 
			}
			
			set
			{
				if (this.entityData.MaDonVi == value)
					return;
				
                OnPropertyChanging("MaDonVi");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaDonVi, this.entityData.MaDonVi);
				this.entityData.MaDonVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaDonVi, this.entityData.MaDonVi);
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocHam property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocHam
		{
			get
			{
				return this.entityData.MaHocHam; 
			}
			
			set
			{
				if (this.entityData.MaHocHam == value)
					return;
				
                OnPropertyChanging("MaHocHam");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaHocHam, this.entityData.MaHocHam);
				this.entityData.MaHocHam = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaHocHam, this.entityData.MaHocHam);
				OnPropertyChanged("MaHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocVi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocVi
		{
			get
			{
				return this.entityData.MaHocVi; 
			}
			
			set
			{
				if (this.entityData.MaHocVi == value)
					return;
				
                OnPropertyChanging("MaHocVi");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaHocVi, this.entityData.MaHocVi);
				this.entityData.MaHocVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaHocVi, this.entityData.MaHocVi);
				OnPropertyChanged("MaHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this.entityData.MaLoaiGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaLoaiGiangVien == value)
					return;
				
                OnPropertyChanging("MaLoaiGiangVien");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				this.entityData.MaLoaiGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaNguoiLap property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaNguoiLap
		{
			get
			{
				return this.entityData.MaNguoiLap; 
			}
			
			set
			{
				if (this.entityData.MaNguoiLap == value)
					return;
				
                OnPropertyChanging("MaNguoiLap");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaNguoiLap, this.entityData.MaNguoiLap);
				this.entityData.MaNguoiLap = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaNguoiLap, this.entityData.MaNguoiLap);
				OnPropertyChanged("MaNguoiLap");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MatKhau property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MatKhau
		{
			get
			{
				return this.entityData.MatKhau; 
			}
			
			set
			{
				if (this.entityData.MatKhau == value)
					return;
				
                OnPropertyChanging("MatKhau");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MatKhau, this.entityData.MatKhau);
				this.entityData.MatKhau = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MatKhau, this.entityData.MatKhau);
				OnPropertyChanged("MatKhau");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTinhTrang property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTinhTrang
		{
			get
			{
				return this.entityData.MaTinhTrang; 
			}
			
			set
			{
				if (this.entityData.MaTinhTrang == value)
					return;
				
                OnPropertyChanging("MaTinhTrang");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaTinhTrang, this.entityData.MaTinhTrang);
				this.entityData.MaTinhTrang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaTinhTrang, this.entityData.MaTinhTrang);
				OnPropertyChanged("MaTinhTrang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaQuanLy
		{
			get
			{
				return this.entityData.MaQuanLy; 
			}
			
			set
			{
				if (this.entityData.MaQuanLy == value)
					return;
				
                OnPropertyChanging("MaQuanLy");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaQuanLy, this.entityData.MaQuanLy);
				this.entityData.MaQuanLy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaQuanLy, this.entityData.MaQuanLy);
				OnPropertyChanged("MaQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Ho
		{
			get
			{
				return this.entityData.Ho; 
			}
			
			set
			{
				if (this.entityData.Ho == value)
					return;
				
                OnPropertyChanging("Ho");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.Ho, this.entityData.Ho);
				this.entityData.Ho = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.Ho, this.entityData.Ho);
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenDem property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String TenDem
		{
			get
			{
				return this.entityData.TenDem; 
			}
			
			set
			{
				if (this.entityData.TenDem == value)
					return;
				
                OnPropertyChanging("TenDem");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.TenDem, this.entityData.TenDem);
				this.entityData.TenDem = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.TenDem, this.entityData.TenDem);
				OnPropertyChanged("TenDem");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Ten
		{
			get
			{
				return this.entityData.Ten; 
			}
			
			set
			{
				if (this.entityData.Ten == value)
					return;
				
                OnPropertyChanging("Ten");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.Ten, this.entityData.Ten);
				this.entityData.Ten = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.Ten, this.entityData.Ten);
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgaySinh property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NgaySinh
		{
			get
			{
				return this.entityData.NgaySinh; 
			}
			
			set
			{
				if (this.entityData.NgaySinh == value)
					return;
				
                OnPropertyChanging("NgaySinh");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NgaySinh, this.entityData.NgaySinh);
				this.entityData.NgaySinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NgaySinh, this.entityData.NgaySinh);
				OnPropertyChanged("NgaySinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GioiTinh property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? GioiTinh
		{
			get
			{
				return this.entityData.GioiTinh; 
			}
			
			set
			{
				if (this.entityData.GioiTinh == value)
					return;
				
                OnPropertyChanging("GioiTinh");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.GioiTinh, this.entityData.GioiTinh);
				this.entityData.GioiTinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.GioiTinh, this.entityData.GioiTinh);
				OnPropertyChanged("GioiTinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoiSinh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String NoiSinh
		{
			get
			{
				return this.entityData.NoiSinh; 
			}
			
			set
			{
				if (this.entityData.NoiSinh == value)
					return;
				
                OnPropertyChanging("NoiSinh");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NoiSinh, this.entityData.NoiSinh);
				this.entityData.NoiSinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NoiSinh, this.entityData.NoiSinh);
				OnPropertyChanged("NoiSinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Cmnd property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String Cmnd
		{
			get
			{
				return this.entityData.Cmnd; 
			}
			
			set
			{
				if (this.entityData.Cmnd == value)
					return;
				
                OnPropertyChanging("Cmnd");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.Cmnd, this.entityData.Cmnd);
				this.entityData.Cmnd = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.Cmnd, this.entityData.Cmnd);
				OnPropertyChanged("Cmnd");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayCap property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NgayCap
		{
			get
			{
				return this.entityData.NgayCap; 
			}
			
			set
			{
				if (this.entityData.NgayCap == value)
					return;
				
                OnPropertyChanging("NgayCap");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NgayCap, this.entityData.NgayCap);
				this.entityData.NgayCap = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NgayCap, this.entityData.NgayCap);
				OnPropertyChanged("NgayCap");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoiCap property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String NoiCap
		{
			get
			{
				return this.entityData.NoiCap; 
			}
			
			set
			{
				if (this.entityData.NoiCap == value)
					return;
				
                OnPropertyChanging("NoiCap");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NoiCap, this.entityData.NoiCap);
				this.entityData.NoiCap = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NoiCap, this.entityData.NoiCap);
				OnPropertyChanged("NoiCap");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DoanDang property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DoanDang
		{
			get
			{
				return this.entityData.DoanDang; 
			}
			
			set
			{
				if (this.entityData.DoanDang == value)
					return;
				
                OnPropertyChanging("DoanDang");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.DoanDang, this.entityData.DoanDang);
				this.entityData.DoanDang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.DoanDang, this.entityData.DoanDang);
				OnPropertyChanged("DoanDang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayVaoDoanDang property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NgayVaoDoanDang
		{
			get
			{
				return this.entityData.NgayVaoDoanDang; 
			}
			
			set
			{
				if (this.entityData.NgayVaoDoanDang == value)
					return;
				
                OnPropertyChanging("NgayVaoDoanDang");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NgayVaoDoanDang, this.entityData.NgayVaoDoanDang);
				this.entityData.NgayVaoDoanDang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NgayVaoDoanDang, this.entityData.NgayVaoDoanDang);
				OnPropertyChanged("NgayVaoDoanDang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayKyHopDong property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayKyHopDong
		{
			get
			{
				return this.entityData.NgayKyHopDong; 
			}
			
			set
			{
				if (this.entityData.NgayKyHopDong == value)
					return;
				
                OnPropertyChanging("NgayKyHopDong");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NgayKyHopDong, this.entityData.NgayKyHopDong);
				this.entityData.NgayKyHopDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NgayKyHopDong, this.entityData.NgayKyHopDong);
				OnPropertyChanged("NgayKyHopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayKetThucHopDong property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayKetThucHopDong
		{
			get
			{
				return this.entityData.NgayKetThucHopDong; 
			}
			
			set
			{
				if (this.entityData.NgayKetThucHopDong == value)
					return;
				
                OnPropertyChanging("NgayKetThucHopDong");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NgayKetThucHopDong, this.entityData.NgayKetThucHopDong);
				this.entityData.NgayKetThucHopDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NgayKetThucHopDong, this.entityData.NgayKetThucHopDong);
				OnPropertyChanged("NgayKetThucHopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HinhAnh property. 
		///		
		/// </summary>
		/// <value>This type is varbinary.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte[] HinhAnh
		{
			get
			{
				return this.entityData.HinhAnh; 
			}
			
			set
			{
				if (this.entityData.HinhAnh == value)
					return;
				
                OnPropertyChanging("HinhAnh");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.HinhAnh, this.entityData.HinhAnh);
				this.entityData.HinhAnh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.HinhAnh, this.entityData.HinhAnh);
				OnPropertyChanged("HinhAnh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DiaChi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String DiaChi
		{
			get
			{
				return this.entityData.DiaChi; 
			}
			
			set
			{
				if (this.entityData.DiaChi == value)
					return;
				
                OnPropertyChanging("DiaChi");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.DiaChi, this.entityData.DiaChi);
				this.entityData.DiaChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.DiaChi, this.entityData.DiaChi);
				OnPropertyChanged("DiaChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThuongTru property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String ThuongTru
		{
			get
			{
				return this.entityData.ThuongTru; 
			}
			
			set
			{
				if (this.entityData.ThuongTru == value)
					return;
				
                OnPropertyChanging("ThuongTru");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.ThuongTru, this.entityData.ThuongTru);
				this.entityData.ThuongTru = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.ThuongTru, this.entityData.ThuongTru);
				OnPropertyChanged("ThuongTru");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoiLamViec property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String NoiLamViec
		{
			get
			{
				return this.entityData.NoiLamViec; 
			}
			
			set
			{
				if (this.entityData.NoiLamViec == value)
					return;
				
                OnPropertyChanging("NoiLamViec");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NoiLamViec, this.entityData.NoiLamViec);
				this.entityData.NoiLamViec = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NoiLamViec, this.entityData.NoiLamViec);
				OnPropertyChanged("NoiLamViec");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Email
		{
			get
			{
				return this.entityData.Email; 
			}
			
			set
			{
				if (this.entityData.Email == value)
					return;
				
                OnPropertyChanging("Email");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.Email, this.entityData.Email);
				this.entityData.Email = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.Email, this.entityData.Email);
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DienThoai property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String DienThoai
		{
			get
			{
				return this.entityData.DienThoai; 
			}
			
			set
			{
				if (this.entityData.DienThoai == value)
					return;
				
                OnPropertyChanging("DienThoai");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.DienThoai, this.entityData.DienThoai);
				this.entityData.DienThoai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.DienThoai, this.entityData.DienThoai);
				OnPropertyChanged("DienThoai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoDiDong property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String SoDiDong
		{
			get
			{
				return this.entityData.SoDiDong; 
			}
			
			set
			{
				if (this.entityData.SoDiDong == value)
					return;
				
                OnPropertyChanging("SoDiDong");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.SoDiDong, this.entityData.SoDiDong);
				this.entityData.SoDiDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.SoDiDong, this.entityData.SoDiDong);
				OnPropertyChanged("SoDiDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTaiKhoan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String SoTaiKhoan
		{
			get
			{
				return this.entityData.SoTaiKhoan; 
			}
			
			set
			{
				if (this.entityData.SoTaiKhoan == value)
					return;
				
                OnPropertyChanging("SoTaiKhoan");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.SoTaiKhoan, this.entityData.SoTaiKhoan);
				this.entityData.SoTaiKhoan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.SoTaiKhoan, this.entityData.SoTaiKhoan);
				OnPropertyChanged("SoTaiKhoan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenNganHang property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String TenNganHang
		{
			get
			{
				return this.entityData.TenNganHang; 
			}
			
			set
			{
				if (this.entityData.TenNganHang == value)
					return;
				
                OnPropertyChanging("TenNganHang");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.TenNganHang, this.entityData.TenNganHang);
				this.entityData.TenNganHang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.TenNganHang, this.entityData.TenNganHang);
				OnPropertyChanged("TenNganHang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaSoThue property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaSoThue
		{
			get
			{
				return this.entityData.MaSoThue; 
			}
			
			set
			{
				if (this.entityData.MaSoThue == value)
					return;
				
                OnPropertyChanging("MaSoThue");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaSoThue, this.entityData.MaSoThue);
				this.entityData.MaSoThue = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaSoThue, this.entityData.MaSoThue);
				OnPropertyChanged("MaSoThue");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChiNhanh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChiNhanh
		{
			get
			{
				return this.entityData.ChiNhanh; 
			}
			
			set
			{
				if (this.entityData.ChiNhanh == value)
					return;
				
                OnPropertyChanging("ChiNhanh");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.ChiNhanh, this.entityData.ChiNhanh);
				this.entityData.ChiNhanh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.ChiNhanh, this.entityData.ChiNhanh);
				OnPropertyChanged("ChiNhanh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoSoBaoHiem property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String SoSoBaoHiem
		{
			get
			{
				return this.entityData.SoSoBaoHiem; 
			}
			
			set
			{
				if (this.entityData.SoSoBaoHiem == value)
					return;
				
                OnPropertyChanging("SoSoBaoHiem");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.SoSoBaoHiem, this.entityData.SoSoBaoHiem);
				this.entityData.SoSoBaoHiem = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.SoSoBaoHiem, this.entityData.SoSoBaoHiem);
				OnPropertyChanged("SoSoBaoHiem");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThoiGianBatDau property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ThoiGianBatDau
		{
			get
			{
				return this.entityData.ThoiGianBatDau; 
			}
			
			set
			{
				if (this.entityData.ThoiGianBatDau == value)
					return;
				
                OnPropertyChanging("ThoiGianBatDau");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.ThoiGianBatDau, this.entityData.ThoiGianBatDau);
				this.entityData.ThoiGianBatDau = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.ThoiGianBatDau, this.entityData.ThoiGianBatDau);
				OnPropertyChanged("ThoiGianBatDau");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BacLuong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? BacLuong
		{
			get
			{
				return this.entityData.BacLuong; 
			}
			
			set
			{
				if (this.entityData.BacLuong == value)
					return;
				
                OnPropertyChanging("BacLuong");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.BacLuong, this.entityData.BacLuong);
				this.entityData.BacLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.BacLuong, this.entityData.BacLuong);
				OnPropertyChanged("BacLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayHuongLuong property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NgayHuongLuong
		{
			get
			{
				return this.entityData.NgayHuongLuong; 
			}
			
			set
			{
				if (this.entityData.NgayHuongLuong == value)
					return;
				
                OnPropertyChanging("NgayHuongLuong");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NgayHuongLuong, this.entityData.NgayHuongLuong);
				this.entityData.NgayHuongLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NgayHuongLuong, this.entityData.NgayHuongLuong);
				OnPropertyChanged("NgayHuongLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NamLamViec property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NamLamViec
		{
			get
			{
				return this.entityData.NamLamViec; 
			}
			
			set
			{
				if (this.entityData.NamLamViec == value)
					return;
				
                OnPropertyChanging("NamLamViec");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NamLamViec, this.entityData.NamLamViec);
				this.entityData.NamLamViec = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NamLamViec, this.entityData.NamLamViec);
				OnPropertyChanged("NamLamViec");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChuyenNganh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String ChuyenNganh
		{
			get
			{
				return this.entityData.ChuyenNganh; 
			}
			
			set
			{
				if (this.entityData.ChuyenNganh == value)
					return;
				
                OnPropertyChanging("ChuyenNganh");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.ChuyenNganh, this.entityData.ChuyenNganh);
				this.entityData.ChuyenNganh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.ChuyenNganh, this.entityData.ChuyenNganh);
				OnPropertyChanged("ChuyenNganh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHeSoThuLao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaHeSoThuLao
		{
			get
			{
				return this.entityData.MaHeSoThuLao; 
			}
			
			set
			{
				if (this.entityData.MaHeSoThuLao == value)
					return;
				
                OnPropertyChanging("MaHeSoThuLao");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaHeSoThuLao, this.entityData.MaHeSoThuLao);
				this.entityData.MaHeSoThuLao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaHeSoThuLao, this.entityData.MaHeSoThuLao);
				OnPropertyChanged("MaHeSoThuLao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ngach property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String Ngach
		{
			get
			{
				return this.entityData.Ngach; 
			}
			
			set
			{
				if (this.entityData.Ngach == value)
					return;
				
                OnPropertyChanging("Ngach");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.Ngach, this.entityData.Ngach);
				this.entityData.Ngach = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.Ngach, this.entityData.Ngach);
				OnPropertyChanged("Ngach");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoHieuCongChuc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String SoHieuCongChuc
		{
			get
			{
				return this.entityData.SoHieuCongChuc; 
			}
			
			set
			{
				if (this.entityData.SoHieuCongChuc == value)
					return;
				
                OnPropertyChanging("SoHieuCongChuc");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.SoHieuCongChuc, this.entityData.SoHieuCongChuc);
				this.entityData.SoHieuCongChuc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.SoHieuCongChuc, this.entityData.SoHieuCongChuc);
				OnPropertyChanged("SoHieuCongChuc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Hrmid property. 
		///		
		/// </summary>
		/// <value>This type is uniqueidentifier.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Guid? Hrmid
		{
			get
			{
				return this.entityData.Hrmid; 
			}
			
			set
			{
				if (this.entityData.Hrmid == value)
					return;
				
                OnPropertyChanging("Hrmid");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.Hrmid, this.entityData.Hrmid);
				this.entityData.Hrmid = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.Hrmid, this.entityData.Hrmid);
				OnPropertyChanged("Hrmid");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoiCapBang property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String NoiCapBang
		{
			get
			{
				return this.entityData.NoiCapBang; 
			}
			
			set
			{
				if (this.entityData.NoiCapBang == value)
					return;
				
                OnPropertyChanging("NoiCapBang");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NoiCapBang, this.entityData.NoiCapBang);
				this.entityData.NoiCapBang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NoiCapBang, this.entityData.NoiCapBang);
				OnPropertyChanged("NoiCapBang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the KhoaTaiKhoan property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? KhoaTaiKhoan
		{
			get
			{
				return this.entityData.KhoaTaiKhoan; 
			}
			
			set
			{
				if (this.entityData.KhoaTaiKhoan == value)
					return;
				
                OnPropertyChanging("KhoaTaiKhoan");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.KhoaTaiKhoan, this.entityData.KhoaTaiKhoan);
				this.entityData.KhoaTaiKhoan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.KhoaTaiKhoan, this.entityData.KhoaTaiKhoan);
				OnPropertyChanged("KhoaTaiKhoan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiNhanVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaLoaiNhanVien
		{
			get
			{
				return this.entityData.MaLoaiNhanVien; 
			}
			
			set
			{
				if (this.entityData.MaLoaiNhanVien == value)
					return;
				
                OnPropertyChanging("MaLoaiNhanVien");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaLoaiNhanVien, this.entityData.MaLoaiNhanVien);
				this.entityData.MaLoaiNhanVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaLoaiNhanVien, this.entityData.MaLoaiNhanVien);
				OnPropertyChanged("MaLoaiNhanVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaNgachCongChuc property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaNgachCongChuc
		{
			get
			{
				return this.entityData.MaNgachCongChuc; 
			}
			
			set
			{
				if (this.entityData.MaNgachCongChuc == value)
					return;
				
                OnPropertyChanging("MaNgachCongChuc");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaNgachCongChuc, this.entityData.MaNgachCongChuc);
				this.entityData.MaNgachCongChuc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaNgachCongChuc, this.entityData.MaNgachCongChuc);
				OnPropertyChanged("MaNgachCongChuc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoChinhTri property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoChinhTri
		{
			get
			{
				return this.entityData.MaTrinhDoChinhTri; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoChinhTri == value)
					return;
				
                OnPropertyChanging("MaTrinhDoChinhTri");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaTrinhDoChinhTri, this.entityData.MaTrinhDoChinhTri);
				this.entityData.MaTrinhDoChinhTri = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaTrinhDoChinhTri, this.entityData.MaTrinhDoChinhTri);
				OnPropertyChanged("MaTrinhDoChinhTri");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoSuPham property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoSuPham
		{
			get
			{
				return this.entityData.MaTrinhDoSuPham; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoSuPham == value)
					return;
				
                OnPropertyChanging("MaTrinhDoSuPham");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaTrinhDoSuPham, this.entityData.MaTrinhDoSuPham);
				this.entityData.MaTrinhDoSuPham = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaTrinhDoSuPham, this.entityData.MaTrinhDoSuPham);
				OnPropertyChanged("MaTrinhDoSuPham");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoNgoaiNgu property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoNgoaiNgu
		{
			get
			{
				return this.entityData.MaTrinhDoNgoaiNgu; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoNgoaiNgu == value)
					return;
				
                OnPropertyChanging("MaTrinhDoNgoaiNgu");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaTrinhDoNgoaiNgu, this.entityData.MaTrinhDoNgoaiNgu);
				this.entityData.MaTrinhDoNgoaiNgu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaTrinhDoNgoaiNgu, this.entityData.MaTrinhDoNgoaiNgu);
				OnPropertyChanged("MaTrinhDoNgoaiNgu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoTinHoc property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoTinHoc
		{
			get
			{
				return this.entityData.MaTrinhDoTinHoc; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoTinHoc == value)
					return;
				
                OnPropertyChanging("MaTrinhDoTinHoc");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaTrinhDoTinHoc, this.entityData.MaTrinhDoTinHoc);
				this.entityData.MaTrinhDoTinHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaTrinhDoTinHoc, this.entityData.MaTrinhDoTinHoc);
				OnPropertyChanged("MaTrinhDoTinHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoQuanLyNhaNuoc property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoQuanLyNhaNuoc
		{
			get
			{
				return this.entityData.MaTrinhDoQuanLyNhaNuoc; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoQuanLyNhaNuoc == value)
					return;
				
                OnPropertyChanging("MaTrinhDoQuanLyNhaNuoc");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.MaTrinhDoQuanLyNhaNuoc, this.entityData.MaTrinhDoQuanLyNhaNuoc);
				this.entityData.MaTrinhDoQuanLyNhaNuoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.MaTrinhDoQuanLyNhaNuoc, this.entityData.MaTrinhDoQuanLyNhaNuoc);
				OnPropertyChanged("MaTrinhDoQuanLyNhaNuoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NguoiCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String NguoiCapNhat
		{
			get
			{
				return this.entityData.NguoiCapNhat; 
			}
			
			set
			{
				if (this.entityData.NguoiCapNhat == value)
					return;
				
                OnPropertyChanging("NguoiCapNhat");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				this.entityData.NguoiCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				OnPropertyChanged("NguoiCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String NgayCapNhat
		{
			get
			{
				return this.entityData.NgayCapNhat; 
			}
			
			set
			{
				if (this.entityData.NgayCapNhat == value)
					return;
				
                OnPropertyChanging("NgayCapNhat");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				this.entityData.NgayCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the KhoiKienThucGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String KhoiKienThucGiangDay
		{
			get
			{
				return this.entityData.KhoiKienThucGiangDay; 
			}
			
			set
			{
				if (this.entityData.KhoiKienThucGiangDay == value)
					return;
				
                OnPropertyChanging("KhoiKienThucGiangDay");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.KhoiKienThucGiangDay, this.entityData.KhoiKienThucGiangDay);
				this.entityData.KhoiKienThucGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.KhoiKienThucGiangDay, this.entityData.KhoiKienThucGiangDay);
				OnPropertyChanged("KhoiKienThucGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NganhDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String NganhDaoTao
		{
			get
			{
				return this.entityData.NganhDaoTao; 
			}
			
			set
			{
				if (this.entityData.NganhDaoTao == value)
					return;
				
                OnPropertyChanging("NganhDaoTao");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.NganhDaoTao, this.entityData.NganhDaoTao);
				this.entityData.NganhDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.NganhDaoTao, this.entityData.NganhDaoTao);
				OnPropertyChanged("NganhDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DonViGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String DonViGiangDay
		{
			get
			{
				return this.entityData.DonViGiangDay; 
			}
			
			set
			{
				if (this.entityData.DonViGiangDay == value)
					return;
				
                OnPropertyChanging("DonViGiangDay");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.DonViGiangDay, this.entityData.DonViGiangDay);
				this.entityData.DonViGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.DonViGiangDay, this.entityData.DonViGiangDay);
				OnPropertyChanged("DonViGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DaDuyet property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DaDuyet
		{
			get
			{
				return this.entityData.DaDuyet; 
			}
			
			set
			{
				if (this.entityData.DaDuyet == value)
					return;
				
                OnPropertyChanging("DaDuyet");                    
				OnColumnChanging(GiangVienChoDuyetHoSoColumn.DaDuyet, this.entityData.DaDuyet);
				this.entityData.DaDuyet = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienChoDuyetHoSoColumn.DaDuyet, this.entityData.DaDuyet);
				OnPropertyChanged("DaDuyet");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaDanToc", "Ma Dan Toc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaTonGiao", "Ma Ton Giao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaDonVi", "Ma Don Vi", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MatKhau", "Mat Khau", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaQuanLy", "Ma Quan Ly", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Ho", "Ho", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenDem", "Ten Dem", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Ten", "Ten", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgaySinh", "Ngay Sinh", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoiSinh", "Noi Sinh", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Cmnd", "Cmnd", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayCap", "Ngay Cap", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoiCap", "Noi Cap", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayVaoDoanDang", "Ngay Vao Doan Dang", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DiaChi", "Dia Chi", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ThuongTru", "Thuong Tru", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoiLamViec", "Noi Lam Viec", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Email", "Email", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DienThoai", "Dien Thoai", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SoDiDong", "So Di Dong", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SoTaiKhoan", "So Tai Khoan", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenNganHang", "Ten Ngan Hang", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaSoThue", "Ma So Thue", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChiNhanh", "Chi Nhanh", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SoSoBaoHiem", "So So Bao Hiem", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ThoiGianBatDau", "Thoi Gian Bat Dau", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayHuongLuong", "Ngay Huong Luong", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NamLamViec", "Nam Lam Viec", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChuyenNganh", "Chuyen Nganh", 1000));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaHeSoThuLao", "Ma He So Thu Lao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Ngach", "Ngach", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SoHieuCongChuc", "So Hieu Cong Chuc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoiCapBang", "Noi Cap Bang", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NguoiCapNhat", "Nguoi Cap Nhat", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayCapNhat", "Ngay Cap Nhat", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("KhoiKienThucGiangDay", "Khoi Kien Thuc Giang Day", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NganhDaoTao", "Nganh Dao Tao", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DonViGiangDay", "Don Vi Giang Day", 20));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "GiangVienChoDuyetHoSo"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Id", "MaDanToc", "MaTonGiao", "MaDonVi", "MaHocHam", "MaHocVi", "MaLoaiGiangVien", "MaNguoiLap", "MatKhau", "MaTinhTrang", "MaQuanLy", "Ho", "TenDem", "Ten", "NgaySinh", "GioiTinh", "NoiSinh", "Cmnd", "NgayCap", "NoiCap", "DoanDang", "NgayVaoDoanDang", "NgayKyHopDong", "NgayKetThucHopDong", "HinhAnh", "DiaChi", "ThuongTru", "NoiLamViec", "Email", "DienThoai", "SoDiDong", "SoTaiKhoan", "TenNganHang", "MaSoThue", "ChiNhanh", "SoSoBaoHiem", "ThoiGianBatDau", "BacLuong", "NgayHuongLuong", "NamLamViec", "ChuyenNganh", "MaHeSoThuLao", "Ngach", "SoHieuCongChuc", "HRMID", "NoiCapBang", "KhoaTaiKhoan", "MaLoaiNhanVien", "MaNgachCongChuc", "MaTrinhDoChinhTri", "MaTrinhDoSuPham", "MaTrinhDoNgoaiNgu", "MaTrinhDoTinHoc", "MaTrinhDoQuanLyNhaNuoc", "NguoiCapNhat", "NgayCapNhat", "KhoiKienThucGiangDay", "NganhDaoTao", "DonViGiangDay", "DaDuyet"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as GiangVienChoDuyetHoSoEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (GiangVienChoDuyetHoSo) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<GiangVienChoDuyetHoSo>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as GiangVienChoDuyetHoSo);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed GiangVienChoDuyetHoSo Entity 
		///</summary>
		protected virtual GiangVienChoDuyetHoSo Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			GiangVienChoDuyetHoSo copy = new GiangVienChoDuyetHoSo();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.Id = this.Id;
				copy.MaDanToc = this.MaDanToc;
				copy.MaTonGiao = this.MaTonGiao;
				copy.MaDonVi = this.MaDonVi;
				copy.MaHocHam = this.MaHocHam;
				copy.MaHocVi = this.MaHocVi;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.MaNguoiLap = this.MaNguoiLap;
				copy.MatKhau = this.MatKhau;
				copy.MaTinhTrang = this.MaTinhTrang;
				copy.MaQuanLy = this.MaQuanLy;
				copy.Ho = this.Ho;
				copy.TenDem = this.TenDem;
				copy.Ten = this.Ten;
				copy.NgaySinh = this.NgaySinh;
				copy.GioiTinh = this.GioiTinh;
				copy.NoiSinh = this.NoiSinh;
				copy.Cmnd = this.Cmnd;
				copy.NgayCap = this.NgayCap;
				copy.NoiCap = this.NoiCap;
				copy.DoanDang = this.DoanDang;
				copy.NgayVaoDoanDang = this.NgayVaoDoanDang;
				copy.NgayKyHopDong = this.NgayKyHopDong;
				copy.NgayKetThucHopDong = this.NgayKetThucHopDong;
				copy.HinhAnh = this.HinhAnh;
				copy.DiaChi = this.DiaChi;
				copy.ThuongTru = this.ThuongTru;
				copy.NoiLamViec = this.NoiLamViec;
				copy.Email = this.Email;
				copy.DienThoai = this.DienThoai;
				copy.SoDiDong = this.SoDiDong;
				copy.SoTaiKhoan = this.SoTaiKhoan;
				copy.TenNganHang = this.TenNganHang;
				copy.MaSoThue = this.MaSoThue;
				copy.ChiNhanh = this.ChiNhanh;
				copy.SoSoBaoHiem = this.SoSoBaoHiem;
				copy.ThoiGianBatDau = this.ThoiGianBatDau;
				copy.BacLuong = this.BacLuong;
				copy.NgayHuongLuong = this.NgayHuongLuong;
				copy.NamLamViec = this.NamLamViec;
				copy.ChuyenNganh = this.ChuyenNganh;
				copy.MaHeSoThuLao = this.MaHeSoThuLao;
				copy.Ngach = this.Ngach;
				copy.SoHieuCongChuc = this.SoHieuCongChuc;
				copy.Hrmid = this.Hrmid;
				copy.NoiCapBang = this.NoiCapBang;
				copy.KhoaTaiKhoan = this.KhoaTaiKhoan;
				copy.MaLoaiNhanVien = this.MaLoaiNhanVien;
				copy.MaNgachCongChuc = this.MaNgachCongChuc;
				copy.MaTrinhDoChinhTri = this.MaTrinhDoChinhTri;
				copy.MaTrinhDoSuPham = this.MaTrinhDoSuPham;
				copy.MaTrinhDoNgoaiNgu = this.MaTrinhDoNgoaiNgu;
				copy.MaTrinhDoTinHoc = this.MaTrinhDoTinHoc;
				copy.MaTrinhDoQuanLyNhaNuoc = this.MaTrinhDoQuanLyNhaNuoc;
				copy.NguoiCapNhat = this.NguoiCapNhat;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.KhoiKienThucGiangDay = this.KhoiKienThucGiangDay;
				copy.NganhDaoTao = this.NganhDaoTao;
				copy.DonViGiangDay = this.DonViGiangDay;
				copy.DaDuyet = this.DaDuyet;
			
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed GiangVienChoDuyetHoSo Entity 
		///</summary>
		public virtual GiangVienChoDuyetHoSo Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed GiangVienChoDuyetHoSo Entity which is a deep copy of the current entity.
		///</summary>
		public virtual GiangVienChoDuyetHoSo DeepCopy()
		{
			return EntityHelper.Clone<GiangVienChoDuyetHoSo>(this as GiangVienChoDuyetHoSo);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as GiangVienChoDuyetHoSoEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new GiangVienChoDuyetHoSoEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as GiangVienChoDuyetHoSoEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(GiangVienChoDuyetHoSoColumn column)
		{
			switch(column)
			{
					case GiangVienChoDuyetHoSoColumn.Id:
					return entityData.Id != _originalData.Id;
					case GiangVienChoDuyetHoSoColumn.MaDanToc:
					return entityData.MaDanToc != _originalData.MaDanToc;
					case GiangVienChoDuyetHoSoColumn.MaTonGiao:
					return entityData.MaTonGiao != _originalData.MaTonGiao;
					case GiangVienChoDuyetHoSoColumn.MaDonVi:
					return entityData.MaDonVi != _originalData.MaDonVi;
					case GiangVienChoDuyetHoSoColumn.MaHocHam:
					return entityData.MaHocHam != _originalData.MaHocHam;
					case GiangVienChoDuyetHoSoColumn.MaHocVi:
					return entityData.MaHocVi != _originalData.MaHocVi;
					case GiangVienChoDuyetHoSoColumn.MaLoaiGiangVien:
					return entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
					case GiangVienChoDuyetHoSoColumn.MaNguoiLap:
					return entityData.MaNguoiLap != _originalData.MaNguoiLap;
					case GiangVienChoDuyetHoSoColumn.MatKhau:
					return entityData.MatKhau != _originalData.MatKhau;
					case GiangVienChoDuyetHoSoColumn.MaTinhTrang:
					return entityData.MaTinhTrang != _originalData.MaTinhTrang;
					case GiangVienChoDuyetHoSoColumn.MaQuanLy:
					return entityData.MaQuanLy != _originalData.MaQuanLy;
					case GiangVienChoDuyetHoSoColumn.Ho:
					return entityData.Ho != _originalData.Ho;
					case GiangVienChoDuyetHoSoColumn.TenDem:
					return entityData.TenDem != _originalData.TenDem;
					case GiangVienChoDuyetHoSoColumn.Ten:
					return entityData.Ten != _originalData.Ten;
					case GiangVienChoDuyetHoSoColumn.NgaySinh:
					return entityData.NgaySinh != _originalData.NgaySinh;
					case GiangVienChoDuyetHoSoColumn.GioiTinh:
					return entityData.GioiTinh != _originalData.GioiTinh;
					case GiangVienChoDuyetHoSoColumn.NoiSinh:
					return entityData.NoiSinh != _originalData.NoiSinh;
					case GiangVienChoDuyetHoSoColumn.Cmnd:
					return entityData.Cmnd != _originalData.Cmnd;
					case GiangVienChoDuyetHoSoColumn.NgayCap:
					return entityData.NgayCap != _originalData.NgayCap;
					case GiangVienChoDuyetHoSoColumn.NoiCap:
					return entityData.NoiCap != _originalData.NoiCap;
					case GiangVienChoDuyetHoSoColumn.DoanDang:
					return entityData.DoanDang != _originalData.DoanDang;
					case GiangVienChoDuyetHoSoColumn.NgayVaoDoanDang:
					return entityData.NgayVaoDoanDang != _originalData.NgayVaoDoanDang;
					case GiangVienChoDuyetHoSoColumn.NgayKyHopDong:
					return entityData.NgayKyHopDong != _originalData.NgayKyHopDong;
					case GiangVienChoDuyetHoSoColumn.NgayKetThucHopDong:
					return entityData.NgayKetThucHopDong != _originalData.NgayKetThucHopDong;
					case GiangVienChoDuyetHoSoColumn.HinhAnh:
					return entityData.HinhAnh != _originalData.HinhAnh;
					case GiangVienChoDuyetHoSoColumn.DiaChi:
					return entityData.DiaChi != _originalData.DiaChi;
					case GiangVienChoDuyetHoSoColumn.ThuongTru:
					return entityData.ThuongTru != _originalData.ThuongTru;
					case GiangVienChoDuyetHoSoColumn.NoiLamViec:
					return entityData.NoiLamViec != _originalData.NoiLamViec;
					case GiangVienChoDuyetHoSoColumn.Email:
					return entityData.Email != _originalData.Email;
					case GiangVienChoDuyetHoSoColumn.DienThoai:
					return entityData.DienThoai != _originalData.DienThoai;
					case GiangVienChoDuyetHoSoColumn.SoDiDong:
					return entityData.SoDiDong != _originalData.SoDiDong;
					case GiangVienChoDuyetHoSoColumn.SoTaiKhoan:
					return entityData.SoTaiKhoan != _originalData.SoTaiKhoan;
					case GiangVienChoDuyetHoSoColumn.TenNganHang:
					return entityData.TenNganHang != _originalData.TenNganHang;
					case GiangVienChoDuyetHoSoColumn.MaSoThue:
					return entityData.MaSoThue != _originalData.MaSoThue;
					case GiangVienChoDuyetHoSoColumn.ChiNhanh:
					return entityData.ChiNhanh != _originalData.ChiNhanh;
					case GiangVienChoDuyetHoSoColumn.SoSoBaoHiem:
					return entityData.SoSoBaoHiem != _originalData.SoSoBaoHiem;
					case GiangVienChoDuyetHoSoColumn.ThoiGianBatDau:
					return entityData.ThoiGianBatDau != _originalData.ThoiGianBatDau;
					case GiangVienChoDuyetHoSoColumn.BacLuong:
					return entityData.BacLuong != _originalData.BacLuong;
					case GiangVienChoDuyetHoSoColumn.NgayHuongLuong:
					return entityData.NgayHuongLuong != _originalData.NgayHuongLuong;
					case GiangVienChoDuyetHoSoColumn.NamLamViec:
					return entityData.NamLamViec != _originalData.NamLamViec;
					case GiangVienChoDuyetHoSoColumn.ChuyenNganh:
					return entityData.ChuyenNganh != _originalData.ChuyenNganh;
					case GiangVienChoDuyetHoSoColumn.MaHeSoThuLao:
					return entityData.MaHeSoThuLao != _originalData.MaHeSoThuLao;
					case GiangVienChoDuyetHoSoColumn.Ngach:
					return entityData.Ngach != _originalData.Ngach;
					case GiangVienChoDuyetHoSoColumn.SoHieuCongChuc:
					return entityData.SoHieuCongChuc != _originalData.SoHieuCongChuc;
					case GiangVienChoDuyetHoSoColumn.Hrmid:
					return entityData.Hrmid != _originalData.Hrmid;
					case GiangVienChoDuyetHoSoColumn.NoiCapBang:
					return entityData.NoiCapBang != _originalData.NoiCapBang;
					case GiangVienChoDuyetHoSoColumn.KhoaTaiKhoan:
					return entityData.KhoaTaiKhoan != _originalData.KhoaTaiKhoan;
					case GiangVienChoDuyetHoSoColumn.MaLoaiNhanVien:
					return entityData.MaLoaiNhanVien != _originalData.MaLoaiNhanVien;
					case GiangVienChoDuyetHoSoColumn.MaNgachCongChuc:
					return entityData.MaNgachCongChuc != _originalData.MaNgachCongChuc;
					case GiangVienChoDuyetHoSoColumn.MaTrinhDoChinhTri:
					return entityData.MaTrinhDoChinhTri != _originalData.MaTrinhDoChinhTri;
					case GiangVienChoDuyetHoSoColumn.MaTrinhDoSuPham:
					return entityData.MaTrinhDoSuPham != _originalData.MaTrinhDoSuPham;
					case GiangVienChoDuyetHoSoColumn.MaTrinhDoNgoaiNgu:
					return entityData.MaTrinhDoNgoaiNgu != _originalData.MaTrinhDoNgoaiNgu;
					case GiangVienChoDuyetHoSoColumn.MaTrinhDoTinHoc:
					return entityData.MaTrinhDoTinHoc != _originalData.MaTrinhDoTinHoc;
					case GiangVienChoDuyetHoSoColumn.MaTrinhDoQuanLyNhaNuoc:
					return entityData.MaTrinhDoQuanLyNhaNuoc != _originalData.MaTrinhDoQuanLyNhaNuoc;
					case GiangVienChoDuyetHoSoColumn.NguoiCapNhat:
					return entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
					case GiangVienChoDuyetHoSoColumn.NgayCapNhat:
					return entityData.NgayCapNhat != _originalData.NgayCapNhat;
					case GiangVienChoDuyetHoSoColumn.KhoiKienThucGiangDay:
					return entityData.KhoiKienThucGiangDay != _originalData.KhoiKienThucGiangDay;
					case GiangVienChoDuyetHoSoColumn.NganhDaoTao:
					return entityData.NganhDaoTao != _originalData.NganhDaoTao;
					case GiangVienChoDuyetHoSoColumn.DonViGiangDay:
					return entityData.DonViGiangDay != _originalData.DonViGiangDay;
					case GiangVienChoDuyetHoSoColumn.DaDuyet:
					return entityData.DaDuyet != _originalData.DaDuyet;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< GiangVienChoDuyetHoSoColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.MaDanToc != _originalData.MaDanToc;
			result = result || entityData.MaTonGiao != _originalData.MaTonGiao;
			result = result || entityData.MaDonVi != _originalData.MaDonVi;
			result = result || entityData.MaHocHam != _originalData.MaHocHam;
			result = result || entityData.MaHocVi != _originalData.MaHocVi;
			result = result || entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
			result = result || entityData.MaNguoiLap != _originalData.MaNguoiLap;
			result = result || entityData.MatKhau != _originalData.MatKhau;
			result = result || entityData.MaTinhTrang != _originalData.MaTinhTrang;
			result = result || entityData.MaQuanLy != _originalData.MaQuanLy;
			result = result || entityData.Ho != _originalData.Ho;
			result = result || entityData.TenDem != _originalData.TenDem;
			result = result || entityData.Ten != _originalData.Ten;
			result = result || entityData.NgaySinh != _originalData.NgaySinh;
			result = result || entityData.GioiTinh != _originalData.GioiTinh;
			result = result || entityData.NoiSinh != _originalData.NoiSinh;
			result = result || entityData.Cmnd != _originalData.Cmnd;
			result = result || entityData.NgayCap != _originalData.NgayCap;
			result = result || entityData.NoiCap != _originalData.NoiCap;
			result = result || entityData.DoanDang != _originalData.DoanDang;
			result = result || entityData.NgayVaoDoanDang != _originalData.NgayVaoDoanDang;
			result = result || entityData.NgayKyHopDong != _originalData.NgayKyHopDong;
			result = result || entityData.NgayKetThucHopDong != _originalData.NgayKetThucHopDong;
			result = result || entityData.HinhAnh != _originalData.HinhAnh;
			result = result || entityData.DiaChi != _originalData.DiaChi;
			result = result || entityData.ThuongTru != _originalData.ThuongTru;
			result = result || entityData.NoiLamViec != _originalData.NoiLamViec;
			result = result || entityData.Email != _originalData.Email;
			result = result || entityData.DienThoai != _originalData.DienThoai;
			result = result || entityData.SoDiDong != _originalData.SoDiDong;
			result = result || entityData.SoTaiKhoan != _originalData.SoTaiKhoan;
			result = result || entityData.TenNganHang != _originalData.TenNganHang;
			result = result || entityData.MaSoThue != _originalData.MaSoThue;
			result = result || entityData.ChiNhanh != _originalData.ChiNhanh;
			result = result || entityData.SoSoBaoHiem != _originalData.SoSoBaoHiem;
			result = result || entityData.ThoiGianBatDau != _originalData.ThoiGianBatDau;
			result = result || entityData.BacLuong != _originalData.BacLuong;
			result = result || entityData.NgayHuongLuong != _originalData.NgayHuongLuong;
			result = result || entityData.NamLamViec != _originalData.NamLamViec;
			result = result || entityData.ChuyenNganh != _originalData.ChuyenNganh;
			result = result || entityData.MaHeSoThuLao != _originalData.MaHeSoThuLao;
			result = result || entityData.Ngach != _originalData.Ngach;
			result = result || entityData.SoHieuCongChuc != _originalData.SoHieuCongChuc;
			result = result || entityData.Hrmid != _originalData.Hrmid;
			result = result || entityData.NoiCapBang != _originalData.NoiCapBang;
			result = result || entityData.KhoaTaiKhoan != _originalData.KhoaTaiKhoan;
			result = result || entityData.MaLoaiNhanVien != _originalData.MaLoaiNhanVien;
			result = result || entityData.MaNgachCongChuc != _originalData.MaNgachCongChuc;
			result = result || entityData.MaTrinhDoChinhTri != _originalData.MaTrinhDoChinhTri;
			result = result || entityData.MaTrinhDoSuPham != _originalData.MaTrinhDoSuPham;
			result = result || entityData.MaTrinhDoNgoaiNgu != _originalData.MaTrinhDoNgoaiNgu;
			result = result || entityData.MaTrinhDoTinHoc != _originalData.MaTrinhDoTinHoc;
			result = result || entityData.MaTrinhDoQuanLyNhaNuoc != _originalData.MaTrinhDoQuanLyNhaNuoc;
			result = result || entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
			result = result || entityData.NgayCapNhat != _originalData.NgayCapNhat;
			result = result || entityData.KhoiKienThucGiangDay != _originalData.KhoiKienThucGiangDay;
			result = result || entityData.NganhDaoTao != _originalData.NganhDaoTao;
			result = result || entityData.DonViGiangDay != _originalData.DonViGiangDay;
			result = result || entityData.DaDuyet != _originalData.DaDuyet;
			return result;
		}	
		
		///<summary>
		///  Returns a GiangVienChoDuyetHoSo Entity with the original data.
		///</summary>
		public GiangVienChoDuyetHoSo GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateGiangVienChoDuyetHoSo(
				_originalData.MaDanToc,
				_originalData.MaTonGiao,
				_originalData.MaDonVi,
				_originalData.MaHocHam,
				_originalData.MaHocVi,
				_originalData.MaLoaiGiangVien,
				_originalData.MaNguoiLap,
				_originalData.MatKhau,
				_originalData.MaTinhTrang,
				_originalData.MaQuanLy,
				_originalData.Ho,
				_originalData.TenDem,
				_originalData.Ten,
				_originalData.NgaySinh,
				_originalData.GioiTinh,
				_originalData.NoiSinh,
				_originalData.Cmnd,
				_originalData.NgayCap,
				_originalData.NoiCap,
				_originalData.DoanDang,
				_originalData.NgayVaoDoanDang,
				_originalData.NgayKyHopDong,
				_originalData.NgayKetThucHopDong,
				_originalData.HinhAnh,
				_originalData.DiaChi,
				_originalData.ThuongTru,
				_originalData.NoiLamViec,
				_originalData.Email,
				_originalData.DienThoai,
				_originalData.SoDiDong,
				_originalData.SoTaiKhoan,
				_originalData.TenNganHang,
				_originalData.MaSoThue,
				_originalData.ChiNhanh,
				_originalData.SoSoBaoHiem,
				_originalData.ThoiGianBatDau,
				_originalData.BacLuong,
				_originalData.NgayHuongLuong,
				_originalData.NamLamViec,
				_originalData.ChuyenNganh,
				_originalData.MaHeSoThuLao,
				_originalData.Ngach,
				_originalData.SoHieuCongChuc,
				_originalData.Hrmid,
				_originalData.NoiCapBang,
				_originalData.KhoaTaiKhoan,
				_originalData.MaLoaiNhanVien,
				_originalData.MaNgachCongChuc,
				_originalData.MaTrinhDoChinhTri,
				_originalData.MaTrinhDoSuPham,
				_originalData.MaTrinhDoNgoaiNgu,
				_originalData.MaTrinhDoTinHoc,
				_originalData.MaTrinhDoQuanLyNhaNuoc,
				_originalData.NguoiCapNhat,
				_originalData.NgayCapNhat,
				_originalData.KhoiKienThucGiangDay,
				_originalData.NganhDaoTao,
				_originalData.DonViGiangDay,
				_originalData.DaDuyet
				);
				
			return (GiangVienChoDuyetHoSo)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="GiangVienChoDuyetHoSoBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is GiangVienChoDuyetHoSoBase)
				return ValueEquals(this, (GiangVienChoDuyetHoSoBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="GiangVienChoDuyetHoSoBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.MaDanToc == null) ? string.Empty : this.MaDanToc.ToString()).GetHashCode() ^ 
					((this.MaTonGiao == null) ? string.Empty : this.MaTonGiao.ToString()).GetHashCode() ^ 
					((this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString()).GetHashCode() ^ 
					((this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString()).GetHashCode() ^ 
					((this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString()).GetHashCode() ^ 
					((this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString()).GetHashCode() ^ 
					((this.MaNguoiLap == null) ? string.Empty : this.MaNguoiLap.ToString()).GetHashCode() ^ 
					((this.MatKhau == null) ? string.Empty : this.MatKhau.ToString()).GetHashCode() ^ 
					((this.MaTinhTrang == null) ? string.Empty : this.MaTinhTrang.ToString()).GetHashCode() ^ 
					((this.MaQuanLy == null) ? string.Empty : this.MaQuanLy.ToString()).GetHashCode() ^ 
					((this.Ho == null) ? string.Empty : this.Ho.ToString()).GetHashCode() ^ 
					((this.TenDem == null) ? string.Empty : this.TenDem.ToString()).GetHashCode() ^ 
					((this.Ten == null) ? string.Empty : this.Ten.ToString()).GetHashCode() ^ 
					((this.NgaySinh == null) ? string.Empty : this.NgaySinh.ToString()).GetHashCode() ^ 
					((this.GioiTinh == null) ? string.Empty : this.GioiTinh.ToString()).GetHashCode() ^ 
					((this.NoiSinh == null) ? string.Empty : this.NoiSinh.ToString()).GetHashCode() ^ 
					((this.Cmnd == null) ? string.Empty : this.Cmnd.ToString()).GetHashCode() ^ 
					((this.NgayCap == null) ? string.Empty : this.NgayCap.ToString()).GetHashCode() ^ 
					((this.NoiCap == null) ? string.Empty : this.NoiCap.ToString()).GetHashCode() ^ 
					((this.DoanDang == null) ? string.Empty : this.DoanDang.ToString()).GetHashCode() ^ 
					((this.NgayVaoDoanDang == null) ? string.Empty : this.NgayVaoDoanDang.ToString()).GetHashCode() ^ 
					((this.NgayKyHopDong == null) ? string.Empty : this.NgayKyHopDong.ToString()).GetHashCode() ^ 
					((this.NgayKetThucHopDong == null) ? string.Empty : this.NgayKetThucHopDong.ToString()).GetHashCode() ^ 
					((this.HinhAnh == null) ? string.Empty : this.HinhAnh.ToString()).GetHashCode() ^ 
					((this.DiaChi == null) ? string.Empty : this.DiaChi.ToString()).GetHashCode() ^ 
					((this.ThuongTru == null) ? string.Empty : this.ThuongTru.ToString()).GetHashCode() ^ 
					((this.NoiLamViec == null) ? string.Empty : this.NoiLamViec.ToString()).GetHashCode() ^ 
					((this.Email == null) ? string.Empty : this.Email.ToString()).GetHashCode() ^ 
					((this.DienThoai == null) ? string.Empty : this.DienThoai.ToString()).GetHashCode() ^ 
					((this.SoDiDong == null) ? string.Empty : this.SoDiDong.ToString()).GetHashCode() ^ 
					((this.SoTaiKhoan == null) ? string.Empty : this.SoTaiKhoan.ToString()).GetHashCode() ^ 
					((this.TenNganHang == null) ? string.Empty : this.TenNganHang.ToString()).GetHashCode() ^ 
					((this.MaSoThue == null) ? string.Empty : this.MaSoThue.ToString()).GetHashCode() ^ 
					((this.ChiNhanh == null) ? string.Empty : this.ChiNhanh.ToString()).GetHashCode() ^ 
					((this.SoSoBaoHiem == null) ? string.Empty : this.SoSoBaoHiem.ToString()).GetHashCode() ^ 
					((this.ThoiGianBatDau == null) ? string.Empty : this.ThoiGianBatDau.ToString()).GetHashCode() ^ 
					((this.BacLuong == null) ? string.Empty : this.BacLuong.ToString()).GetHashCode() ^ 
					((this.NgayHuongLuong == null) ? string.Empty : this.NgayHuongLuong.ToString()).GetHashCode() ^ 
					((this.NamLamViec == null) ? string.Empty : this.NamLamViec.ToString()).GetHashCode() ^ 
					((this.ChuyenNganh == null) ? string.Empty : this.ChuyenNganh.ToString()).GetHashCode() ^ 
					((this.MaHeSoThuLao == null) ? string.Empty : this.MaHeSoThuLao.ToString()).GetHashCode() ^ 
					((this.Ngach == null) ? string.Empty : this.Ngach.ToString()).GetHashCode() ^ 
					((this.SoHieuCongChuc == null) ? string.Empty : this.SoHieuCongChuc.ToString()).GetHashCode() ^ 
					((this.Hrmid == null) ? string.Empty : this.Hrmid.ToString()).GetHashCode() ^ 
					((this.NoiCapBang == null) ? string.Empty : this.NoiCapBang.ToString()).GetHashCode() ^ 
					((this.KhoaTaiKhoan == null) ? string.Empty : this.KhoaTaiKhoan.ToString()).GetHashCode() ^ 
					((this.MaLoaiNhanVien == null) ? string.Empty : this.MaLoaiNhanVien.ToString()).GetHashCode() ^ 
					((this.MaNgachCongChuc == null) ? string.Empty : this.MaNgachCongChuc.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoChinhTri == null) ? string.Empty : this.MaTrinhDoChinhTri.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoSuPham == null) ? string.Empty : this.MaTrinhDoSuPham.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoNgoaiNgu == null) ? string.Empty : this.MaTrinhDoNgoaiNgu.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoTinHoc == null) ? string.Empty : this.MaTrinhDoTinHoc.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoQuanLyNhaNuoc == null) ? string.Empty : this.MaTrinhDoQuanLyNhaNuoc.ToString()).GetHashCode() ^ 
					((this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString()).GetHashCode() ^ 
					((this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString()).GetHashCode() ^ 
					((this.KhoiKienThucGiangDay == null) ? string.Empty : this.KhoiKienThucGiangDay.ToString()).GetHashCode() ^ 
					((this.NganhDaoTao == null) ? string.Empty : this.NganhDaoTao.ToString()).GetHashCode() ^ 
					((this.DonViGiangDay == null) ? string.Empty : this.DonViGiangDay.ToString()).GetHashCode() ^ 
					((this.DaDuyet == null) ? string.Empty : this.DaDuyet.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="GiangVienChoDuyetHoSoBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(GiangVienChoDuyetHoSoBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="GiangVienChoDuyetHoSoBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="GiangVienChoDuyetHoSoBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="GiangVienChoDuyetHoSoBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(GiangVienChoDuyetHoSoBase Object1, GiangVienChoDuyetHoSoBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.MaDanToc != null && Object2.MaDanToc != null )
			{
				if (Object1.MaDanToc != Object2.MaDanToc)
					equal = false;
			}
			else if (Object1.MaDanToc == null ^ Object2.MaDanToc == null )
			{
				equal = false;
			}
			if ( Object1.MaTonGiao != null && Object2.MaTonGiao != null )
			{
				if (Object1.MaTonGiao != Object2.MaTonGiao)
					equal = false;
			}
			else if (Object1.MaTonGiao == null ^ Object2.MaTonGiao == null )
			{
				equal = false;
			}
			if ( Object1.MaDonVi != null && Object2.MaDonVi != null )
			{
				if (Object1.MaDonVi != Object2.MaDonVi)
					equal = false;
			}
			else if (Object1.MaDonVi == null ^ Object2.MaDonVi == null )
			{
				equal = false;
			}
			if ( Object1.MaHocHam != null && Object2.MaHocHam != null )
			{
				if (Object1.MaHocHam != Object2.MaHocHam)
					equal = false;
			}
			else if (Object1.MaHocHam == null ^ Object2.MaHocHam == null )
			{
				equal = false;
			}
			if ( Object1.MaHocVi != null && Object2.MaHocVi != null )
			{
				if (Object1.MaHocVi != Object2.MaHocVi)
					equal = false;
			}
			else if (Object1.MaHocVi == null ^ Object2.MaHocVi == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object2.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.MaNguoiLap != null && Object2.MaNguoiLap != null )
			{
				if (Object1.MaNguoiLap != Object2.MaNguoiLap)
					equal = false;
			}
			else if (Object1.MaNguoiLap == null ^ Object2.MaNguoiLap == null )
			{
				equal = false;
			}
			if ( Object1.MatKhau != null && Object2.MatKhau != null )
			{
				if (Object1.MatKhau != Object2.MatKhau)
					equal = false;
			}
			else if (Object1.MatKhau == null ^ Object2.MatKhau == null )
			{
				equal = false;
			}
			if ( Object1.MaTinhTrang != null && Object2.MaTinhTrang != null )
			{
				if (Object1.MaTinhTrang != Object2.MaTinhTrang)
					equal = false;
			}
			else if (Object1.MaTinhTrang == null ^ Object2.MaTinhTrang == null )
			{
				equal = false;
			}
			if ( Object1.MaQuanLy != null && Object2.MaQuanLy != null )
			{
				if (Object1.MaQuanLy != Object2.MaQuanLy)
					equal = false;
			}
			else if (Object1.MaQuanLy == null ^ Object2.MaQuanLy == null )
			{
				equal = false;
			}
			if ( Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object2.Ho == null )
			{
				equal = false;
			}
			if ( Object1.TenDem != null && Object2.TenDem != null )
			{
				if (Object1.TenDem != Object2.TenDem)
					equal = false;
			}
			else if (Object1.TenDem == null ^ Object2.TenDem == null )
			{
				equal = false;
			}
			if ( Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object2.Ten == null )
			{
				equal = false;
			}
			if ( Object1.NgaySinh != null && Object2.NgaySinh != null )
			{
				if (Object1.NgaySinh != Object2.NgaySinh)
					equal = false;
			}
			else if (Object1.NgaySinh == null ^ Object2.NgaySinh == null )
			{
				equal = false;
			}
			if ( Object1.GioiTinh != null && Object2.GioiTinh != null )
			{
				if (Object1.GioiTinh != Object2.GioiTinh)
					equal = false;
			}
			else if (Object1.GioiTinh == null ^ Object2.GioiTinh == null )
			{
				equal = false;
			}
			if ( Object1.NoiSinh != null && Object2.NoiSinh != null )
			{
				if (Object1.NoiSinh != Object2.NoiSinh)
					equal = false;
			}
			else if (Object1.NoiSinh == null ^ Object2.NoiSinh == null )
			{
				equal = false;
			}
			if ( Object1.Cmnd != null && Object2.Cmnd != null )
			{
				if (Object1.Cmnd != Object2.Cmnd)
					equal = false;
			}
			else if (Object1.Cmnd == null ^ Object2.Cmnd == null )
			{
				equal = false;
			}
			if ( Object1.NgayCap != null && Object2.NgayCap != null )
			{
				if (Object1.NgayCap != Object2.NgayCap)
					equal = false;
			}
			else if (Object1.NgayCap == null ^ Object2.NgayCap == null )
			{
				equal = false;
			}
			if ( Object1.NoiCap != null && Object2.NoiCap != null )
			{
				if (Object1.NoiCap != Object2.NoiCap)
					equal = false;
			}
			else if (Object1.NoiCap == null ^ Object2.NoiCap == null )
			{
				equal = false;
			}
			if ( Object1.DoanDang != null && Object2.DoanDang != null )
			{
				if (Object1.DoanDang != Object2.DoanDang)
					equal = false;
			}
			else if (Object1.DoanDang == null ^ Object2.DoanDang == null )
			{
				equal = false;
			}
			if ( Object1.NgayVaoDoanDang != null && Object2.NgayVaoDoanDang != null )
			{
				if (Object1.NgayVaoDoanDang != Object2.NgayVaoDoanDang)
					equal = false;
			}
			else if (Object1.NgayVaoDoanDang == null ^ Object2.NgayVaoDoanDang == null )
			{
				equal = false;
			}
			if ( Object1.NgayKyHopDong != null && Object2.NgayKyHopDong != null )
			{
				if (Object1.NgayKyHopDong != Object2.NgayKyHopDong)
					equal = false;
			}
			else if (Object1.NgayKyHopDong == null ^ Object2.NgayKyHopDong == null )
			{
				equal = false;
			}
			if ( Object1.NgayKetThucHopDong != null && Object2.NgayKetThucHopDong != null )
			{
				if (Object1.NgayKetThucHopDong != Object2.NgayKetThucHopDong)
					equal = false;
			}
			else if (Object1.NgayKetThucHopDong == null ^ Object2.NgayKetThucHopDong == null )
			{
				equal = false;
			}
			if ( Object1.HinhAnh != null && Object2.HinhAnh != null )
			{
				if (Object1.HinhAnh != Object2.HinhAnh)
					equal = false;
			}
			else if (Object1.HinhAnh == null ^ Object2.HinhAnh == null )
			{
				equal = false;
			}
			if ( Object1.DiaChi != null && Object2.DiaChi != null )
			{
				if (Object1.DiaChi != Object2.DiaChi)
					equal = false;
			}
			else if (Object1.DiaChi == null ^ Object2.DiaChi == null )
			{
				equal = false;
			}
			if ( Object1.ThuongTru != null && Object2.ThuongTru != null )
			{
				if (Object1.ThuongTru != Object2.ThuongTru)
					equal = false;
			}
			else if (Object1.ThuongTru == null ^ Object2.ThuongTru == null )
			{
				equal = false;
			}
			if ( Object1.NoiLamViec != null && Object2.NoiLamViec != null )
			{
				if (Object1.NoiLamViec != Object2.NoiLamViec)
					equal = false;
			}
			else if (Object1.NoiLamViec == null ^ Object2.NoiLamViec == null )
			{
				equal = false;
			}
			if ( Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object2.Email == null )
			{
				equal = false;
			}
			if ( Object1.DienThoai != null && Object2.DienThoai != null )
			{
				if (Object1.DienThoai != Object2.DienThoai)
					equal = false;
			}
			else if (Object1.DienThoai == null ^ Object2.DienThoai == null )
			{
				equal = false;
			}
			if ( Object1.SoDiDong != null && Object2.SoDiDong != null )
			{
				if (Object1.SoDiDong != Object2.SoDiDong)
					equal = false;
			}
			else if (Object1.SoDiDong == null ^ Object2.SoDiDong == null )
			{
				equal = false;
			}
			if ( Object1.SoTaiKhoan != null && Object2.SoTaiKhoan != null )
			{
				if (Object1.SoTaiKhoan != Object2.SoTaiKhoan)
					equal = false;
			}
			else if (Object1.SoTaiKhoan == null ^ Object2.SoTaiKhoan == null )
			{
				equal = false;
			}
			if ( Object1.TenNganHang != null && Object2.TenNganHang != null )
			{
				if (Object1.TenNganHang != Object2.TenNganHang)
					equal = false;
			}
			else if (Object1.TenNganHang == null ^ Object2.TenNganHang == null )
			{
				equal = false;
			}
			if ( Object1.MaSoThue != null && Object2.MaSoThue != null )
			{
				if (Object1.MaSoThue != Object2.MaSoThue)
					equal = false;
			}
			else if (Object1.MaSoThue == null ^ Object2.MaSoThue == null )
			{
				equal = false;
			}
			if ( Object1.ChiNhanh != null && Object2.ChiNhanh != null )
			{
				if (Object1.ChiNhanh != Object2.ChiNhanh)
					equal = false;
			}
			else if (Object1.ChiNhanh == null ^ Object2.ChiNhanh == null )
			{
				equal = false;
			}
			if ( Object1.SoSoBaoHiem != null && Object2.SoSoBaoHiem != null )
			{
				if (Object1.SoSoBaoHiem != Object2.SoSoBaoHiem)
					equal = false;
			}
			else if (Object1.SoSoBaoHiem == null ^ Object2.SoSoBaoHiem == null )
			{
				equal = false;
			}
			if ( Object1.ThoiGianBatDau != null && Object2.ThoiGianBatDau != null )
			{
				if (Object1.ThoiGianBatDau != Object2.ThoiGianBatDau)
					equal = false;
			}
			else if (Object1.ThoiGianBatDau == null ^ Object2.ThoiGianBatDau == null )
			{
				equal = false;
			}
			if ( Object1.BacLuong != null && Object2.BacLuong != null )
			{
				if (Object1.BacLuong != Object2.BacLuong)
					equal = false;
			}
			else if (Object1.BacLuong == null ^ Object2.BacLuong == null )
			{
				equal = false;
			}
			if ( Object1.NgayHuongLuong != null && Object2.NgayHuongLuong != null )
			{
				if (Object1.NgayHuongLuong != Object2.NgayHuongLuong)
					equal = false;
			}
			else if (Object1.NgayHuongLuong == null ^ Object2.NgayHuongLuong == null )
			{
				equal = false;
			}
			if ( Object1.NamLamViec != null && Object2.NamLamViec != null )
			{
				if (Object1.NamLamViec != Object2.NamLamViec)
					equal = false;
			}
			else if (Object1.NamLamViec == null ^ Object2.NamLamViec == null )
			{
				equal = false;
			}
			if ( Object1.ChuyenNganh != null && Object2.ChuyenNganh != null )
			{
				if (Object1.ChuyenNganh != Object2.ChuyenNganh)
					equal = false;
			}
			else if (Object1.ChuyenNganh == null ^ Object2.ChuyenNganh == null )
			{
				equal = false;
			}
			if ( Object1.MaHeSoThuLao != null && Object2.MaHeSoThuLao != null )
			{
				if (Object1.MaHeSoThuLao != Object2.MaHeSoThuLao)
					equal = false;
			}
			else if (Object1.MaHeSoThuLao == null ^ Object2.MaHeSoThuLao == null )
			{
				equal = false;
			}
			if ( Object1.Ngach != null && Object2.Ngach != null )
			{
				if (Object1.Ngach != Object2.Ngach)
					equal = false;
			}
			else if (Object1.Ngach == null ^ Object2.Ngach == null )
			{
				equal = false;
			}
			if ( Object1.SoHieuCongChuc != null && Object2.SoHieuCongChuc != null )
			{
				if (Object1.SoHieuCongChuc != Object2.SoHieuCongChuc)
					equal = false;
			}
			else if (Object1.SoHieuCongChuc == null ^ Object2.SoHieuCongChuc == null )
			{
				equal = false;
			}
			if ( Object1.Hrmid != null && Object2.Hrmid != null )
			{
				if (Object1.Hrmid != Object2.Hrmid)
					equal = false;
			}
			else if (Object1.Hrmid == null ^ Object2.Hrmid == null )
			{
				equal = false;
			}
			if ( Object1.NoiCapBang != null && Object2.NoiCapBang != null )
			{
				if (Object1.NoiCapBang != Object2.NoiCapBang)
					equal = false;
			}
			else if (Object1.NoiCapBang == null ^ Object2.NoiCapBang == null )
			{
				equal = false;
			}
			if ( Object1.KhoaTaiKhoan != null && Object2.KhoaTaiKhoan != null )
			{
				if (Object1.KhoaTaiKhoan != Object2.KhoaTaiKhoan)
					equal = false;
			}
			else if (Object1.KhoaTaiKhoan == null ^ Object2.KhoaTaiKhoan == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiNhanVien != null && Object2.MaLoaiNhanVien != null )
			{
				if (Object1.MaLoaiNhanVien != Object2.MaLoaiNhanVien)
					equal = false;
			}
			else if (Object1.MaLoaiNhanVien == null ^ Object2.MaLoaiNhanVien == null )
			{
				equal = false;
			}
			if ( Object1.MaNgachCongChuc != null && Object2.MaNgachCongChuc != null )
			{
				if (Object1.MaNgachCongChuc != Object2.MaNgachCongChuc)
					equal = false;
			}
			else if (Object1.MaNgachCongChuc == null ^ Object2.MaNgachCongChuc == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoChinhTri != null && Object2.MaTrinhDoChinhTri != null )
			{
				if (Object1.MaTrinhDoChinhTri != Object2.MaTrinhDoChinhTri)
					equal = false;
			}
			else if (Object1.MaTrinhDoChinhTri == null ^ Object2.MaTrinhDoChinhTri == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoSuPham != null && Object2.MaTrinhDoSuPham != null )
			{
				if (Object1.MaTrinhDoSuPham != Object2.MaTrinhDoSuPham)
					equal = false;
			}
			else if (Object1.MaTrinhDoSuPham == null ^ Object2.MaTrinhDoSuPham == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoNgoaiNgu != null && Object2.MaTrinhDoNgoaiNgu != null )
			{
				if (Object1.MaTrinhDoNgoaiNgu != Object2.MaTrinhDoNgoaiNgu)
					equal = false;
			}
			else if (Object1.MaTrinhDoNgoaiNgu == null ^ Object2.MaTrinhDoNgoaiNgu == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoTinHoc != null && Object2.MaTrinhDoTinHoc != null )
			{
				if (Object1.MaTrinhDoTinHoc != Object2.MaTrinhDoTinHoc)
					equal = false;
			}
			else if (Object1.MaTrinhDoTinHoc == null ^ Object2.MaTrinhDoTinHoc == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoQuanLyNhaNuoc != null && Object2.MaTrinhDoQuanLyNhaNuoc != null )
			{
				if (Object1.MaTrinhDoQuanLyNhaNuoc != Object2.MaTrinhDoQuanLyNhaNuoc)
					equal = false;
			}
			else if (Object1.MaTrinhDoQuanLyNhaNuoc == null ^ Object2.MaTrinhDoQuanLyNhaNuoc == null )
			{
				equal = false;
			}
			if ( Object1.NguoiCapNhat != null && Object2.NguoiCapNhat != null )
			{
				if (Object1.NguoiCapNhat != Object2.NguoiCapNhat)
					equal = false;
			}
			else if (Object1.NguoiCapNhat == null ^ Object2.NguoiCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object2.NgayCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.KhoiKienThucGiangDay != null && Object2.KhoiKienThucGiangDay != null )
			{
				if (Object1.KhoiKienThucGiangDay != Object2.KhoiKienThucGiangDay)
					equal = false;
			}
			else if (Object1.KhoiKienThucGiangDay == null ^ Object2.KhoiKienThucGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.NganhDaoTao != null && Object2.NganhDaoTao != null )
			{
				if (Object1.NganhDaoTao != Object2.NganhDaoTao)
					equal = false;
			}
			else if (Object1.NganhDaoTao == null ^ Object2.NganhDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.DonViGiangDay != null && Object2.DonViGiangDay != null )
			{
				if (Object1.DonViGiangDay != Object2.DonViGiangDay)
					equal = false;
			}
			else if (Object1.DonViGiangDay == null ^ Object2.DonViGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.DaDuyet != null && Object2.DaDuyet != null )
			{
				if (Object1.DaDuyet != Object2.DaDuyet)
					equal = false;
			}
			else if (Object1.DaDuyet == null ^ Object2.DaDuyet == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((GiangVienChoDuyetHoSoBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static GiangVienChoDuyetHoSoComparer GetComparer()
        {
            return new GiangVienChoDuyetHoSoComparer();
        }
        */

        // Comparer delegates back to GiangVienChoDuyetHoSo
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(GiangVienChoDuyetHoSo rhs, GiangVienChoDuyetHoSoColumn which)
        {
            switch (which)
            {
            	
            	
            	case GiangVienChoDuyetHoSoColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaDanToc:
            		return this.MaDanToc.CompareTo(rhs.MaDanToc);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaTonGiao:
            		return this.MaTonGiao.CompareTo(rhs.MaTonGiao);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaDonVi:
            		return this.MaDonVi.CompareTo(rhs.MaDonVi);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaHocHam:
            		return this.MaHocHam.Value.CompareTo(rhs.MaHocHam.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaHocVi:
            		return this.MaHocVi.Value.CompareTo(rhs.MaHocVi.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaLoaiGiangVien:
            		return this.MaLoaiGiangVien.Value.CompareTo(rhs.MaLoaiGiangVien.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaNguoiLap:
            		return this.MaNguoiLap.Value.CompareTo(rhs.MaNguoiLap.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MatKhau:
            		return this.MatKhau.CompareTo(rhs.MatKhau);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaTinhTrang:
            		return this.MaTinhTrang.Value.CompareTo(rhs.MaTinhTrang.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaQuanLy:
            		return this.MaQuanLy.CompareTo(rhs.MaQuanLy);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.Ho:
            		return this.Ho.CompareTo(rhs.Ho);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.TenDem:
            		return this.TenDem.CompareTo(rhs.TenDem);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.Ten:
            		return this.Ten.CompareTo(rhs.Ten);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NgaySinh:
            		return this.NgaySinh.CompareTo(rhs.NgaySinh);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.GioiTinh:
            		return this.GioiTinh.Value.CompareTo(rhs.GioiTinh.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NoiSinh:
            		return this.NoiSinh.CompareTo(rhs.NoiSinh);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.Cmnd:
            		return this.Cmnd.CompareTo(rhs.Cmnd);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NgayCap:
            		return this.NgayCap.CompareTo(rhs.NgayCap);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NoiCap:
            		return this.NoiCap.CompareTo(rhs.NoiCap);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.DoanDang:
            		return this.DoanDang.Value.CompareTo(rhs.DoanDang.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NgayVaoDoanDang:
            		return this.NgayVaoDoanDang.CompareTo(rhs.NgayVaoDoanDang);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NgayKyHopDong:
            		return this.NgayKyHopDong.Value.CompareTo(rhs.NgayKyHopDong.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NgayKetThucHopDong:
            		return this.NgayKetThucHopDong.Value.CompareTo(rhs.NgayKetThucHopDong.Value);
            		
            		                 
            	
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.DiaChi:
            		return this.DiaChi.CompareTo(rhs.DiaChi);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.ThuongTru:
            		return this.ThuongTru.CompareTo(rhs.ThuongTru);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NoiLamViec:
            		return this.NoiLamViec.CompareTo(rhs.NoiLamViec);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.Email:
            		return this.Email.CompareTo(rhs.Email);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.DienThoai:
            		return this.DienThoai.CompareTo(rhs.DienThoai);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.SoDiDong:
            		return this.SoDiDong.CompareTo(rhs.SoDiDong);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.SoTaiKhoan:
            		return this.SoTaiKhoan.CompareTo(rhs.SoTaiKhoan);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.TenNganHang:
            		return this.TenNganHang.CompareTo(rhs.TenNganHang);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaSoThue:
            		return this.MaSoThue.CompareTo(rhs.MaSoThue);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.ChiNhanh:
            		return this.ChiNhanh.CompareTo(rhs.ChiNhanh);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.SoSoBaoHiem:
            		return this.SoSoBaoHiem.CompareTo(rhs.SoSoBaoHiem);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.ThoiGianBatDau:
            		return this.ThoiGianBatDau.CompareTo(rhs.ThoiGianBatDau);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.BacLuong:
            		return this.BacLuong.Value.CompareTo(rhs.BacLuong.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NgayHuongLuong:
            		return this.NgayHuongLuong.CompareTo(rhs.NgayHuongLuong);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NamLamViec:
            		return this.NamLamViec.CompareTo(rhs.NamLamViec);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.ChuyenNganh:
            		return this.ChuyenNganh.CompareTo(rhs.ChuyenNganh);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaHeSoThuLao:
            		return this.MaHeSoThuLao.CompareTo(rhs.MaHeSoThuLao);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.Ngach:
            		return this.Ngach.CompareTo(rhs.Ngach);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.SoHieuCongChuc:
            		return this.SoHieuCongChuc.CompareTo(rhs.SoHieuCongChuc);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.Hrmid:
            		return this.Hrmid.Value.CompareTo(rhs.Hrmid.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NoiCapBang:
            		return this.NoiCapBang.CompareTo(rhs.NoiCapBang);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.KhoaTaiKhoan:
            		return this.KhoaTaiKhoan.Value.CompareTo(rhs.KhoaTaiKhoan.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaLoaiNhanVien:
            		return this.MaLoaiNhanVien.Value.CompareTo(rhs.MaLoaiNhanVien.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaNgachCongChuc:
            		return this.MaNgachCongChuc.Value.CompareTo(rhs.MaNgachCongChuc.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaTrinhDoChinhTri:
            		return this.MaTrinhDoChinhTri.Value.CompareTo(rhs.MaTrinhDoChinhTri.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaTrinhDoSuPham:
            		return this.MaTrinhDoSuPham.Value.CompareTo(rhs.MaTrinhDoSuPham.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaTrinhDoNgoaiNgu:
            		return this.MaTrinhDoNgoaiNgu.Value.CompareTo(rhs.MaTrinhDoNgoaiNgu.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaTrinhDoTinHoc:
            		return this.MaTrinhDoTinHoc.Value.CompareTo(rhs.MaTrinhDoTinHoc.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.MaTrinhDoQuanLyNhaNuoc:
            		return this.MaTrinhDoQuanLyNhaNuoc.Value.CompareTo(rhs.MaTrinhDoQuanLyNhaNuoc.Value);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NguoiCapNhat:
            		return this.NguoiCapNhat.CompareTo(rhs.NguoiCapNhat);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NgayCapNhat:
            		return this.NgayCapNhat.CompareTo(rhs.NgayCapNhat);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.KhoiKienThucGiangDay:
            		return this.KhoiKienThucGiangDay.CompareTo(rhs.KhoiKienThucGiangDay);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.NganhDaoTao:
            		return this.NganhDaoTao.CompareTo(rhs.NganhDaoTao);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.DonViGiangDay:
            		return this.DonViGiangDay.CompareTo(rhs.DonViGiangDay);
            		
            		                 
            	
            	
            	case GiangVienChoDuyetHoSoColumn.DaDuyet:
            		return this.DaDuyet.Value.CompareTo(rhs.DaDuyet.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<GiangVienChoDuyetHoSoKey> Members
		
		// member variable for the EntityId property
		private GiangVienChoDuyetHoSoKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual GiangVienChoDuyetHoSoKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new GiangVienChoDuyetHoSoKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("GiangVienChoDuyetHoSo")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{61}{60}- Id: {0}{60}- MaDanToc: {1}{60}- MaTonGiao: {2}{60}- MaDonVi: {3}{60}- MaHocHam: {4}{60}- MaHocVi: {5}{60}- MaLoaiGiangVien: {6}{60}- MaNguoiLap: {7}{60}- MatKhau: {8}{60}- MaTinhTrang: {9}{60}- MaQuanLy: {10}{60}- Ho: {11}{60}- TenDem: {12}{60}- Ten: {13}{60}- NgaySinh: {14}{60}- GioiTinh: {15}{60}- NoiSinh: {16}{60}- Cmnd: {17}{60}- NgayCap: {18}{60}- NoiCap: {19}{60}- DoanDang: {20}{60}- NgayVaoDoanDang: {21}{60}- NgayKyHopDong: {22}{60}- NgayKetThucHopDong: {23}{60}- HinhAnh: {24}{60}- DiaChi: {25}{60}- ThuongTru: {26}{60}- NoiLamViec: {27}{60}- Email: {28}{60}- DienThoai: {29}{60}- SoDiDong: {30}{60}- SoTaiKhoan: {31}{60}- TenNganHang: {32}{60}- MaSoThue: {33}{60}- ChiNhanh: {34}{60}- SoSoBaoHiem: {35}{60}- ThoiGianBatDau: {36}{60}- BacLuong: {37}{60}- NgayHuongLuong: {38}{60}- NamLamViec: {39}{60}- ChuyenNganh: {40}{60}- MaHeSoThuLao: {41}{60}- Ngach: {42}{60}- SoHieuCongChuc: {43}{60}- Hrmid: {44}{60}- NoiCapBang: {45}{60}- KhoaTaiKhoan: {46}{60}- MaLoaiNhanVien: {47}{60}- MaNgachCongChuc: {48}{60}- MaTrinhDoChinhTri: {49}{60}- MaTrinhDoSuPham: {50}{60}- MaTrinhDoNgoaiNgu: {51}{60}- MaTrinhDoTinHoc: {52}{60}- MaTrinhDoQuanLyNhaNuoc: {53}{60}- NguoiCapNhat: {54}{60}- NgayCapNhat: {55}{60}- KhoiKienThucGiangDay: {56}{60}- NganhDaoTao: {57}{60}- DonViGiangDay: {58}{60}- DaDuyet: {59}{60}{62}", 
				this.Id,
				(this.MaDanToc == null) ? string.Empty : this.MaDanToc.ToString(),
				(this.MaTonGiao == null) ? string.Empty : this.MaTonGiao.ToString(),
				(this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString(),
				(this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString(),
				(this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString(),
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
				(this.MaNguoiLap == null) ? string.Empty : this.MaNguoiLap.ToString(),
				(this.MatKhau == null) ? string.Empty : this.MatKhau.ToString(),
				(this.MaTinhTrang == null) ? string.Empty : this.MaTinhTrang.ToString(),
				(this.MaQuanLy == null) ? string.Empty : this.MaQuanLy.ToString(),
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
				(this.TenDem == null) ? string.Empty : this.TenDem.ToString(),
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
				(this.NgaySinh == null) ? string.Empty : this.NgaySinh.ToString(),
				(this.GioiTinh == null) ? string.Empty : this.GioiTinh.ToString(),
				(this.NoiSinh == null) ? string.Empty : this.NoiSinh.ToString(),
				(this.Cmnd == null) ? string.Empty : this.Cmnd.ToString(),
				(this.NgayCap == null) ? string.Empty : this.NgayCap.ToString(),
				(this.NoiCap == null) ? string.Empty : this.NoiCap.ToString(),
				(this.DoanDang == null) ? string.Empty : this.DoanDang.ToString(),
				(this.NgayVaoDoanDang == null) ? string.Empty : this.NgayVaoDoanDang.ToString(),
				(this.NgayKyHopDong == null) ? string.Empty : this.NgayKyHopDong.ToString(),
				(this.NgayKetThucHopDong == null) ? string.Empty : this.NgayKetThucHopDong.ToString(),
				(this.HinhAnh == null) ? string.Empty : this.HinhAnh.ToString(),
				(this.DiaChi == null) ? string.Empty : this.DiaChi.ToString(),
				(this.ThuongTru == null) ? string.Empty : this.ThuongTru.ToString(),
				(this.NoiLamViec == null) ? string.Empty : this.NoiLamViec.ToString(),
				(this.Email == null) ? string.Empty : this.Email.ToString(),
				(this.DienThoai == null) ? string.Empty : this.DienThoai.ToString(),
				(this.SoDiDong == null) ? string.Empty : this.SoDiDong.ToString(),
				(this.SoTaiKhoan == null) ? string.Empty : this.SoTaiKhoan.ToString(),
				(this.TenNganHang == null) ? string.Empty : this.TenNganHang.ToString(),
				(this.MaSoThue == null) ? string.Empty : this.MaSoThue.ToString(),
				(this.ChiNhanh == null) ? string.Empty : this.ChiNhanh.ToString(),
				(this.SoSoBaoHiem == null) ? string.Empty : this.SoSoBaoHiem.ToString(),
				(this.ThoiGianBatDau == null) ? string.Empty : this.ThoiGianBatDau.ToString(),
				(this.BacLuong == null) ? string.Empty : this.BacLuong.ToString(),
				(this.NgayHuongLuong == null) ? string.Empty : this.NgayHuongLuong.ToString(),
				(this.NamLamViec == null) ? string.Empty : this.NamLamViec.ToString(),
				(this.ChuyenNganh == null) ? string.Empty : this.ChuyenNganh.ToString(),
				(this.MaHeSoThuLao == null) ? string.Empty : this.MaHeSoThuLao.ToString(),
				(this.Ngach == null) ? string.Empty : this.Ngach.ToString(),
				(this.SoHieuCongChuc == null) ? string.Empty : this.SoHieuCongChuc.ToString(),
				(this.Hrmid == null) ? string.Empty : this.Hrmid.ToString(),
				(this.NoiCapBang == null) ? string.Empty : this.NoiCapBang.ToString(),
				(this.KhoaTaiKhoan == null) ? string.Empty : this.KhoaTaiKhoan.ToString(),
				(this.MaLoaiNhanVien == null) ? string.Empty : this.MaLoaiNhanVien.ToString(),
				(this.MaNgachCongChuc == null) ? string.Empty : this.MaNgachCongChuc.ToString(),
				(this.MaTrinhDoChinhTri == null) ? string.Empty : this.MaTrinhDoChinhTri.ToString(),
				(this.MaTrinhDoSuPham == null) ? string.Empty : this.MaTrinhDoSuPham.ToString(),
				(this.MaTrinhDoNgoaiNgu == null) ? string.Empty : this.MaTrinhDoNgoaiNgu.ToString(),
				(this.MaTrinhDoTinHoc == null) ? string.Empty : this.MaTrinhDoTinHoc.ToString(),
				(this.MaTrinhDoQuanLyNhaNuoc == null) ? string.Empty : this.MaTrinhDoQuanLyNhaNuoc.ToString(),
				(this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString(),
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
				(this.KhoiKienThucGiangDay == null) ? string.Empty : this.KhoiKienThucGiangDay.ToString(),
				(this.NganhDaoTao == null) ? string.Empty : this.NganhDaoTao.ToString(),
				(this.DonViGiangDay == null) ? string.Empty : this.DonViGiangDay.ToString(),
				(this.DaDuyet == null) ? string.Empty : this.DaDuyet.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'GiangVienChoDuyetHoSo' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class GiangVienChoDuyetHoSoEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "GiangVienChoDuyetHoSo"</remarks>
		public System.Int32 Id;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaDanToc : 
		/// </summary>
		public System.String MaDanToc = null;
		
		/// <summary>
		/// MaTonGiao : 
		/// </summary>
		public System.String MaTonGiao = null;
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		public System.String MaDonVi = null;
		
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		public System.Int32? MaHocHam = null;
		
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		public System.Int32? MaHocVi = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		public System.Int32? MaLoaiGiangVien = null;
		
		/// <summary>
		/// MaNguoiLap : 
		/// </summary>
		public System.Int32? MaNguoiLap = null;
		
		/// <summary>
		/// MatKhau : 
		/// </summary>
		public System.String MatKhau = null;
		
		/// <summary>
		/// MaTinhTrang : 
		/// </summary>
		public System.Int32? MaTinhTrang = null;
		
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		public System.String MaQuanLy = null;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		public System.String Ho = null;
		
		/// <summary>
		/// TenDem : 
		/// </summary>
		public System.String TenDem = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		public System.String Ten = null;
		
		/// <summary>
		/// NgaySinh : 
		/// </summary>
		public System.String NgaySinh = null;
		
		/// <summary>
		/// GioiTinh : 
		/// </summary>
		public System.Boolean? GioiTinh = null;
		
		/// <summary>
		/// NoiSinh : 
		/// </summary>
		public System.String NoiSinh = null;
		
		/// <summary>
		/// Cmnd : 
		/// </summary>
		public System.String Cmnd = null;
		
		/// <summary>
		/// NgayCap : 
		/// </summary>
		public System.String NgayCap = null;
		
		/// <summary>
		/// NoiCap : 
		/// </summary>
		public System.String NoiCap = null;
		
		/// <summary>
		/// DoanDang : 
		/// </summary>
		public System.Boolean? DoanDang = null;
		
		/// <summary>
		/// NgayVaoDoanDang : 
		/// </summary>
		public System.String NgayVaoDoanDang = null;
		
		/// <summary>
		/// NgayKyHopDong : 
		/// </summary>
		public System.DateTime? NgayKyHopDong = null;
		
		/// <summary>
		/// NgayKetThucHopDong : 
		/// </summary>
		public System.DateTime? NgayKetThucHopDong = null;
		
		/// <summary>
		/// HinhAnh : 
		/// </summary>
		public System.Byte[] HinhAnh = null;
		
		/// <summary>
		/// DiaChi : 
		/// </summary>
		public System.String DiaChi = null;
		
		/// <summary>
		/// ThuongTru : 
		/// </summary>
		public System.String ThuongTru = null;
		
		/// <summary>
		/// NoiLamViec : 
		/// </summary>
		public System.String NoiLamViec = null;
		
		/// <summary>
		/// Email : 
		/// </summary>
		public System.String Email = null;
		
		/// <summary>
		/// DienThoai : 
		/// </summary>
		public System.String DienThoai = null;
		
		/// <summary>
		/// SoDiDong : 
		/// </summary>
		public System.String SoDiDong = null;
		
		/// <summary>
		/// SoTaiKhoan : 
		/// </summary>
		public System.String SoTaiKhoan = null;
		
		/// <summary>
		/// TenNganHang : 
		/// </summary>
		public System.String TenNganHang = null;
		
		/// <summary>
		/// MaSoThue : 
		/// </summary>
		public System.String MaSoThue = null;
		
		/// <summary>
		/// ChiNhanh : 
		/// </summary>
		public System.String ChiNhanh = null;
		
		/// <summary>
		/// SoSoBaoHiem : 
		/// </summary>
		public System.String SoSoBaoHiem = null;
		
		/// <summary>
		/// ThoiGianBatDau : 
		/// </summary>
		public System.String ThoiGianBatDau = null;
		
		/// <summary>
		/// BacLuong : 
		/// </summary>
		public System.Decimal? BacLuong = null;
		
		/// <summary>
		/// NgayHuongLuong : 
		/// </summary>
		public System.String NgayHuongLuong = null;
		
		/// <summary>
		/// NamLamViec : 
		/// </summary>
		public System.String NamLamViec = null;
		
		/// <summary>
		/// ChuyenNganh : 
		/// </summary>
		public System.String ChuyenNganh = null;
		
		/// <summary>
		/// MaHeSoThuLao : 
		/// </summary>
		public System.String MaHeSoThuLao = null;
		
		/// <summary>
		/// Ngach : 
		/// </summary>
		public System.String Ngach = null;
		
		/// <summary>
		/// SoHieuCongChuc : 
		/// </summary>
		public System.String SoHieuCongChuc = null;
		
		/// <summary>
		/// HRMID : 
		/// </summary>
		public System.Guid? Hrmid = null;
		
		/// <summary>
		/// NoiCapBang : 
		/// </summary>
		public System.String NoiCapBang = null;
		
		/// <summary>
		/// KhoaTaiKhoan : 
		/// </summary>
		public System.Boolean? KhoaTaiKhoan = null;
		
		/// <summary>
		/// MaLoaiNhanVien : 
		/// </summary>
		public System.Int32? MaLoaiNhanVien = null;
		
		/// <summary>
		/// MaNgachCongChuc : 
		/// </summary>
		public System.Int32? MaNgachCongChuc = null;
		
		/// <summary>
		/// MaTrinhDoChinhTri : 
		/// </summary>
		public System.Int32? MaTrinhDoChinhTri = null;
		
		/// <summary>
		/// MaTrinhDoSuPham : 
		/// </summary>
		public System.Int32? MaTrinhDoSuPham = null;
		
		/// <summary>
		/// MaTrinhDoNgoaiNgu : 
		/// </summary>
		public System.Int32? MaTrinhDoNgoaiNgu = null;
		
		/// <summary>
		/// MaTrinhDoTinHoc : 
		/// </summary>
		public System.Int32? MaTrinhDoTinHoc = null;
		
		/// <summary>
		/// MaTrinhDoQuanLyNhaNuoc : 
		/// </summary>
		public System.Int32? MaTrinhDoQuanLyNhaNuoc = null;
		
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		public System.String NguoiCapNhat = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		public System.String NgayCapNhat = null;
		
		/// <summary>
		/// KhoiKienThucGiangDay : 
		/// </summary>
		public System.String KhoiKienThucGiangDay = null;
		
		/// <summary>
		/// NganhDaoTao : 
		/// </summary>
		public System.String NganhDaoTao = null;
		
		/// <summary>
		/// DonViGiangDay : 
		/// </summary>
		public System.String DonViGiangDay = null;
		
		/// <summary>
		/// DaDuyet : 
		/// </summary>
		public System.Boolean? DaDuyet = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			GiangVienChoDuyetHoSoEntityData _tmp = new GiangVienChoDuyetHoSoEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaDanToc = this.MaDanToc;
			_tmp.MaTonGiao = this.MaTonGiao;
			_tmp.MaDonVi = this.MaDonVi;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaNguoiLap = this.MaNguoiLap;
			_tmp.MatKhau = this.MatKhau;
			_tmp.MaTinhTrang = this.MaTinhTrang;
			_tmp.MaQuanLy = this.MaQuanLy;
			_tmp.Ho = this.Ho;
			_tmp.TenDem = this.TenDem;
			_tmp.Ten = this.Ten;
			_tmp.NgaySinh = this.NgaySinh;
			_tmp.GioiTinh = this.GioiTinh;
			_tmp.NoiSinh = this.NoiSinh;
			_tmp.Cmnd = this.Cmnd;
			_tmp.NgayCap = this.NgayCap;
			_tmp.NoiCap = this.NoiCap;
			_tmp.DoanDang = this.DoanDang;
			_tmp.NgayVaoDoanDang = this.NgayVaoDoanDang;
			_tmp.NgayKyHopDong = this.NgayKyHopDong;
			_tmp.NgayKetThucHopDong = this.NgayKetThucHopDong;
			_tmp.HinhAnh = this.HinhAnh;
			_tmp.DiaChi = this.DiaChi;
			_tmp.ThuongTru = this.ThuongTru;
			_tmp.NoiLamViec = this.NoiLamViec;
			_tmp.Email = this.Email;
			_tmp.DienThoai = this.DienThoai;
			_tmp.SoDiDong = this.SoDiDong;
			_tmp.SoTaiKhoan = this.SoTaiKhoan;
			_tmp.TenNganHang = this.TenNganHang;
			_tmp.MaSoThue = this.MaSoThue;
			_tmp.ChiNhanh = this.ChiNhanh;
			_tmp.SoSoBaoHiem = this.SoSoBaoHiem;
			_tmp.ThoiGianBatDau = this.ThoiGianBatDau;
			_tmp.BacLuong = this.BacLuong;
			_tmp.NgayHuongLuong = this.NgayHuongLuong;
			_tmp.NamLamViec = this.NamLamViec;
			_tmp.ChuyenNganh = this.ChuyenNganh;
			_tmp.MaHeSoThuLao = this.MaHeSoThuLao;
			_tmp.Ngach = this.Ngach;
			_tmp.SoHieuCongChuc = this.SoHieuCongChuc;
			_tmp.Hrmid = this.Hrmid;
			_tmp.NoiCapBang = this.NoiCapBang;
			_tmp.KhoaTaiKhoan = this.KhoaTaiKhoan;
			_tmp.MaLoaiNhanVien = this.MaLoaiNhanVien;
			_tmp.MaNgachCongChuc = this.MaNgachCongChuc;
			_tmp.MaTrinhDoChinhTri = this.MaTrinhDoChinhTri;
			_tmp.MaTrinhDoSuPham = this.MaTrinhDoSuPham;
			_tmp.MaTrinhDoNgoaiNgu = this.MaTrinhDoNgoaiNgu;
			_tmp.MaTrinhDoTinHoc = this.MaTrinhDoTinHoc;
			_tmp.MaTrinhDoQuanLyNhaNuoc = this.MaTrinhDoQuanLyNhaNuoc;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.KhoiKienThucGiangDay = this.KhoiKienThucGiangDay;
			_tmp.NganhDaoTao = this.NganhDaoTao;
			_tmp.DonViGiangDay = this.DonViGiangDay;
			_tmp.DaDuyet = this.DaDuyet;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			GiangVienChoDuyetHoSoEntityData _tmp = new GiangVienChoDuyetHoSoEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaDanToc = this.MaDanToc;
			_tmp.MaTonGiao = this.MaTonGiao;
			_tmp.MaDonVi = this.MaDonVi;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaNguoiLap = this.MaNguoiLap;
			_tmp.MatKhau = this.MatKhau;
			_tmp.MaTinhTrang = this.MaTinhTrang;
			_tmp.MaQuanLy = this.MaQuanLy;
			_tmp.Ho = this.Ho;
			_tmp.TenDem = this.TenDem;
			_tmp.Ten = this.Ten;
			_tmp.NgaySinh = this.NgaySinh;
			_tmp.GioiTinh = this.GioiTinh;
			_tmp.NoiSinh = this.NoiSinh;
			_tmp.Cmnd = this.Cmnd;
			_tmp.NgayCap = this.NgayCap;
			_tmp.NoiCap = this.NoiCap;
			_tmp.DoanDang = this.DoanDang;
			_tmp.NgayVaoDoanDang = this.NgayVaoDoanDang;
			_tmp.NgayKyHopDong = this.NgayKyHopDong;
			_tmp.NgayKetThucHopDong = this.NgayKetThucHopDong;
			_tmp.HinhAnh = this.HinhAnh;
			_tmp.DiaChi = this.DiaChi;
			_tmp.ThuongTru = this.ThuongTru;
			_tmp.NoiLamViec = this.NoiLamViec;
			_tmp.Email = this.Email;
			_tmp.DienThoai = this.DienThoai;
			_tmp.SoDiDong = this.SoDiDong;
			_tmp.SoTaiKhoan = this.SoTaiKhoan;
			_tmp.TenNganHang = this.TenNganHang;
			_tmp.MaSoThue = this.MaSoThue;
			_tmp.ChiNhanh = this.ChiNhanh;
			_tmp.SoSoBaoHiem = this.SoSoBaoHiem;
			_tmp.ThoiGianBatDau = this.ThoiGianBatDau;
			_tmp.BacLuong = this.BacLuong;
			_tmp.NgayHuongLuong = this.NgayHuongLuong;
			_tmp.NamLamViec = this.NamLamViec;
			_tmp.ChuyenNganh = this.ChuyenNganh;
			_tmp.MaHeSoThuLao = this.MaHeSoThuLao;
			_tmp.Ngach = this.Ngach;
			_tmp.SoHieuCongChuc = this.SoHieuCongChuc;
			_tmp.Hrmid = this.Hrmid;
			_tmp.NoiCapBang = this.NoiCapBang;
			_tmp.KhoaTaiKhoan = this.KhoaTaiKhoan;
			_tmp.MaLoaiNhanVien = this.MaLoaiNhanVien;
			_tmp.MaNgachCongChuc = this.MaNgachCongChuc;
			_tmp.MaTrinhDoChinhTri = this.MaTrinhDoChinhTri;
			_tmp.MaTrinhDoSuPham = this.MaTrinhDoSuPham;
			_tmp.MaTrinhDoNgoaiNgu = this.MaTrinhDoNgoaiNgu;
			_tmp.MaTrinhDoTinHoc = this.MaTrinhDoTinHoc;
			_tmp.MaTrinhDoQuanLyNhaNuoc = this.MaTrinhDoQuanLyNhaNuoc;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.KhoiKienThucGiangDay = this.KhoiKienThucGiangDay;
			_tmp.NganhDaoTao = this.NganhDaoTao;
			_tmp.DonViGiangDay = this.DonViGiangDay;
			_tmp.DaDuyet = this.DaDuyet;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienChoDuyetHoSoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(GiangVienChoDuyetHoSoColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienChoDuyetHoSoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(GiangVienChoDuyetHoSoColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienChoDuyetHoSoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(GiangVienChoDuyetHoSoColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				GiangVienChoDuyetHoSoEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new GiangVienChoDuyetHoSoEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienChoDuyetHoSoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(GiangVienChoDuyetHoSoColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				GiangVienChoDuyetHoSoEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new GiangVienChoDuyetHoSoEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region GiangVienChoDuyetHoSoEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="GiangVienChoDuyetHoSo"/> object.
	/// </remarks>
	public class GiangVienChoDuyetHoSoEventArgs : System.EventArgs
	{
		private GiangVienChoDuyetHoSoColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the GiangVienChoDuyetHoSoEventArgs class.
		///</summary>
		public GiangVienChoDuyetHoSoEventArgs(GiangVienChoDuyetHoSoColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the GiangVienChoDuyetHoSoEventArgs class.
		///</summary>
		public GiangVienChoDuyetHoSoEventArgs(GiangVienChoDuyetHoSoColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The GiangVienChoDuyetHoSoColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="GiangVienChoDuyetHoSoColumn" />
		public GiangVienChoDuyetHoSoColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all GiangVienChoDuyetHoSo related events.
	///</summary>
	public delegate void GiangVienChoDuyetHoSoEventHandler(object sender, GiangVienChoDuyetHoSoEventArgs e);
	
	#region GiangVienChoDuyetHoSoComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class GiangVienChoDuyetHoSoComparer : System.Collections.Generic.IComparer<GiangVienChoDuyetHoSo>
	{
		GiangVienChoDuyetHoSoColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:GiangVienChoDuyetHoSoComparer"/> class.
        /// </summary>
		public GiangVienChoDuyetHoSoComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:GiangVienChoDuyetHoSoComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public GiangVienChoDuyetHoSoComparer(GiangVienChoDuyetHoSoColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="GiangVienChoDuyetHoSo"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="GiangVienChoDuyetHoSo"/> to compare.</param>
        /// <param name="b">The second <c>GiangVienChoDuyetHoSo</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(GiangVienChoDuyetHoSo a, GiangVienChoDuyetHoSo b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(GiangVienChoDuyetHoSo entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(GiangVienChoDuyetHoSo a, GiangVienChoDuyetHoSo b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public GiangVienChoDuyetHoSoColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region GiangVienChoDuyetHoSoKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="GiangVienChoDuyetHoSo"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class GiangVienChoDuyetHoSoKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the GiangVienChoDuyetHoSoKey class.
		/// </summary>
		public GiangVienChoDuyetHoSoKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the GiangVienChoDuyetHoSoKey class.
		/// </summary>
		public GiangVienChoDuyetHoSoKey(GiangVienChoDuyetHoSoBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the GiangVienChoDuyetHoSoKey class.
		/// </summary>
		public GiangVienChoDuyetHoSoKey(System.Int32 _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private GiangVienChoDuyetHoSoBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public GiangVienChoDuyetHoSoBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.Int32 _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.Int32 Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["Id"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region GiangVienChoDuyetHoSoColumn Enum
	
	/// <summary>
	/// Enumerate the GiangVienChoDuyetHoSo columns.
	/// </summary>
	[Serializable]
	public enum GiangVienChoDuyetHoSoColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		Id = 1,
		/// <summary>
		/// MaDanToc : 
		/// </summary>
		[EnumTextValue("Ma Dan Toc")]
		[ColumnEnum("MaDanToc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDanToc = 2,
		/// <summary>
		/// MaTonGiao : 
		/// </summary>
		[EnumTextValue("Ma Ton Giao")]
		[ColumnEnum("MaTonGiao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaTonGiao = 3,
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("Ma Don Vi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDonVi = 4,
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		[EnumTextValue("Ma Hoc Ham")]
		[ColumnEnum("MaHocHam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocHam = 5,
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		[EnumTextValue("Ma Hoc Vi")]
		[ColumnEnum("MaHocVi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocVi = 6,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Loai Giang Vien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien = 7,
		/// <summary>
		/// MaNguoiLap : 
		/// </summary>
		[EnumTextValue("Ma Nguoi Lap")]
		[ColumnEnum("MaNguoiLap", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaNguoiLap = 8,
		/// <summary>
		/// MatKhau : 
		/// </summary>
		[EnumTextValue("Mat Khau")]
		[ColumnEnum("MatKhau", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MatKhau = 9,
		/// <summary>
		/// MaTinhTrang : 
		/// </summary>
		[EnumTextValue("Ma Tinh Trang")]
		[ColumnEnum("MaTinhTrang", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTinhTrang = 10,
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		[EnumTextValue("Ma Quan Ly")]
		[ColumnEnum("MaQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaQuanLy = 11,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ho = 12,
		/// <summary>
		/// TenDem : 
		/// </summary>
		[EnumTextValue("Ten Dem")]
		[ColumnEnum("TenDem", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		TenDem = 13,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten = 14,
		/// <summary>
		/// NgaySinh : 
		/// </summary>
		[EnumTextValue("Ngay Sinh")]
		[ColumnEnum("NgaySinh", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgaySinh = 15,
		/// <summary>
		/// GioiTinh : 
		/// </summary>
		[EnumTextValue("Gioi Tinh")]
		[ColumnEnum("GioiTinh", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		GioiTinh = 16,
		/// <summary>
		/// NoiSinh : 
		/// </summary>
		[EnumTextValue("Noi Sinh")]
		[ColumnEnum("NoiSinh", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		NoiSinh = 17,
		/// <summary>
		/// Cmnd : 
		/// </summary>
		[EnumTextValue("Cmnd")]
		[ColumnEnum("Cmnd", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		Cmnd = 18,
		/// <summary>
		/// NgayCap : 
		/// </summary>
		[EnumTextValue("Ngay Cap")]
		[ColumnEnum("NgayCap", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgayCap = 19,
		/// <summary>
		/// NoiCap : 
		/// </summary>
		[EnumTextValue("Noi Cap")]
		[ColumnEnum("NoiCap", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		NoiCap = 20,
		/// <summary>
		/// DoanDang : 
		/// </summary>
		[EnumTextValue("Doan Dang")]
		[ColumnEnum("DoanDang", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DoanDang = 21,
		/// <summary>
		/// NgayVaoDoanDang : 
		/// </summary>
		[EnumTextValue("Ngay Vao Doan Dang")]
		[ColumnEnum("NgayVaoDoanDang", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgayVaoDoanDang = 22,
		/// <summary>
		/// NgayKyHopDong : 
		/// </summary>
		[EnumTextValue("Ngay Ky Hop Dong")]
		[ColumnEnum("NgayKyHopDong", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayKyHopDong = 23,
		/// <summary>
		/// NgayKetThucHopDong : 
		/// </summary>
		[EnumTextValue("Ngay Ket Thuc Hop Dong")]
		[ColumnEnum("NgayKetThucHopDong", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayKetThucHopDong = 24,
		/// <summary>
		/// HinhAnh : 
		/// </summary>
		[EnumTextValue("Hinh Anh")]
		[ColumnEnum("HinhAnh", typeof(System.Byte[]), System.Data.DbType.Binary, false, false, true)]
		HinhAnh = 25,
		/// <summary>
		/// DiaChi : 
		/// </summary>
		[EnumTextValue("Dia Chi")]
		[ColumnEnum("DiaChi", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		DiaChi = 26,
		/// <summary>
		/// ThuongTru : 
		/// </summary>
		[EnumTextValue("Thuong Tru")]
		[ColumnEnum("ThuongTru", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		ThuongTru = 27,
		/// <summary>
		/// NoiLamViec : 
		/// </summary>
		[EnumTextValue("Noi Lam Viec")]
		[ColumnEnum("NoiLamViec", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		NoiLamViec = 28,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Email = 29,
		/// <summary>
		/// DienThoai : 
		/// </summary>
		[EnumTextValue("Dien Thoai")]
		[ColumnEnum("DienThoai", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		DienThoai = 30,
		/// <summary>
		/// SoDiDong : 
		/// </summary>
		[EnumTextValue("So Di Dong")]
		[ColumnEnum("SoDiDong", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		SoDiDong = 31,
		/// <summary>
		/// SoTaiKhoan : 
		/// </summary>
		[EnumTextValue("So Tai Khoan")]
		[ColumnEnum("SoTaiKhoan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		SoTaiKhoan = 32,
		/// <summary>
		/// TenNganHang : 
		/// </summary>
		[EnumTextValue("Ten Ngan Hang")]
		[ColumnEnum("TenNganHang", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TenNganHang = 33,
		/// <summary>
		/// MaSoThue : 
		/// </summary>
		[EnumTextValue("Ma So Thue")]
		[ColumnEnum("MaSoThue", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaSoThue = 34,
		/// <summary>
		/// ChiNhanh : 
		/// </summary>
		[EnumTextValue("Chi Nhanh")]
		[ColumnEnum("ChiNhanh", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChiNhanh = 35,
		/// <summary>
		/// SoSoBaoHiem : 
		/// </summary>
		[EnumTextValue("So So Bao Hiem")]
		[ColumnEnum("SoSoBaoHiem", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		SoSoBaoHiem = 36,
		/// <summary>
		/// ThoiGianBatDau : 
		/// </summary>
		[EnumTextValue("Thoi Gian Bat Dau")]
		[ColumnEnum("ThoiGianBatDau", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ThoiGianBatDau = 37,
		/// <summary>
		/// BacLuong : 
		/// </summary>
		[EnumTextValue("Bac Luong")]
		[ColumnEnum("BacLuong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		BacLuong = 38,
		/// <summary>
		/// NgayHuongLuong : 
		/// </summary>
		[EnumTextValue("Ngay Huong Luong")]
		[ColumnEnum("NgayHuongLuong", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NgayHuongLuong = 39,
		/// <summary>
		/// NamLamViec : 
		/// </summary>
		[EnumTextValue("Nam Lam Viec")]
		[ColumnEnum("NamLamViec", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NamLamViec = 40,
		/// <summary>
		/// ChuyenNganh : 
		/// </summary>
		[EnumTextValue("Chuyen Nganh")]
		[ColumnEnum("ChuyenNganh", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		ChuyenNganh = 41,
		/// <summary>
		/// MaHeSoThuLao : 
		/// </summary>
		[EnumTextValue("Ma He So Thu Lao")]
		[ColumnEnum("MaHeSoThuLao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHeSoThuLao = 42,
		/// <summary>
		/// Ngach : 
		/// </summary>
		[EnumTextValue("Ngach")]
		[ColumnEnum("Ngach", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		Ngach = 43,
		/// <summary>
		/// SoHieuCongChuc : 
		/// </summary>
		[EnumTextValue("So Hieu Cong Chuc")]
		[ColumnEnum("SoHieuCongChuc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		SoHieuCongChuc = 44,
		/// <summary>
		/// Hrmid : 
		/// </summary>
		[EnumTextValue("Hrmid")]
		[ColumnEnum("HRMID", typeof(System.Guid), System.Data.DbType.Guid, false, false, true)]
		Hrmid = 45,
		/// <summary>
		/// NoiCapBang : 
		/// </summary>
		[EnumTextValue("Noi Cap Bang")]
		[ColumnEnum("NoiCapBang", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		NoiCapBang = 46,
		/// <summary>
		/// KhoaTaiKhoan : 
		/// </summary>
		[EnumTextValue("Khoa Tai Khoan")]
		[ColumnEnum("KhoaTaiKhoan", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		KhoaTaiKhoan = 47,
		/// <summary>
		/// MaLoaiNhanVien : 
		/// </summary>
		[EnumTextValue("Ma Loai Nhan Vien")]
		[ColumnEnum("MaLoaiNhanVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiNhanVien = 48,
		/// <summary>
		/// MaNgachCongChuc : 
		/// </summary>
		[EnumTextValue("Ma Ngach Cong Chuc")]
		[ColumnEnum("MaNgachCongChuc", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaNgachCongChuc = 49,
		/// <summary>
		/// MaTrinhDoChinhTri : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Chinh Tri")]
		[ColumnEnum("MaTrinhDoChinhTri", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoChinhTri = 50,
		/// <summary>
		/// MaTrinhDoSuPham : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Su Pham")]
		[ColumnEnum("MaTrinhDoSuPham", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoSuPham = 51,
		/// <summary>
		/// MaTrinhDoNgoaiNgu : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Ngoai Ngu")]
		[ColumnEnum("MaTrinhDoNgoaiNgu", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoNgoaiNgu = 52,
		/// <summary>
		/// MaTrinhDoTinHoc : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Tin Hoc")]
		[ColumnEnum("MaTrinhDoTinHoc", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoTinHoc = 53,
		/// <summary>
		/// MaTrinhDoQuanLyNhaNuoc : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Quan Ly Nha Nuoc")]
		[ColumnEnum("MaTrinhDoQuanLyNhaNuoc", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoQuanLyNhaNuoc = 54,
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		[EnumTextValue("Nguoi Cap Nhat")]
		[ColumnEnum("NguoiCapNhat", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		NguoiCapNhat = 55,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("Ngay Cap Nhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NgayCapNhat = 56,
		/// <summary>
		/// KhoiKienThucGiangDay : 
		/// </summary>
		[EnumTextValue("Khoi Kien Thuc Giang Day")]
		[ColumnEnum("KhoiKienThucGiangDay", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		KhoiKienThucGiangDay = 57,
		/// <summary>
		/// NganhDaoTao : 
		/// </summary>
		[EnumTextValue("Nganh Dao Tao")]
		[ColumnEnum("NganhDaoTao", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		NganhDaoTao = 58,
		/// <summary>
		/// DonViGiangDay : 
		/// </summary>
		[EnumTextValue("Don Vi Giang Day")]
		[ColumnEnum("DonViGiangDay", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		DonViGiangDay = 59,
		/// <summary>
		/// DaDuyet : 
		/// </summary>
		[EnumTextValue("Da Duyet")]
		[ColumnEnum("DaDuyet", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DaDuyet = 60
	}//End enum

	#endregion GiangVienChoDuyetHoSoColumn Enum

} // end namespace

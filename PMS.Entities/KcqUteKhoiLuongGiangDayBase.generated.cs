
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file KcqUteKhoiLuongGiangDay.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'KcqUte_KhoiLuongGiangDay' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class KcqUteKhoiLuongGiangDayBase : EntityBase, IKcqUteKhoiLuongGiangDay, IEntityId<KcqUteKhoiLuongGiangDayKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private KcqUteKhoiLuongGiangDayEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private KcqUteKhoiLuongGiangDayEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private KcqUteKhoiLuongGiangDayEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<KcqUteKhoiLuongGiangDay> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event KcqUteKhoiLuongGiangDayEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event KcqUteKhoiLuongGiangDayEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="KcqUteKhoiLuongGiangDayBase"/> instance.
		///</summary>
		public KcqUteKhoiLuongGiangDayBase()
		{
			this.entityData = new KcqUteKhoiLuongGiangDayEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="KcqUteKhoiLuongGiangDayBase"/> instance.
		///</summary>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_nhomMonHoc"></param>
		///<param name="_maHocPhan"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_maGiangVienQuanLy"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSo"></param>
		///<param name="_lopClc"></param>
		///<param name="_soTietDayChuNhat"></param>
		///<param name="_soTiet"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maHocHam"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_maHocVi"></param>
		///<param name="_nhom"></param>
		///<param name="_maLoaiHocPhanGanMoi"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_maDot"></param>
		public KcqUteKhoiLuongGiangDayBase(System.String _maMonHoc, System.String _tenMonHoc, 
			System.String _nhomMonHoc, System.String _maHocPhan, System.String _namHoc, 
			System.String _hocKy, System.String _maLopHocPhan, System.String _maLop, 
			System.String _maGiangVienQuanLy, System.Int32? _soTinChi, System.Int32? _siSo, 
			System.Boolean? _lopClc, System.Int32? _soTietDayChuNhat, System.Decimal? _soTiet, 
			System.Int32? _maLoaiHocPhan, System.Int32? _maLoaiGiangVien, System.Int32? _maHocHam, 
			System.DateTime? _ngayCapNhat, System.Int32? _maHocVi, System.String _nhom, 
			System.String _maLoaiHocPhanGanMoi, System.String _maDiaDiem, System.String _maDot)
		{
			this.entityData = new KcqUteKhoiLuongGiangDayEntityData();
			this.backupData = null;

			this.MaMonHoc = _maMonHoc;
			this.TenMonHoc = _tenMonHoc;
			this.NhomMonHoc = _nhomMonHoc;
			this.MaHocPhan = _maHocPhan;
			this.NamHoc = _namHoc;
			this.HocKy = _hocKy;
			this.MaLopHocPhan = _maLopHocPhan;
			this.MaLop = _maLop;
			this.MaGiangVienQuanLy = _maGiangVienQuanLy;
			this.SoTinChi = _soTinChi;
			this.SiSo = _siSo;
			this.LopClc = _lopClc;
			this.SoTietDayChuNhat = _soTietDayChuNhat;
			this.SoTiet = _soTiet;
			this.MaLoaiHocPhan = _maLoaiHocPhan;
			this.MaLoaiGiangVien = _maLoaiGiangVien;
			this.MaHocHam = _maHocHam;
			this.NgayCapNhat = _ngayCapNhat;
			this.MaHocVi = _maHocVi;
			this.Nhom = _nhom;
			this.MaLoaiHocPhanGanMoi = _maLoaiHocPhanGanMoi;
			this.MaDiaDiem = _maDiaDiem;
			this.MaDot = _maDot;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="KcqUteKhoiLuongGiangDay"/> instance.
		///</summary>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_nhomMonHoc"></param>
		///<param name="_maHocPhan"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_maGiangVienQuanLy"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSo"></param>
		///<param name="_lopClc"></param>
		///<param name="_soTietDayChuNhat"></param>
		///<param name="_soTiet"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maHocHam"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_maHocVi"></param>
		///<param name="_nhom"></param>
		///<param name="_maLoaiHocPhanGanMoi"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_maDot"></param>
		public static KcqUteKhoiLuongGiangDay CreateKcqUteKhoiLuongGiangDay(System.String _maMonHoc, System.String _tenMonHoc, 
			System.String _nhomMonHoc, System.String _maHocPhan, System.String _namHoc, 
			System.String _hocKy, System.String _maLopHocPhan, System.String _maLop, 
			System.String _maGiangVienQuanLy, System.Int32? _soTinChi, System.Int32? _siSo, 
			System.Boolean? _lopClc, System.Int32? _soTietDayChuNhat, System.Decimal? _soTiet, 
			System.Int32? _maLoaiHocPhan, System.Int32? _maLoaiGiangVien, System.Int32? _maHocHam, 
			System.DateTime? _ngayCapNhat, System.Int32? _maHocVi, System.String _nhom, 
			System.String _maLoaiHocPhanGanMoi, System.String _maDiaDiem, System.String _maDot)
		{
			KcqUteKhoiLuongGiangDay newKcqUteKhoiLuongGiangDay = new KcqUteKhoiLuongGiangDay();
			newKcqUteKhoiLuongGiangDay.MaMonHoc = _maMonHoc;
			newKcqUteKhoiLuongGiangDay.TenMonHoc = _tenMonHoc;
			newKcqUteKhoiLuongGiangDay.NhomMonHoc = _nhomMonHoc;
			newKcqUteKhoiLuongGiangDay.MaHocPhan = _maHocPhan;
			newKcqUteKhoiLuongGiangDay.NamHoc = _namHoc;
			newKcqUteKhoiLuongGiangDay.HocKy = _hocKy;
			newKcqUteKhoiLuongGiangDay.MaLopHocPhan = _maLopHocPhan;
			newKcqUteKhoiLuongGiangDay.MaLop = _maLop;
			newKcqUteKhoiLuongGiangDay.MaGiangVienQuanLy = _maGiangVienQuanLy;
			newKcqUteKhoiLuongGiangDay.SoTinChi = _soTinChi;
			newKcqUteKhoiLuongGiangDay.SiSo = _siSo;
			newKcqUteKhoiLuongGiangDay.LopClc = _lopClc;
			newKcqUteKhoiLuongGiangDay.SoTietDayChuNhat = _soTietDayChuNhat;
			newKcqUteKhoiLuongGiangDay.SoTiet = _soTiet;
			newKcqUteKhoiLuongGiangDay.MaLoaiHocPhan = _maLoaiHocPhan;
			newKcqUteKhoiLuongGiangDay.MaLoaiGiangVien = _maLoaiGiangVien;
			newKcqUteKhoiLuongGiangDay.MaHocHam = _maHocHam;
			newKcqUteKhoiLuongGiangDay.NgayCapNhat = _ngayCapNhat;
			newKcqUteKhoiLuongGiangDay.MaHocVi = _maHocVi;
			newKcqUteKhoiLuongGiangDay.Nhom = _nhom;
			newKcqUteKhoiLuongGiangDay.MaLoaiHocPhanGanMoi = _maLoaiHocPhanGanMoi;
			newKcqUteKhoiLuongGiangDay.MaDiaDiem = _maDiaDiem;
			newKcqUteKhoiLuongGiangDay.MaDot = _maDot;
			return newKcqUteKhoiLuongGiangDay;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
				
                OnPropertyChanging("Id");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this.entityData.MaMonHoc; 
			}
			
			set
			{
				if (this.entityData.MaMonHoc == value)
					return;
				
                OnPropertyChanging("MaMonHoc");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaMonHoc, this.entityData.MaMonHoc);
				this.entityData.MaMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaMonHoc, this.entityData.MaMonHoc);
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this.entityData.TenMonHoc; 
			}
			
			set
			{
				if (this.entityData.TenMonHoc == value)
					return;
				
                OnPropertyChanging("TenMonHoc");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.TenMonHoc, this.entityData.TenMonHoc);
				this.entityData.TenMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.TenMonHoc, this.entityData.TenMonHoc);
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NhomMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NhomMonHoc
		{
			get
			{
				return this.entityData.NhomMonHoc; 
			}
			
			set
			{
				if (this.entityData.NhomMonHoc == value)
					return;
				
                OnPropertyChanging("NhomMonHoc");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.NhomMonHoc, this.entityData.NhomMonHoc);
				this.entityData.NhomMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.NhomMonHoc, this.entityData.NhomMonHoc);
				OnPropertyChanged("NhomMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaHocPhan
		{
			get
			{
				return this.entityData.MaHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaHocPhan == value)
					return;
				
                OnPropertyChanging("MaHocPhan");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaHocPhan, this.entityData.MaHocPhan);
				this.entityData.MaHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaHocPhan, this.entityData.MaHocPhan);
				OnPropertyChanged("MaHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NamHoc
		{
			get
			{
				return this.entityData.NamHoc; 
			}
			
			set
			{
				if (this.entityData.NamHoc == value)
					return;
				
                OnPropertyChanging("NamHoc");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.NamHoc, this.entityData.NamHoc);
				this.entityData.NamHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.NamHoc, this.entityData.NamHoc);
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String HocKy
		{
			get
			{
				return this.entityData.HocKy; 
			}
			
			set
			{
				if (this.entityData.HocKy == value)
					return;
				
                OnPropertyChanging("HocKy");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.HocKy, this.entityData.HocKy);
				this.entityData.HocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.HocKy, this.entityData.HocKy);
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this.entityData.MaLopHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaLopHocPhan == value)
					return;
				
                OnPropertyChanging("MaLopHocPhan");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				this.entityData.MaLopHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String MaLop
		{
			get
			{
				return this.entityData.MaLop; 
			}
			
			set
			{
				if (this.entityData.MaLop == value)
					return;
				
                OnPropertyChanging("MaLop");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaLop, this.entityData.MaLop);
				this.entityData.MaLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaLop, this.entityData.MaLop);
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaGiangVienQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaGiangVienQuanLy
		{
			get
			{
				return this.entityData.MaGiangVienQuanLy; 
			}
			
			set
			{
				if (this.entityData.MaGiangVienQuanLy == value)
					return;
				
                OnPropertyChanging("MaGiangVienQuanLy");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaGiangVienQuanLy, this.entityData.MaGiangVienQuanLy);
				this.entityData.MaGiangVienQuanLy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaGiangVienQuanLy, this.entityData.MaGiangVienQuanLy);
				OnPropertyChanged("MaGiangVienQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTinChi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoTinChi
		{
			get
			{
				return this.entityData.SoTinChi; 
			}
			
			set
			{
				if (this.entityData.SoTinChi == value)
					return;
				
                OnPropertyChanging("SoTinChi");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.SoTinChi, this.entityData.SoTinChi);
				this.entityData.SoTinChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.SoTinChi, this.entityData.SoTinChi);
				OnPropertyChanged("SoTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SiSo property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SiSo
		{
			get
			{
				return this.entityData.SiSo; 
			}
			
			set
			{
				if (this.entityData.SiSo == value)
					return;
				
                OnPropertyChanging("SiSo");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.SiSo, this.entityData.SiSo);
				this.entityData.SiSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.SiSo, this.entityData.SiSo);
				OnPropertyChanged("SiSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LopClc property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? LopClc
		{
			get
			{
				return this.entityData.LopClc; 
			}
			
			set
			{
				if (this.entityData.LopClc == value)
					return;
				
                OnPropertyChanging("LopClc");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.LopClc, this.entityData.LopClc);
				this.entityData.LopClc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.LopClc, this.entityData.LopClc);
				OnPropertyChanged("LopClc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTietDayChuNhat property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoTietDayChuNhat
		{
			get
			{
				return this.entityData.SoTietDayChuNhat; 
			}
			
			set
			{
				if (this.entityData.SoTietDayChuNhat == value)
					return;
				
                OnPropertyChanging("SoTietDayChuNhat");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.SoTietDayChuNhat, this.entityData.SoTietDayChuNhat);
				this.entityData.SoTietDayChuNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.SoTietDayChuNhat, this.entityData.SoTietDayChuNhat);
				OnPropertyChanged("SoTietDayChuNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTiet property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTiet
		{
			get
			{
				return this.entityData.SoTiet; 
			}
			
			set
			{
				if (this.entityData.SoTiet == value)
					return;
				
                OnPropertyChanging("SoTiet");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.SoTiet, this.entityData.SoTiet);
				this.entityData.SoTiet = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.SoTiet, this.entityData.SoTiet);
				OnPropertyChanged("SoTiet");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaLoaiHocPhan
		{
			get
			{
				return this.entityData.MaLoaiHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaLoaiHocPhan == value)
					return;
				
                OnPropertyChanging("MaLoaiHocPhan");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaLoaiHocPhan, this.entityData.MaLoaiHocPhan);
				this.entityData.MaLoaiHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaLoaiHocPhan, this.entityData.MaLoaiHocPhan);
				OnPropertyChanged("MaLoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this.entityData.MaLoaiGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaLoaiGiangVien == value)
					return;
				
                OnPropertyChanging("MaLoaiGiangVien");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				this.entityData.MaLoaiGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocHam property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocHam
		{
			get
			{
				return this.entityData.MaHocHam; 
			}
			
			set
			{
				if (this.entityData.MaHocHam == value)
					return;
				
                OnPropertyChanging("MaHocHam");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaHocHam, this.entityData.MaHocHam);
				this.entityData.MaHocHam = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaHocHam, this.entityData.MaHocHam);
				OnPropertyChanged("MaHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayCapNhat
		{
			get
			{
				return this.entityData.NgayCapNhat; 
			}
			
			set
			{
				if (this.entityData.NgayCapNhat == value)
					return;
				
                OnPropertyChanging("NgayCapNhat");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				this.entityData.NgayCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocVi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocVi
		{
			get
			{
				return this.entityData.MaHocVi; 
			}
			
			set
			{
				if (this.entityData.MaHocVi == value)
					return;
				
                OnPropertyChanging("MaHocVi");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaHocVi, this.entityData.MaHocVi);
				this.entityData.MaHocVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaHocVi, this.entityData.MaHocVi);
				OnPropertyChanged("MaHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Nhom property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Nhom
		{
			get
			{
				return this.entityData.Nhom; 
			}
			
			set
			{
				if (this.entityData.Nhom == value)
					return;
				
                OnPropertyChanging("Nhom");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.Nhom, this.entityData.Nhom);
				this.entityData.Nhom = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.Nhom, this.entityData.Nhom);
				OnPropertyChanged("Nhom");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiHocPhanGanMoi property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaLoaiHocPhanGanMoi
		{
			get
			{
				return this.entityData.MaLoaiHocPhanGanMoi; 
			}
			
			set
			{
				if (this.entityData.MaLoaiHocPhanGanMoi == value)
					return;
				
                OnPropertyChanging("MaLoaiHocPhanGanMoi");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaLoaiHocPhanGanMoi, this.entityData.MaLoaiHocPhanGanMoi);
				this.entityData.MaLoaiHocPhanGanMoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaLoaiHocPhanGanMoi, this.entityData.MaLoaiHocPhanGanMoi);
				OnPropertyChanged("MaLoaiHocPhanGanMoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaDiaDiem
		{
			get
			{
				return this.entityData.MaDiaDiem; 
			}
			
			set
			{
				if (this.entityData.MaDiaDiem == value)
					return;
				
                OnPropertyChanging("MaDiaDiem");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaDiaDiem, this.entityData.MaDiaDiem);
				this.entityData.MaDiaDiem = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaDiaDiem, this.entityData.MaDiaDiem);
				OnPropertyChanged("MaDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaDot property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MaDot
		{
			get
			{
				return this.entityData.MaDot; 
			}
			
			set
			{
				if (this.entityData.MaDot == value)
					return;
				
                OnPropertyChanging("MaDot");                    
				OnColumnChanging(KcqUteKhoiLuongGiangDayColumn.MaDot, this.entityData.MaDot);
				this.entityData.MaDot = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KcqUteKhoiLuongGiangDayColumn.MaDot, this.entityData.MaDot);
				OnPropertyChanged("MaDot");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of KcqUteKhoiLuongQuyDoi objects
		///	which are related to this object through the relation FK_KcqUte_KhoiLuongQuyDoi_KcqUte_KhoiLuongGiangDay
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<KcqUteKhoiLuongQuyDoi> KcqUteKhoiLuongQuyDoiCollection
		{
			get { return entityData.KcqUteKhoiLuongQuyDoiCollection; }
			set { entityData.KcqUteKhoiLuongQuyDoiCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaMonHoc", "Ma Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenMonHoc", "Ten Mon Hoc", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NhomMonHoc", "Nhom Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaHocPhan", "Ma Hoc Phan", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NamHoc", "Nam Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HocKy", "Hoc Ky", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLopHocPhan", "Ma Lop Hoc Phan", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLop", "Ma Lop", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaGiangVienQuanLy", "Ma Giang Vien Quan Ly", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Nhom", "Nhom", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLoaiHocPhanGanMoi", "Ma Loai Hoc Phan Gan Moi", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaDiaDiem", "Ma Dia Diem", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaDot", "Ma Dot", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "KcqUte_KhoiLuongGiangDay"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Id", "MaMonHoc", "TenMonHoc", "NhomMonHoc", "MaHocPhan", "NamHoc", "HocKy", "MaLopHocPhan", "MaLop", "MaGiangVienQuanLy", "SoTinChi", "SiSo", "LopClc", "SoTietDayChuNhat", "SoTiet", "MaLoaiHocPhan", "MaLoaiGiangVien", "MaHocHam", "NgayCapNhat", "MaHocVi", "Nhom", "MaLoaiHocPhanGanMoi", "MaDiaDiem", "MaDot"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as KcqUteKhoiLuongGiangDayEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (KcqUteKhoiLuongGiangDay) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<KcqUteKhoiLuongGiangDay>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as KcqUteKhoiLuongGiangDay);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed KcqUteKhoiLuongGiangDay Entity 
		///</summary>
		protected virtual KcqUteKhoiLuongGiangDay Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			KcqUteKhoiLuongGiangDay copy = new KcqUteKhoiLuongGiangDay();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.Id = this.Id;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.NhomMonHoc = this.NhomMonHoc;
				copy.MaHocPhan = this.MaHocPhan;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.MaLop = this.MaLop;
				copy.MaGiangVienQuanLy = this.MaGiangVienQuanLy;
				copy.SoTinChi = this.SoTinChi;
				copy.SiSo = this.SiSo;
				copy.LopClc = this.LopClc;
				copy.SoTietDayChuNhat = this.SoTietDayChuNhat;
				copy.SoTiet = this.SoTiet;
				copy.MaLoaiHocPhan = this.MaLoaiHocPhan;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.MaHocHam = this.MaHocHam;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.MaHocVi = this.MaHocVi;
				copy.Nhom = this.Nhom;
				copy.MaLoaiHocPhanGanMoi = this.MaLoaiHocPhanGanMoi;
				copy.MaDiaDiem = this.MaDiaDiem;
				copy.MaDot = this.MaDot;
			
		
			//deep copy nested objects
			copy.KcqUteKhoiLuongQuyDoiCollection = (TList<KcqUteKhoiLuongQuyDoi>) MakeCopyOf(this.KcqUteKhoiLuongQuyDoiCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed KcqUteKhoiLuongGiangDay Entity 
		///</summary>
		public virtual KcqUteKhoiLuongGiangDay Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed KcqUteKhoiLuongGiangDay Entity which is a deep copy of the current entity.
		///</summary>
		public virtual KcqUteKhoiLuongGiangDay DeepCopy()
		{
			return EntityHelper.Clone<KcqUteKhoiLuongGiangDay>(this as KcqUteKhoiLuongGiangDay);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as KcqUteKhoiLuongGiangDayEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new KcqUteKhoiLuongGiangDayEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as KcqUteKhoiLuongGiangDayEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(KcqUteKhoiLuongGiangDayColumn column)
		{
			switch(column)
			{
					case KcqUteKhoiLuongGiangDayColumn.Id:
					return entityData.Id != _originalData.Id;
					case KcqUteKhoiLuongGiangDayColumn.MaMonHoc:
					return entityData.MaMonHoc != _originalData.MaMonHoc;
					case KcqUteKhoiLuongGiangDayColumn.TenMonHoc:
					return entityData.TenMonHoc != _originalData.TenMonHoc;
					case KcqUteKhoiLuongGiangDayColumn.NhomMonHoc:
					return entityData.NhomMonHoc != _originalData.NhomMonHoc;
					case KcqUteKhoiLuongGiangDayColumn.MaHocPhan:
					return entityData.MaHocPhan != _originalData.MaHocPhan;
					case KcqUteKhoiLuongGiangDayColumn.NamHoc:
					return entityData.NamHoc != _originalData.NamHoc;
					case KcqUteKhoiLuongGiangDayColumn.HocKy:
					return entityData.HocKy != _originalData.HocKy;
					case KcqUteKhoiLuongGiangDayColumn.MaLopHocPhan:
					return entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
					case KcqUteKhoiLuongGiangDayColumn.MaLop:
					return entityData.MaLop != _originalData.MaLop;
					case KcqUteKhoiLuongGiangDayColumn.MaGiangVienQuanLy:
					return entityData.MaGiangVienQuanLy != _originalData.MaGiangVienQuanLy;
					case KcqUteKhoiLuongGiangDayColumn.SoTinChi:
					return entityData.SoTinChi != _originalData.SoTinChi;
					case KcqUteKhoiLuongGiangDayColumn.SiSo:
					return entityData.SiSo != _originalData.SiSo;
					case KcqUteKhoiLuongGiangDayColumn.LopClc:
					return entityData.LopClc != _originalData.LopClc;
					case KcqUteKhoiLuongGiangDayColumn.SoTietDayChuNhat:
					return entityData.SoTietDayChuNhat != _originalData.SoTietDayChuNhat;
					case KcqUteKhoiLuongGiangDayColumn.SoTiet:
					return entityData.SoTiet != _originalData.SoTiet;
					case KcqUteKhoiLuongGiangDayColumn.MaLoaiHocPhan:
					return entityData.MaLoaiHocPhan != _originalData.MaLoaiHocPhan;
					case KcqUteKhoiLuongGiangDayColumn.MaLoaiGiangVien:
					return entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
					case KcqUteKhoiLuongGiangDayColumn.MaHocHam:
					return entityData.MaHocHam != _originalData.MaHocHam;
					case KcqUteKhoiLuongGiangDayColumn.NgayCapNhat:
					return entityData.NgayCapNhat != _originalData.NgayCapNhat;
					case KcqUteKhoiLuongGiangDayColumn.MaHocVi:
					return entityData.MaHocVi != _originalData.MaHocVi;
					case KcqUteKhoiLuongGiangDayColumn.Nhom:
					return entityData.Nhom != _originalData.Nhom;
					case KcqUteKhoiLuongGiangDayColumn.MaLoaiHocPhanGanMoi:
					return entityData.MaLoaiHocPhanGanMoi != _originalData.MaLoaiHocPhanGanMoi;
					case KcqUteKhoiLuongGiangDayColumn.MaDiaDiem:
					return entityData.MaDiaDiem != _originalData.MaDiaDiem;
					case KcqUteKhoiLuongGiangDayColumn.MaDot:
					return entityData.MaDot != _originalData.MaDot;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< KcqUteKhoiLuongGiangDayColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.MaMonHoc != _originalData.MaMonHoc;
			result = result || entityData.TenMonHoc != _originalData.TenMonHoc;
			result = result || entityData.NhomMonHoc != _originalData.NhomMonHoc;
			result = result || entityData.MaHocPhan != _originalData.MaHocPhan;
			result = result || entityData.NamHoc != _originalData.NamHoc;
			result = result || entityData.HocKy != _originalData.HocKy;
			result = result || entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
			result = result || entityData.MaLop != _originalData.MaLop;
			result = result || entityData.MaGiangVienQuanLy != _originalData.MaGiangVienQuanLy;
			result = result || entityData.SoTinChi != _originalData.SoTinChi;
			result = result || entityData.SiSo != _originalData.SiSo;
			result = result || entityData.LopClc != _originalData.LopClc;
			result = result || entityData.SoTietDayChuNhat != _originalData.SoTietDayChuNhat;
			result = result || entityData.SoTiet != _originalData.SoTiet;
			result = result || entityData.MaLoaiHocPhan != _originalData.MaLoaiHocPhan;
			result = result || entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
			result = result || entityData.MaHocHam != _originalData.MaHocHam;
			result = result || entityData.NgayCapNhat != _originalData.NgayCapNhat;
			result = result || entityData.MaHocVi != _originalData.MaHocVi;
			result = result || entityData.Nhom != _originalData.Nhom;
			result = result || entityData.MaLoaiHocPhanGanMoi != _originalData.MaLoaiHocPhanGanMoi;
			result = result || entityData.MaDiaDiem != _originalData.MaDiaDiem;
			result = result || entityData.MaDot != _originalData.MaDot;
			return result;
		}	
		
		///<summary>
		///  Returns a KcqUteKhoiLuongGiangDay Entity with the original data.
		///</summary>
		public KcqUteKhoiLuongGiangDay GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateKcqUteKhoiLuongGiangDay(
				_originalData.MaMonHoc,
				_originalData.TenMonHoc,
				_originalData.NhomMonHoc,
				_originalData.MaHocPhan,
				_originalData.NamHoc,
				_originalData.HocKy,
				_originalData.MaLopHocPhan,
				_originalData.MaLop,
				_originalData.MaGiangVienQuanLy,
				_originalData.SoTinChi,
				_originalData.SiSo,
				_originalData.LopClc,
				_originalData.SoTietDayChuNhat,
				_originalData.SoTiet,
				_originalData.MaLoaiHocPhan,
				_originalData.MaLoaiGiangVien,
				_originalData.MaHocHam,
				_originalData.NgayCapNhat,
				_originalData.MaHocVi,
				_originalData.Nhom,
				_originalData.MaLoaiHocPhanGanMoi,
				_originalData.MaDiaDiem,
				_originalData.MaDot
				);
				
			return (KcqUteKhoiLuongGiangDay)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="KcqUteKhoiLuongGiangDayBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is KcqUteKhoiLuongGiangDayBase)
				return ValueEquals(this, (KcqUteKhoiLuongGiangDayBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="KcqUteKhoiLuongGiangDayBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString()).GetHashCode() ^ 
					((this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString()).GetHashCode() ^ 
					((this.NhomMonHoc == null) ? string.Empty : this.NhomMonHoc.ToString()).GetHashCode() ^ 
					((this.MaHocPhan == null) ? string.Empty : this.MaHocPhan.ToString()).GetHashCode() ^ 
					((this.NamHoc == null) ? string.Empty : this.NamHoc.ToString()).GetHashCode() ^ 
					((this.HocKy == null) ? string.Empty : this.HocKy.ToString()).GetHashCode() ^ 
					((this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString()).GetHashCode() ^ 
					((this.MaLop == null) ? string.Empty : this.MaLop.ToString()).GetHashCode() ^ 
					((this.MaGiangVienQuanLy == null) ? string.Empty : this.MaGiangVienQuanLy.ToString()).GetHashCode() ^ 
					((this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString()).GetHashCode() ^ 
					((this.SiSo == null) ? string.Empty : this.SiSo.ToString()).GetHashCode() ^ 
					((this.LopClc == null) ? string.Empty : this.LopClc.ToString()).GetHashCode() ^ 
					((this.SoTietDayChuNhat == null) ? string.Empty : this.SoTietDayChuNhat.ToString()).GetHashCode() ^ 
					((this.SoTiet == null) ? string.Empty : this.SoTiet.ToString()).GetHashCode() ^ 
					((this.MaLoaiHocPhan == null) ? string.Empty : this.MaLoaiHocPhan.ToString()).GetHashCode() ^ 
					((this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString()).GetHashCode() ^ 
					((this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString()).GetHashCode() ^ 
					((this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString()).GetHashCode() ^ 
					((this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString()).GetHashCode() ^ 
					((this.Nhom == null) ? string.Empty : this.Nhom.ToString()).GetHashCode() ^ 
					((this.MaLoaiHocPhanGanMoi == null) ? string.Empty : this.MaLoaiHocPhanGanMoi.ToString()).GetHashCode() ^ 
					((this.MaDiaDiem == null) ? string.Empty : this.MaDiaDiem.ToString()).GetHashCode() ^ 
					((this.MaDot == null) ? string.Empty : this.MaDot.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="KcqUteKhoiLuongGiangDayBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(KcqUteKhoiLuongGiangDayBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="KcqUteKhoiLuongGiangDayBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="KcqUteKhoiLuongGiangDayBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="KcqUteKhoiLuongGiangDayBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(KcqUteKhoiLuongGiangDayBase Object1, KcqUteKhoiLuongGiangDayBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object2.MaMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.TenMonHoc != null && Object2.TenMonHoc != null )
			{
				if (Object1.TenMonHoc != Object2.TenMonHoc)
					equal = false;
			}
			else if (Object1.TenMonHoc == null ^ Object2.TenMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.NhomMonHoc != null && Object2.NhomMonHoc != null )
			{
				if (Object1.NhomMonHoc != Object2.NhomMonHoc)
					equal = false;
			}
			else if (Object1.NhomMonHoc == null ^ Object2.NhomMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.MaHocPhan != null && Object2.MaHocPhan != null )
			{
				if (Object1.MaHocPhan != Object2.MaHocPhan)
					equal = false;
			}
			else if (Object1.MaHocPhan == null ^ Object2.MaHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object2.NamHoc == null )
			{
				equal = false;
			}
			if ( Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object2.HocKy == null )
			{
				equal = false;
			}
			if ( Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object2.MaLopHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object2.MaLop == null )
			{
				equal = false;
			}
			if ( Object1.MaGiangVienQuanLy != null && Object2.MaGiangVienQuanLy != null )
			{
				if (Object1.MaGiangVienQuanLy != Object2.MaGiangVienQuanLy)
					equal = false;
			}
			else if (Object1.MaGiangVienQuanLy == null ^ Object2.MaGiangVienQuanLy == null )
			{
				equal = false;
			}
			if ( Object1.SoTinChi != null && Object2.SoTinChi != null )
			{
				if (Object1.SoTinChi != Object2.SoTinChi)
					equal = false;
			}
			else if (Object1.SoTinChi == null ^ Object2.SoTinChi == null )
			{
				equal = false;
			}
			if ( Object1.SiSo != null && Object2.SiSo != null )
			{
				if (Object1.SiSo != Object2.SiSo)
					equal = false;
			}
			else if (Object1.SiSo == null ^ Object2.SiSo == null )
			{
				equal = false;
			}
			if ( Object1.LopClc != null && Object2.LopClc != null )
			{
				if (Object1.LopClc != Object2.LopClc)
					equal = false;
			}
			else if (Object1.LopClc == null ^ Object2.LopClc == null )
			{
				equal = false;
			}
			if ( Object1.SoTietDayChuNhat != null && Object2.SoTietDayChuNhat != null )
			{
				if (Object1.SoTietDayChuNhat != Object2.SoTietDayChuNhat)
					equal = false;
			}
			else if (Object1.SoTietDayChuNhat == null ^ Object2.SoTietDayChuNhat == null )
			{
				equal = false;
			}
			if ( Object1.SoTiet != null && Object2.SoTiet != null )
			{
				if (Object1.SoTiet != Object2.SoTiet)
					equal = false;
			}
			else if (Object1.SoTiet == null ^ Object2.SoTiet == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiHocPhan != null && Object2.MaLoaiHocPhan != null )
			{
				if (Object1.MaLoaiHocPhan != Object2.MaLoaiHocPhan)
					equal = false;
			}
			else if (Object1.MaLoaiHocPhan == null ^ Object2.MaLoaiHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object2.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.MaHocHam != null && Object2.MaHocHam != null )
			{
				if (Object1.MaHocHam != Object2.MaHocHam)
					equal = false;
			}
			else if (Object1.MaHocHam == null ^ Object2.MaHocHam == null )
			{
				equal = false;
			}
			if ( Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object2.NgayCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.MaHocVi != null && Object2.MaHocVi != null )
			{
				if (Object1.MaHocVi != Object2.MaHocVi)
					equal = false;
			}
			else if (Object1.MaHocVi == null ^ Object2.MaHocVi == null )
			{
				equal = false;
			}
			if ( Object1.Nhom != null && Object2.Nhom != null )
			{
				if (Object1.Nhom != Object2.Nhom)
					equal = false;
			}
			else if (Object1.Nhom == null ^ Object2.Nhom == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiHocPhanGanMoi != null && Object2.MaLoaiHocPhanGanMoi != null )
			{
				if (Object1.MaLoaiHocPhanGanMoi != Object2.MaLoaiHocPhanGanMoi)
					equal = false;
			}
			else if (Object1.MaLoaiHocPhanGanMoi == null ^ Object2.MaLoaiHocPhanGanMoi == null )
			{
				equal = false;
			}
			if ( Object1.MaDiaDiem != null && Object2.MaDiaDiem != null )
			{
				if (Object1.MaDiaDiem != Object2.MaDiaDiem)
					equal = false;
			}
			else if (Object1.MaDiaDiem == null ^ Object2.MaDiaDiem == null )
			{
				equal = false;
			}
			if ( Object1.MaDot != null && Object2.MaDot != null )
			{
				if (Object1.MaDot != Object2.MaDot)
					equal = false;
			}
			else if (Object1.MaDot == null ^ Object2.MaDot == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((KcqUteKhoiLuongGiangDayBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static KcqUteKhoiLuongGiangDayComparer GetComparer()
        {
            return new KcqUteKhoiLuongGiangDayComparer();
        }
        */

        // Comparer delegates back to KcqUteKhoiLuongGiangDay
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(KcqUteKhoiLuongGiangDay rhs, KcqUteKhoiLuongGiangDayColumn which)
        {
            switch (which)
            {
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaMonHoc:
            		return this.MaMonHoc.CompareTo(rhs.MaMonHoc);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.TenMonHoc:
            		return this.TenMonHoc.CompareTo(rhs.TenMonHoc);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.NhomMonHoc:
            		return this.NhomMonHoc.CompareTo(rhs.NhomMonHoc);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaHocPhan:
            		return this.MaHocPhan.CompareTo(rhs.MaHocPhan);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.NamHoc:
            		return this.NamHoc.CompareTo(rhs.NamHoc);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.HocKy:
            		return this.HocKy.CompareTo(rhs.HocKy);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaLopHocPhan:
            		return this.MaLopHocPhan.CompareTo(rhs.MaLopHocPhan);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaLop:
            		return this.MaLop.CompareTo(rhs.MaLop);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaGiangVienQuanLy:
            		return this.MaGiangVienQuanLy.CompareTo(rhs.MaGiangVienQuanLy);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.SoTinChi:
            		return this.SoTinChi.Value.CompareTo(rhs.SoTinChi.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.SiSo:
            		return this.SiSo.Value.CompareTo(rhs.SiSo.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.LopClc:
            		return this.LopClc.Value.CompareTo(rhs.LopClc.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.SoTietDayChuNhat:
            		return this.SoTietDayChuNhat.Value.CompareTo(rhs.SoTietDayChuNhat.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.SoTiet:
            		return this.SoTiet.Value.CompareTo(rhs.SoTiet.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaLoaiHocPhan:
            		return this.MaLoaiHocPhan.Value.CompareTo(rhs.MaLoaiHocPhan.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaLoaiGiangVien:
            		return this.MaLoaiGiangVien.Value.CompareTo(rhs.MaLoaiGiangVien.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaHocHam:
            		return this.MaHocHam.Value.CompareTo(rhs.MaHocHam.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.NgayCapNhat:
            		return this.NgayCapNhat.Value.CompareTo(rhs.NgayCapNhat.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaHocVi:
            		return this.MaHocVi.Value.CompareTo(rhs.MaHocVi.Value);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.Nhom:
            		return this.Nhom.CompareTo(rhs.Nhom);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaLoaiHocPhanGanMoi:
            		return this.MaLoaiHocPhanGanMoi.CompareTo(rhs.MaLoaiHocPhanGanMoi);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaDiaDiem:
            		return this.MaDiaDiem.CompareTo(rhs.MaDiaDiem);
            		
            		                 
            	
            	
            	case KcqUteKhoiLuongGiangDayColumn.MaDot:
            		return this.MaDot.CompareTo(rhs.MaDot);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<KcqUteKhoiLuongGiangDayKey> Members
		
		// member variable for the EntityId property
		private KcqUteKhoiLuongGiangDayKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual KcqUteKhoiLuongGiangDayKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new KcqUteKhoiLuongGiangDayKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("KcqUteKhoiLuongGiangDay")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{25}{24}- Id: {0}{24}- MaMonHoc: {1}{24}- TenMonHoc: {2}{24}- NhomMonHoc: {3}{24}- MaHocPhan: {4}{24}- NamHoc: {5}{24}- HocKy: {6}{24}- MaLopHocPhan: {7}{24}- MaLop: {8}{24}- MaGiangVienQuanLy: {9}{24}- SoTinChi: {10}{24}- SiSo: {11}{24}- LopClc: {12}{24}- SoTietDayChuNhat: {13}{24}- SoTiet: {14}{24}- MaLoaiHocPhan: {15}{24}- MaLoaiGiangVien: {16}{24}- MaHocHam: {17}{24}- NgayCapNhat: {18}{24}- MaHocVi: {19}{24}- Nhom: {20}{24}- MaLoaiHocPhanGanMoi: {21}{24}- MaDiaDiem: {22}{24}- MaDot: {23}{24}{26}", 
				this.Id,
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
				(this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString(),
				(this.NhomMonHoc == null) ? string.Empty : this.NhomMonHoc.ToString(),
				(this.MaHocPhan == null) ? string.Empty : this.MaHocPhan.ToString(),
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
				(this.MaGiangVienQuanLy == null) ? string.Empty : this.MaGiangVienQuanLy.ToString(),
				(this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString(),
				(this.SiSo == null) ? string.Empty : this.SiSo.ToString(),
				(this.LopClc == null) ? string.Empty : this.LopClc.ToString(),
				(this.SoTietDayChuNhat == null) ? string.Empty : this.SoTietDayChuNhat.ToString(),
				(this.SoTiet == null) ? string.Empty : this.SoTiet.ToString(),
				(this.MaLoaiHocPhan == null) ? string.Empty : this.MaLoaiHocPhan.ToString(),
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
				(this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString(),
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
				(this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString(),
				(this.Nhom == null) ? string.Empty : this.Nhom.ToString(),
				(this.MaLoaiHocPhanGanMoi == null) ? string.Empty : this.MaLoaiHocPhanGanMoi.ToString(),
				(this.MaDiaDiem == null) ? string.Empty : this.MaDiaDiem.ToString(),
				(this.MaDot == null) ? string.Empty : this.MaDot.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'KcqUte_KhoiLuongGiangDay' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class KcqUteKhoiLuongGiangDayEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "KcqUte_KhoiLuongGiangDay"</remarks>
		public System.Int32 Id;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		public System.String MaMonHoc = null;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		public System.String TenMonHoc = null;
		
		/// <summary>
		/// NhomMonHoc : 
		/// </summary>
		public System.String NhomMonHoc = null;
		
		/// <summary>
		/// MaHocPhan : 
		/// </summary>
		public System.String MaHocPhan = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		public System.String NamHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		public System.String HocKy = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		public System.String MaLopHocPhan = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		public System.String MaLop = null;
		
		/// <summary>
		/// MaGiangVienQuanLy : 
		/// </summary>
		public System.String MaGiangVienQuanLy = null;
		
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		public System.Int32? SoTinChi = null;
		
		/// <summary>
		/// SiSo : 
		/// </summary>
		public System.Int32? SiSo = null;
		
		/// <summary>
		/// LopClc : 
		/// </summary>
		public System.Boolean? LopClc = null;
		
		/// <summary>
		/// SoTietDayChuNhat : 
		/// </summary>
		public System.Int32? SoTietDayChuNhat = null;
		
		/// <summary>
		/// SoTiet : 
		/// </summary>
		public System.Decimal? SoTiet = null;
		
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		public System.Int32? MaLoaiHocPhan = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		public System.Int32? MaLoaiGiangVien = null;
		
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		public System.Int32? MaHocHam = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		public System.DateTime? NgayCapNhat = null;
		
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		public System.Int32? MaHocVi = null;
		
		/// <summary>
		/// Nhom : 
		/// </summary>
		public System.String Nhom = null;
		
		/// <summary>
		/// MaLoaiHocPhanGanMoi : 
		/// </summary>
		public System.String MaLoaiHocPhanGanMoi = null;
		
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		public System.String MaDiaDiem = null;
		
		/// <summary>
		/// MaDot : 
		/// </summary>
		public System.String MaDot = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#region KcqUteKhoiLuongQuyDoiCollection
		
		private TList<KcqUteKhoiLuongQuyDoi> _kcqUteKhoiLuongQuyDoiIdKhoiLuongGiangDay;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _kcqUteKhoiLuongQuyDoiIdKhoiLuongGiangDay
		/// </summary>
		
		public TList<KcqUteKhoiLuongQuyDoi> KcqUteKhoiLuongQuyDoiCollection
		{
			get
			{
				if (_kcqUteKhoiLuongQuyDoiIdKhoiLuongGiangDay == null)
				{
				_kcqUteKhoiLuongQuyDoiIdKhoiLuongGiangDay = new TList<KcqUteKhoiLuongQuyDoi>();
				}
	
				return _kcqUteKhoiLuongQuyDoiIdKhoiLuongGiangDay;
			}
			set { _kcqUteKhoiLuongQuyDoiIdKhoiLuongGiangDay = value; }
		}
		
		#endregion

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			KcqUteKhoiLuongGiangDayEntityData _tmp = new KcqUteKhoiLuongGiangDayEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.TenMonHoc = this.TenMonHoc;
			_tmp.NhomMonHoc = this.NhomMonHoc;
			_tmp.MaHocPhan = this.MaHocPhan;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.MaLop = this.MaLop;
			_tmp.MaGiangVienQuanLy = this.MaGiangVienQuanLy;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.SiSo = this.SiSo;
			_tmp.LopClc = this.LopClc;
			_tmp.SoTietDayChuNhat = this.SoTietDayChuNhat;
			_tmp.SoTiet = this.SoTiet;
			_tmp.MaLoaiHocPhan = this.MaLoaiHocPhan;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.Nhom = this.Nhom;
			_tmp.MaLoaiHocPhanGanMoi = this.MaLoaiHocPhanGanMoi;
			_tmp.MaDiaDiem = this.MaDiaDiem;
			_tmp.MaDot = this.MaDot;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._kcqUteKhoiLuongQuyDoiIdKhoiLuongGiangDay != null)
				_tmp.KcqUteKhoiLuongQuyDoiCollection = (TList<KcqUteKhoiLuongQuyDoi>) MakeCopyOf(this.KcqUteKhoiLuongQuyDoiCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			KcqUteKhoiLuongGiangDayEntityData _tmp = new KcqUteKhoiLuongGiangDayEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.TenMonHoc = this.TenMonHoc;
			_tmp.NhomMonHoc = this.NhomMonHoc;
			_tmp.MaHocPhan = this.MaHocPhan;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.MaLop = this.MaLop;
			_tmp.MaGiangVienQuanLy = this.MaGiangVienQuanLy;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.SiSo = this.SiSo;
			_tmp.LopClc = this.LopClc;
			_tmp.SoTietDayChuNhat = this.SoTietDayChuNhat;
			_tmp.SoTiet = this.SoTiet;
			_tmp.MaLoaiHocPhan = this.MaLoaiHocPhan;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.Nhom = this.Nhom;
			_tmp.MaLoaiHocPhanGanMoi = this.MaLoaiHocPhanGanMoi;
			_tmp.MaDiaDiem = this.MaDiaDiem;
			_tmp.MaDot = this.MaDot;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.KcqUteKhoiLuongQuyDoiCollection = (TList<KcqUteKhoiLuongQuyDoi>) MakeCopyOf(this.KcqUteKhoiLuongQuyDoiCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KcqUteKhoiLuongGiangDayColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(KcqUteKhoiLuongGiangDayColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KcqUteKhoiLuongGiangDayColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(KcqUteKhoiLuongGiangDayColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KcqUteKhoiLuongGiangDayColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(KcqUteKhoiLuongGiangDayColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				KcqUteKhoiLuongGiangDayEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new KcqUteKhoiLuongGiangDayEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KcqUteKhoiLuongGiangDayColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(KcqUteKhoiLuongGiangDayColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				KcqUteKhoiLuongGiangDayEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new KcqUteKhoiLuongGiangDayEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region KcqUteKhoiLuongGiangDayEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="KcqUteKhoiLuongGiangDay"/> object.
	/// </remarks>
	public class KcqUteKhoiLuongGiangDayEventArgs : System.EventArgs
	{
		private KcqUteKhoiLuongGiangDayColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the KcqUteKhoiLuongGiangDayEventArgs class.
		///</summary>
		public KcqUteKhoiLuongGiangDayEventArgs(KcqUteKhoiLuongGiangDayColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the KcqUteKhoiLuongGiangDayEventArgs class.
		///</summary>
		public KcqUteKhoiLuongGiangDayEventArgs(KcqUteKhoiLuongGiangDayColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The KcqUteKhoiLuongGiangDayColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="KcqUteKhoiLuongGiangDayColumn" />
		public KcqUteKhoiLuongGiangDayColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all KcqUteKhoiLuongGiangDay related events.
	///</summary>
	public delegate void KcqUteKhoiLuongGiangDayEventHandler(object sender, KcqUteKhoiLuongGiangDayEventArgs e);
	
	#region KcqUteKhoiLuongGiangDayComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class KcqUteKhoiLuongGiangDayComparer : System.Collections.Generic.IComparer<KcqUteKhoiLuongGiangDay>
	{
		KcqUteKhoiLuongGiangDayColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:KcqUteKhoiLuongGiangDayComparer"/> class.
        /// </summary>
		public KcqUteKhoiLuongGiangDayComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:KcqUteKhoiLuongGiangDayComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public KcqUteKhoiLuongGiangDayComparer(KcqUteKhoiLuongGiangDayColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="KcqUteKhoiLuongGiangDay"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="KcqUteKhoiLuongGiangDay"/> to compare.</param>
        /// <param name="b">The second <c>KcqUteKhoiLuongGiangDay</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(KcqUteKhoiLuongGiangDay a, KcqUteKhoiLuongGiangDay b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(KcqUteKhoiLuongGiangDay entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(KcqUteKhoiLuongGiangDay a, KcqUteKhoiLuongGiangDay b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public KcqUteKhoiLuongGiangDayColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region KcqUteKhoiLuongGiangDayKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="KcqUteKhoiLuongGiangDay"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class KcqUteKhoiLuongGiangDayKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the KcqUteKhoiLuongGiangDayKey class.
		/// </summary>
		public KcqUteKhoiLuongGiangDayKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the KcqUteKhoiLuongGiangDayKey class.
		/// </summary>
		public KcqUteKhoiLuongGiangDayKey(KcqUteKhoiLuongGiangDayBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the KcqUteKhoiLuongGiangDayKey class.
		/// </summary>
		public KcqUteKhoiLuongGiangDayKey(System.Int32 _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private KcqUteKhoiLuongGiangDayBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public KcqUteKhoiLuongGiangDayBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.Int32 _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.Int32 Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["Id"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region KcqUteKhoiLuongGiangDayColumn Enum
	
	/// <summary>
	/// Enumerate the KcqUteKhoiLuongGiangDay columns.
	/// </summary>
	[Serializable]
	public enum KcqUteKhoiLuongGiangDayColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		Id = 1,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("Ma Mon Hoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc = 2,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("Ten Mon Hoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TenMonHoc = 3,
		/// <summary>
		/// NhomMonHoc : 
		/// </summary>
		[EnumTextValue("Nhom Mon Hoc")]
		[ColumnEnum("NhomMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NhomMonHoc = 4,
		/// <summary>
		/// MaHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Hoc Phan")]
		[ColumnEnum("MaHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHocPhan = 5,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("Nam Hoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc = 6,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("Hoc Ky")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy = 7,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Lop Hoc Phan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MaLopHocPhan = 8,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("Ma Lop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 200)]
		MaLop = 9,
		/// <summary>
		/// MaGiangVienQuanLy : 
		/// </summary>
		[EnumTextValue("Ma Giang Vien Quan Ly")]
		[ColumnEnum("MaGiangVienQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaGiangVienQuanLy = 10,
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		[EnumTextValue("So Tin Chi")]
		[ColumnEnum("SoTinChi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoTinChi = 11,
		/// <summary>
		/// SiSo : 
		/// </summary>
		[EnumTextValue("Si So")]
		[ColumnEnum("SiSo", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSo = 12,
		/// <summary>
		/// LopClc : 
		/// </summary>
		[EnumTextValue("Lop Clc")]
		[ColumnEnum("LopClc", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		LopClc = 13,
		/// <summary>
		/// SoTietDayChuNhat : 
		/// </summary>
		[EnumTextValue("So Tiet Day Chu Nhat")]
		[ColumnEnum("SoTietDayChuNhat", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoTietDayChuNhat = 14,
		/// <summary>
		/// SoTiet : 
		/// </summary>
		[EnumTextValue("So Tiet")]
		[ColumnEnum("SoTiet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTiet = 15,
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Loai Hoc Phan")]
		[ColumnEnum("MaLoaiHocPhan", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiHocPhan = 16,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Loai Giang Vien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien = 17,
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		[EnumTextValue("Ma Hoc Ham")]
		[ColumnEnum("MaHocHam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocHam = 18,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("Ngay Cap Nhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayCapNhat = 19,
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		[EnumTextValue("Ma Hoc Vi")]
		[ColumnEnum("MaHocVi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocVi = 20,
		/// <summary>
		/// Nhom : 
		/// </summary>
		[EnumTextValue("Nhom")]
		[ColumnEnum("Nhom", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Nhom = 21,
		/// <summary>
		/// MaLoaiHocPhanGanMoi : 
		/// </summary>
		[EnumTextValue("Ma Loai Hoc Phan Gan Moi")]
		[ColumnEnum("MaLoaiHocPhanGanMoi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLoaiHocPhanGanMoi = 22,
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		[EnumTextValue("Ma Dia Diem")]
		[ColumnEnum("MaDiaDiem", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDiaDiem = 23,
		/// <summary>
		/// MaDot : 
		/// </summary>
		[EnumTextValue("Ma Dot")]
		[ColumnEnum("MaDot", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		MaDot = 24
	}//End enum

	#endregion KcqUteKhoiLuongGiangDayColumn Enum

} // end namespace

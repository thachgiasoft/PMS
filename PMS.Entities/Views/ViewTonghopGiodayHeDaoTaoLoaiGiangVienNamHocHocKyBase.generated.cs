/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_Tonghop_Gioday_HeDaoTao_LoaiGiangVien_NamHoc_HocKy' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase")]
	public abstract partial class ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		private System.String		  _maDonVi = null;
		
		/// <summary>
		/// TenDonVi : 
		/// </summary>
		private System.String		  _tenDonVi = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		private System.String		  _namHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		private System.String		  _hocKy = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		private System.Int32?		  _maLoaiGiangVien = null;
		
		/// <summary>
		/// MaHeDaoTao : 
		/// </summary>
		private System.String		  _maHeDaoTao = string.Empty;
		
		/// <summary>
		/// TietThucDay : 
		/// </summary>
		private System.Decimal?		  _tietThucDay = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		private System.Decimal?		  _tietQuyDoi = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase"/> instance.
		///</summary>
		public ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase"/> instance.
		///</summary>
		///<param name="_maDonVi"></param>
		///<param name="_tenDonVi"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maHeDaoTao"></param>
		///<param name="_tietThucDay"></param>
		///<param name="_tietQuyDoi"></param>
		public ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase(System.String _maDonVi, System.String _tenDonVi, System.String _namHoc, System.String _hocKy, System.Int32? _maLoaiGiangVien, System.String _maHeDaoTao, System.Decimal? _tietThucDay, System.Decimal? _tietQuyDoi)
		{
			this._maDonVi = _maDonVi;
			this._tenDonVi = _tenDonVi;
			this._namHoc = _namHoc;
			this._hocKy = _hocKy;
			this._maLoaiGiangVien = _maLoaiGiangVien;
			this._maHeDaoTao = _maHeDaoTao;
			this._tietThucDay = _tietThucDay;
			this._tietQuyDoi = _tietQuyDoi;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy"/> instance.
		///</summary>
		///<param name="_maDonVi"></param>
		///<param name="_tenDonVi"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maHeDaoTao"></param>
		///<param name="_tietThucDay"></param>
		///<param name="_tietQuyDoi"></param>
		public static ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy CreateViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy(System.String _maDonVi, System.String _tenDonVi, System.String _namHoc, System.String _hocKy, System.Int32? _maLoaiGiangVien, System.String _maHeDaoTao, System.Decimal? _tietThucDay, System.Decimal? _tietQuyDoi)
		{
			ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy = new ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy();
			newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy.MaDonVi = _maDonVi;
			newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy.TenDonVi = _tenDonVi;
			newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy.NamHoc = _namHoc;
			newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy.HocKy = _hocKy;
			newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy.MaLoaiGiangVien = _maLoaiGiangVien;
			newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy.MaHeDaoTao = _maHeDaoTao;
			newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy.TietThucDay = _tietThucDay;
			newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy.TietQuyDoi = _tietQuyDoi;
			return newViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this._maDonVi; 
			}
			set
			{
				if (_maDonVi == value)
					return;
					
				this._maDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenDonVi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenDonVi
		{
			get
			{
				return this._tenDonVi; 
			}
			set
			{
				if (_tenDonVi == value)
					return;
					
				this._tenDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NamHoc
		{
			get
			{
				return this._namHoc; 
			}
			set
			{
				if (_namHoc == value)
					return;
					
				this._namHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HocKy
		{
			get
			{
				return this._hocKy; 
			}
			set
			{
				if (_hocKy == value)
					return;
					
				this._hocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaLoaiGiangVienNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this._maLoaiGiangVien; 
			}
			set
			{
				if (_maLoaiGiangVien == value && MaLoaiGiangVien != null )
					return;
					
				this._maLoaiGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHeDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaHeDaoTao
		{
			get
			{
				return this._maHeDaoTao; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaHeDaoTao does not allow null values.");
				if (_maHeDaoTao == value)
					return;
					
				this._maHeDaoTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHeDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietThucDay property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietThucDayNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietThucDay
		{
			get
			{
				return this._tietThucDay; 
			}
			set
			{
				if (_tietThucDay == value && TietThucDay != null )
					return;
					
				this._tietThucDay = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietThucDay");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietQuyDoiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this._tietQuyDoi; 
			}
			set
			{
				if (_tietQuyDoi == value && TietQuyDoi != null )
					return;
					
				this._tietQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_Tonghop_Gioday_HeDaoTao_LoaiGiangVien_NamHoc_HocKy"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase Entity 
		///</summary>
		public virtual ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase Copy()
		{
			//shallow copy entity
			ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy copy = new ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy();
				copy.MaDonVi = this.MaDonVi;
				copy.TenDonVi = this.TenDonVi;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.MaHeDaoTao = this.MaHeDaoTao;
				copy.TietThucDay = this.TietThucDay;
				copy.TietQuyDoi = this.TietQuyDoi;
			copy.AcceptChanges();
			return (ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase Object1, ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.MaDonVi != null && Object2.MaDonVi != null )
			{
				if (Object1.MaDonVi != Object2.MaDonVi)
					equal = false;
			}
			else if (Object1.MaDonVi == null ^ Object1.MaDonVi == null )
			{
				equal = false;
			}
			if (Object1.TenDonVi != null && Object2.TenDonVi != null )
			{
				if (Object1.TenDonVi != Object2.TenDonVi)
					equal = false;
			}
			else if (Object1.TenDonVi == null ^ Object1.TenDonVi == null )
			{
				equal = false;
			}
			if (Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object1.NamHoc == null )
			{
				equal = false;
			}
			if (Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object1.HocKy == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object1.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if (Object1.MaHeDaoTao != Object2.MaHeDaoTao)
				equal = false;
			if (Object1.TietThucDay != null && Object2.TietThucDay != null )
			{
				if (Object1.TietThucDay != Object2.TietThucDay)
					equal = false;
			}
			else if (Object1.TietThucDay == null ^ Object1.TietThucDay == null )
			{
				equal = false;
			}
			if (Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object1.TietQuyDoi == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy entity, string propertyName)
		{
			switch (propertyName)
			{
				case "MaDonVi":
					return entity.MaDonVi;
				case "TenDonVi":
					return entity.TenDonVi;
				case "NamHoc":
					return entity.NamHoc;
				case "HocKy":
					return entity.HocKy;
				case "MaLoaiGiangVien":
					return entity.MaLoaiGiangVien;
				case "MaHeDaoTao":
					return entity.MaHeDaoTao;
				case "TietThucDay":
					return entity.TietThucDay;
				case "TietQuyDoi":
					return entity.TietQuyDoi;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{9}{8}- MaDonVi: {0}{8}- TenDonVi: {1}{8}- NamHoc: {2}{8}- HocKy: {3}{8}- MaLoaiGiangVien: {4}{8}- MaHeDaoTao: {5}{8}- TietThucDay: {6}{8}- TietQuyDoi: {7}{8}", 
				(this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString(),
			     
				(this.TenDonVi == null) ? string.Empty : this.TenDonVi.ToString(),
			     
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
			     
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
			     
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
			     
				this.MaHeDaoTao,
				(this.TietThucDay == null) ? string.Empty : this.TietThucDay.ToString(),
			     
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKy columns.
	/// </summary>
	[Serializable]
	public enum ViewTonghopGiodayHeDaoTaoLoaiGiangVienNamHocHocKyColumn
	{
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("MaDonVi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDonVi,
		/// <summary>
		/// TenDonVi : 
		/// </summary>
		[EnumTextValue("TenDonVi")]
		[ColumnEnum("TenDonVi", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TenDonVi,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("NamHoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("HocKy")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("MaLoaiGiangVien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien,
		/// <summary>
		/// MaHeDaoTao : 
		/// </summary>
		[EnumTextValue("MaHeDaoTao")]
		[ColumnEnum("MaHeDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaHeDaoTao,
		/// <summary>
		/// TietThucDay : 
		/// </summary>
		[EnumTextValue("TietThucDay")]
		[ColumnEnum("TietThucDay", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietThucDay,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("TietQuyDoi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi
	}//End enum

} // end namespace

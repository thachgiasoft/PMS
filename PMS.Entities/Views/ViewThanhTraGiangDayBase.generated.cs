/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewThanhTraGiangDay.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_ThanhTraGiangDay' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewThanhTraGiangDayBase")]
	public abstract partial class ViewThanhTraGiangDayBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// MaHienThi : 
		/// </summary>
		private System.String		  _maHienThi = null;
		
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		private System.String		  _maQuanLy = null;
		
		/// <summary>
		/// Khoa : 
		/// </summary>
		private System.String		  _khoa = string.Empty;
		
		/// <summary>
		/// LoaiGiangVien : 
		/// </summary>
		private System.String		  _loaiGiangVien = null;
		
		/// <summary>
		/// TenHocPhan : 
		/// </summary>
		private System.String		  _tenHocPhan = null;
		
		/// <summary>
		/// TinhHinhGhiNhan : 
		/// </summary>
		private System.String		  _tinhHinhGhiNhan = null;
		
		/// <summary>
		/// Ngay : 
		/// </summary>
		private System.DateTime?		  _ngay = null;
		
		/// <summary>
		/// Tiet : 
		/// </summary>
		private System.String		  _tiet = null;
		
		/// <summary>
		/// Lop : 
		/// </summary>
		private System.String		  _lop = null;
		
		/// <summary>
		/// Phong : 
		/// </summary>
		private System.String		  _phong = null;
		
		/// <summary>
		/// ThoiDiemGhiNhan : 
		/// </summary>
		private System.String		  _thoiDiemGhiNhan = null;
		
		/// <summary>
		/// LyDo : 
		/// </summary>
		private System.String		  _lyDo = null;
		
		/// <summary>
		/// GhiChu : 
		/// </summary>
		private System.String		  _ghiChu = null;
		
		/// <summary>
		/// MaHinhThucViPham : 
		/// </summary>
		private System.Guid?		  _maHinhThucViPham = null;
		
		/// <summary>
		/// DaBaoSuaTkb : 
		/// </summary>
		private System.Boolean?		  _daBaoSuaTkb = null;
		
		/// <summary>
		/// HoTen : 
		/// </summary>
		private System.String		  _hoTen = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewThanhTraGiangDayBase"/> instance.
		///</summary>
		public ViewThanhTraGiangDayBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewThanhTraGiangDayBase"/> instance.
		///</summary>
		///<param name="_maHienThi"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_khoa"></param>
		///<param name="_loaiGiangVien"></param>
		///<param name="_tenHocPhan"></param>
		///<param name="_tinhHinhGhiNhan"></param>
		///<param name="_ngay"></param>
		///<param name="_tiet"></param>
		///<param name="_lop"></param>
		///<param name="_phong"></param>
		///<param name="_thoiDiemGhiNhan"></param>
		///<param name="_lyDo"></param>
		///<param name="_ghiChu"></param>
		///<param name="_maHinhThucViPham"></param>
		///<param name="_daBaoSuaTkb"></param>
		///<param name="_hoTen"></param>
		public ViewThanhTraGiangDayBase(System.String _maHienThi, System.String _maQuanLy, System.String _khoa, System.String _loaiGiangVien, System.String _tenHocPhan, System.String _tinhHinhGhiNhan, System.DateTime? _ngay, System.String _tiet, System.String _lop, System.String _phong, System.String _thoiDiemGhiNhan, System.String _lyDo, System.String _ghiChu, System.Guid? _maHinhThucViPham, System.Boolean? _daBaoSuaTkb, System.String _hoTen)
		{
			this._maHienThi = _maHienThi;
			this._maQuanLy = _maQuanLy;
			this._khoa = _khoa;
			this._loaiGiangVien = _loaiGiangVien;
			this._tenHocPhan = _tenHocPhan;
			this._tinhHinhGhiNhan = _tinhHinhGhiNhan;
			this._ngay = _ngay;
			this._tiet = _tiet;
			this._lop = _lop;
			this._phong = _phong;
			this._thoiDiemGhiNhan = _thoiDiemGhiNhan;
			this._lyDo = _lyDo;
			this._ghiChu = _ghiChu;
			this._maHinhThucViPham = _maHinhThucViPham;
			this._daBaoSuaTkb = _daBaoSuaTkb;
			this._hoTen = _hoTen;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewThanhTraGiangDay"/> instance.
		///</summary>
		///<param name="_maHienThi"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_khoa"></param>
		///<param name="_loaiGiangVien"></param>
		///<param name="_tenHocPhan"></param>
		///<param name="_tinhHinhGhiNhan"></param>
		///<param name="_ngay"></param>
		///<param name="_tiet"></param>
		///<param name="_lop"></param>
		///<param name="_phong"></param>
		///<param name="_thoiDiemGhiNhan"></param>
		///<param name="_lyDo"></param>
		///<param name="_ghiChu"></param>
		///<param name="_maHinhThucViPham"></param>
		///<param name="_daBaoSuaTkb"></param>
		///<param name="_hoTen"></param>
		public static ViewThanhTraGiangDay CreateViewThanhTraGiangDay(System.String _maHienThi, System.String _maQuanLy, System.String _khoa, System.String _loaiGiangVien, System.String _tenHocPhan, System.String _tinhHinhGhiNhan, System.DateTime? _ngay, System.String _tiet, System.String _lop, System.String _phong, System.String _thoiDiemGhiNhan, System.String _lyDo, System.String _ghiChu, System.Guid? _maHinhThucViPham, System.Boolean? _daBaoSuaTkb, System.String _hoTen)
		{
			ViewThanhTraGiangDay newViewThanhTraGiangDay = new ViewThanhTraGiangDay();
			newViewThanhTraGiangDay.MaHienThi = _maHienThi;
			newViewThanhTraGiangDay.MaQuanLy = _maQuanLy;
			newViewThanhTraGiangDay.Khoa = _khoa;
			newViewThanhTraGiangDay.LoaiGiangVien = _loaiGiangVien;
			newViewThanhTraGiangDay.TenHocPhan = _tenHocPhan;
			newViewThanhTraGiangDay.TinhHinhGhiNhan = _tinhHinhGhiNhan;
			newViewThanhTraGiangDay.Ngay = _ngay;
			newViewThanhTraGiangDay.Tiet = _tiet;
			newViewThanhTraGiangDay.Lop = _lop;
			newViewThanhTraGiangDay.Phong = _phong;
			newViewThanhTraGiangDay.ThoiDiemGhiNhan = _thoiDiemGhiNhan;
			newViewThanhTraGiangDay.LyDo = _lyDo;
			newViewThanhTraGiangDay.GhiChu = _ghiChu;
			newViewThanhTraGiangDay.MaHinhThucViPham = _maHinhThucViPham;
			newViewThanhTraGiangDay.DaBaoSuaTkb = _daBaoSuaTkb;
			newViewThanhTraGiangDay.HoTen = _hoTen;
			return newViewThanhTraGiangDay;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the MaHienThi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaHienThi
		{
			get
			{
				return this._maHienThi; 
			}
			set
			{
				if (_maHienThi == value)
					return;
					
				this._maHienThi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHienThi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaQuanLy
		{
			get
			{
				return this._maQuanLy; 
			}
			set
			{
				if (_maQuanLy == value)
					return;
					
				this._maQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Khoa property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Khoa
		{
			get
			{
				return this._khoa; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Khoa does not allow null values.");
				if (_khoa == value)
					return;
					
				this._khoa = value;
				this._isDirty = true;
				
				OnPropertyChanged("Khoa");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LoaiGiangVien
		{
			get
			{
				return this._loaiGiangVien; 
			}
			set
			{
				if (_loaiGiangVien == value)
					return;
					
				this._loaiGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("LoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenHocPhan
		{
			get
			{
				return this._tenHocPhan; 
			}
			set
			{
				if (_tenHocPhan == value)
					return;
					
				this._tenHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TinhHinhGhiNhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TinhHinhGhiNhan
		{
			get
			{
				return this._tinhHinhGhiNhan; 
			}
			set
			{
				if (_tinhHinhGhiNhan == value)
					return;
					
				this._tinhHinhGhiNhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TinhHinhGhiNhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ngay property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? Ngay
		{
			get
			{
				return this._ngay; 
			}
			set
			{
				if (_ngay == value && Ngay != null )
					return;
					
				this._ngay = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ngay");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Tiet property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Tiet
		{
			get
			{
				return this._tiet; 
			}
			set
			{
				if (_tiet == value)
					return;
					
				this._tiet = value;
				this._isDirty = true;
				
				OnPropertyChanged("Tiet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Lop property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Lop
		{
			get
			{
				return this._lop; 
			}
			set
			{
				if (_lop == value)
					return;
					
				this._lop = value;
				this._isDirty = true;
				
				OnPropertyChanged("Lop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Phong property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Phong
		{
			get
			{
				return this._phong; 
			}
			set
			{
				if (_phong == value)
					return;
					
				this._phong = value;
				this._isDirty = true;
				
				OnPropertyChanged("Phong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThoiDiemGhiNhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ThoiDiemGhiNhan
		{
			get
			{
				return this._thoiDiemGhiNhan; 
			}
			set
			{
				if (_thoiDiemGhiNhan == value)
					return;
					
				this._thoiDiemGhiNhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThoiDiemGhiNhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LyDo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LyDo
		{
			get
			{
				return this._lyDo; 
			}
			set
			{
				if (_lyDo == value)
					return;
					
				this._lyDo = value;
				this._isDirty = true;
				
				OnPropertyChanged("LyDo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GhiChu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GhiChu
		{
			get
			{
				return this._ghiChu; 
			}
			set
			{
				if (_ghiChu == value)
					return;
					
				this._ghiChu = value;
				this._isDirty = true;
				
				OnPropertyChanged("GhiChu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHinhThucViPham property. 
		///		
		/// </summary>
		/// <value>This type is uniqueidentifier</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return Guid.Empty. It is up to the developer
		/// to check the value of IsMaHinhThucViPhamNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Guid? MaHinhThucViPham
		{
			get
			{
				return this._maHinhThucViPham; 
			}
			set
			{
				if (_maHinhThucViPham == value && MaHinhThucViPham != null )
					return;
					
				this._maHinhThucViPham = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHinhThucViPham");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DaBaoSuaTkb property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsDaBaoSuaTkbNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? DaBaoSuaTkb
		{
			get
			{
				return this._daBaoSuaTkb; 
			}
			set
			{
				if (_daBaoSuaTkb == value && DaBaoSuaTkb != null )
					return;
					
				this._daBaoSuaTkb = value;
				this._isDirty = true;
				
				OnPropertyChanged("DaBaoSuaTkb");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTen
		{
			get
			{
				return this._hoTen; 
			}
			set
			{
				if (_hoTen == value)
					return;
					
				this._hoTen = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTen");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_ThanhTraGiangDay"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewThanhTraGiangDayBase Entity 
		///</summary>
		public virtual ViewThanhTraGiangDayBase Copy()
		{
			//shallow copy entity
			ViewThanhTraGiangDay copy = new ViewThanhTraGiangDay();
				copy.MaHienThi = this.MaHienThi;
				copy.MaQuanLy = this.MaQuanLy;
				copy.Khoa = this.Khoa;
				copy.LoaiGiangVien = this.LoaiGiangVien;
				copy.TenHocPhan = this.TenHocPhan;
				copy.TinhHinhGhiNhan = this.TinhHinhGhiNhan;
				copy.Ngay = this.Ngay;
				copy.Tiet = this.Tiet;
				copy.Lop = this.Lop;
				copy.Phong = this.Phong;
				copy.ThoiDiemGhiNhan = this.ThoiDiemGhiNhan;
				copy.LyDo = this.LyDo;
				copy.GhiChu = this.GhiChu;
				copy.MaHinhThucViPham = this.MaHinhThucViPham;
				copy.DaBaoSuaTkb = this.DaBaoSuaTkb;
				copy.HoTen = this.HoTen;
			copy.AcceptChanges();
			return (ViewThanhTraGiangDay)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewThanhTraGiangDayBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewThanhTraGiangDayBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewThanhTraGiangDayBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewThanhTraGiangDayBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewThanhTraGiangDayBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewThanhTraGiangDayBase Object1, ViewThanhTraGiangDayBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.MaHienThi != null && Object2.MaHienThi != null )
			{
				if (Object1.MaHienThi != Object2.MaHienThi)
					equal = false;
			}
			else if (Object1.MaHienThi == null ^ Object1.MaHienThi == null )
			{
				equal = false;
			}
			if (Object1.MaQuanLy != null && Object2.MaQuanLy != null )
			{
				if (Object1.MaQuanLy != Object2.MaQuanLy)
					equal = false;
			}
			else if (Object1.MaQuanLy == null ^ Object1.MaQuanLy == null )
			{
				equal = false;
			}
			if (Object1.Khoa != Object2.Khoa)
				equal = false;
			if (Object1.LoaiGiangVien != null && Object2.LoaiGiangVien != null )
			{
				if (Object1.LoaiGiangVien != Object2.LoaiGiangVien)
					equal = false;
			}
			else if (Object1.LoaiGiangVien == null ^ Object1.LoaiGiangVien == null )
			{
				equal = false;
			}
			if (Object1.TenHocPhan != null && Object2.TenHocPhan != null )
			{
				if (Object1.TenHocPhan != Object2.TenHocPhan)
					equal = false;
			}
			else if (Object1.TenHocPhan == null ^ Object1.TenHocPhan == null )
			{
				equal = false;
			}
			if (Object1.TinhHinhGhiNhan != null && Object2.TinhHinhGhiNhan != null )
			{
				if (Object1.TinhHinhGhiNhan != Object2.TinhHinhGhiNhan)
					equal = false;
			}
			else if (Object1.TinhHinhGhiNhan == null ^ Object1.TinhHinhGhiNhan == null )
			{
				equal = false;
			}
			if (Object1.Ngay != null && Object2.Ngay != null )
			{
				if (Object1.Ngay != Object2.Ngay)
					equal = false;
			}
			else if (Object1.Ngay == null ^ Object1.Ngay == null )
			{
				equal = false;
			}
			if (Object1.Tiet != null && Object2.Tiet != null )
			{
				if (Object1.Tiet != Object2.Tiet)
					equal = false;
			}
			else if (Object1.Tiet == null ^ Object1.Tiet == null )
			{
				equal = false;
			}
			if (Object1.Lop != null && Object2.Lop != null )
			{
				if (Object1.Lop != Object2.Lop)
					equal = false;
			}
			else if (Object1.Lop == null ^ Object1.Lop == null )
			{
				equal = false;
			}
			if (Object1.Phong != null && Object2.Phong != null )
			{
				if (Object1.Phong != Object2.Phong)
					equal = false;
			}
			else if (Object1.Phong == null ^ Object1.Phong == null )
			{
				equal = false;
			}
			if (Object1.ThoiDiemGhiNhan != null && Object2.ThoiDiemGhiNhan != null )
			{
				if (Object1.ThoiDiemGhiNhan != Object2.ThoiDiemGhiNhan)
					equal = false;
			}
			else if (Object1.ThoiDiemGhiNhan == null ^ Object1.ThoiDiemGhiNhan == null )
			{
				equal = false;
			}
			if (Object1.LyDo != null && Object2.LyDo != null )
			{
				if (Object1.LyDo != Object2.LyDo)
					equal = false;
			}
			else if (Object1.LyDo == null ^ Object1.LyDo == null )
			{
				equal = false;
			}
			if (Object1.GhiChu != null && Object2.GhiChu != null )
			{
				if (Object1.GhiChu != Object2.GhiChu)
					equal = false;
			}
			else if (Object1.GhiChu == null ^ Object1.GhiChu == null )
			{
				equal = false;
			}
			if (Object1.MaHinhThucViPham != null && Object2.MaHinhThucViPham != null )
			{
				if (Object1.MaHinhThucViPham != Object2.MaHinhThucViPham)
					equal = false;
			}
			else if (Object1.MaHinhThucViPham == null ^ Object1.MaHinhThucViPham == null )
			{
				equal = false;
			}
			if (Object1.DaBaoSuaTkb != null && Object2.DaBaoSuaTkb != null )
			{
				if (Object1.DaBaoSuaTkb != Object2.DaBaoSuaTkb)
					equal = false;
			}
			else if (Object1.DaBaoSuaTkb == null ^ Object1.DaBaoSuaTkb == null )
			{
				equal = false;
			}
			if (Object1.HoTen != null && Object2.HoTen != null )
			{
				if (Object1.HoTen != Object2.HoTen)
					equal = false;
			}
			else if (Object1.HoTen == null ^ Object1.HoTen == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewThanhTraGiangDay entity, string propertyName)
		{
			switch (propertyName)
			{
				case "MaHienThi":
					return entity.MaHienThi;
				case "MaQuanLy":
					return entity.MaQuanLy;
				case "Khoa":
					return entity.Khoa;
				case "LoaiGiangVien":
					return entity.LoaiGiangVien;
				case "TenHocPhan":
					return entity.TenHocPhan;
				case "TinhHinhGhiNhan":
					return entity.TinhHinhGhiNhan;
				case "Ngay":
					return entity.Ngay;
				case "Tiet":
					return entity.Tiet;
				case "Lop":
					return entity.Lop;
				case "Phong":
					return entity.Phong;
				case "ThoiDiemGhiNhan":
					return entity.ThoiDiemGhiNhan;
				case "LyDo":
					return entity.LyDo;
				case "GhiChu":
					return entity.GhiChu;
				case "MaHinhThucViPham":
					return entity.MaHinhThucViPham;
				case "DaBaoSuaTkb":
					return entity.DaBaoSuaTkb;
				case "HoTen":
					return entity.HoTen;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewThanhTraGiangDay, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{17}{16}- MaHienThi: {0}{16}- MaQuanLy: {1}{16}- Khoa: {2}{16}- LoaiGiangVien: {3}{16}- TenHocPhan: {4}{16}- TinhHinhGhiNhan: {5}{16}- Ngay: {6}{16}- Tiet: {7}{16}- Lop: {8}{16}- Phong: {9}{16}- ThoiDiemGhiNhan: {10}{16}- LyDo: {11}{16}- GhiChu: {12}{16}- MaHinhThucViPham: {13}{16}- DaBaoSuaTkb: {14}{16}- HoTen: {15}{16}", 
				(this.MaHienThi == null) ? string.Empty : this.MaHienThi.ToString(),
			     
				(this.MaQuanLy == null) ? string.Empty : this.MaQuanLy.ToString(),
			     
				this.Khoa,
				(this.LoaiGiangVien == null) ? string.Empty : this.LoaiGiangVien.ToString(),
			     
				(this.TenHocPhan == null) ? string.Empty : this.TenHocPhan.ToString(),
			     
				(this.TinhHinhGhiNhan == null) ? string.Empty : this.TinhHinhGhiNhan.ToString(),
			     
				(this.Ngay == null) ? string.Empty : this.Ngay.ToString(),
			     
				(this.Tiet == null) ? string.Empty : this.Tiet.ToString(),
			     
				(this.Lop == null) ? string.Empty : this.Lop.ToString(),
			     
				(this.Phong == null) ? string.Empty : this.Phong.ToString(),
			     
				(this.ThoiDiemGhiNhan == null) ? string.Empty : this.ThoiDiemGhiNhan.ToString(),
			     
				(this.LyDo == null) ? string.Empty : this.LyDo.ToString(),
			     
				(this.GhiChu == null) ? string.Empty : this.GhiChu.ToString(),
			     
				(this.MaHinhThucViPham == null) ? string.Empty : this.MaHinhThucViPham.ToString(),
			     
				(this.DaBaoSuaTkb == null) ? string.Empty : this.DaBaoSuaTkb.ToString(),
			     
				(this.HoTen == null) ? string.Empty : this.HoTen.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewThanhTraGiangDay columns.
	/// </summary>
	[Serializable]
	public enum ViewThanhTraGiangDayColumn
	{
		/// <summary>
		/// MaHienThi : 
		/// </summary>
		[EnumTextValue("MaHienThi")]
		[ColumnEnum("MaHienThi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHienThi,
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		[EnumTextValue("MaQuanLy")]
		[ColumnEnum("MaQuanLy", typeof(System.String), System.Data.DbType.String, false, false, true, 152)]
		MaQuanLy,
		/// <summary>
		/// Khoa : 
		/// </summary>
		[EnumTextValue("Khoa")]
		[ColumnEnum("Khoa", typeof(System.String), System.Data.DbType.String, false, false, false, 255)]
		Khoa,
		/// <summary>
		/// LoaiGiangVien : 
		/// </summary>
		[EnumTextValue("LoaiGiangVien")]
		[ColumnEnum("LoaiGiangVien", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		LoaiGiangVien,
		/// <summary>
		/// TenHocPhan : 
		/// </summary>
		[EnumTextValue("TenHocPhan")]
		[ColumnEnum("TenHocPhan", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TenHocPhan,
		/// <summary>
		/// TinhHinhGhiNhan : 
		/// </summary>
		[EnumTextValue("TinhHinhGhiNhan")]
		[ColumnEnum("TinhHinhGhiNhan", typeof(System.String), System.Data.DbType.String, false, false, true, 300)]
		TinhHinhGhiNhan,
		/// <summary>
		/// Ngay : 
		/// </summary>
		[EnumTextValue("Ngay")]
		[ColumnEnum("Ngay", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		Ngay,
		/// <summary>
		/// Tiet : 
		/// </summary>
		[EnumTextValue("Tiet")]
		[ColumnEnum("Tiet", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		Tiet,
		/// <summary>
		/// Lop : 
		/// </summary>
		[EnumTextValue("Lop")]
		[ColumnEnum("Lop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		Lop,
		/// <summary>
		/// Phong : 
		/// </summary>
		[EnumTextValue("Phong")]
		[ColumnEnum("Phong", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Phong,
		/// <summary>
		/// ThoiDiemGhiNhan : 
		/// </summary>
		[EnumTextValue("ThoiDiemGhiNhan")]
		[ColumnEnum("ThoiDiemGhiNhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		ThoiDiemGhiNhan,
		/// <summary>
		/// LyDo : 
		/// </summary>
		[EnumTextValue("LyDo")]
		[ColumnEnum("LyDo", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		LyDo,
		/// <summary>
		/// GhiChu : 
		/// </summary>
		[EnumTextValue("GhiChu")]
		[ColumnEnum("GhiChu", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		GhiChu,
		/// <summary>
		/// MaHinhThucViPham : 
		/// </summary>
		[EnumTextValue("MaHinhThucViPham")]
		[ColumnEnum("MaHinhThucViPham", typeof(System.Guid), System.Data.DbType.Guid, false, false, true)]
		MaHinhThucViPham,
		/// <summary>
		/// DaBaoSuaTkb : 
		/// </summary>
		[EnumTextValue("DaBaoSuaTkb")]
		[ColumnEnum("DaBaoSuaTkb", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DaBaoSuaTkb,
		/// <summary>
		/// HoTen : 
		/// </summary>
		[EnumTextValue("HoTen")]
		[ColumnEnum("HoTen", typeof(System.String), System.Data.DbType.String, false, false, true, 152)]
		HoTen
	}//End enum

} // end namespace

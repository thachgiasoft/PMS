/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file ViewLuongGiangVienTheoNgay.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_Luong_GiangVien_TheoNgay' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewLuongGiangVienTheoNgayBase")]
	public abstract partial class ViewLuongGiangVienTheoNgayBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		private System.Int32		  _maGiangVien = (int)0;
		
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		private System.String		  _maQuanLy = string.Empty;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		private System.String		  _ho = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		private System.String		  _ten = null;
		
		/// <summary>
		/// SoTaiKhoan : 
		/// </summary>
		private System.String		  _soTaiKhoan = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		private System.String		  _maLop = null;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		private System.String		  _maMonHoc = null;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		private System.String		  _tenMonHoc = string.Empty;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		private System.String		  _maLopHocPhan = string.Empty;
		
		/// <summary>
		/// TenLopHocPhan : 
		/// </summary>
		private System.String		  _tenLopHocPhan = null;
		
		/// <summary>
		/// NgayBatDau : 
		/// </summary>
		private System.String		  _ngayBatDau = null;
		
		/// <summary>
		/// NgayKetThuc : 
		/// </summary>
		private System.String		  _ngayKetThuc = null;
		
		/// <summary>
		/// TrongGio : 
		/// </summary>
		private System.Decimal?		  _trongGio = null;
		
		/// <summary>
		/// NgoaiGio : 
		/// </summary>
		private System.Decimal?		  _ngoaiGio = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		private System.Decimal?		  _tietQuyDoi = null;
		
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		private System.Int32?		  _siSoLop = null;
		
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		private System.String		  _maBacDaoTao = string.Empty;
		
		/// <summary>
		/// MaHeDaoTao : 
		/// </summary>
		private System.String		  _maHeDaoTao = string.Empty;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		private System.String		  _maLoaiGiangVien = null;
		
		/// <summary>
		/// SoTien : 
		/// </summary>
		private System.Decimal?		  _soTien = null;
		
		/// <summary>
		/// TienTruocThue : 
		/// </summary>
		private System.Decimal?		  _tienTruocThue = null;
		
		/// <summary>
		/// TienThue : 
		/// </summary>
		private System.Decimal?		  _tienThue = null;
		
		/// <summary>
		/// TienSauThue : 
		/// </summary>
		private System.Decimal?		  _tienSauThue = null;
		
		/// <summary>
		/// NgayDay : 
		/// </summary>
		private System.DateTime?		  _ngayDay = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewLuongGiangVienTheoNgayBase"/> instance.
		///</summary>
		public ViewLuongGiangVienTheoNgayBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewLuongGiangVienTheoNgayBase"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_soTaiKhoan"></param>
		///<param name="_maLop"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_tenLopHocPhan"></param>
		///<param name="_ngayBatDau"></param>
		///<param name="_ngayKetThuc"></param>
		///<param name="_trongGio"></param>
		///<param name="_ngoaiGio"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_siSoLop"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_maHeDaoTao"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_soTien"></param>
		///<param name="_tienTruocThue"></param>
		///<param name="_tienThue"></param>
		///<param name="_tienSauThue"></param>
		///<param name="_ngayDay"></param>
		public ViewLuongGiangVienTheoNgayBase(System.Int32 _maGiangVien, System.String _maQuanLy, System.String _ho, System.String _ten, System.String _soTaiKhoan, System.String _maLop, System.String _maMonHoc, System.String _tenMonHoc, System.String _maLopHocPhan, System.String _tenLopHocPhan, System.String _ngayBatDau, System.String _ngayKetThuc, System.Decimal? _trongGio, System.Decimal? _ngoaiGio, System.Decimal? _tietQuyDoi, System.Int32? _siSoLop, System.String _maBacDaoTao, System.String _maHeDaoTao, System.String _maLoaiGiangVien, System.Decimal? _soTien, System.Decimal? _tienTruocThue, System.Decimal? _tienThue, System.Decimal? _tienSauThue, System.DateTime? _ngayDay)
		{
			this._maGiangVien = _maGiangVien;
			this._maQuanLy = _maQuanLy;
			this._ho = _ho;
			this._ten = _ten;
			this._soTaiKhoan = _soTaiKhoan;
			this._maLop = _maLop;
			this._maMonHoc = _maMonHoc;
			this._tenMonHoc = _tenMonHoc;
			this._maLopHocPhan = _maLopHocPhan;
			this._tenLopHocPhan = _tenLopHocPhan;
			this._ngayBatDau = _ngayBatDau;
			this._ngayKetThuc = _ngayKetThuc;
			this._trongGio = _trongGio;
			this._ngoaiGio = _ngoaiGio;
			this._tietQuyDoi = _tietQuyDoi;
			this._siSoLop = _siSoLop;
			this._maBacDaoTao = _maBacDaoTao;
			this._maHeDaoTao = _maHeDaoTao;
			this._maLoaiGiangVien = _maLoaiGiangVien;
			this._soTien = _soTien;
			this._tienTruocThue = _tienTruocThue;
			this._tienThue = _tienThue;
			this._tienSauThue = _tienSauThue;
			this._ngayDay = _ngayDay;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewLuongGiangVienTheoNgay"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_soTaiKhoan"></param>
		///<param name="_maLop"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_tenLopHocPhan"></param>
		///<param name="_ngayBatDau"></param>
		///<param name="_ngayKetThuc"></param>
		///<param name="_trongGio"></param>
		///<param name="_ngoaiGio"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_siSoLop"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_maHeDaoTao"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_soTien"></param>
		///<param name="_tienTruocThue"></param>
		///<param name="_tienThue"></param>
		///<param name="_tienSauThue"></param>
		///<param name="_ngayDay"></param>
		public static ViewLuongGiangVienTheoNgay CreateViewLuongGiangVienTheoNgay(System.Int32 _maGiangVien, System.String _maQuanLy, System.String _ho, System.String _ten, System.String _soTaiKhoan, System.String _maLop, System.String _maMonHoc, System.String _tenMonHoc, System.String _maLopHocPhan, System.String _tenLopHocPhan, System.String _ngayBatDau, System.String _ngayKetThuc, System.Decimal? _trongGio, System.Decimal? _ngoaiGio, System.Decimal? _tietQuyDoi, System.Int32? _siSoLop, System.String _maBacDaoTao, System.String _maHeDaoTao, System.String _maLoaiGiangVien, System.Decimal? _soTien, System.Decimal? _tienTruocThue, System.Decimal? _tienThue, System.Decimal? _tienSauThue, System.DateTime? _ngayDay)
		{
			ViewLuongGiangVienTheoNgay newViewLuongGiangVienTheoNgay = new ViewLuongGiangVienTheoNgay();
			newViewLuongGiangVienTheoNgay.MaGiangVien = _maGiangVien;
			newViewLuongGiangVienTheoNgay.MaQuanLy = _maQuanLy;
			newViewLuongGiangVienTheoNgay.Ho = _ho;
			newViewLuongGiangVienTheoNgay.Ten = _ten;
			newViewLuongGiangVienTheoNgay.SoTaiKhoan = _soTaiKhoan;
			newViewLuongGiangVienTheoNgay.MaLop = _maLop;
			newViewLuongGiangVienTheoNgay.MaMonHoc = _maMonHoc;
			newViewLuongGiangVienTheoNgay.TenMonHoc = _tenMonHoc;
			newViewLuongGiangVienTheoNgay.MaLopHocPhan = _maLopHocPhan;
			newViewLuongGiangVienTheoNgay.TenLopHocPhan = _tenLopHocPhan;
			newViewLuongGiangVienTheoNgay.NgayBatDau = _ngayBatDau;
			newViewLuongGiangVienTheoNgay.NgayKetThuc = _ngayKetThuc;
			newViewLuongGiangVienTheoNgay.TrongGio = _trongGio;
			newViewLuongGiangVienTheoNgay.NgoaiGio = _ngoaiGio;
			newViewLuongGiangVienTheoNgay.TietQuyDoi = _tietQuyDoi;
			newViewLuongGiangVienTheoNgay.SiSoLop = _siSoLop;
			newViewLuongGiangVienTheoNgay.MaBacDaoTao = _maBacDaoTao;
			newViewLuongGiangVienTheoNgay.MaHeDaoTao = _maHeDaoTao;
			newViewLuongGiangVienTheoNgay.MaLoaiGiangVien = _maLoaiGiangVien;
			newViewLuongGiangVienTheoNgay.SoTien = _soTien;
			newViewLuongGiangVienTheoNgay.TienTruocThue = _tienTruocThue;
			newViewLuongGiangVienTheoNgay.TienThue = _tienThue;
			newViewLuongGiangVienTheoNgay.TienSauThue = _tienSauThue;
			newViewLuongGiangVienTheoNgay.NgayDay = _ngayDay;
			return newViewLuongGiangVienTheoNgay;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 MaGiangVien
		{
			get
			{
				return this._maGiangVien; 
			}
			set
			{
				if (_maGiangVien == value)
					return;
					
				this._maGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaQuanLy
		{
			get
			{
				return this._maQuanLy; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaQuanLy does not allow null values.");
				if (_maQuanLy == value)
					return;
					
				this._maQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ho
		{
			get
			{
				return this._ho; 
			}
			set
			{
				if (_ho == value)
					return;
					
				this._ho = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ten
		{
			get
			{
				return this._ten; 
			}
			set
			{
				if (_ten == value)
					return;
					
				this._ten = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTaiKhoan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SoTaiKhoan
		{
			get
			{
				return this._soTaiKhoan; 
			}
			set
			{
				if (_soTaiKhoan == value)
					return;
					
				this._soTaiKhoan = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTaiKhoan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLop
		{
			get
			{
				return this._maLop; 
			}
			set
			{
				if (_maLop == value)
					return;
					
				this._maLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this._maMonHoc; 
			}
			set
			{
				if (_maMonHoc == value)
					return;
					
				this._maMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this._tenMonHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TenMonHoc does not allow null values.");
				if (_tenMonHoc == value)
					return;
					
				this._tenMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this._maLopHocPhan; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaLopHocPhan does not allow null values.");
				if (_maLopHocPhan == value)
					return;
					
				this._maLopHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenLopHocPhan
		{
			get
			{
				return this._tenLopHocPhan; 
			}
			set
			{
				if (_tenLopHocPhan == value)
					return;
					
				this._tenLopHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayBatDau property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NgayBatDau
		{
			get
			{
				return this._ngayBatDau; 
			}
			set
			{
				if (_ngayBatDau == value)
					return;
					
				this._ngayBatDau = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayBatDau");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayKetThuc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NgayKetThuc
		{
			get
			{
				return this._ngayKetThuc; 
			}
			set
			{
				if (_ngayKetThuc == value)
					return;
					
				this._ngayKetThuc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayKetThuc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrongGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTrongGioNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TrongGio
		{
			get
			{
				return this._trongGio; 
			}
			set
			{
				if (_trongGio == value && TrongGio != null )
					return;
					
				this._trongGio = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrongGio");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsNgoaiGioNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? NgoaiGio
		{
			get
			{
				return this._ngoaiGio; 
			}
			set
			{
				if (_ngoaiGio == value && NgoaiGio != null )
					return;
					
				this._ngoaiGio = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietQuyDoiNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this._tietQuyDoi; 
			}
			set
			{
				if (_tietQuyDoi == value && TietQuyDoi != null )
					return;
					
				this._tietQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SiSoLop property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSiSoLopNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SiSoLop
		{
			get
			{
				return this._siSoLop; 
			}
			set
			{
				if (_siSoLop == value && SiSoLop != null )
					return;
					
				this._siSoLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("SiSoLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaBacDaoTao
		{
			get
			{
				return this._maBacDaoTao; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaBacDaoTao does not allow null values.");
				if (_maBacDaoTao == value)
					return;
					
				this._maBacDaoTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHeDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaHeDaoTao
		{
			get
			{
				return this._maHeDaoTao; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaHeDaoTao does not allow null values.");
				if (_maHeDaoTao == value)
					return;
					
				this._maHeDaoTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHeDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLoaiGiangVien
		{
			get
			{
				return this._maLoaiGiangVien; 
			}
			set
			{
				if (_maLoaiGiangVien == value)
					return;
					
				this._maLoaiGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTien property. 
		///		
		/// </summary>
		/// <value>This type is money</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0. It is up to the developer
		/// to check the value of IsSoTienNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoTien
		{
			get
			{
				return this._soTien; 
			}
			set
			{
				if (_soTien == value && SoTien != null )
					return;
					
				this._soTien = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TienTruocThue property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTienTruocThueNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TienTruocThue
		{
			get
			{
				return this._tienTruocThue; 
			}
			set
			{
				if (_tienTruocThue == value && TienTruocThue != null )
					return;
					
				this._tienTruocThue = value;
				this._isDirty = true;
				
				OnPropertyChanged("TienTruocThue");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TienThue property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTienThueNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TienThue
		{
			get
			{
				return this._tienThue; 
			}
			set
			{
				if (_tienThue == value && TienThue != null )
					return;
					
				this._tienThue = value;
				this._isDirty = true;
				
				OnPropertyChanged("TienThue");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TienSauThue property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTienSauThueNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TienSauThue
		{
			get
			{
				return this._tienSauThue; 
			}
			set
			{
				if (_tienSauThue == value && TienSauThue != null )
					return;
					
				this._tienSauThue = value;
				this._isDirty = true;
				
				OnPropertyChanged("TienSauThue");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayDay property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayDayNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? NgayDay
		{
			get
			{
				return this._ngayDay; 
			}
			set
			{
				if (_ngayDay == value && NgayDay != null )
					return;
					
				this._ngayDay = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayDay");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_Luong_GiangVien_TheoNgay"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewLuongGiangVienTheoNgayBase Entity 
		///</summary>
		public virtual ViewLuongGiangVienTheoNgayBase Copy()
		{
			//shallow copy entity
			ViewLuongGiangVienTheoNgay copy = new ViewLuongGiangVienTheoNgay();
				copy.MaGiangVien = this.MaGiangVien;
				copy.MaQuanLy = this.MaQuanLy;
				copy.Ho = this.Ho;
				copy.Ten = this.Ten;
				copy.SoTaiKhoan = this.SoTaiKhoan;
				copy.MaLop = this.MaLop;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.TenLopHocPhan = this.TenLopHocPhan;
				copy.NgayBatDau = this.NgayBatDau;
				copy.NgayKetThuc = this.NgayKetThuc;
				copy.TrongGio = this.TrongGio;
				copy.NgoaiGio = this.NgoaiGio;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.SiSoLop = this.SiSoLop;
				copy.MaBacDaoTao = this.MaBacDaoTao;
				copy.MaHeDaoTao = this.MaHeDaoTao;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.SoTien = this.SoTien;
				copy.TienTruocThue = this.TienTruocThue;
				copy.TienThue = this.TienThue;
				copy.TienSauThue = this.TienSauThue;
				copy.NgayDay = this.NgayDay;
			copy.AcceptChanges();
			return (ViewLuongGiangVienTheoNgay)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewLuongGiangVienTheoNgayBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewLuongGiangVienTheoNgayBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewLuongGiangVienTheoNgayBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewLuongGiangVienTheoNgayBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewLuongGiangVienTheoNgayBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewLuongGiangVienTheoNgayBase Object1, ViewLuongGiangVienTheoNgayBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.MaGiangVien != Object2.MaGiangVien)
				equal = false;
			if (Object1.MaQuanLy != Object2.MaQuanLy)
				equal = false;
			if (Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object1.Ho == null )
			{
				equal = false;
			}
			if (Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object1.Ten == null )
			{
				equal = false;
			}
			if (Object1.SoTaiKhoan != null && Object2.SoTaiKhoan != null )
			{
				if (Object1.SoTaiKhoan != Object2.SoTaiKhoan)
					equal = false;
			}
			else if (Object1.SoTaiKhoan == null ^ Object1.SoTaiKhoan == null )
			{
				equal = false;
			}
			if (Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object1.MaLop == null )
			{
				equal = false;
			}
			if (Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object1.MaMonHoc == null )
			{
				equal = false;
			}
			if (Object1.TenMonHoc != Object2.TenMonHoc)
				equal = false;
			if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
				equal = false;
			if (Object1.TenLopHocPhan != null && Object2.TenLopHocPhan != null )
			{
				if (Object1.TenLopHocPhan != Object2.TenLopHocPhan)
					equal = false;
			}
			else if (Object1.TenLopHocPhan == null ^ Object1.TenLopHocPhan == null )
			{
				equal = false;
			}
			if (Object1.NgayBatDau != null && Object2.NgayBatDau != null )
			{
				if (Object1.NgayBatDau != Object2.NgayBatDau)
					equal = false;
			}
			else if (Object1.NgayBatDau == null ^ Object1.NgayBatDau == null )
			{
				equal = false;
			}
			if (Object1.NgayKetThuc != null && Object2.NgayKetThuc != null )
			{
				if (Object1.NgayKetThuc != Object2.NgayKetThuc)
					equal = false;
			}
			else if (Object1.NgayKetThuc == null ^ Object1.NgayKetThuc == null )
			{
				equal = false;
			}
			if (Object1.TrongGio != null && Object2.TrongGio != null )
			{
				if (Object1.TrongGio != Object2.TrongGio)
					equal = false;
			}
			else if (Object1.TrongGio == null ^ Object1.TrongGio == null )
			{
				equal = false;
			}
			if (Object1.NgoaiGio != null && Object2.NgoaiGio != null )
			{
				if (Object1.NgoaiGio != Object2.NgoaiGio)
					equal = false;
			}
			else if (Object1.NgoaiGio == null ^ Object1.NgoaiGio == null )
			{
				equal = false;
			}
			if (Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object1.TietQuyDoi == null )
			{
				equal = false;
			}
			if (Object1.SiSoLop != null && Object2.SiSoLop != null )
			{
				if (Object1.SiSoLop != Object2.SiSoLop)
					equal = false;
			}
			else if (Object1.SiSoLop == null ^ Object1.SiSoLop == null )
			{
				equal = false;
			}
			if (Object1.MaBacDaoTao != Object2.MaBacDaoTao)
				equal = false;
			if (Object1.MaHeDaoTao != Object2.MaHeDaoTao)
				equal = false;
			if (Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object1.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if (Object1.SoTien != null && Object2.SoTien != null )
			{
				if (Object1.SoTien != Object2.SoTien)
					equal = false;
			}
			else if (Object1.SoTien == null ^ Object1.SoTien == null )
			{
				equal = false;
			}
			if (Object1.TienTruocThue != null && Object2.TienTruocThue != null )
			{
				if (Object1.TienTruocThue != Object2.TienTruocThue)
					equal = false;
			}
			else if (Object1.TienTruocThue == null ^ Object1.TienTruocThue == null )
			{
				equal = false;
			}
			if (Object1.TienThue != null && Object2.TienThue != null )
			{
				if (Object1.TienThue != Object2.TienThue)
					equal = false;
			}
			else if (Object1.TienThue == null ^ Object1.TienThue == null )
			{
				equal = false;
			}
			if (Object1.TienSauThue != null && Object2.TienSauThue != null )
			{
				if (Object1.TienSauThue != Object2.TienSauThue)
					equal = false;
			}
			else if (Object1.TienSauThue == null ^ Object1.TienSauThue == null )
			{
				equal = false;
			}
			if (Object1.NgayDay != null && Object2.NgayDay != null )
			{
				if (Object1.NgayDay != Object2.NgayDay)
					equal = false;
			}
			else if (Object1.NgayDay == null ^ Object1.NgayDay == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewLuongGiangVienTheoNgay entity, string propertyName)
		{
			switch (propertyName)
			{
				case "MaGiangVien":
					return entity.MaGiangVien;
				case "MaQuanLy":
					return entity.MaQuanLy;
				case "Ho":
					return entity.Ho;
				case "Ten":
					return entity.Ten;
				case "SoTaiKhoan":
					return entity.SoTaiKhoan;
				case "MaLop":
					return entity.MaLop;
				case "MaMonHoc":
					return entity.MaMonHoc;
				case "TenMonHoc":
					return entity.TenMonHoc;
				case "MaLopHocPhan":
					return entity.MaLopHocPhan;
				case "TenLopHocPhan":
					return entity.TenLopHocPhan;
				case "NgayBatDau":
					return entity.NgayBatDau;
				case "NgayKetThuc":
					return entity.NgayKetThuc;
				case "TrongGio":
					return entity.TrongGio;
				case "NgoaiGio":
					return entity.NgoaiGio;
				case "TietQuyDoi":
					return entity.TietQuyDoi;
				case "SiSoLop":
					return entity.SiSoLop;
				case "MaBacDaoTao":
					return entity.MaBacDaoTao;
				case "MaHeDaoTao":
					return entity.MaHeDaoTao;
				case "MaLoaiGiangVien":
					return entity.MaLoaiGiangVien;
				case "SoTien":
					return entity.SoTien;
				case "TienTruocThue":
					return entity.TienTruocThue;
				case "TienThue":
					return entity.TienThue;
				case "TienSauThue":
					return entity.TienSauThue;
				case "NgayDay":
					return entity.NgayDay;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewLuongGiangVienTheoNgay, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{25}{24}- MaGiangVien: {0}{24}- MaQuanLy: {1}{24}- Ho: {2}{24}- Ten: {3}{24}- SoTaiKhoan: {4}{24}- MaLop: {5}{24}- MaMonHoc: {6}{24}- TenMonHoc: {7}{24}- MaLopHocPhan: {8}{24}- TenLopHocPhan: {9}{24}- NgayBatDau: {10}{24}- NgayKetThuc: {11}{24}- TrongGio: {12}{24}- NgoaiGio: {13}{24}- TietQuyDoi: {14}{24}- SiSoLop: {15}{24}- MaBacDaoTao: {16}{24}- MaHeDaoTao: {17}{24}- MaLoaiGiangVien: {18}{24}- SoTien: {19}{24}- TienTruocThue: {20}{24}- TienThue: {21}{24}- TienSauThue: {22}{24}- NgayDay: {23}{24}", 
				this.MaGiangVien,
				this.MaQuanLy,
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
			     
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
			     
				(this.SoTaiKhoan == null) ? string.Empty : this.SoTaiKhoan.ToString(),
			     
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
			     
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
			     
				this.TenMonHoc,
				this.MaLopHocPhan,
				(this.TenLopHocPhan == null) ? string.Empty : this.TenLopHocPhan.ToString(),
			     
				(this.NgayBatDau == null) ? string.Empty : this.NgayBatDau.ToString(),
			     
				(this.NgayKetThuc == null) ? string.Empty : this.NgayKetThuc.ToString(),
			     
				(this.TrongGio == null) ? string.Empty : this.TrongGio.ToString(),
			     
				(this.NgoaiGio == null) ? string.Empty : this.NgoaiGio.ToString(),
			     
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
			     
				(this.SiSoLop == null) ? string.Empty : this.SiSoLop.ToString(),
			     
				this.MaBacDaoTao,
				this.MaHeDaoTao,
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
			     
				(this.SoTien == null) ? string.Empty : this.SoTien.ToString(),
			     
				(this.TienTruocThue == null) ? string.Empty : this.TienTruocThue.ToString(),
			     
				(this.TienThue == null) ? string.Empty : this.TienThue.ToString(),
			     
				(this.TienSauThue == null) ? string.Empty : this.TienSauThue.ToString(),
			     
				(this.NgayDay == null) ? string.Empty : this.NgayDay.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewLuongGiangVienTheoNgay columns.
	/// </summary>
	[Serializable]
	public enum ViewLuongGiangVienTheoNgayColumn
	{
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("MaGiangVien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		MaGiangVien,
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		[EnumTextValue("MaQuanLy")]
		[ColumnEnum("MaQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaQuanLy,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 101)]
		Ho,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten,
		/// <summary>
		/// SoTaiKhoan : 
		/// </summary>
		[EnumTextValue("SoTaiKhoan")]
		[ColumnEnum("SoTaiKhoan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		SoTaiKhoan,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("MaLop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLop,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("MaMonHoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("TenMonHoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, false, 255)]
		TenMonHoc,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("MaLopHocPhan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 30)]
		MaLopHocPhan,
		/// <summary>
		/// TenLopHocPhan : 
		/// </summary>
		[EnumTextValue("TenLopHocPhan")]
		[ColumnEnum("TenLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
		TenLopHocPhan,
		/// <summary>
		/// NgayBatDau : 
		/// </summary>
		[EnumTextValue("NgayBatDau")]
		[ColumnEnum("NgayBatDau", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgayBatDau,
		/// <summary>
		/// NgayKetThuc : 
		/// </summary>
		[EnumTextValue("NgayKetThuc")]
		[ColumnEnum("NgayKetThuc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgayKetThuc,
		/// <summary>
		/// TrongGio : 
		/// </summary>
		[EnumTextValue("TrongGio")]
		[ColumnEnum("TrongGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TrongGio,
		/// <summary>
		/// NgoaiGio : 
		/// </summary>
		[EnumTextValue("NgoaiGio")]
		[ColumnEnum("NgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		NgoaiGio,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("TietQuyDoi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi,
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		[EnumTextValue("SiSoLop")]
		[ColumnEnum("SiSoLop", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSoLop,
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		[EnumTextValue("MaBacDaoTao")]
		[ColumnEnum("MaBacDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaBacDaoTao,
		/// <summary>
		/// MaHeDaoTao : 
		/// </summary>
		[EnumTextValue("MaHeDaoTao")]
		[ColumnEnum("MaHeDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaHeDaoTao,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("MaLoaiGiangVien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLoaiGiangVien,
		/// <summary>
		/// SoTien : 
		/// </summary>
		[EnumTextValue("SoTien")]
		[ColumnEnum("SoTien", typeof(System.Decimal), System.Data.DbType.Currency, false, false, true)]
		SoTien,
		/// <summary>
		/// TienTruocThue : 
		/// </summary>
		[EnumTextValue("TienTruocThue")]
		[ColumnEnum("TienTruocThue", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TienTruocThue,
		/// <summary>
		/// TienThue : 
		/// </summary>
		[EnumTextValue("TienThue")]
		[ColumnEnum("TienThue", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TienThue,
		/// <summary>
		/// TienSauThue : 
		/// </summary>
		[EnumTextValue("TienSauThue")]
		[ColumnEnum("TienSauThue", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TienSauThue,
		/// <summary>
		/// NgayDay : 
		/// </summary>
		[EnumTextValue("NgayDay")]
		[ColumnEnum("NgayDay", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayDay
	}//End enum

} // end namespace

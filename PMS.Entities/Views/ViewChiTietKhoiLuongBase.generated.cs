/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewChiTietKhoiLuong.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_ChiTiet_KhoiLuong' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewChiTietKhoiLuongBase")]
	public abstract partial class ViewChiTietKhoiLuongBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		private System.String		  _namHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		private System.String		  _hocKy = null;
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		private System.Int32		  _maGiangVien = (int)0;
		
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		private System.String		  _maQuanLy = string.Empty;
		
		/// <summary>
		/// HoTen : 
		/// </summary>
		private System.String		  _hoTen = null;
		
		/// <summary>
		/// MaKhoa : 
		/// </summary>
		private System.String		  _maKhoa = null;
		
		/// <summary>
		/// MaBoMon : 
		/// </summary>
		private System.String		  _maBoMon = null;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		private System.String		  _maMonHoc = string.Empty;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		private System.String		  _tenMonHoc = null;
		
		/// <summary>
		/// MaNhom : 
		/// </summary>
		private System.String		  _maNhom = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		private System.String		  _maLop = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		private System.String		  _maLopHocPhan = null;
		
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		private System.Int32?		  _siSoLop = null;
		
		/// <summary>
		/// TrongGio : 
		/// </summary>
		private System.Decimal?		  _trongGio = null;
		
		/// <summary>
		/// ChatLuongCao : 
		/// </summary>
		private System.Decimal?		  _chatLuongCao = null;
		
		/// <summary>
		/// NgoaiGio : 
		/// </summary>
		private System.Decimal?		  _ngoaiGio = null;
		
		/// <summary>
		/// HeSoThanhPhan : 
		/// </summary>
		private System.Decimal?		  _heSoThanhPhan = null;
		
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		private System.Decimal?		  _heSoLopDong = null;
		
		/// <summary>
		/// DonGia : 
		/// </summary>
		private System.Decimal?		  _donGia = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		private System.Decimal?		  _tietQuyDoi = null;
		
		/// <summary>
		/// MaLoaiKhoiLuong : 
		/// </summary>
		private System.String		  _maLoaiKhoiLuong = null;
		
		/// <summary>
		/// TenLoaiKhoiLuong : 
		/// </summary>
		private System.String		  _tenLoaiKhoiLuong = null;
		
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		private System.String		  _phanLoai = null;
		
		/// <summary>
		/// NghiaVu : 
		/// </summary>
		private System.Boolean?		  _nghiaVu = null;
		
		/// <summary>
		/// NguongTiet : 
		/// </summary>
		private System.Int32?		  _nguongTiet = null;
		
		/// <summary>
		/// TietNghiaVu : 
		/// </summary>
		private System.Decimal?		  _tietNghiaVu = null;
		
		/// <summary>
		/// ThanhTien : 
		/// </summary>
		private System.Decimal?		  _thanhTien = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewChiTietKhoiLuongBase"/> instance.
		///</summary>
		public ViewChiTietKhoiLuongBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewChiTietKhoiLuongBase"/> instance.
		///</summary>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maGiangVien"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_hoTen"></param>
		///<param name="_maKhoa"></param>
		///<param name="_maBoMon"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_maNhom"></param>
		///<param name="_maLop"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_siSoLop"></param>
		///<param name="_trongGio"></param>
		///<param name="_chatLuongCao"></param>
		///<param name="_ngoaiGio"></param>
		///<param name="_heSoThanhPhan"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_donGia"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_maLoaiKhoiLuong"></param>
		///<param name="_tenLoaiKhoiLuong"></param>
		///<param name="_phanLoai"></param>
		///<param name="_nghiaVu"></param>
		///<param name="_nguongTiet"></param>
		///<param name="_tietNghiaVu"></param>
		///<param name="_thanhTien"></param>
		public ViewChiTietKhoiLuongBase(System.String _namHoc, System.String _hocKy, System.Int32 _maGiangVien, System.String _maQuanLy, System.String _hoTen, System.String _maKhoa, System.String _maBoMon, System.String _maMonHoc, System.String _tenMonHoc, System.String _maNhom, System.String _maLop, System.String _maLopHocPhan, System.Int32? _siSoLop, System.Decimal? _trongGio, System.Decimal? _chatLuongCao, System.Decimal? _ngoaiGio, System.Decimal? _heSoThanhPhan, System.Decimal? _heSoLopDong, System.Decimal? _donGia, System.Decimal? _tietQuyDoi, System.String _maLoaiKhoiLuong, System.String _tenLoaiKhoiLuong, System.String _phanLoai, System.Boolean? _nghiaVu, System.Int32? _nguongTiet, System.Decimal? _tietNghiaVu, System.Decimal? _thanhTien)
		{
			this._namHoc = _namHoc;
			this._hocKy = _hocKy;
			this._maGiangVien = _maGiangVien;
			this._maQuanLy = _maQuanLy;
			this._hoTen = _hoTen;
			this._maKhoa = _maKhoa;
			this._maBoMon = _maBoMon;
			this._maMonHoc = _maMonHoc;
			this._tenMonHoc = _tenMonHoc;
			this._maNhom = _maNhom;
			this._maLop = _maLop;
			this._maLopHocPhan = _maLopHocPhan;
			this._siSoLop = _siSoLop;
			this._trongGio = _trongGio;
			this._chatLuongCao = _chatLuongCao;
			this._ngoaiGio = _ngoaiGio;
			this._heSoThanhPhan = _heSoThanhPhan;
			this._heSoLopDong = _heSoLopDong;
			this._donGia = _donGia;
			this._tietQuyDoi = _tietQuyDoi;
			this._maLoaiKhoiLuong = _maLoaiKhoiLuong;
			this._tenLoaiKhoiLuong = _tenLoaiKhoiLuong;
			this._phanLoai = _phanLoai;
			this._nghiaVu = _nghiaVu;
			this._nguongTiet = _nguongTiet;
			this._tietNghiaVu = _tietNghiaVu;
			this._thanhTien = _thanhTien;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewChiTietKhoiLuong"/> instance.
		///</summary>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maGiangVien"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_hoTen"></param>
		///<param name="_maKhoa"></param>
		///<param name="_maBoMon"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_maNhom"></param>
		///<param name="_maLop"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_siSoLop"></param>
		///<param name="_trongGio"></param>
		///<param name="_chatLuongCao"></param>
		///<param name="_ngoaiGio"></param>
		///<param name="_heSoThanhPhan"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_donGia"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_maLoaiKhoiLuong"></param>
		///<param name="_tenLoaiKhoiLuong"></param>
		///<param name="_phanLoai"></param>
		///<param name="_nghiaVu"></param>
		///<param name="_nguongTiet"></param>
		///<param name="_tietNghiaVu"></param>
		///<param name="_thanhTien"></param>
		public static ViewChiTietKhoiLuong CreateViewChiTietKhoiLuong(System.String _namHoc, System.String _hocKy, System.Int32 _maGiangVien, System.String _maQuanLy, System.String _hoTen, System.String _maKhoa, System.String _maBoMon, System.String _maMonHoc, System.String _tenMonHoc, System.String _maNhom, System.String _maLop, System.String _maLopHocPhan, System.Int32? _siSoLop, System.Decimal? _trongGio, System.Decimal? _chatLuongCao, System.Decimal? _ngoaiGio, System.Decimal? _heSoThanhPhan, System.Decimal? _heSoLopDong, System.Decimal? _donGia, System.Decimal? _tietQuyDoi, System.String _maLoaiKhoiLuong, System.String _tenLoaiKhoiLuong, System.String _phanLoai, System.Boolean? _nghiaVu, System.Int32? _nguongTiet, System.Decimal? _tietNghiaVu, System.Decimal? _thanhTien)
		{
			ViewChiTietKhoiLuong newViewChiTietKhoiLuong = new ViewChiTietKhoiLuong();
			newViewChiTietKhoiLuong.NamHoc = _namHoc;
			newViewChiTietKhoiLuong.HocKy = _hocKy;
			newViewChiTietKhoiLuong.MaGiangVien = _maGiangVien;
			newViewChiTietKhoiLuong.MaQuanLy = _maQuanLy;
			newViewChiTietKhoiLuong.HoTen = _hoTen;
			newViewChiTietKhoiLuong.MaKhoa = _maKhoa;
			newViewChiTietKhoiLuong.MaBoMon = _maBoMon;
			newViewChiTietKhoiLuong.MaMonHoc = _maMonHoc;
			newViewChiTietKhoiLuong.TenMonHoc = _tenMonHoc;
			newViewChiTietKhoiLuong.MaNhom = _maNhom;
			newViewChiTietKhoiLuong.MaLop = _maLop;
			newViewChiTietKhoiLuong.MaLopHocPhan = _maLopHocPhan;
			newViewChiTietKhoiLuong.SiSoLop = _siSoLop;
			newViewChiTietKhoiLuong.TrongGio = _trongGio;
			newViewChiTietKhoiLuong.ChatLuongCao = _chatLuongCao;
			newViewChiTietKhoiLuong.NgoaiGio = _ngoaiGio;
			newViewChiTietKhoiLuong.HeSoThanhPhan = _heSoThanhPhan;
			newViewChiTietKhoiLuong.HeSoLopDong = _heSoLopDong;
			newViewChiTietKhoiLuong.DonGia = _donGia;
			newViewChiTietKhoiLuong.TietQuyDoi = _tietQuyDoi;
			newViewChiTietKhoiLuong.MaLoaiKhoiLuong = _maLoaiKhoiLuong;
			newViewChiTietKhoiLuong.TenLoaiKhoiLuong = _tenLoaiKhoiLuong;
			newViewChiTietKhoiLuong.PhanLoai = _phanLoai;
			newViewChiTietKhoiLuong.NghiaVu = _nghiaVu;
			newViewChiTietKhoiLuong.NguongTiet = _nguongTiet;
			newViewChiTietKhoiLuong.TietNghiaVu = _tietNghiaVu;
			newViewChiTietKhoiLuong.ThanhTien = _thanhTien;
			return newViewChiTietKhoiLuong;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NamHoc
		{
			get
			{
				return this._namHoc; 
			}
			set
			{
				if (_namHoc == value)
					return;
					
				this._namHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HocKy
		{
			get
			{
				return this._hocKy; 
			}
			set
			{
				if (_hocKy == value)
					return;
					
				this._hocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 MaGiangVien
		{
			get
			{
				return this._maGiangVien; 
			}
			set
			{
				if (_maGiangVien == value)
					return;
					
				this._maGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaQuanLy
		{
			get
			{
				return this._maQuanLy; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaQuanLy does not allow null values.");
				if (_maQuanLy == value)
					return;
					
				this._maQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTen
		{
			get
			{
				return this._hoTen; 
			}
			set
			{
				if (_hoTen == value)
					return;
					
				this._hoTen = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTen");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaKhoa property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaKhoa
		{
			get
			{
				return this._maKhoa; 
			}
			set
			{
				if (_maKhoa == value)
					return;
					
				this._maKhoa = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaKhoa");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaBoMon property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaBoMon
		{
			get
			{
				return this._maBoMon; 
			}
			set
			{
				if (_maBoMon == value)
					return;
					
				this._maBoMon = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaBoMon");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this._maMonHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaMonHoc does not allow null values.");
				if (_maMonHoc == value)
					return;
					
				this._maMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this._tenMonHoc; 
			}
			set
			{
				if (_tenMonHoc == value)
					return;
					
				this._tenMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaNhom property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaNhom
		{
			get
			{
				return this._maNhom; 
			}
			set
			{
				if (_maNhom == value)
					return;
					
				this._maNhom = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaNhom");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLop
		{
			get
			{
				return this._maLop; 
			}
			set
			{
				if (_maLop == value)
					return;
					
				this._maLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this._maLopHocPhan; 
			}
			set
			{
				if (_maLopHocPhan == value)
					return;
					
				this._maLopHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SiSoLop property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSiSoLopNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SiSoLop
		{
			get
			{
				return this._siSoLop; 
			}
			set
			{
				if (_siSoLop == value && SiSoLop != null )
					return;
					
				this._siSoLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("SiSoLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrongGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTrongGioNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TrongGio
		{
			get
			{
				return this._trongGio; 
			}
			set
			{
				if (_trongGio == value && TrongGio != null )
					return;
					
				this._trongGio = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrongGio");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ChatLuongCao property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsChatLuongCaoNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? ChatLuongCao
		{
			get
			{
				return this._chatLuongCao; 
			}
			set
			{
				if (_chatLuongCao == value && ChatLuongCao != null )
					return;
					
				this._chatLuongCao = value;
				this._isDirty = true;
				
				OnPropertyChanged("ChatLuongCao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsNgoaiGioNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? NgoaiGio
		{
			get
			{
				return this._ngoaiGio; 
			}
			set
			{
				if (_ngoaiGio == value && NgoaiGio != null )
					return;
					
				this._ngoaiGio = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoThanhPhan property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoThanhPhanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoThanhPhan
		{
			get
			{
				return this._heSoThanhPhan; 
			}
			set
			{
				if (_heSoThanhPhan == value && HeSoThanhPhan != null )
					return;
					
				this._heSoThanhPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoThanhPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoLopDong property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoLopDongNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoLopDong
		{
			get
			{
				return this._heSoLopDong; 
			}
			set
			{
				if (_heSoLopDong == value && HeSoLopDong != null )
					return;
					
				this._heSoLopDong = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoLopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DonGia property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsDonGiaNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? DonGia
		{
			get
			{
				return this._donGia; 
			}
			set
			{
				if (_donGia == value && DonGia != null )
					return;
					
				this._donGia = value;
				this._isDirty = true;
				
				OnPropertyChanged("DonGia");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietQuyDoiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this._tietQuyDoi; 
			}
			set
			{
				if (_tietQuyDoi == value && TietQuyDoi != null )
					return;
					
				this._tietQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiKhoiLuong property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLoaiKhoiLuong
		{
			get
			{
				return this._maLoaiKhoiLuong; 
			}
			set
			{
				if (_maLoaiKhoiLuong == value)
					return;
					
				this._maLoaiKhoiLuong = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiKhoiLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenLoaiKhoiLuong property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenLoaiKhoiLuong
		{
			get
			{
				return this._tenLoaiKhoiLuong; 
			}
			set
			{
				if (_tenLoaiKhoiLuong == value)
					return;
					
				this._tenLoaiKhoiLuong = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenLoaiKhoiLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PhanLoai property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PhanLoai
		{
			get
			{
				return this._phanLoai; 
			}
			set
			{
				if (_phanLoai == value)
					return;
					
				this._phanLoai = value;
				this._isDirty = true;
				
				OnPropertyChanged("PhanLoai");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NghiaVu property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsNghiaVuNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? NghiaVu
		{
			get
			{
				return this._nghiaVu; 
			}
			set
			{
				if (_nghiaVu == value && NghiaVu != null )
					return;
					
				this._nghiaVu = value;
				this._isDirty = true;
				
				OnPropertyChanged("NghiaVu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NguongTiet property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsNguongTietNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? NguongTiet
		{
			get
			{
				return this._nguongTiet; 
			}
			set
			{
				if (_nguongTiet == value && NguongTiet != null )
					return;
					
				this._nguongTiet = value;
				this._isDirty = true;
				
				OnPropertyChanged("NguongTiet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietNghiaVu property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietNghiaVuNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietNghiaVu
		{
			get
			{
				return this._tietNghiaVu; 
			}
			set
			{
				if (_tietNghiaVu == value && TietNghiaVu != null )
					return;
					
				this._tietNghiaVu = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietNghiaVu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThanhTien property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsThanhTienNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? ThanhTien
		{
			get
			{
				return this._thanhTien; 
			}
			set
			{
				if (_thanhTien == value && ThanhTien != null )
					return;
					
				this._thanhTien = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThanhTien");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_ChiTiet_KhoiLuong"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewChiTietKhoiLuongBase Entity 
		///</summary>
		public virtual ViewChiTietKhoiLuongBase Copy()
		{
			//shallow copy entity
			ViewChiTietKhoiLuong copy = new ViewChiTietKhoiLuong();
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.MaGiangVien = this.MaGiangVien;
				copy.MaQuanLy = this.MaQuanLy;
				copy.HoTen = this.HoTen;
				copy.MaKhoa = this.MaKhoa;
				copy.MaBoMon = this.MaBoMon;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.MaNhom = this.MaNhom;
				copy.MaLop = this.MaLop;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.SiSoLop = this.SiSoLop;
				copy.TrongGio = this.TrongGio;
				copy.ChatLuongCao = this.ChatLuongCao;
				copy.NgoaiGio = this.NgoaiGio;
				copy.HeSoThanhPhan = this.HeSoThanhPhan;
				copy.HeSoLopDong = this.HeSoLopDong;
				copy.DonGia = this.DonGia;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.MaLoaiKhoiLuong = this.MaLoaiKhoiLuong;
				copy.TenLoaiKhoiLuong = this.TenLoaiKhoiLuong;
				copy.PhanLoai = this.PhanLoai;
				copy.NghiaVu = this.NghiaVu;
				copy.NguongTiet = this.NguongTiet;
				copy.TietNghiaVu = this.TietNghiaVu;
				copy.ThanhTien = this.ThanhTien;
			copy.AcceptChanges();
			return (ViewChiTietKhoiLuong)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewChiTietKhoiLuongBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewChiTietKhoiLuongBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewChiTietKhoiLuongBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewChiTietKhoiLuongBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewChiTietKhoiLuongBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewChiTietKhoiLuongBase Object1, ViewChiTietKhoiLuongBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object1.NamHoc == null )
			{
				equal = false;
			}
			if (Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object1.HocKy == null )
			{
				equal = false;
			}
			if (Object1.MaGiangVien != Object2.MaGiangVien)
				equal = false;
			if (Object1.MaQuanLy != Object2.MaQuanLy)
				equal = false;
			if (Object1.HoTen != null && Object2.HoTen != null )
			{
				if (Object1.HoTen != Object2.HoTen)
					equal = false;
			}
			else if (Object1.HoTen == null ^ Object1.HoTen == null )
			{
				equal = false;
			}
			if (Object1.MaKhoa != null && Object2.MaKhoa != null )
			{
				if (Object1.MaKhoa != Object2.MaKhoa)
					equal = false;
			}
			else if (Object1.MaKhoa == null ^ Object1.MaKhoa == null )
			{
				equal = false;
			}
			if (Object1.MaBoMon != null && Object2.MaBoMon != null )
			{
				if (Object1.MaBoMon != Object2.MaBoMon)
					equal = false;
			}
			else if (Object1.MaBoMon == null ^ Object1.MaBoMon == null )
			{
				equal = false;
			}
			if (Object1.MaMonHoc != Object2.MaMonHoc)
				equal = false;
			if (Object1.TenMonHoc != null && Object2.TenMonHoc != null )
			{
				if (Object1.TenMonHoc != Object2.TenMonHoc)
					equal = false;
			}
			else if (Object1.TenMonHoc == null ^ Object1.TenMonHoc == null )
			{
				equal = false;
			}
			if (Object1.MaNhom != null && Object2.MaNhom != null )
			{
				if (Object1.MaNhom != Object2.MaNhom)
					equal = false;
			}
			else if (Object1.MaNhom == null ^ Object1.MaNhom == null )
			{
				equal = false;
			}
			if (Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object1.MaLop == null )
			{
				equal = false;
			}
			if (Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object1.MaLopHocPhan == null )
			{
				equal = false;
			}
			if (Object1.SiSoLop != null && Object2.SiSoLop != null )
			{
				if (Object1.SiSoLop != Object2.SiSoLop)
					equal = false;
			}
			else if (Object1.SiSoLop == null ^ Object1.SiSoLop == null )
			{
				equal = false;
			}
			if (Object1.TrongGio != null && Object2.TrongGio != null )
			{
				if (Object1.TrongGio != Object2.TrongGio)
					equal = false;
			}
			else if (Object1.TrongGio == null ^ Object1.TrongGio == null )
			{
				equal = false;
			}
			if (Object1.ChatLuongCao != null && Object2.ChatLuongCao != null )
			{
				if (Object1.ChatLuongCao != Object2.ChatLuongCao)
					equal = false;
			}
			else if (Object1.ChatLuongCao == null ^ Object1.ChatLuongCao == null )
			{
				equal = false;
			}
			if (Object1.NgoaiGio != null && Object2.NgoaiGio != null )
			{
				if (Object1.NgoaiGio != Object2.NgoaiGio)
					equal = false;
			}
			else if (Object1.NgoaiGio == null ^ Object1.NgoaiGio == null )
			{
				equal = false;
			}
			if (Object1.HeSoThanhPhan != null && Object2.HeSoThanhPhan != null )
			{
				if (Object1.HeSoThanhPhan != Object2.HeSoThanhPhan)
					equal = false;
			}
			else if (Object1.HeSoThanhPhan == null ^ Object1.HeSoThanhPhan == null )
			{
				equal = false;
			}
			if (Object1.HeSoLopDong != null && Object2.HeSoLopDong != null )
			{
				if (Object1.HeSoLopDong != Object2.HeSoLopDong)
					equal = false;
			}
			else if (Object1.HeSoLopDong == null ^ Object1.HeSoLopDong == null )
			{
				equal = false;
			}
			if (Object1.DonGia != null && Object2.DonGia != null )
			{
				if (Object1.DonGia != Object2.DonGia)
					equal = false;
			}
			else if (Object1.DonGia == null ^ Object1.DonGia == null )
			{
				equal = false;
			}
			if (Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object1.TietQuyDoi == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiKhoiLuong != null && Object2.MaLoaiKhoiLuong != null )
			{
				if (Object1.MaLoaiKhoiLuong != Object2.MaLoaiKhoiLuong)
					equal = false;
			}
			else if (Object1.MaLoaiKhoiLuong == null ^ Object1.MaLoaiKhoiLuong == null )
			{
				equal = false;
			}
			if (Object1.TenLoaiKhoiLuong != null && Object2.TenLoaiKhoiLuong != null )
			{
				if (Object1.TenLoaiKhoiLuong != Object2.TenLoaiKhoiLuong)
					equal = false;
			}
			else if (Object1.TenLoaiKhoiLuong == null ^ Object1.TenLoaiKhoiLuong == null )
			{
				equal = false;
			}
			if (Object1.PhanLoai != null && Object2.PhanLoai != null )
			{
				if (Object1.PhanLoai != Object2.PhanLoai)
					equal = false;
			}
			else if (Object1.PhanLoai == null ^ Object1.PhanLoai == null )
			{
				equal = false;
			}
			if (Object1.NghiaVu != null && Object2.NghiaVu != null )
			{
				if (Object1.NghiaVu != Object2.NghiaVu)
					equal = false;
			}
			else if (Object1.NghiaVu == null ^ Object1.NghiaVu == null )
			{
				equal = false;
			}
			if (Object1.NguongTiet != null && Object2.NguongTiet != null )
			{
				if (Object1.NguongTiet != Object2.NguongTiet)
					equal = false;
			}
			else if (Object1.NguongTiet == null ^ Object1.NguongTiet == null )
			{
				equal = false;
			}
			if (Object1.TietNghiaVu != null && Object2.TietNghiaVu != null )
			{
				if (Object1.TietNghiaVu != Object2.TietNghiaVu)
					equal = false;
			}
			else if (Object1.TietNghiaVu == null ^ Object1.TietNghiaVu == null )
			{
				equal = false;
			}
			if (Object1.ThanhTien != null && Object2.ThanhTien != null )
			{
				if (Object1.ThanhTien != Object2.ThanhTien)
					equal = false;
			}
			else if (Object1.ThanhTien == null ^ Object1.ThanhTien == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewChiTietKhoiLuong entity, string propertyName)
		{
			switch (propertyName)
			{
				case "NamHoc":
					return entity.NamHoc;
				case "HocKy":
					return entity.HocKy;
				case "MaGiangVien":
					return entity.MaGiangVien;
				case "MaQuanLy":
					return entity.MaQuanLy;
				case "HoTen":
					return entity.HoTen;
				case "MaKhoa":
					return entity.MaKhoa;
				case "MaBoMon":
					return entity.MaBoMon;
				case "MaMonHoc":
					return entity.MaMonHoc;
				case "TenMonHoc":
					return entity.TenMonHoc;
				case "MaNhom":
					return entity.MaNhom;
				case "MaLop":
					return entity.MaLop;
				case "MaLopHocPhan":
					return entity.MaLopHocPhan;
				case "SiSoLop":
					return entity.SiSoLop;
				case "TrongGio":
					return entity.TrongGio;
				case "ChatLuongCao":
					return entity.ChatLuongCao;
				case "NgoaiGio":
					return entity.NgoaiGio;
				case "HeSoThanhPhan":
					return entity.HeSoThanhPhan;
				case "HeSoLopDong":
					return entity.HeSoLopDong;
				case "DonGia":
					return entity.DonGia;
				case "TietQuyDoi":
					return entity.TietQuyDoi;
				case "MaLoaiKhoiLuong":
					return entity.MaLoaiKhoiLuong;
				case "TenLoaiKhoiLuong":
					return entity.TenLoaiKhoiLuong;
				case "PhanLoai":
					return entity.PhanLoai;
				case "NghiaVu":
					return entity.NghiaVu;
				case "NguongTiet":
					return entity.NguongTiet;
				case "TietNghiaVu":
					return entity.TietNghiaVu;
				case "ThanhTien":
					return entity.ThanhTien;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewChiTietKhoiLuong, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{28}{27}- NamHoc: {0}{27}- HocKy: {1}{27}- MaGiangVien: {2}{27}- MaQuanLy: {3}{27}- HoTen: {4}{27}- MaKhoa: {5}{27}- MaBoMon: {6}{27}- MaMonHoc: {7}{27}- TenMonHoc: {8}{27}- MaNhom: {9}{27}- MaLop: {10}{27}- MaLopHocPhan: {11}{27}- SiSoLop: {12}{27}- TrongGio: {13}{27}- ChatLuongCao: {14}{27}- NgoaiGio: {15}{27}- HeSoThanhPhan: {16}{27}- HeSoLopDong: {17}{27}- DonGia: {18}{27}- TietQuyDoi: {19}{27}- MaLoaiKhoiLuong: {20}{27}- TenLoaiKhoiLuong: {21}{27}- PhanLoai: {22}{27}- NghiaVu: {23}{27}- NguongTiet: {24}{27}- TietNghiaVu: {25}{27}- ThanhTien: {26}{27}", 
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
			     
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
			     
				this.MaGiangVien,
				this.MaQuanLy,
				(this.HoTen == null) ? string.Empty : this.HoTen.ToString(),
			     
				(this.MaKhoa == null) ? string.Empty : this.MaKhoa.ToString(),
			     
				(this.MaBoMon == null) ? string.Empty : this.MaBoMon.ToString(),
			     
				this.MaMonHoc,
				(this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString(),
			     
				(this.MaNhom == null) ? string.Empty : this.MaNhom.ToString(),
			     
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
			     
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
			     
				(this.SiSoLop == null) ? string.Empty : this.SiSoLop.ToString(),
			     
				(this.TrongGio == null) ? string.Empty : this.TrongGio.ToString(),
			     
				(this.ChatLuongCao == null) ? string.Empty : this.ChatLuongCao.ToString(),
			     
				(this.NgoaiGio == null) ? string.Empty : this.NgoaiGio.ToString(),
			     
				(this.HeSoThanhPhan == null) ? string.Empty : this.HeSoThanhPhan.ToString(),
			     
				(this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString(),
			     
				(this.DonGia == null) ? string.Empty : this.DonGia.ToString(),
			     
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
			     
				(this.MaLoaiKhoiLuong == null) ? string.Empty : this.MaLoaiKhoiLuong.ToString(),
			     
				(this.TenLoaiKhoiLuong == null) ? string.Empty : this.TenLoaiKhoiLuong.ToString(),
			     
				(this.PhanLoai == null) ? string.Empty : this.PhanLoai.ToString(),
			     
				(this.NghiaVu == null) ? string.Empty : this.NghiaVu.ToString(),
			     
				(this.NguongTiet == null) ? string.Empty : this.NguongTiet.ToString(),
			     
				(this.TietNghiaVu == null) ? string.Empty : this.TietNghiaVu.ToString(),
			     
				(this.ThanhTien == null) ? string.Empty : this.ThanhTien.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewChiTietKhoiLuong columns.
	/// </summary>
	[Serializable]
	public enum ViewChiTietKhoiLuongColumn
	{
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("NamHoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("HocKy")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy,
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("MaGiangVien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		MaGiangVien,
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		[EnumTextValue("MaQuanLy")]
		[ColumnEnum("MaQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaQuanLy,
		/// <summary>
		/// HoTen : 
		/// </summary>
		[EnumTextValue("HoTen")]
		[ColumnEnum("HoTen", typeof(System.String), System.Data.DbType.String, false, false, true, 152)]
		HoTen,
		/// <summary>
		/// MaKhoa : 
		/// </summary>
		[EnumTextValue("MaKhoa")]
		[ColumnEnum("MaKhoa", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaKhoa,
		/// <summary>
		/// MaBoMon : 
		/// </summary>
		[EnumTextValue("MaBoMon")]
		[ColumnEnum("MaBoMon", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaBoMon,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("MaMonHoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaMonHoc,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("TenMonHoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, true, 759)]
		TenMonHoc,
		/// <summary>
		/// MaNhom : 
		/// </summary>
		[EnumTextValue("MaNhom")]
		[ColumnEnum("MaNhom", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaNhom,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("MaLop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLop,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("MaLopHocPhan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MaLopHocPhan,
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		[EnumTextValue("SiSoLop")]
		[ColumnEnum("SiSoLop", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSoLop,
		/// <summary>
		/// TrongGio : 
		/// </summary>
		[EnumTextValue("TrongGio")]
		[ColumnEnum("TrongGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TrongGio,
		/// <summary>
		/// ChatLuongCao : 
		/// </summary>
		[EnumTextValue("ChatLuongCao")]
		[ColumnEnum("ChatLuongCao", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ChatLuongCao,
		/// <summary>
		/// NgoaiGio : 
		/// </summary>
		[EnumTextValue("NgoaiGio")]
		[ColumnEnum("NgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		NgoaiGio,
		/// <summary>
		/// HeSoThanhPhan : 
		/// </summary>
		[EnumTextValue("HeSoThanhPhan")]
		[ColumnEnum("HeSoThanhPhan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoThanhPhan,
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		[EnumTextValue("HeSoLopDong")]
		[ColumnEnum("HeSoLopDong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDong,
		/// <summary>
		/// DonGia : 
		/// </summary>
		[EnumTextValue("DonGia")]
		[ColumnEnum("DonGia", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGia,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("TietQuyDoi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi,
		/// <summary>
		/// MaLoaiKhoiLuong : 
		/// </summary>
		[EnumTextValue("MaLoaiKhoiLuong")]
		[ColumnEnum("MaLoaiKhoiLuong", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 40)]
		MaLoaiKhoiLuong,
		/// <summary>
		/// TenLoaiKhoiLuong : 
		/// </summary>
		[EnumTextValue("TenLoaiKhoiLuong")]
		[ColumnEnum("TenLoaiKhoiLuong", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TenLoaiKhoiLuong,
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		[EnumTextValue("PhanLoai")]
		[ColumnEnum("PhanLoai", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		PhanLoai,
		/// <summary>
		/// NghiaVu : 
		/// </summary>
		[EnumTextValue("NghiaVu")]
		[ColumnEnum("NghiaVu", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		NghiaVu,
		/// <summary>
		/// NguongTiet : 
		/// </summary>
		[EnumTextValue("NguongTiet")]
		[ColumnEnum("NguongTiet", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		NguongTiet,
		/// <summary>
		/// TietNghiaVu : 
		/// </summary>
		[EnumTextValue("TietNghiaVu")]
		[ColumnEnum("TietNghiaVu", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiaVu,
		/// <summary>
		/// ThanhTien : 
		/// </summary>
		[EnumTextValue("ThanhTien")]
		[ColumnEnum("ThanhTien", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThanhTien
	}//End enum

} // end namespace

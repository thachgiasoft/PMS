/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewTinhKhoiLuongTungTuan.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_Tinh_KhoiLuong_TungTuan' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewTinhKhoiLuongTungTuanBase")]
	public abstract partial class ViewTinhKhoiLuongTungTuanBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// MaKhoiLuong : 
		/// </summary>
		private System.Int32		  _maKhoiLuong = (int)0;
		
		/// <summary>
		/// MaToaNha : 
		/// </summary>
		private System.String		  _maToaNha = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		private System.String		  _maLopHocPhan = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		private System.String		  _maLop = null;
		
		/// <summary>
		/// MaNhom : 
		/// </summary>
		private System.String		  _maNhom = null;
		
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		private System.String		  _loaiHocPhan = null;
		
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		private System.String		  _phanLoai = null;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		private System.String		  _maMonHoc = null;
		
		/// <summary>
		/// DienGiai : 
		/// </summary>
		private System.String		  _dienGiai = null;
		
		/// <summary>
		/// SoTiet : 
		/// </summary>
		private System.Decimal?		  _soTiet = null;
		
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		private System.Decimal?		  _soTinChi = null;
		
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		private System.Int32?		  _siSoLop = null;
		
		/// <summary>
		/// SoNhom : 
		/// </summary>
		private System.Int32?		  _soNhom = null;
		
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		private System.String		  _maDiaDiem = null;
		
		/// <summary>
		/// NgayBatDau : 
		/// </summary>
		private System.DateTime?		  _ngayBatDau = null;
		
		/// <summary>
		/// NgayKetThuc : 
		/// </summary>
		private System.DateTime?		  _ngayKetThuc = null;
		
		/// <summary>
		/// ChatLuongCao : 
		/// </summary>
		private System.Decimal?		  _chatLuongCao = null;
		
		/// <summary>
		/// NgoaiGio : 
		/// </summary>
		private System.Decimal?		  _ngoaiGio = null;
		
		/// <summary>
		/// TrongGio : 
		/// </summary>
		private System.Decimal?		  _trongGio = null;
		
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		private System.Decimal?		  _heSoLopDong = null;
		
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		private System.Decimal?		  _heSoCoSo = null;
		
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		private System.Decimal?		  _heSoHocKy = null;
		
		/// <summary>
		/// HeSoThanhPhan : 
		/// </summary>
		private System.Decimal?		  _heSoThanhPhan = null;
		
		/// <summary>
		/// HeSoTrongGio : 
		/// </summary>
		private System.Decimal?		  _heSoTrongGio = null;
		
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		private System.Decimal?		  _heSoNgoaiGio = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		private System.Decimal?		  _tietQuyDoi = null;
		
		/// <summary>
		/// LoaiHocKy : 
		/// </summary>
		private System.Int32?		  _loaiHocKy = null;
		
		/// <summary>
		/// ThoiKhoaBieu : 
		/// </summary>
		private System.String		  _thoiKhoaBieu = null;
		
		/// <summary>
		/// NgayTao : 
		/// </summary>
		private System.DateTime?		  _ngayTao = null;
		
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		private System.String		  _maQuanLy = null;
		
		/// <summary>
		/// Tuan : 
		/// </summary>
		private System.Int32?		  _tuan = null;
		
		/// <summary>
		/// Nam : 
		/// </summary>
		private System.Int32?		  _nam = null;
		
		/// <summary>
		/// NgayDay : 
		/// </summary>
		private System.DateTime?		  _ngayDay = null;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		private System.String		  _ho = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		private System.String		  _ten = null;
		
		/// <summary>
		/// TenLop : 
		/// </summary>
		private System.String		  _tenLop = string.Empty;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		private System.String		  _tenMonHoc = string.Empty;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewTinhKhoiLuongTungTuanBase"/> instance.
		///</summary>
		public ViewTinhKhoiLuongTungTuanBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewTinhKhoiLuongTungTuanBase"/> instance.
		///</summary>
		///<param name="_maKhoiLuong"></param>
		///<param name="_maToaNha"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_maNhom"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_phanLoai"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_dienGiai"></param>
		///<param name="_soTiet"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSoLop"></param>
		///<param name="_soNhom"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_ngayBatDau"></param>
		///<param name="_ngayKetThuc"></param>
		///<param name="_chatLuongCao"></param>
		///<param name="_ngoaiGio"></param>
		///<param name="_trongGio"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_heSoHocKy"></param>
		///<param name="_heSoThanhPhan"></param>
		///<param name="_heSoTrongGio"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_loaiHocKy"></param>
		///<param name="_thoiKhoaBieu"></param>
		///<param name="_ngayTao"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_tuan"></param>
		///<param name="_nam"></param>
		///<param name="_ngayDay"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_tenLop"></param>
		///<param name="_tenMonHoc"></param>
		public ViewTinhKhoiLuongTungTuanBase(System.Int32 _maKhoiLuong, System.String _maToaNha, System.String _maLopHocPhan, System.String _maLop, System.String _maNhom, System.String _loaiHocPhan, System.String _phanLoai, System.String _maMonHoc, System.String _dienGiai, System.Decimal? _soTiet, System.Decimal? _soTinChi, System.Int32? _siSoLop, System.Int32? _soNhom, System.String _maDiaDiem, System.DateTime? _ngayBatDau, System.DateTime? _ngayKetThuc, System.Decimal? _chatLuongCao, System.Decimal? _ngoaiGio, System.Decimal? _trongGio, System.Decimal? _heSoLopDong, System.Decimal? _heSoCoSo, System.Decimal? _heSoHocKy, System.Decimal? _heSoThanhPhan, System.Decimal? _heSoTrongGio, System.Decimal? _heSoNgoaiGio, System.Decimal? _tietQuyDoi, System.Int32? _loaiHocKy, System.String _thoiKhoaBieu, System.DateTime? _ngayTao, System.String _maQuanLy, System.Int32? _tuan, System.Int32? _nam, System.DateTime? _ngayDay, System.String _ho, System.String _ten, System.String _tenLop, System.String _tenMonHoc)
		{
			this._maKhoiLuong = _maKhoiLuong;
			this._maToaNha = _maToaNha;
			this._maLopHocPhan = _maLopHocPhan;
			this._maLop = _maLop;
			this._maNhom = _maNhom;
			this._loaiHocPhan = _loaiHocPhan;
			this._phanLoai = _phanLoai;
			this._maMonHoc = _maMonHoc;
			this._dienGiai = _dienGiai;
			this._soTiet = _soTiet;
			this._soTinChi = _soTinChi;
			this._siSoLop = _siSoLop;
			this._soNhom = _soNhom;
			this._maDiaDiem = _maDiaDiem;
			this._ngayBatDau = _ngayBatDau;
			this._ngayKetThuc = _ngayKetThuc;
			this._chatLuongCao = _chatLuongCao;
			this._ngoaiGio = _ngoaiGio;
			this._trongGio = _trongGio;
			this._heSoLopDong = _heSoLopDong;
			this._heSoCoSo = _heSoCoSo;
			this._heSoHocKy = _heSoHocKy;
			this._heSoThanhPhan = _heSoThanhPhan;
			this._heSoTrongGio = _heSoTrongGio;
			this._heSoNgoaiGio = _heSoNgoaiGio;
			this._tietQuyDoi = _tietQuyDoi;
			this._loaiHocKy = _loaiHocKy;
			this._thoiKhoaBieu = _thoiKhoaBieu;
			this._ngayTao = _ngayTao;
			this._maQuanLy = _maQuanLy;
			this._tuan = _tuan;
			this._nam = _nam;
			this._ngayDay = _ngayDay;
			this._ho = _ho;
			this._ten = _ten;
			this._tenLop = _tenLop;
			this._tenMonHoc = _tenMonHoc;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewTinhKhoiLuongTungTuan"/> instance.
		///</summary>
		///<param name="_maKhoiLuong"></param>
		///<param name="_maToaNha"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_maNhom"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_phanLoai"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_dienGiai"></param>
		///<param name="_soTiet"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSoLop"></param>
		///<param name="_soNhom"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_ngayBatDau"></param>
		///<param name="_ngayKetThuc"></param>
		///<param name="_chatLuongCao"></param>
		///<param name="_ngoaiGio"></param>
		///<param name="_trongGio"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_heSoHocKy"></param>
		///<param name="_heSoThanhPhan"></param>
		///<param name="_heSoTrongGio"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_loaiHocKy"></param>
		///<param name="_thoiKhoaBieu"></param>
		///<param name="_ngayTao"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_tuan"></param>
		///<param name="_nam"></param>
		///<param name="_ngayDay"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_tenLop"></param>
		///<param name="_tenMonHoc"></param>
		public static ViewTinhKhoiLuongTungTuan CreateViewTinhKhoiLuongTungTuan(System.Int32 _maKhoiLuong, System.String _maToaNha, System.String _maLopHocPhan, System.String _maLop, System.String _maNhom, System.String _loaiHocPhan, System.String _phanLoai, System.String _maMonHoc, System.String _dienGiai, System.Decimal? _soTiet, System.Decimal? _soTinChi, System.Int32? _siSoLop, System.Int32? _soNhom, System.String _maDiaDiem, System.DateTime? _ngayBatDau, System.DateTime? _ngayKetThuc, System.Decimal? _chatLuongCao, System.Decimal? _ngoaiGio, System.Decimal? _trongGio, System.Decimal? _heSoLopDong, System.Decimal? _heSoCoSo, System.Decimal? _heSoHocKy, System.Decimal? _heSoThanhPhan, System.Decimal? _heSoTrongGio, System.Decimal? _heSoNgoaiGio, System.Decimal? _tietQuyDoi, System.Int32? _loaiHocKy, System.String _thoiKhoaBieu, System.DateTime? _ngayTao, System.String _maQuanLy, System.Int32? _tuan, System.Int32? _nam, System.DateTime? _ngayDay, System.String _ho, System.String _ten, System.String _tenLop, System.String _tenMonHoc)
		{
			ViewTinhKhoiLuongTungTuan newViewTinhKhoiLuongTungTuan = new ViewTinhKhoiLuongTungTuan();
			newViewTinhKhoiLuongTungTuan.MaKhoiLuong = _maKhoiLuong;
			newViewTinhKhoiLuongTungTuan.MaToaNha = _maToaNha;
			newViewTinhKhoiLuongTungTuan.MaLopHocPhan = _maLopHocPhan;
			newViewTinhKhoiLuongTungTuan.MaLop = _maLop;
			newViewTinhKhoiLuongTungTuan.MaNhom = _maNhom;
			newViewTinhKhoiLuongTungTuan.LoaiHocPhan = _loaiHocPhan;
			newViewTinhKhoiLuongTungTuan.PhanLoai = _phanLoai;
			newViewTinhKhoiLuongTungTuan.MaMonHoc = _maMonHoc;
			newViewTinhKhoiLuongTungTuan.DienGiai = _dienGiai;
			newViewTinhKhoiLuongTungTuan.SoTiet = _soTiet;
			newViewTinhKhoiLuongTungTuan.SoTinChi = _soTinChi;
			newViewTinhKhoiLuongTungTuan.SiSoLop = _siSoLop;
			newViewTinhKhoiLuongTungTuan.SoNhom = _soNhom;
			newViewTinhKhoiLuongTungTuan.MaDiaDiem = _maDiaDiem;
			newViewTinhKhoiLuongTungTuan.NgayBatDau = _ngayBatDau;
			newViewTinhKhoiLuongTungTuan.NgayKetThuc = _ngayKetThuc;
			newViewTinhKhoiLuongTungTuan.ChatLuongCao = _chatLuongCao;
			newViewTinhKhoiLuongTungTuan.NgoaiGio = _ngoaiGio;
			newViewTinhKhoiLuongTungTuan.TrongGio = _trongGio;
			newViewTinhKhoiLuongTungTuan.HeSoLopDong = _heSoLopDong;
			newViewTinhKhoiLuongTungTuan.HeSoCoSo = _heSoCoSo;
			newViewTinhKhoiLuongTungTuan.HeSoHocKy = _heSoHocKy;
			newViewTinhKhoiLuongTungTuan.HeSoThanhPhan = _heSoThanhPhan;
			newViewTinhKhoiLuongTungTuan.HeSoTrongGio = _heSoTrongGio;
			newViewTinhKhoiLuongTungTuan.HeSoNgoaiGio = _heSoNgoaiGio;
			newViewTinhKhoiLuongTungTuan.TietQuyDoi = _tietQuyDoi;
			newViewTinhKhoiLuongTungTuan.LoaiHocKy = _loaiHocKy;
			newViewTinhKhoiLuongTungTuan.ThoiKhoaBieu = _thoiKhoaBieu;
			newViewTinhKhoiLuongTungTuan.NgayTao = _ngayTao;
			newViewTinhKhoiLuongTungTuan.MaQuanLy = _maQuanLy;
			newViewTinhKhoiLuongTungTuan.Tuan = _tuan;
			newViewTinhKhoiLuongTungTuan.Nam = _nam;
			newViewTinhKhoiLuongTungTuan.NgayDay = _ngayDay;
			newViewTinhKhoiLuongTungTuan.Ho = _ho;
			newViewTinhKhoiLuongTungTuan.Ten = _ten;
			newViewTinhKhoiLuongTungTuan.TenLop = _tenLop;
			newViewTinhKhoiLuongTungTuan.TenMonHoc = _tenMonHoc;
			return newViewTinhKhoiLuongTungTuan;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the MaKhoiLuong property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 MaKhoiLuong
		{
			get
			{
				return this._maKhoiLuong; 
			}
			set
			{
				if (_maKhoiLuong == value)
					return;
					
				this._maKhoiLuong = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaKhoiLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaToaNha property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaToaNha
		{
			get
			{
				return this._maToaNha; 
			}
			set
			{
				if (_maToaNha == value)
					return;
					
				this._maToaNha = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaToaNha");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this._maLopHocPhan; 
			}
			set
			{
				if (_maLopHocPhan == value)
					return;
					
				this._maLopHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLop
		{
			get
			{
				return this._maLop; 
			}
			set
			{
				if (_maLop == value)
					return;
					
				this._maLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaNhom property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaNhom
		{
			get
			{
				return this._maNhom; 
			}
			set
			{
				if (_maNhom == value)
					return;
					
				this._maNhom = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaNhom");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LoaiHocPhan
		{
			get
			{
				return this._loaiHocPhan; 
			}
			set
			{
				if (_loaiHocPhan == value)
					return;
					
				this._loaiHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("LoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PhanLoai property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PhanLoai
		{
			get
			{
				return this._phanLoai; 
			}
			set
			{
				if (_phanLoai == value)
					return;
					
				this._phanLoai = value;
				this._isDirty = true;
				
				OnPropertyChanged("PhanLoai");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this._maMonHoc; 
			}
			set
			{
				if (_maMonHoc == value)
					return;
					
				this._maMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DienGiai property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DienGiai
		{
			get
			{
				return this._dienGiai; 
			}
			set
			{
				if (_dienGiai == value)
					return;
					
				this._dienGiai = value;
				this._isDirty = true;
				
				OnPropertyChanged("DienGiai");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTiet property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoTietNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoTiet
		{
			get
			{
				return this._soTiet; 
			}
			set
			{
				if (_soTiet == value && SoTiet != null )
					return;
					
				this._soTiet = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTiet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTinChi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoTinChiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoTinChi
		{
			get
			{
				return this._soTinChi; 
			}
			set
			{
				if (_soTinChi == value && SoTinChi != null )
					return;
					
				this._soTinChi = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SiSoLop property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSiSoLopNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SiSoLop
		{
			get
			{
				return this._siSoLop; 
			}
			set
			{
				if (_siSoLop == value && SiSoLop != null )
					return;
					
				this._siSoLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("SiSoLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoNhom property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSoNhomNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SoNhom
		{
			get
			{
				return this._soNhom; 
			}
			set
			{
				if (_soNhom == value && SoNhom != null )
					return;
					
				this._soNhom = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoNhom");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDiaDiem
		{
			get
			{
				return this._maDiaDiem; 
			}
			set
			{
				if (_maDiaDiem == value)
					return;
					
				this._maDiaDiem = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayBatDau property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayBatDauNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? NgayBatDau
		{
			get
			{
				return this._ngayBatDau; 
			}
			set
			{
				if (_ngayBatDau == value && NgayBatDau != null )
					return;
					
				this._ngayBatDau = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayBatDau");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayKetThuc property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayKetThucNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? NgayKetThuc
		{
			get
			{
				return this._ngayKetThuc; 
			}
			set
			{
				if (_ngayKetThuc == value && NgayKetThuc != null )
					return;
					
				this._ngayKetThuc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayKetThuc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ChatLuongCao property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsChatLuongCaoNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? ChatLuongCao
		{
			get
			{
				return this._chatLuongCao; 
			}
			set
			{
				if (_chatLuongCao == value && ChatLuongCao != null )
					return;
					
				this._chatLuongCao = value;
				this._isDirty = true;
				
				OnPropertyChanged("ChatLuongCao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsNgoaiGioNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? NgoaiGio
		{
			get
			{
				return this._ngoaiGio; 
			}
			set
			{
				if (_ngoaiGio == value && NgoaiGio != null )
					return;
					
				this._ngoaiGio = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrongGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTrongGioNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TrongGio
		{
			get
			{
				return this._trongGio; 
			}
			set
			{
				if (_trongGio == value && TrongGio != null )
					return;
					
				this._trongGio = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrongGio");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoLopDong property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoLopDongNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoLopDong
		{
			get
			{
				return this._heSoLopDong; 
			}
			set
			{
				if (_heSoLopDong == value && HeSoLopDong != null )
					return;
					
				this._heSoLopDong = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoLopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoCoSo property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoCoSoNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoCoSo
		{
			get
			{
				return this._heSoCoSo; 
			}
			set
			{
				if (_heSoCoSo == value && HeSoCoSo != null )
					return;
					
				this._heSoCoSo = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoCoSo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoHocKy property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoHocKyNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoHocKy
		{
			get
			{
				return this._heSoHocKy; 
			}
			set
			{
				if (_heSoHocKy == value && HeSoHocKy != null )
					return;
					
				this._heSoHocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoHocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoThanhPhan property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoThanhPhanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoThanhPhan
		{
			get
			{
				return this._heSoThanhPhan; 
			}
			set
			{
				if (_heSoThanhPhan == value && HeSoThanhPhan != null )
					return;
					
				this._heSoThanhPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoThanhPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoTrongGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoTrongGioNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoTrongGio
		{
			get
			{
				return this._heSoTrongGio; 
			}
			set
			{
				if (_heSoTrongGio == value && HeSoTrongGio != null )
					return;
					
				this._heSoTrongGio = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoTrongGio");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoNgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoNgoaiGioNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoNgoaiGio
		{
			get
			{
				return this._heSoNgoaiGio; 
			}
			set
			{
				if (_heSoNgoaiGio == value && HeSoNgoaiGio != null )
					return;
					
				this._heSoNgoaiGio = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoNgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietQuyDoiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this._tietQuyDoi; 
			}
			set
			{
				if (_tietQuyDoi == value && TietQuyDoi != null )
					return;
					
				this._tietQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LoaiHocKy property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsLoaiHocKyNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? LoaiHocKy
		{
			get
			{
				return this._loaiHocKy; 
			}
			set
			{
				if (_loaiHocKy == value && LoaiHocKy != null )
					return;
					
				this._loaiHocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("LoaiHocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThoiKhoaBieu property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ThoiKhoaBieu
		{
			get
			{
				return this._thoiKhoaBieu; 
			}
			set
			{
				if (_thoiKhoaBieu == value)
					return;
					
				this._thoiKhoaBieu = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThoiKhoaBieu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayTao property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayTaoNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? NgayTao
		{
			get
			{
				return this._ngayTao; 
			}
			set
			{
				if (_ngayTao == value && NgayTao != null )
					return;
					
				this._ngayTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaQuanLy
		{
			get
			{
				return this._maQuanLy; 
			}
			set
			{
				if (_maQuanLy == value)
					return;
					
				this._maQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Tuan property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTuanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? Tuan
		{
			get
			{
				return this._tuan; 
			}
			set
			{
				if (_tuan == value && Tuan != null )
					return;
					
				this._tuan = value;
				this._isDirty = true;
				
				OnPropertyChanged("Tuan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Nam property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsNamNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? Nam
		{
			get
			{
				return this._nam; 
			}
			set
			{
				if (_nam == value && Nam != null )
					return;
					
				this._nam = value;
				this._isDirty = true;
				
				OnPropertyChanged("Nam");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayDay property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayDayNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? NgayDay
		{
			get
			{
				return this._ngayDay; 
			}
			set
			{
				if (_ngayDay == value && NgayDay != null )
					return;
					
				this._ngayDay = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayDay");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ho
		{
			get
			{
				return this._ho; 
			}
			set
			{
				if (_ho == value)
					return;
					
				this._ho = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ten
		{
			get
			{
				return this._ten; 
			}
			set
			{
				if (_ten == value)
					return;
					
				this._ten = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenLop property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenLop
		{
			get
			{
				return this._tenLop; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TenLop does not allow null values.");
				if (_tenLop == value)
					return;
					
				this._tenLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this._tenMonHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TenMonHoc does not allow null values.");
				if (_tenMonHoc == value)
					return;
					
				this._tenMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_Tinh_KhoiLuong_TungTuan"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewTinhKhoiLuongTungTuanBase Entity 
		///</summary>
		public virtual ViewTinhKhoiLuongTungTuanBase Copy()
		{
			//shallow copy entity
			ViewTinhKhoiLuongTungTuan copy = new ViewTinhKhoiLuongTungTuan();
				copy.MaKhoiLuong = this.MaKhoiLuong;
				copy.MaToaNha = this.MaToaNha;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.MaLop = this.MaLop;
				copy.MaNhom = this.MaNhom;
				copy.LoaiHocPhan = this.LoaiHocPhan;
				copy.PhanLoai = this.PhanLoai;
				copy.MaMonHoc = this.MaMonHoc;
				copy.DienGiai = this.DienGiai;
				copy.SoTiet = this.SoTiet;
				copy.SoTinChi = this.SoTinChi;
				copy.SiSoLop = this.SiSoLop;
				copy.SoNhom = this.SoNhom;
				copy.MaDiaDiem = this.MaDiaDiem;
				copy.NgayBatDau = this.NgayBatDau;
				copy.NgayKetThuc = this.NgayKetThuc;
				copy.ChatLuongCao = this.ChatLuongCao;
				copy.NgoaiGio = this.NgoaiGio;
				copy.TrongGio = this.TrongGio;
				copy.HeSoLopDong = this.HeSoLopDong;
				copy.HeSoCoSo = this.HeSoCoSo;
				copy.HeSoHocKy = this.HeSoHocKy;
				copy.HeSoThanhPhan = this.HeSoThanhPhan;
				copy.HeSoTrongGio = this.HeSoTrongGio;
				copy.HeSoNgoaiGio = this.HeSoNgoaiGio;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.LoaiHocKy = this.LoaiHocKy;
				copy.ThoiKhoaBieu = this.ThoiKhoaBieu;
				copy.NgayTao = this.NgayTao;
				copy.MaQuanLy = this.MaQuanLy;
				copy.Tuan = this.Tuan;
				copy.Nam = this.Nam;
				copy.NgayDay = this.NgayDay;
				copy.Ho = this.Ho;
				copy.Ten = this.Ten;
				copy.TenLop = this.TenLop;
				copy.TenMonHoc = this.TenMonHoc;
			copy.AcceptChanges();
			return (ViewTinhKhoiLuongTungTuan)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewTinhKhoiLuongTungTuanBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewTinhKhoiLuongTungTuanBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewTinhKhoiLuongTungTuanBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewTinhKhoiLuongTungTuanBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewTinhKhoiLuongTungTuanBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewTinhKhoiLuongTungTuanBase Object1, ViewTinhKhoiLuongTungTuanBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.MaKhoiLuong != Object2.MaKhoiLuong)
				equal = false;
			if (Object1.MaToaNha != null && Object2.MaToaNha != null )
			{
				if (Object1.MaToaNha != Object2.MaToaNha)
					equal = false;
			}
			else if (Object1.MaToaNha == null ^ Object1.MaToaNha == null )
			{
				equal = false;
			}
			if (Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object1.MaLopHocPhan == null )
			{
				equal = false;
			}
			if (Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object1.MaLop == null )
			{
				equal = false;
			}
			if (Object1.MaNhom != null && Object2.MaNhom != null )
			{
				if (Object1.MaNhom != Object2.MaNhom)
					equal = false;
			}
			else if (Object1.MaNhom == null ^ Object1.MaNhom == null )
			{
				equal = false;
			}
			if (Object1.LoaiHocPhan != null && Object2.LoaiHocPhan != null )
			{
				if (Object1.LoaiHocPhan != Object2.LoaiHocPhan)
					equal = false;
			}
			else if (Object1.LoaiHocPhan == null ^ Object1.LoaiHocPhan == null )
			{
				equal = false;
			}
			if (Object1.PhanLoai != null && Object2.PhanLoai != null )
			{
				if (Object1.PhanLoai != Object2.PhanLoai)
					equal = false;
			}
			else if (Object1.PhanLoai == null ^ Object1.PhanLoai == null )
			{
				equal = false;
			}
			if (Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object1.MaMonHoc == null )
			{
				equal = false;
			}
			if (Object1.DienGiai != null && Object2.DienGiai != null )
			{
				if (Object1.DienGiai != Object2.DienGiai)
					equal = false;
			}
			else if (Object1.DienGiai == null ^ Object1.DienGiai == null )
			{
				equal = false;
			}
			if (Object1.SoTiet != null && Object2.SoTiet != null )
			{
				if (Object1.SoTiet != Object2.SoTiet)
					equal = false;
			}
			else if (Object1.SoTiet == null ^ Object1.SoTiet == null )
			{
				equal = false;
			}
			if (Object1.SoTinChi != null && Object2.SoTinChi != null )
			{
				if (Object1.SoTinChi != Object2.SoTinChi)
					equal = false;
			}
			else if (Object1.SoTinChi == null ^ Object1.SoTinChi == null )
			{
				equal = false;
			}
			if (Object1.SiSoLop != null && Object2.SiSoLop != null )
			{
				if (Object1.SiSoLop != Object2.SiSoLop)
					equal = false;
			}
			else if (Object1.SiSoLop == null ^ Object1.SiSoLop == null )
			{
				equal = false;
			}
			if (Object1.SoNhom != null && Object2.SoNhom != null )
			{
				if (Object1.SoNhom != Object2.SoNhom)
					equal = false;
			}
			else if (Object1.SoNhom == null ^ Object1.SoNhom == null )
			{
				equal = false;
			}
			if (Object1.MaDiaDiem != null && Object2.MaDiaDiem != null )
			{
				if (Object1.MaDiaDiem != Object2.MaDiaDiem)
					equal = false;
			}
			else if (Object1.MaDiaDiem == null ^ Object1.MaDiaDiem == null )
			{
				equal = false;
			}
			if (Object1.NgayBatDau != null && Object2.NgayBatDau != null )
			{
				if (Object1.NgayBatDau != Object2.NgayBatDau)
					equal = false;
			}
			else if (Object1.NgayBatDau == null ^ Object1.NgayBatDau == null )
			{
				equal = false;
			}
			if (Object1.NgayKetThuc != null && Object2.NgayKetThuc != null )
			{
				if (Object1.NgayKetThuc != Object2.NgayKetThuc)
					equal = false;
			}
			else if (Object1.NgayKetThuc == null ^ Object1.NgayKetThuc == null )
			{
				equal = false;
			}
			if (Object1.ChatLuongCao != null && Object2.ChatLuongCao != null )
			{
				if (Object1.ChatLuongCao != Object2.ChatLuongCao)
					equal = false;
			}
			else if (Object1.ChatLuongCao == null ^ Object1.ChatLuongCao == null )
			{
				equal = false;
			}
			if (Object1.NgoaiGio != null && Object2.NgoaiGio != null )
			{
				if (Object1.NgoaiGio != Object2.NgoaiGio)
					equal = false;
			}
			else if (Object1.NgoaiGio == null ^ Object1.NgoaiGio == null )
			{
				equal = false;
			}
			if (Object1.TrongGio != null && Object2.TrongGio != null )
			{
				if (Object1.TrongGio != Object2.TrongGio)
					equal = false;
			}
			else if (Object1.TrongGio == null ^ Object1.TrongGio == null )
			{
				equal = false;
			}
			if (Object1.HeSoLopDong != null && Object2.HeSoLopDong != null )
			{
				if (Object1.HeSoLopDong != Object2.HeSoLopDong)
					equal = false;
			}
			else if (Object1.HeSoLopDong == null ^ Object1.HeSoLopDong == null )
			{
				equal = false;
			}
			if (Object1.HeSoCoSo != null && Object2.HeSoCoSo != null )
			{
				if (Object1.HeSoCoSo != Object2.HeSoCoSo)
					equal = false;
			}
			else if (Object1.HeSoCoSo == null ^ Object1.HeSoCoSo == null )
			{
				equal = false;
			}
			if (Object1.HeSoHocKy != null && Object2.HeSoHocKy != null )
			{
				if (Object1.HeSoHocKy != Object2.HeSoHocKy)
					equal = false;
			}
			else if (Object1.HeSoHocKy == null ^ Object1.HeSoHocKy == null )
			{
				equal = false;
			}
			if (Object1.HeSoThanhPhan != null && Object2.HeSoThanhPhan != null )
			{
				if (Object1.HeSoThanhPhan != Object2.HeSoThanhPhan)
					equal = false;
			}
			else if (Object1.HeSoThanhPhan == null ^ Object1.HeSoThanhPhan == null )
			{
				equal = false;
			}
			if (Object1.HeSoTrongGio != null && Object2.HeSoTrongGio != null )
			{
				if (Object1.HeSoTrongGio != Object2.HeSoTrongGio)
					equal = false;
			}
			else if (Object1.HeSoTrongGio == null ^ Object1.HeSoTrongGio == null )
			{
				equal = false;
			}
			if (Object1.HeSoNgoaiGio != null && Object2.HeSoNgoaiGio != null )
			{
				if (Object1.HeSoNgoaiGio != Object2.HeSoNgoaiGio)
					equal = false;
			}
			else if (Object1.HeSoNgoaiGio == null ^ Object1.HeSoNgoaiGio == null )
			{
				equal = false;
			}
			if (Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object1.TietQuyDoi == null )
			{
				equal = false;
			}
			if (Object1.LoaiHocKy != null && Object2.LoaiHocKy != null )
			{
				if (Object1.LoaiHocKy != Object2.LoaiHocKy)
					equal = false;
			}
			else if (Object1.LoaiHocKy == null ^ Object1.LoaiHocKy == null )
			{
				equal = false;
			}
			if (Object1.ThoiKhoaBieu != null && Object2.ThoiKhoaBieu != null )
			{
				if (Object1.ThoiKhoaBieu != Object2.ThoiKhoaBieu)
					equal = false;
			}
			else if (Object1.ThoiKhoaBieu == null ^ Object1.ThoiKhoaBieu == null )
			{
				equal = false;
			}
			if (Object1.NgayTao != null && Object2.NgayTao != null )
			{
				if (Object1.NgayTao != Object2.NgayTao)
					equal = false;
			}
			else if (Object1.NgayTao == null ^ Object1.NgayTao == null )
			{
				equal = false;
			}
			if (Object1.MaQuanLy != null && Object2.MaQuanLy != null )
			{
				if (Object1.MaQuanLy != Object2.MaQuanLy)
					equal = false;
			}
			else if (Object1.MaQuanLy == null ^ Object1.MaQuanLy == null )
			{
				equal = false;
			}
			if (Object1.Tuan != null && Object2.Tuan != null )
			{
				if (Object1.Tuan != Object2.Tuan)
					equal = false;
			}
			else if (Object1.Tuan == null ^ Object1.Tuan == null )
			{
				equal = false;
			}
			if (Object1.Nam != null && Object2.Nam != null )
			{
				if (Object1.Nam != Object2.Nam)
					equal = false;
			}
			else if (Object1.Nam == null ^ Object1.Nam == null )
			{
				equal = false;
			}
			if (Object1.NgayDay != null && Object2.NgayDay != null )
			{
				if (Object1.NgayDay != Object2.NgayDay)
					equal = false;
			}
			else if (Object1.NgayDay == null ^ Object1.NgayDay == null )
			{
				equal = false;
			}
			if (Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object1.Ho == null )
			{
				equal = false;
			}
			if (Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object1.Ten == null )
			{
				equal = false;
			}
			if (Object1.TenLop != Object2.TenLop)
				equal = false;
			if (Object1.TenMonHoc != Object2.TenMonHoc)
				equal = false;
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewTinhKhoiLuongTungTuan entity, string propertyName)
		{
			switch (propertyName)
			{
				case "MaKhoiLuong":
					return entity.MaKhoiLuong;
				case "MaToaNha":
					return entity.MaToaNha;
				case "MaLopHocPhan":
					return entity.MaLopHocPhan;
				case "MaLop":
					return entity.MaLop;
				case "MaNhom":
					return entity.MaNhom;
				case "LoaiHocPhan":
					return entity.LoaiHocPhan;
				case "PhanLoai":
					return entity.PhanLoai;
				case "MaMonHoc":
					return entity.MaMonHoc;
				case "DienGiai":
					return entity.DienGiai;
				case "SoTiet":
					return entity.SoTiet;
				case "SoTinChi":
					return entity.SoTinChi;
				case "SiSoLop":
					return entity.SiSoLop;
				case "SoNhom":
					return entity.SoNhom;
				case "MaDiaDiem":
					return entity.MaDiaDiem;
				case "NgayBatDau":
					return entity.NgayBatDau;
				case "NgayKetThuc":
					return entity.NgayKetThuc;
				case "ChatLuongCao":
					return entity.ChatLuongCao;
				case "NgoaiGio":
					return entity.NgoaiGio;
				case "TrongGio":
					return entity.TrongGio;
				case "HeSoLopDong":
					return entity.HeSoLopDong;
				case "HeSoCoSo":
					return entity.HeSoCoSo;
				case "HeSoHocKy":
					return entity.HeSoHocKy;
				case "HeSoThanhPhan":
					return entity.HeSoThanhPhan;
				case "HeSoTrongGio":
					return entity.HeSoTrongGio;
				case "HeSoNgoaiGio":
					return entity.HeSoNgoaiGio;
				case "TietQuyDoi":
					return entity.TietQuyDoi;
				case "LoaiHocKy":
					return entity.LoaiHocKy;
				case "ThoiKhoaBieu":
					return entity.ThoiKhoaBieu;
				case "NgayTao":
					return entity.NgayTao;
				case "MaQuanLy":
					return entity.MaQuanLy;
				case "Tuan":
					return entity.Tuan;
				case "Nam":
					return entity.Nam;
				case "NgayDay":
					return entity.NgayDay;
				case "Ho":
					return entity.Ho;
				case "Ten":
					return entity.Ten;
				case "TenLop":
					return entity.TenLop;
				case "TenMonHoc":
					return entity.TenMonHoc;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewTinhKhoiLuongTungTuan, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{38}{37}- MaKhoiLuong: {0}{37}- MaToaNha: {1}{37}- MaLopHocPhan: {2}{37}- MaLop: {3}{37}- MaNhom: {4}{37}- LoaiHocPhan: {5}{37}- PhanLoai: {6}{37}- MaMonHoc: {7}{37}- DienGiai: {8}{37}- SoTiet: {9}{37}- SoTinChi: {10}{37}- SiSoLop: {11}{37}- SoNhom: {12}{37}- MaDiaDiem: {13}{37}- NgayBatDau: {14}{37}- NgayKetThuc: {15}{37}- ChatLuongCao: {16}{37}- NgoaiGio: {17}{37}- TrongGio: {18}{37}- HeSoLopDong: {19}{37}- HeSoCoSo: {20}{37}- HeSoHocKy: {21}{37}- HeSoThanhPhan: {22}{37}- HeSoTrongGio: {23}{37}- HeSoNgoaiGio: {24}{37}- TietQuyDoi: {25}{37}- LoaiHocKy: {26}{37}- ThoiKhoaBieu: {27}{37}- NgayTao: {28}{37}- MaQuanLy: {29}{37}- Tuan: {30}{37}- Nam: {31}{37}- NgayDay: {32}{37}- Ho: {33}{37}- Ten: {34}{37}- TenLop: {35}{37}- TenMonHoc: {36}{37}", 
				this.MaKhoiLuong,
				(this.MaToaNha == null) ? string.Empty : this.MaToaNha.ToString(),
			     
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
			     
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
			     
				(this.MaNhom == null) ? string.Empty : this.MaNhom.ToString(),
			     
				(this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString(),
			     
				(this.PhanLoai == null) ? string.Empty : this.PhanLoai.ToString(),
			     
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
			     
				(this.DienGiai == null) ? string.Empty : this.DienGiai.ToString(),
			     
				(this.SoTiet == null) ? string.Empty : this.SoTiet.ToString(),
			     
				(this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString(),
			     
				(this.SiSoLop == null) ? string.Empty : this.SiSoLop.ToString(),
			     
				(this.SoNhom == null) ? string.Empty : this.SoNhom.ToString(),
			     
				(this.MaDiaDiem == null) ? string.Empty : this.MaDiaDiem.ToString(),
			     
				(this.NgayBatDau == null) ? string.Empty : this.NgayBatDau.ToString(),
			     
				(this.NgayKetThuc == null) ? string.Empty : this.NgayKetThuc.ToString(),
			     
				(this.ChatLuongCao == null) ? string.Empty : this.ChatLuongCao.ToString(),
			     
				(this.NgoaiGio == null) ? string.Empty : this.NgoaiGio.ToString(),
			     
				(this.TrongGio == null) ? string.Empty : this.TrongGio.ToString(),
			     
				(this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString(),
			     
				(this.HeSoCoSo == null) ? string.Empty : this.HeSoCoSo.ToString(),
			     
				(this.HeSoHocKy == null) ? string.Empty : this.HeSoHocKy.ToString(),
			     
				(this.HeSoThanhPhan == null) ? string.Empty : this.HeSoThanhPhan.ToString(),
			     
				(this.HeSoTrongGio == null) ? string.Empty : this.HeSoTrongGio.ToString(),
			     
				(this.HeSoNgoaiGio == null) ? string.Empty : this.HeSoNgoaiGio.ToString(),
			     
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
			     
				(this.LoaiHocKy == null) ? string.Empty : this.LoaiHocKy.ToString(),
			     
				(this.ThoiKhoaBieu == null) ? string.Empty : this.ThoiKhoaBieu.ToString(),
			     
				(this.NgayTao == null) ? string.Empty : this.NgayTao.ToString(),
			     
				(this.MaQuanLy == null) ? string.Empty : this.MaQuanLy.ToString(),
			     
				(this.Tuan == null) ? string.Empty : this.Tuan.ToString(),
			     
				(this.Nam == null) ? string.Empty : this.Nam.ToString(),
			     
				(this.NgayDay == null) ? string.Empty : this.NgayDay.ToString(),
			     
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
			     
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
			     
				this.TenLop,
				this.TenMonHoc,
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewTinhKhoiLuongTungTuan columns.
	/// </summary>
	[Serializable]
	public enum ViewTinhKhoiLuongTungTuanColumn
	{
		/// <summary>
		/// MaKhoiLuong : 
		/// </summary>
		[EnumTextValue("MaKhoiLuong")]
		[ColumnEnum("MaKhoiLuong", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		MaKhoiLuong,
		/// <summary>
		/// MaToaNha : 
		/// </summary>
		[EnumTextValue("MaToaNha")]
		[ColumnEnum("MaToaNha", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaToaNha,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("MaLopHocPhan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLopHocPhan,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("MaLop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLop,
		/// <summary>
		/// MaNhom : 
		/// </summary>
		[EnumTextValue("MaNhom")]
		[ColumnEnum("MaNhom", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaNhom,
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		[EnumTextValue("LoaiHocPhan")]
		[ColumnEnum("LoaiHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		LoaiHocPhan,
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		[EnumTextValue("PhanLoai")]
		[ColumnEnum("PhanLoai", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		PhanLoai,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("MaMonHoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc,
		/// <summary>
		/// DienGiai : 
		/// </summary>
		[EnumTextValue("DienGiai")]
		[ColumnEnum("DienGiai", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		DienGiai,
		/// <summary>
		/// SoTiet : 
		/// </summary>
		[EnumTextValue("SoTiet")]
		[ColumnEnum("SoTiet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTiet,
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		[EnumTextValue("SoTinChi")]
		[ColumnEnum("SoTinChi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTinChi,
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		[EnumTextValue("SiSoLop")]
		[ColumnEnum("SiSoLop", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSoLop,
		/// <summary>
		/// SoNhom : 
		/// </summary>
		[EnumTextValue("SoNhom")]
		[ColumnEnum("SoNhom", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoNhom,
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		[EnumTextValue("MaDiaDiem")]
		[ColumnEnum("MaDiaDiem", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDiaDiem,
		/// <summary>
		/// NgayBatDau : 
		/// </summary>
		[EnumTextValue("NgayBatDau")]
		[ColumnEnum("NgayBatDau", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayBatDau,
		/// <summary>
		/// NgayKetThuc : 
		/// </summary>
		[EnumTextValue("NgayKetThuc")]
		[ColumnEnum("NgayKetThuc", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayKetThuc,
		/// <summary>
		/// ChatLuongCao : 
		/// </summary>
		[EnumTextValue("ChatLuongCao")]
		[ColumnEnum("ChatLuongCao", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ChatLuongCao,
		/// <summary>
		/// NgoaiGio : 
		/// </summary>
		[EnumTextValue("NgoaiGio")]
		[ColumnEnum("NgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		NgoaiGio,
		/// <summary>
		/// TrongGio : 
		/// </summary>
		[EnumTextValue("TrongGio")]
		[ColumnEnum("TrongGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TrongGio,
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		[EnumTextValue("HeSoLopDong")]
		[ColumnEnum("HeSoLopDong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDong,
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		[EnumTextValue("HeSoCoSo")]
		[ColumnEnum("HeSoCoSo", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoCoSo,
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		[EnumTextValue("HeSoHocKy")]
		[ColumnEnum("HeSoHocKy", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoHocKy,
		/// <summary>
		/// HeSoThanhPhan : 
		/// </summary>
		[EnumTextValue("HeSoThanhPhan")]
		[ColumnEnum("HeSoThanhPhan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoThanhPhan,
		/// <summary>
		/// HeSoTrongGio : 
		/// </summary>
		[EnumTextValue("HeSoTrongGio")]
		[ColumnEnum("HeSoTrongGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoTrongGio,
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		[EnumTextValue("HeSoNgoaiGio")]
		[ColumnEnum("HeSoNgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNgoaiGio,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("TietQuyDoi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi,
		/// <summary>
		/// LoaiHocKy : 
		/// </summary>
		[EnumTextValue("LoaiHocKy")]
		[ColumnEnum("LoaiHocKy", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		LoaiHocKy,
		/// <summary>
		/// ThoiKhoaBieu : 
		/// </summary>
		[EnumTextValue("ThoiKhoaBieu")]
		[ColumnEnum("ThoiKhoaBieu", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		ThoiKhoaBieu,
		/// <summary>
		/// NgayTao : 
		/// </summary>
		[EnumTextValue("NgayTao")]
		[ColumnEnum("NgayTao", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayTao,
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		[EnumTextValue("MaQuanLy")]
		[ColumnEnum("MaQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaQuanLy,
		/// <summary>
		/// Tuan : 
		/// </summary>
		[EnumTextValue("Tuan")]
		[ColumnEnum("Tuan", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Tuan,
		/// <summary>
		/// Nam : 
		/// </summary>
		[EnumTextValue("Nam")]
		[ColumnEnum("Nam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Nam,
		/// <summary>
		/// NgayDay : 
		/// </summary>
		[EnumTextValue("NgayDay")]
		[ColumnEnum("NgayDay", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayDay,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 101)]
		Ho,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten,
		/// <summary>
		/// TenLop : 
		/// </summary>
		[EnumTextValue("TenLop")]
		[ColumnEnum("TenLop", typeof(System.String), System.Data.DbType.String, false, false, false, 100)]
		TenLop,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("TenMonHoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, false, 255)]
		TenMonHoc
	}//End enum

} // end namespace

/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file ViewKhoiLuongGiangDayTungTuan.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_KhoiLuongGiangDay_TungTuan' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewKhoiLuongGiangDayTungTuanBase")]
	public abstract partial class ViewKhoiLuongGiangDayTungTuanBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// Stt : 
		/// </summary>
		private System.Int32?		  _stt = null;
		
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		private System.String		  _maQuanLy = null;
		
		/// <summary>
		/// MaQuanLy1 : 
		/// </summary>
		private System.String		  _maQuanLy1 = null;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		private System.String		  _ho = null;
		
		/// <summary>
		/// Ho1 : 
		/// </summary>
		private System.String		  _ho1 = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		private System.String		  _ten = null;
		
		/// <summary>
		/// Ten1 : 
		/// </summary>
		private System.String		  _ten1 = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		private System.String		  _maLopHocPhan = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		private System.String		  _maLop = null;
		
		/// <summary>
		/// MaHeDaoTao : 
		/// </summary>
		private System.String		  _maHeDaoTao = string.Empty;
		
		/// <summary>
		/// TenHeDaoTao : 
		/// </summary>
		private System.String		  _tenHeDaoTao = string.Empty;
		
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		private System.String		  _maBacDaoTao = string.Empty;
		
		/// <summary>
		/// TenBacDaoTao : 
		/// </summary>
		private System.String		  _tenBacDaoTao = string.Empty;
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		private System.String		  _maDonVi = null;
		
		/// <summary>
		/// TenDonVi : 
		/// </summary>
		private System.String		  _tenDonVi = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		private System.Int32?		  _maLoaiGiangVien = null;
		
		/// <summary>
		/// MaKhoaHoc : 
		/// </summary>
		private System.String		  _maKhoaHoc = string.Empty;
		
		/// <summary>
		/// TenKhoaHoc : 
		/// </summary>
		private System.String		  _tenKhoaHoc = string.Empty;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		private System.String		  _maMonHoc = string.Empty;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		private System.String		  _tenMonHoc = string.Empty;
		
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		private System.String		  _loaiHocPhan = null;
		
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		private System.Decimal?		  _heSoLopDong = null;
		
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		private System.Int32?		  _siSoLop = null;
		
		/// <summary>
		/// LyThuyet : 
		/// </summary>
		private System.Decimal?		  _lyThuyet = null;
		
		/// <summary>
		/// ThucHanh : 
		/// </summary>
		private System.Decimal?		  _thucHanh = null;
		
		/// <summary>
		/// LyThuyetCoHeSo : 
		/// </summary>
		private System.Decimal?		  _lyThuyetCoHeSo = null;
		
		/// <summary>
		/// ThucHanhCoHeSo : 
		/// </summary>
		private System.Decimal?		  _thucHanhCoHeSo = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		private System.String		  _namHoc = string.Empty;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		private System.String		  _hocKy = string.Empty;
		
		/// <summary>
		/// TongLyThuyetThucHanh : 
		/// </summary>
		private System.Decimal?		  _tongLyThuyetThucHanh = null;
		
		/// <summary>
		/// TongLyThuyetThucHanhCoHeSo : 
		/// </summary>
		private System.Decimal?		  _tongLyThuyetThucHanhCoHeSo = null;
		
		/// <summary>
		/// TongLyThuyetThucHanh_TG : 
		/// </summary>
		private System.Decimal?		  _tongLyThuyetThucHanhTg = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewKhoiLuongGiangDayTungTuanBase"/> instance.
		///</summary>
		public ViewKhoiLuongGiangDayTungTuanBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewKhoiLuongGiangDayTungTuanBase"/> instance.
		///</summary>
		///<param name="_stt"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_maQuanLy1"></param>
		///<param name="_ho"></param>
		///<param name="_ho1"></param>
		///<param name="_ten"></param>
		///<param name="_ten1"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_maHeDaoTao"></param>
		///<param name="_tenHeDaoTao"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_tenBacDaoTao"></param>
		///<param name="_maDonVi"></param>
		///<param name="_tenDonVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maKhoaHoc"></param>
		///<param name="_tenKhoaHoc"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_siSoLop"></param>
		///<param name="_lyThuyet"></param>
		///<param name="_thucHanh"></param>
		///<param name="_lyThuyetCoHeSo"></param>
		///<param name="_thucHanhCoHeSo"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_tongLyThuyetThucHanh"></param>
		///<param name="_tongLyThuyetThucHanhCoHeSo"></param>
		///<param name="_tongLyThuyetThucHanhTg"></param>
		public ViewKhoiLuongGiangDayTungTuanBase(System.Int32? _stt, System.String _maQuanLy, System.String _maQuanLy1, System.String _ho, System.String _ho1, System.String _ten, System.String _ten1, System.String _maLopHocPhan, System.String _maLop, System.String _maHeDaoTao, System.String _tenHeDaoTao, System.String _maBacDaoTao, System.String _tenBacDaoTao, System.String _maDonVi, System.String _tenDonVi, System.Int32? _maLoaiGiangVien, System.String _maKhoaHoc, System.String _tenKhoaHoc, System.String _maMonHoc, System.String _tenMonHoc, System.String _loaiHocPhan, System.Decimal? _heSoLopDong, System.Int32? _siSoLop, System.Decimal? _lyThuyet, System.Decimal? _thucHanh, System.Decimal? _lyThuyetCoHeSo, System.Decimal? _thucHanhCoHeSo, System.String _namHoc, System.String _hocKy, System.Decimal? _tongLyThuyetThucHanh, System.Decimal? _tongLyThuyetThucHanhCoHeSo, System.Decimal? _tongLyThuyetThucHanhTg)
		{
			this._stt = _stt;
			this._maQuanLy = _maQuanLy;
			this._maQuanLy1 = _maQuanLy1;
			this._ho = _ho;
			this._ho1 = _ho1;
			this._ten = _ten;
			this._ten1 = _ten1;
			this._maLopHocPhan = _maLopHocPhan;
			this._maLop = _maLop;
			this._maHeDaoTao = _maHeDaoTao;
			this._tenHeDaoTao = _tenHeDaoTao;
			this._maBacDaoTao = _maBacDaoTao;
			this._tenBacDaoTao = _tenBacDaoTao;
			this._maDonVi = _maDonVi;
			this._tenDonVi = _tenDonVi;
			this._maLoaiGiangVien = _maLoaiGiangVien;
			this._maKhoaHoc = _maKhoaHoc;
			this._tenKhoaHoc = _tenKhoaHoc;
			this._maMonHoc = _maMonHoc;
			this._tenMonHoc = _tenMonHoc;
			this._loaiHocPhan = _loaiHocPhan;
			this._heSoLopDong = _heSoLopDong;
			this._siSoLop = _siSoLop;
			this._lyThuyet = _lyThuyet;
			this._thucHanh = _thucHanh;
			this._lyThuyetCoHeSo = _lyThuyetCoHeSo;
			this._thucHanhCoHeSo = _thucHanhCoHeSo;
			this._namHoc = _namHoc;
			this._hocKy = _hocKy;
			this._tongLyThuyetThucHanh = _tongLyThuyetThucHanh;
			this._tongLyThuyetThucHanhCoHeSo = _tongLyThuyetThucHanhCoHeSo;
			this._tongLyThuyetThucHanhTg = _tongLyThuyetThucHanhTg;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewKhoiLuongGiangDayTungTuan"/> instance.
		///</summary>
		///<param name="_stt"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_maQuanLy1"></param>
		///<param name="_ho"></param>
		///<param name="_ho1"></param>
		///<param name="_ten"></param>
		///<param name="_ten1"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_maHeDaoTao"></param>
		///<param name="_tenHeDaoTao"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_tenBacDaoTao"></param>
		///<param name="_maDonVi"></param>
		///<param name="_tenDonVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maKhoaHoc"></param>
		///<param name="_tenKhoaHoc"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_siSoLop"></param>
		///<param name="_lyThuyet"></param>
		///<param name="_thucHanh"></param>
		///<param name="_lyThuyetCoHeSo"></param>
		///<param name="_thucHanhCoHeSo"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_tongLyThuyetThucHanh"></param>
		///<param name="_tongLyThuyetThucHanhCoHeSo"></param>
		///<param name="_tongLyThuyetThucHanhTg"></param>
		public static ViewKhoiLuongGiangDayTungTuan CreateViewKhoiLuongGiangDayTungTuan(System.Int32? _stt, System.String _maQuanLy, System.String _maQuanLy1, System.String _ho, System.String _ho1, System.String _ten, System.String _ten1, System.String _maLopHocPhan, System.String _maLop, System.String _maHeDaoTao, System.String _tenHeDaoTao, System.String _maBacDaoTao, System.String _tenBacDaoTao, System.String _maDonVi, System.String _tenDonVi, System.Int32? _maLoaiGiangVien, System.String _maKhoaHoc, System.String _tenKhoaHoc, System.String _maMonHoc, System.String _tenMonHoc, System.String _loaiHocPhan, System.Decimal? _heSoLopDong, System.Int32? _siSoLop, System.Decimal? _lyThuyet, System.Decimal? _thucHanh, System.Decimal? _lyThuyetCoHeSo, System.Decimal? _thucHanhCoHeSo, System.String _namHoc, System.String _hocKy, System.Decimal? _tongLyThuyetThucHanh, System.Decimal? _tongLyThuyetThucHanhCoHeSo, System.Decimal? _tongLyThuyetThucHanhTg)
		{
			ViewKhoiLuongGiangDayTungTuan newViewKhoiLuongGiangDayTungTuan = new ViewKhoiLuongGiangDayTungTuan();
			newViewKhoiLuongGiangDayTungTuan.Stt = _stt;
			newViewKhoiLuongGiangDayTungTuan.MaQuanLy = _maQuanLy;
			newViewKhoiLuongGiangDayTungTuan.MaQuanLy1 = _maQuanLy1;
			newViewKhoiLuongGiangDayTungTuan.Ho = _ho;
			newViewKhoiLuongGiangDayTungTuan.Ho1 = _ho1;
			newViewKhoiLuongGiangDayTungTuan.Ten = _ten;
			newViewKhoiLuongGiangDayTungTuan.Ten1 = _ten1;
			newViewKhoiLuongGiangDayTungTuan.MaLopHocPhan = _maLopHocPhan;
			newViewKhoiLuongGiangDayTungTuan.MaLop = _maLop;
			newViewKhoiLuongGiangDayTungTuan.MaHeDaoTao = _maHeDaoTao;
			newViewKhoiLuongGiangDayTungTuan.TenHeDaoTao = _tenHeDaoTao;
			newViewKhoiLuongGiangDayTungTuan.MaBacDaoTao = _maBacDaoTao;
			newViewKhoiLuongGiangDayTungTuan.TenBacDaoTao = _tenBacDaoTao;
			newViewKhoiLuongGiangDayTungTuan.MaDonVi = _maDonVi;
			newViewKhoiLuongGiangDayTungTuan.TenDonVi = _tenDonVi;
			newViewKhoiLuongGiangDayTungTuan.MaLoaiGiangVien = _maLoaiGiangVien;
			newViewKhoiLuongGiangDayTungTuan.MaKhoaHoc = _maKhoaHoc;
			newViewKhoiLuongGiangDayTungTuan.TenKhoaHoc = _tenKhoaHoc;
			newViewKhoiLuongGiangDayTungTuan.MaMonHoc = _maMonHoc;
			newViewKhoiLuongGiangDayTungTuan.TenMonHoc = _tenMonHoc;
			newViewKhoiLuongGiangDayTungTuan.LoaiHocPhan = _loaiHocPhan;
			newViewKhoiLuongGiangDayTungTuan.HeSoLopDong = _heSoLopDong;
			newViewKhoiLuongGiangDayTungTuan.SiSoLop = _siSoLop;
			newViewKhoiLuongGiangDayTungTuan.LyThuyet = _lyThuyet;
			newViewKhoiLuongGiangDayTungTuan.ThucHanh = _thucHanh;
			newViewKhoiLuongGiangDayTungTuan.LyThuyetCoHeSo = _lyThuyetCoHeSo;
			newViewKhoiLuongGiangDayTungTuan.ThucHanhCoHeSo = _thucHanhCoHeSo;
			newViewKhoiLuongGiangDayTungTuan.NamHoc = _namHoc;
			newViewKhoiLuongGiangDayTungTuan.HocKy = _hocKy;
			newViewKhoiLuongGiangDayTungTuan.TongLyThuyetThucHanh = _tongLyThuyetThucHanh;
			newViewKhoiLuongGiangDayTungTuan.TongLyThuyetThucHanhCoHeSo = _tongLyThuyetThucHanhCoHeSo;
			newViewKhoiLuongGiangDayTungTuan.TongLyThuyetThucHanhTg = _tongLyThuyetThucHanhTg;
			return newViewKhoiLuongGiangDayTungTuan;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the Stt property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSttNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? Stt
		{
			get
			{
				return this._stt; 
			}
			set
			{
				if (_stt == value && Stt != null )
					return;
					
				this._stt = value;
				this._isDirty = true;
				
				OnPropertyChanged("Stt");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaQuanLy
		{
			get
			{
				return this._maQuanLy; 
			}
			set
			{
				if (_maQuanLy == value)
					return;
					
				this._maQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaQuanLy1 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaQuanLy1
		{
			get
			{
				return this._maQuanLy1; 
			}
			set
			{
				if (_maQuanLy1 == value)
					return;
					
				this._maQuanLy1 = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaQuanLy1");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ho
		{
			get
			{
				return this._ho; 
			}
			set
			{
				if (_ho == value)
					return;
					
				this._ho = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ho1 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ho1
		{
			get
			{
				return this._ho1; 
			}
			set
			{
				if (_ho1 == value)
					return;
					
				this._ho1 = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ho1");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ten
		{
			get
			{
				return this._ten; 
			}
			set
			{
				if (_ten == value)
					return;
					
				this._ten = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ten1 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ten1
		{
			get
			{
				return this._ten1; 
			}
			set
			{
				if (_ten1 == value)
					return;
					
				this._ten1 = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ten1");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this._maLopHocPhan; 
			}
			set
			{
				if (_maLopHocPhan == value)
					return;
					
				this._maLopHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLop
		{
			get
			{
				return this._maLop; 
			}
			set
			{
				if (_maLop == value)
					return;
					
				this._maLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHeDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaHeDaoTao
		{
			get
			{
				return this._maHeDaoTao; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaHeDaoTao does not allow null values.");
				if (_maHeDaoTao == value)
					return;
					
				this._maHeDaoTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHeDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenHeDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenHeDaoTao
		{
			get
			{
				return this._tenHeDaoTao; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TenHeDaoTao does not allow null values.");
				if (_tenHeDaoTao == value)
					return;
					
				this._tenHeDaoTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenHeDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaBacDaoTao
		{
			get
			{
				return this._maBacDaoTao; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaBacDaoTao does not allow null values.");
				if (_maBacDaoTao == value)
					return;
					
				this._maBacDaoTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenBacDaoTao
		{
			get
			{
				return this._tenBacDaoTao; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TenBacDaoTao does not allow null values.");
				if (_tenBacDaoTao == value)
					return;
					
				this._tenBacDaoTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this._maDonVi; 
			}
			set
			{
				if (_maDonVi == value)
					return;
					
				this._maDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenDonVi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenDonVi
		{
			get
			{
				return this._tenDonVi; 
			}
			set
			{
				if (_tenDonVi == value)
					return;
					
				this._tenDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaLoaiGiangVienNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this._maLoaiGiangVien; 
			}
			set
			{
				if (_maLoaiGiangVien == value && MaLoaiGiangVien != null )
					return;
					
				this._maLoaiGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaKhoaHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaKhoaHoc
		{
			get
			{
				return this._maKhoaHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaKhoaHoc does not allow null values.");
				if (_maKhoaHoc == value)
					return;
					
				this._maKhoaHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaKhoaHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenKhoaHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenKhoaHoc
		{
			get
			{
				return this._tenKhoaHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TenKhoaHoc does not allow null values.");
				if (_tenKhoaHoc == value)
					return;
					
				this._tenKhoaHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenKhoaHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this._maMonHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaMonHoc does not allow null values.");
				if (_maMonHoc == value)
					return;
					
				this._maMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this._tenMonHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TenMonHoc does not allow null values.");
				if (_tenMonHoc == value)
					return;
					
				this._tenMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LoaiHocPhan
		{
			get
			{
				return this._loaiHocPhan; 
			}
			set
			{
				if (_loaiHocPhan == value)
					return;
					
				this._loaiHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("LoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoLopDong property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoLopDongNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoLopDong
		{
			get
			{
				return this._heSoLopDong; 
			}
			set
			{
				if (_heSoLopDong == value && HeSoLopDong != null )
					return;
					
				this._heSoLopDong = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoLopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SiSoLop property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSiSoLopNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SiSoLop
		{
			get
			{
				return this._siSoLop; 
			}
			set
			{
				if (_siSoLop == value && SiSoLop != null )
					return;
					
				this._siSoLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("SiSoLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LyThuyet property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsLyThuyetNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? LyThuyet
		{
			get
			{
				return this._lyThuyet; 
			}
			set
			{
				if (_lyThuyet == value && LyThuyet != null )
					return;
					
				this._lyThuyet = value;
				this._isDirty = true;
				
				OnPropertyChanged("LyThuyet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThucHanh property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsThucHanhNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? ThucHanh
		{
			get
			{
				return this._thucHanh; 
			}
			set
			{
				if (_thucHanh == value && ThucHanh != null )
					return;
					
				this._thucHanh = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThucHanh");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LyThuyetCoHeSo property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsLyThuyetCoHeSoNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? LyThuyetCoHeSo
		{
			get
			{
				return this._lyThuyetCoHeSo; 
			}
			set
			{
				if (_lyThuyetCoHeSo == value && LyThuyetCoHeSo != null )
					return;
					
				this._lyThuyetCoHeSo = value;
				this._isDirty = true;
				
				OnPropertyChanged("LyThuyetCoHeSo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThucHanhCoHeSo property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsThucHanhCoHeSoNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? ThucHanhCoHeSo
		{
			get
			{
				return this._thucHanhCoHeSo; 
			}
			set
			{
				if (_thucHanhCoHeSo == value && ThucHanhCoHeSo != null )
					return;
					
				this._thucHanhCoHeSo = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThucHanhCoHeSo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NamHoc
		{
			get
			{
				return this._namHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "NamHoc does not allow null values.");
				if (_namHoc == value)
					return;
					
				this._namHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HocKy
		{
			get
			{
				return this._hocKy; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "HocKy does not allow null values.");
				if (_hocKy == value)
					return;
					
				this._hocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TongLyThuyetThucHanh property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTongLyThuyetThucHanhNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TongLyThuyetThucHanh
		{
			get
			{
				return this._tongLyThuyetThucHanh; 
			}
			set
			{
				if (_tongLyThuyetThucHanh == value && TongLyThuyetThucHanh != null )
					return;
					
				this._tongLyThuyetThucHanh = value;
				this._isDirty = true;
				
				OnPropertyChanged("TongLyThuyetThucHanh");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TongLyThuyetThucHanhCoHeSo property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTongLyThuyetThucHanhCoHeSoNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TongLyThuyetThucHanhCoHeSo
		{
			get
			{
				return this._tongLyThuyetThucHanhCoHeSo; 
			}
			set
			{
				if (_tongLyThuyetThucHanhCoHeSo == value && TongLyThuyetThucHanhCoHeSo != null )
					return;
					
				this._tongLyThuyetThucHanhCoHeSo = value;
				this._isDirty = true;
				
				OnPropertyChanged("TongLyThuyetThucHanhCoHeSo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TongLyThuyetThucHanh_TG property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTongLyThuyetThucHanhTgNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TongLyThuyetThucHanhTg
		{
			get
			{
				return this._tongLyThuyetThucHanhTg; 
			}
			set
			{
				if (_tongLyThuyetThucHanhTg == value && TongLyThuyetThucHanhTg != null )
					return;
					
				this._tongLyThuyetThucHanhTg = value;
				this._isDirty = true;
				
				OnPropertyChanged("TongLyThuyetThucHanhTg");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_KhoiLuongGiangDay_TungTuan"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewKhoiLuongGiangDayTungTuanBase Entity 
		///</summary>
		public virtual ViewKhoiLuongGiangDayTungTuanBase Copy()
		{
			//shallow copy entity
			ViewKhoiLuongGiangDayTungTuan copy = new ViewKhoiLuongGiangDayTungTuan();
				copy.Stt = this.Stt;
				copy.MaQuanLy = this.MaQuanLy;
				copy.MaQuanLy1 = this.MaQuanLy1;
				copy.Ho = this.Ho;
				copy.Ho1 = this.Ho1;
				copy.Ten = this.Ten;
				copy.Ten1 = this.Ten1;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.MaLop = this.MaLop;
				copy.MaHeDaoTao = this.MaHeDaoTao;
				copy.TenHeDaoTao = this.TenHeDaoTao;
				copy.MaBacDaoTao = this.MaBacDaoTao;
				copy.TenBacDaoTao = this.TenBacDaoTao;
				copy.MaDonVi = this.MaDonVi;
				copy.TenDonVi = this.TenDonVi;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.MaKhoaHoc = this.MaKhoaHoc;
				copy.TenKhoaHoc = this.TenKhoaHoc;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.LoaiHocPhan = this.LoaiHocPhan;
				copy.HeSoLopDong = this.HeSoLopDong;
				copy.SiSoLop = this.SiSoLop;
				copy.LyThuyet = this.LyThuyet;
				copy.ThucHanh = this.ThucHanh;
				copy.LyThuyetCoHeSo = this.LyThuyetCoHeSo;
				copy.ThucHanhCoHeSo = this.ThucHanhCoHeSo;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.TongLyThuyetThucHanh = this.TongLyThuyetThucHanh;
				copy.TongLyThuyetThucHanhCoHeSo = this.TongLyThuyetThucHanhCoHeSo;
				copy.TongLyThuyetThucHanhTg = this.TongLyThuyetThucHanhTg;
			copy.AcceptChanges();
			return (ViewKhoiLuongGiangDayTungTuan)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewKhoiLuongGiangDayTungTuanBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewKhoiLuongGiangDayTungTuanBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewKhoiLuongGiangDayTungTuanBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewKhoiLuongGiangDayTungTuanBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewKhoiLuongGiangDayTungTuanBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewKhoiLuongGiangDayTungTuanBase Object1, ViewKhoiLuongGiangDayTungTuanBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.Stt != null && Object2.Stt != null )
			{
				if (Object1.Stt != Object2.Stt)
					equal = false;
			}
			else if (Object1.Stt == null ^ Object1.Stt == null )
			{
				equal = false;
			}
			if (Object1.MaQuanLy != null && Object2.MaQuanLy != null )
			{
				if (Object1.MaQuanLy != Object2.MaQuanLy)
					equal = false;
			}
			else if (Object1.MaQuanLy == null ^ Object1.MaQuanLy == null )
			{
				equal = false;
			}
			if (Object1.MaQuanLy1 != null && Object2.MaQuanLy1 != null )
			{
				if (Object1.MaQuanLy1 != Object2.MaQuanLy1)
					equal = false;
			}
			else if (Object1.MaQuanLy1 == null ^ Object1.MaQuanLy1 == null )
			{
				equal = false;
			}
			if (Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object1.Ho == null )
			{
				equal = false;
			}
			if (Object1.Ho1 != null && Object2.Ho1 != null )
			{
				if (Object1.Ho1 != Object2.Ho1)
					equal = false;
			}
			else if (Object1.Ho1 == null ^ Object1.Ho1 == null )
			{
				equal = false;
			}
			if (Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object1.Ten == null )
			{
				equal = false;
			}
			if (Object1.Ten1 != null && Object2.Ten1 != null )
			{
				if (Object1.Ten1 != Object2.Ten1)
					equal = false;
			}
			else if (Object1.Ten1 == null ^ Object1.Ten1 == null )
			{
				equal = false;
			}
			if (Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object1.MaLopHocPhan == null )
			{
				equal = false;
			}
			if (Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object1.MaLop == null )
			{
				equal = false;
			}
			if (Object1.MaHeDaoTao != Object2.MaHeDaoTao)
				equal = false;
			if (Object1.TenHeDaoTao != Object2.TenHeDaoTao)
				equal = false;
			if (Object1.MaBacDaoTao != Object2.MaBacDaoTao)
				equal = false;
			if (Object1.TenBacDaoTao != Object2.TenBacDaoTao)
				equal = false;
			if (Object1.MaDonVi != null && Object2.MaDonVi != null )
			{
				if (Object1.MaDonVi != Object2.MaDonVi)
					equal = false;
			}
			else if (Object1.MaDonVi == null ^ Object1.MaDonVi == null )
			{
				equal = false;
			}
			if (Object1.TenDonVi != null && Object2.TenDonVi != null )
			{
				if (Object1.TenDonVi != Object2.TenDonVi)
					equal = false;
			}
			else if (Object1.TenDonVi == null ^ Object1.TenDonVi == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object1.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if (Object1.MaKhoaHoc != Object2.MaKhoaHoc)
				equal = false;
			if (Object1.TenKhoaHoc != Object2.TenKhoaHoc)
				equal = false;
			if (Object1.MaMonHoc != Object2.MaMonHoc)
				equal = false;
			if (Object1.TenMonHoc != Object2.TenMonHoc)
				equal = false;
			if (Object1.LoaiHocPhan != null && Object2.LoaiHocPhan != null )
			{
				if (Object1.LoaiHocPhan != Object2.LoaiHocPhan)
					equal = false;
			}
			else if (Object1.LoaiHocPhan == null ^ Object1.LoaiHocPhan == null )
			{
				equal = false;
			}
			if (Object1.HeSoLopDong != null && Object2.HeSoLopDong != null )
			{
				if (Object1.HeSoLopDong != Object2.HeSoLopDong)
					equal = false;
			}
			else if (Object1.HeSoLopDong == null ^ Object1.HeSoLopDong == null )
			{
				equal = false;
			}
			if (Object1.SiSoLop != null && Object2.SiSoLop != null )
			{
				if (Object1.SiSoLop != Object2.SiSoLop)
					equal = false;
			}
			else if (Object1.SiSoLop == null ^ Object1.SiSoLop == null )
			{
				equal = false;
			}
			if (Object1.LyThuyet != null && Object2.LyThuyet != null )
			{
				if (Object1.LyThuyet != Object2.LyThuyet)
					equal = false;
			}
			else if (Object1.LyThuyet == null ^ Object1.LyThuyet == null )
			{
				equal = false;
			}
			if (Object1.ThucHanh != null && Object2.ThucHanh != null )
			{
				if (Object1.ThucHanh != Object2.ThucHanh)
					equal = false;
			}
			else if (Object1.ThucHanh == null ^ Object1.ThucHanh == null )
			{
				equal = false;
			}
			if (Object1.LyThuyetCoHeSo != null && Object2.LyThuyetCoHeSo != null )
			{
				if (Object1.LyThuyetCoHeSo != Object2.LyThuyetCoHeSo)
					equal = false;
			}
			else if (Object1.LyThuyetCoHeSo == null ^ Object1.LyThuyetCoHeSo == null )
			{
				equal = false;
			}
			if (Object1.ThucHanhCoHeSo != null && Object2.ThucHanhCoHeSo != null )
			{
				if (Object1.ThucHanhCoHeSo != Object2.ThucHanhCoHeSo)
					equal = false;
			}
			else if (Object1.ThucHanhCoHeSo == null ^ Object1.ThucHanhCoHeSo == null )
			{
				equal = false;
			}
			if (Object1.NamHoc != Object2.NamHoc)
				equal = false;
			if (Object1.HocKy != Object2.HocKy)
				equal = false;
			if (Object1.TongLyThuyetThucHanh != null && Object2.TongLyThuyetThucHanh != null )
			{
				if (Object1.TongLyThuyetThucHanh != Object2.TongLyThuyetThucHanh)
					equal = false;
			}
			else if (Object1.TongLyThuyetThucHanh == null ^ Object1.TongLyThuyetThucHanh == null )
			{
				equal = false;
			}
			if (Object1.TongLyThuyetThucHanhCoHeSo != null && Object2.TongLyThuyetThucHanhCoHeSo != null )
			{
				if (Object1.TongLyThuyetThucHanhCoHeSo != Object2.TongLyThuyetThucHanhCoHeSo)
					equal = false;
			}
			else if (Object1.TongLyThuyetThucHanhCoHeSo == null ^ Object1.TongLyThuyetThucHanhCoHeSo == null )
			{
				equal = false;
			}
			if (Object1.TongLyThuyetThucHanhTg != null && Object2.TongLyThuyetThucHanhTg != null )
			{
				if (Object1.TongLyThuyetThucHanhTg != Object2.TongLyThuyetThucHanhTg)
					equal = false;
			}
			else if (Object1.TongLyThuyetThucHanhTg == null ^ Object1.TongLyThuyetThucHanhTg == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewKhoiLuongGiangDayTungTuan entity, string propertyName)
		{
			switch (propertyName)
			{
				case "Stt":
					return entity.Stt;
				case "MaQuanLy":
					return entity.MaQuanLy;
				case "MaQuanLy1":
					return entity.MaQuanLy1;
				case "Ho":
					return entity.Ho;
				case "Ho1":
					return entity.Ho1;
				case "Ten":
					return entity.Ten;
				case "Ten1":
					return entity.Ten1;
				case "MaLopHocPhan":
					return entity.MaLopHocPhan;
				case "MaLop":
					return entity.MaLop;
				case "MaHeDaoTao":
					return entity.MaHeDaoTao;
				case "TenHeDaoTao":
					return entity.TenHeDaoTao;
				case "MaBacDaoTao":
					return entity.MaBacDaoTao;
				case "TenBacDaoTao":
					return entity.TenBacDaoTao;
				case "MaDonVi":
					return entity.MaDonVi;
				case "TenDonVi":
					return entity.TenDonVi;
				case "MaLoaiGiangVien":
					return entity.MaLoaiGiangVien;
				case "MaKhoaHoc":
					return entity.MaKhoaHoc;
				case "TenKhoaHoc":
					return entity.TenKhoaHoc;
				case "MaMonHoc":
					return entity.MaMonHoc;
				case "TenMonHoc":
					return entity.TenMonHoc;
				case "LoaiHocPhan":
					return entity.LoaiHocPhan;
				case "HeSoLopDong":
					return entity.HeSoLopDong;
				case "SiSoLop":
					return entity.SiSoLop;
				case "LyThuyet":
					return entity.LyThuyet;
				case "ThucHanh":
					return entity.ThucHanh;
				case "LyThuyetCoHeSo":
					return entity.LyThuyetCoHeSo;
				case "ThucHanhCoHeSo":
					return entity.ThucHanhCoHeSo;
				case "NamHoc":
					return entity.NamHoc;
				case "HocKy":
					return entity.HocKy;
				case "TongLyThuyetThucHanh":
					return entity.TongLyThuyetThucHanh;
				case "TongLyThuyetThucHanhCoHeSo":
					return entity.TongLyThuyetThucHanhCoHeSo;
				case "TongLyThuyetThucHanhTg":
					return entity.TongLyThuyetThucHanhTg;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewKhoiLuongGiangDayTungTuan, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{33}{32}- Stt: {0}{32}- MaQuanLy: {1}{32}- MaQuanLy1: {2}{32}- Ho: {3}{32}- Ho1: {4}{32}- Ten: {5}{32}- Ten1: {6}{32}- MaLopHocPhan: {7}{32}- MaLop: {8}{32}- MaHeDaoTao: {9}{32}- TenHeDaoTao: {10}{32}- MaBacDaoTao: {11}{32}- TenBacDaoTao: {12}{32}- MaDonVi: {13}{32}- TenDonVi: {14}{32}- MaLoaiGiangVien: {15}{32}- MaKhoaHoc: {16}{32}- TenKhoaHoc: {17}{32}- MaMonHoc: {18}{32}- TenMonHoc: {19}{32}- LoaiHocPhan: {20}{32}- HeSoLopDong: {21}{32}- SiSoLop: {22}{32}- LyThuyet: {23}{32}- ThucHanh: {24}{32}- LyThuyetCoHeSo: {25}{32}- ThucHanhCoHeSo: {26}{32}- NamHoc: {27}{32}- HocKy: {28}{32}- TongLyThuyetThucHanh: {29}{32}- TongLyThuyetThucHanhCoHeSo: {30}{32}- TongLyThuyetThucHanhTg: {31}{32}", 
				(this.Stt == null) ? string.Empty : this.Stt.ToString(),
			     
				(this.MaQuanLy == null) ? string.Empty : this.MaQuanLy.ToString(),
			     
				(this.MaQuanLy1 == null) ? string.Empty : this.MaQuanLy1.ToString(),
			     
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
			     
				(this.Ho1 == null) ? string.Empty : this.Ho1.ToString(),
			     
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
			     
				(this.Ten1 == null) ? string.Empty : this.Ten1.ToString(),
			     
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
			     
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
			     
				this.MaHeDaoTao,
				this.TenHeDaoTao,
				this.MaBacDaoTao,
				this.TenBacDaoTao,
				(this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString(),
			     
				(this.TenDonVi == null) ? string.Empty : this.TenDonVi.ToString(),
			     
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
			     
				this.MaKhoaHoc,
				this.TenKhoaHoc,
				this.MaMonHoc,
				this.TenMonHoc,
				(this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString(),
			     
				(this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString(),
			     
				(this.SiSoLop == null) ? string.Empty : this.SiSoLop.ToString(),
			     
				(this.LyThuyet == null) ? string.Empty : this.LyThuyet.ToString(),
			     
				(this.ThucHanh == null) ? string.Empty : this.ThucHanh.ToString(),
			     
				(this.LyThuyetCoHeSo == null) ? string.Empty : this.LyThuyetCoHeSo.ToString(),
			     
				(this.ThucHanhCoHeSo == null) ? string.Empty : this.ThucHanhCoHeSo.ToString(),
			     
				this.NamHoc,
				this.HocKy,
				(this.TongLyThuyetThucHanh == null) ? string.Empty : this.TongLyThuyetThucHanh.ToString(),
			     
				(this.TongLyThuyetThucHanhCoHeSo == null) ? string.Empty : this.TongLyThuyetThucHanhCoHeSo.ToString(),
			     
				(this.TongLyThuyetThucHanhTg == null) ? string.Empty : this.TongLyThuyetThucHanhTg.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewKhoiLuongGiangDayTungTuan columns.
	/// </summary>
	[Serializable]
	public enum ViewKhoiLuongGiangDayTungTuanColumn
	{
		/// <summary>
		/// Stt : 
		/// </summary>
		[EnumTextValue("Stt")]
		[ColumnEnum("Stt", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Stt,
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		[EnumTextValue("MaQuanLy")]
		[ColumnEnum("MaQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaQuanLy,
		/// <summary>
		/// MaQuanLy1 : 
		/// </summary>
		[EnumTextValue("MaQuanLy1")]
		[ColumnEnum("MaQuanLy1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaQuanLy1,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 101)]
		Ho,
		/// <summary>
		/// Ho1 : 
		/// </summary>
		[EnumTextValue("Ho1")]
		[ColumnEnum("Ho1", typeof(System.String), System.Data.DbType.String, false, false, true, 101)]
		Ho1,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten,
		/// <summary>
		/// Ten1 : 
		/// </summary>
		[EnumTextValue("Ten1")]
		[ColumnEnum("Ten1", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten1,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("MaLopHocPhan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLopHocPhan,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("MaLop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLop,
		/// <summary>
		/// MaHeDaoTao : 
		/// </summary>
		[EnumTextValue("MaHeDaoTao")]
		[ColumnEnum("MaHeDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaHeDaoTao,
		/// <summary>
		/// TenHeDaoTao : 
		/// </summary>
		[EnumTextValue("TenHeDaoTao")]
		[ColumnEnum("TenHeDaoTao", typeof(System.String), System.Data.DbType.String, false, false, false, 100)]
		TenHeDaoTao,
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		[EnumTextValue("MaBacDaoTao")]
		[ColumnEnum("MaBacDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 10)]
		MaBacDaoTao,
		/// <summary>
		/// TenBacDaoTao : 
		/// </summary>
		[EnumTextValue("TenBacDaoTao")]
		[ColumnEnum("TenBacDaoTao", typeof(System.String), System.Data.DbType.String, false, false, false, 100)]
		TenBacDaoTao,
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("MaDonVi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		MaDonVi,
		/// <summary>
		/// TenDonVi : 
		/// </summary>
		[EnumTextValue("TenDonVi")]
		[ColumnEnum("TenDonVi", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TenDonVi,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("MaLoaiGiangVien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien,
		/// <summary>
		/// MaKhoaHoc : 
		/// </summary>
		[EnumTextValue("MaKhoaHoc")]
		[ColumnEnum("MaKhoaHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 10)]
		MaKhoaHoc,
		/// <summary>
		/// TenKhoaHoc : 
		/// </summary>
		[EnumTextValue("TenKhoaHoc")]
		[ColumnEnum("TenKhoaHoc", typeof(System.String), System.Data.DbType.String, false, false, false, 100)]
		TenKhoaHoc,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("MaMonHoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaMonHoc,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("TenMonHoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, false, 255)]
		TenMonHoc,
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		[EnumTextValue("LoaiHocPhan")]
		[ColumnEnum("LoaiHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		LoaiHocPhan,
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		[EnumTextValue("HeSoLopDong")]
		[ColumnEnum("HeSoLopDong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDong,
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		[EnumTextValue("SiSoLop")]
		[ColumnEnum("SiSoLop", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSoLop,
		/// <summary>
		/// LyThuyet : 
		/// </summary>
		[EnumTextValue("LyThuyet")]
		[ColumnEnum("LyThuyet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		LyThuyet,
		/// <summary>
		/// ThucHanh : 
		/// </summary>
		[EnumTextValue("ThucHanh")]
		[ColumnEnum("ThucHanh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThucHanh,
		/// <summary>
		/// LyThuyetCoHeSo : 
		/// </summary>
		[EnumTextValue("LyThuyetCoHeSo")]
		[ColumnEnum("LyThuyetCoHeSo", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		LyThuyetCoHeSo,
		/// <summary>
		/// ThucHanhCoHeSo : 
		/// </summary>
		[EnumTextValue("ThucHanhCoHeSo")]
		[ColumnEnum("ThucHanhCoHeSo", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThucHanhCoHeSo,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("NamHoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		NamHoc,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("HocKy")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		HocKy,
		/// <summary>
		/// TongLyThuyetThucHanh : 
		/// </summary>
		[EnumTextValue("TongLyThuyetThucHanh")]
		[ColumnEnum("TongLyThuyetThucHanh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TongLyThuyetThucHanh,
		/// <summary>
		/// TongLyThuyetThucHanhCoHeSo : 
		/// </summary>
		[EnumTextValue("TongLyThuyetThucHanhCoHeSo")]
		[ColumnEnum("TongLyThuyetThucHanhCoHeSo", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TongLyThuyetThucHanhCoHeSo,
		/// <summary>
		/// TongLyThuyetThucHanh_TG : 
		/// </summary>
		[EnumTextValue("TongLyThuyetThucHanh_TG")]
		[ColumnEnum("TongLyThuyetThucHanh_TG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TongLyThuyetThucHanhTg
	}//End enum

} // end namespace

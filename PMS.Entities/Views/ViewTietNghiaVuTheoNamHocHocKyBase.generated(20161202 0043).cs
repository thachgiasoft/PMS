/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewTietNghiaVuTheoNamHocHocKy.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_TietNghiaVuTheoNamHocHocKy' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewTietNghiaVuTheoNamHocHocKyBase")]
	public abstract partial class ViewTietNghiaVuTheoNamHocHocKyBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		private System.Int32?		  _maGiangVien = null;
		
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		private System.String		  _maQuanLy = null;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		private System.String		  _ho = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		private System.String		  _ten = null;
		
		/// <summary>
		/// HoTen : 
		/// </summary>
		private System.String		  _hoTen = null;
		
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		private System.Int32?		  _maHocHam = null;
		
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		private System.Int32?		  _maHocVi = null;
		
		/// <summary>
		/// TenHocHam : 
		/// </summary>
		private System.String		  _tenHocHam = null;
		
		/// <summary>
		/// TenHocVi : 
		/// </summary>
		private System.String		  _tenHocVi = null;
		
		/// <summary>
		/// MaChucVu : 
		/// </summary>
		private System.Int32?		  _maChucVu = null;
		
		/// <summary>
		/// TenChucVu : 
		/// </summary>
		private System.String		  _tenChucVu = null;
		
		/// <summary>
		/// SoTietNghiaVu : 
		/// </summary>
		private System.Decimal?		  _soTietNghiaVu = null;
		
		/// <summary>
		/// PhanTramGiamTru : 
		/// </summary>
		private System.Decimal?		  _phanTramGiamTru = null;
		
		/// <summary>
		/// TietNghiaVuSauGiamTru : 
		/// </summary>
		private System.Decimal?		  _tietNghiaVuSauGiamTru = null;
		
		/// <summary>
		/// TietGioiHan : 
		/// </summary>
		private System.Decimal?		  _tietGioiHan = null;
		
		/// <summary>
		/// GhiChu : 
		/// </summary>
		private System.Boolean?		  _ghiChu = null;
		
		/// <summary>
		/// GhiChu2 : 
		/// </summary>
		private System.String		  _ghiChu2 = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		private System.String		  _namHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		private System.String		  _hocKy = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		private System.String		  _ngayCapNhat = null;
		
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		private System.String		  _nguoiCapNhat = null;
		
		/// <summary>
		/// MaGiamTruKhac : 
		/// </summary>
		private System.Int32?		  _maGiamTruKhac = null;
		
		/// <summary>
		/// SoTietGiamTruKhac : 
		/// </summary>
		private System.Decimal?		  _soTietGiamTruKhac = null;
		
		/// <summary>
		/// TietNghiaVuCongTacKhac : 
		/// </summary>
		private System.Decimal?		  _tietNghiaVuCongTacKhac = null;
		
		/// <summary>
		/// TietNghiaVuCongTacKhacSauGiamTru : 
		/// </summary>
		private System.Decimal?		  _tietNghiaVuCongTacKhacSauGiamTru = null;
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		private System.String		  _maDonVi = null;
		
		/// <summary>
		/// TenDonVi : 
		/// </summary>
		private System.String		  _tenDonVi = null;
		
		/// <summary>
		/// TenNgach : 
		/// </summary>
		private System.String		  _tenNgach = null;
		
		/// <summary>
		/// ChucDanh : 
		/// </summary>
		private System.String		  _chucDanh = null;
		
		/// <summary>
		/// PhanTramDuocGiam : 
		/// </summary>
		private System.Decimal?		  _phanTramDuocGiam = null;
		
		/// <summary>
		/// CongPhanTramGiam : 
		/// </summary>
		private System.Decimal?		  _congPhanTramGiam = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewTietNghiaVuTheoNamHocHocKyBase"/> instance.
		///</summary>
		public ViewTietNghiaVuTheoNamHocHocKyBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewTietNghiaVuTheoNamHocHocKyBase"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_tenHocHam"></param>
		///<param name="_tenHocVi"></param>
		///<param name="_maChucVu"></param>
		///<param name="_tenChucVu"></param>
		///<param name="_soTietNghiaVu"></param>
		///<param name="_phanTramGiamTru"></param>
		///<param name="_tietNghiaVuSauGiamTru"></param>
		///<param name="_tietGioiHan"></param>
		///<param name="_ghiChu"></param>
		///<param name="_ghiChu2"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_maGiamTruKhac"></param>
		///<param name="_soTietGiamTruKhac"></param>
		///<param name="_tietNghiaVuCongTacKhac"></param>
		///<param name="_tietNghiaVuCongTacKhacSauGiamTru"></param>
		///<param name="_maDonVi"></param>
		///<param name="_tenDonVi"></param>
		///<param name="_tenNgach"></param>
		///<param name="_chucDanh"></param>
		///<param name="_phanTramDuocGiam"></param>
		///<param name="_congPhanTramGiam"></param>
		public ViewTietNghiaVuTheoNamHocHocKyBase(System.Int32? _maGiangVien, System.String _maQuanLy, System.String _ho, System.String _ten, System.String _hoTen, System.Int32? _maHocHam, System.Int32? _maHocVi, System.String _tenHocHam, System.String _tenHocVi, System.Int32? _maChucVu, System.String _tenChucVu, System.Decimal? _soTietNghiaVu, System.Decimal? _phanTramGiamTru, System.Decimal? _tietNghiaVuSauGiamTru, System.Decimal? _tietGioiHan, System.Boolean? _ghiChu, System.String _ghiChu2, System.String _namHoc, System.String _hocKy, System.String _ngayCapNhat, System.String _nguoiCapNhat, System.Int32? _maGiamTruKhac, System.Decimal? _soTietGiamTruKhac, System.Decimal? _tietNghiaVuCongTacKhac, System.Decimal? _tietNghiaVuCongTacKhacSauGiamTru, System.String _maDonVi, System.String _tenDonVi, System.String _tenNgach, System.String _chucDanh, System.Decimal? _phanTramDuocGiam, System.Decimal? _congPhanTramGiam)
		{
			this._maGiangVien = _maGiangVien;
			this._maQuanLy = _maQuanLy;
			this._ho = _ho;
			this._ten = _ten;
			this._hoTen = _hoTen;
			this._maHocHam = _maHocHam;
			this._maHocVi = _maHocVi;
			this._tenHocHam = _tenHocHam;
			this._tenHocVi = _tenHocVi;
			this._maChucVu = _maChucVu;
			this._tenChucVu = _tenChucVu;
			this._soTietNghiaVu = _soTietNghiaVu;
			this._phanTramGiamTru = _phanTramGiamTru;
			this._tietNghiaVuSauGiamTru = _tietNghiaVuSauGiamTru;
			this._tietGioiHan = _tietGioiHan;
			this._ghiChu = _ghiChu;
			this._ghiChu2 = _ghiChu2;
			this._namHoc = _namHoc;
			this._hocKy = _hocKy;
			this._ngayCapNhat = _ngayCapNhat;
			this._nguoiCapNhat = _nguoiCapNhat;
			this._maGiamTruKhac = _maGiamTruKhac;
			this._soTietGiamTruKhac = _soTietGiamTruKhac;
			this._tietNghiaVuCongTacKhac = _tietNghiaVuCongTacKhac;
			this._tietNghiaVuCongTacKhacSauGiamTru = _tietNghiaVuCongTacKhacSauGiamTru;
			this._maDonVi = _maDonVi;
			this._tenDonVi = _tenDonVi;
			this._tenNgach = _tenNgach;
			this._chucDanh = _chucDanh;
			this._phanTramDuocGiam = _phanTramDuocGiam;
			this._congPhanTramGiam = _congPhanTramGiam;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewTietNghiaVuTheoNamHocHocKy"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_tenHocHam"></param>
		///<param name="_tenHocVi"></param>
		///<param name="_maChucVu"></param>
		///<param name="_tenChucVu"></param>
		///<param name="_soTietNghiaVu"></param>
		///<param name="_phanTramGiamTru"></param>
		///<param name="_tietNghiaVuSauGiamTru"></param>
		///<param name="_tietGioiHan"></param>
		///<param name="_ghiChu"></param>
		///<param name="_ghiChu2"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_maGiamTruKhac"></param>
		///<param name="_soTietGiamTruKhac"></param>
		///<param name="_tietNghiaVuCongTacKhac"></param>
		///<param name="_tietNghiaVuCongTacKhacSauGiamTru"></param>
		///<param name="_maDonVi"></param>
		///<param name="_tenDonVi"></param>
		///<param name="_tenNgach"></param>
		///<param name="_chucDanh"></param>
		///<param name="_phanTramDuocGiam"></param>
		///<param name="_congPhanTramGiam"></param>
		public static ViewTietNghiaVuTheoNamHocHocKy CreateViewTietNghiaVuTheoNamHocHocKy(System.Int32? _maGiangVien, System.String _maQuanLy, System.String _ho, System.String _ten, System.String _hoTen, System.Int32? _maHocHam, System.Int32? _maHocVi, System.String _tenHocHam, System.String _tenHocVi, System.Int32? _maChucVu, System.String _tenChucVu, System.Decimal? _soTietNghiaVu, System.Decimal? _phanTramGiamTru, System.Decimal? _tietNghiaVuSauGiamTru, System.Decimal? _tietGioiHan, System.Boolean? _ghiChu, System.String _ghiChu2, System.String _namHoc, System.String _hocKy, System.String _ngayCapNhat, System.String _nguoiCapNhat, System.Int32? _maGiamTruKhac, System.Decimal? _soTietGiamTruKhac, System.Decimal? _tietNghiaVuCongTacKhac, System.Decimal? _tietNghiaVuCongTacKhacSauGiamTru, System.String _maDonVi, System.String _tenDonVi, System.String _tenNgach, System.String _chucDanh, System.Decimal? _phanTramDuocGiam, System.Decimal? _congPhanTramGiam)
		{
			ViewTietNghiaVuTheoNamHocHocKy newViewTietNghiaVuTheoNamHocHocKy = new ViewTietNghiaVuTheoNamHocHocKy();
			newViewTietNghiaVuTheoNamHocHocKy.MaGiangVien = _maGiangVien;
			newViewTietNghiaVuTheoNamHocHocKy.MaQuanLy = _maQuanLy;
			newViewTietNghiaVuTheoNamHocHocKy.Ho = _ho;
			newViewTietNghiaVuTheoNamHocHocKy.Ten = _ten;
			newViewTietNghiaVuTheoNamHocHocKy.HoTen = _hoTen;
			newViewTietNghiaVuTheoNamHocHocKy.MaHocHam = _maHocHam;
			newViewTietNghiaVuTheoNamHocHocKy.MaHocVi = _maHocVi;
			newViewTietNghiaVuTheoNamHocHocKy.TenHocHam = _tenHocHam;
			newViewTietNghiaVuTheoNamHocHocKy.TenHocVi = _tenHocVi;
			newViewTietNghiaVuTheoNamHocHocKy.MaChucVu = _maChucVu;
			newViewTietNghiaVuTheoNamHocHocKy.TenChucVu = _tenChucVu;
			newViewTietNghiaVuTheoNamHocHocKy.SoTietNghiaVu = _soTietNghiaVu;
			newViewTietNghiaVuTheoNamHocHocKy.PhanTramGiamTru = _phanTramGiamTru;
			newViewTietNghiaVuTheoNamHocHocKy.TietNghiaVuSauGiamTru = _tietNghiaVuSauGiamTru;
			newViewTietNghiaVuTheoNamHocHocKy.TietGioiHan = _tietGioiHan;
			newViewTietNghiaVuTheoNamHocHocKy.GhiChu = _ghiChu;
			newViewTietNghiaVuTheoNamHocHocKy.GhiChu2 = _ghiChu2;
			newViewTietNghiaVuTheoNamHocHocKy.NamHoc = _namHoc;
			newViewTietNghiaVuTheoNamHocHocKy.HocKy = _hocKy;
			newViewTietNghiaVuTheoNamHocHocKy.NgayCapNhat = _ngayCapNhat;
			newViewTietNghiaVuTheoNamHocHocKy.NguoiCapNhat = _nguoiCapNhat;
			newViewTietNghiaVuTheoNamHocHocKy.MaGiamTruKhac = _maGiamTruKhac;
			newViewTietNghiaVuTheoNamHocHocKy.SoTietGiamTruKhac = _soTietGiamTruKhac;
			newViewTietNghiaVuTheoNamHocHocKy.TietNghiaVuCongTacKhac = _tietNghiaVuCongTacKhac;
			newViewTietNghiaVuTheoNamHocHocKy.TietNghiaVuCongTacKhacSauGiamTru = _tietNghiaVuCongTacKhacSauGiamTru;
			newViewTietNghiaVuTheoNamHocHocKy.MaDonVi = _maDonVi;
			newViewTietNghiaVuTheoNamHocHocKy.TenDonVi = _tenDonVi;
			newViewTietNghiaVuTheoNamHocHocKy.TenNgach = _tenNgach;
			newViewTietNghiaVuTheoNamHocHocKy.ChucDanh = _chucDanh;
			newViewTietNghiaVuTheoNamHocHocKy.PhanTramDuocGiam = _phanTramDuocGiam;
			newViewTietNghiaVuTheoNamHocHocKy.CongPhanTramGiam = _congPhanTramGiam;
			return newViewTietNghiaVuTheoNamHocHocKy;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaGiangVienNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaGiangVien
		{
			get
			{
				return this._maGiangVien; 
			}
			set
			{
				if (_maGiangVien == value && MaGiangVien != null )
					return;
					
				this._maGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaQuanLy
		{
			get
			{
				return this._maQuanLy; 
			}
			set
			{
				if (_maQuanLy == value)
					return;
					
				this._maQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ho
		{
			get
			{
				return this._ho; 
			}
			set
			{
				if (_ho == value)
					return;
					
				this._ho = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ten
		{
			get
			{
				return this._ten; 
			}
			set
			{
				if (_ten == value)
					return;
					
				this._ten = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTen
		{
			get
			{
				return this._hoTen; 
			}
			set
			{
				if (_hoTen == value)
					return;
					
				this._hoTen = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTen");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHocHam property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaHocHamNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaHocHam
		{
			get
			{
				return this._maHocHam; 
			}
			set
			{
				if (_maHocHam == value && MaHocHam != null )
					return;
					
				this._maHocHam = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHocVi property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaHocViNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaHocVi
		{
			get
			{
				return this._maHocVi; 
			}
			set
			{
				if (_maHocVi == value && MaHocVi != null )
					return;
					
				this._maHocVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenHocHam property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenHocHam
		{
			get
			{
				return this._tenHocHam; 
			}
			set
			{
				if (_tenHocHam == value)
					return;
					
				this._tenHocHam = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenHocVi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenHocVi
		{
			get
			{
				return this._tenHocVi; 
			}
			set
			{
				if (_tenHocVi == value)
					return;
					
				this._tenHocVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaChucVu property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaChucVuNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaChucVu
		{
			get
			{
				return this._maChucVu; 
			}
			set
			{
				if (_maChucVu == value && MaChucVu != null )
					return;
					
				this._maChucVu = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaChucVu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenChucVu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenChucVu
		{
			get
			{
				return this._tenChucVu; 
			}
			set
			{
				if (_tenChucVu == value)
					return;
					
				this._tenChucVu = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenChucVu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTietNghiaVu property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoTietNghiaVuNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoTietNghiaVu
		{
			get
			{
				return this._soTietNghiaVu; 
			}
			set
			{
				if (_soTietNghiaVu == value && SoTietNghiaVu != null )
					return;
					
				this._soTietNghiaVu = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTietNghiaVu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PhanTramGiamTru property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPhanTramGiamTruNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? PhanTramGiamTru
		{
			get
			{
				return this._phanTramGiamTru; 
			}
			set
			{
				if (_phanTramGiamTru == value && PhanTramGiamTru != null )
					return;
					
				this._phanTramGiamTru = value;
				this._isDirty = true;
				
				OnPropertyChanged("PhanTramGiamTru");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietNghiaVuSauGiamTru property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietNghiaVuSauGiamTruNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietNghiaVuSauGiamTru
		{
			get
			{
				return this._tietNghiaVuSauGiamTru; 
			}
			set
			{
				if (_tietNghiaVuSauGiamTru == value && TietNghiaVuSauGiamTru != null )
					return;
					
				this._tietNghiaVuSauGiamTru = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietNghiaVuSauGiamTru");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietGioiHan property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietGioiHanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietGioiHan
		{
			get
			{
				return this._tietGioiHan; 
			}
			set
			{
				if (_tietGioiHan == value && TietGioiHan != null )
					return;
					
				this._tietGioiHan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietGioiHan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GhiChu property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsGhiChuNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? GhiChu
		{
			get
			{
				return this._ghiChu; 
			}
			set
			{
				if (_ghiChu == value && GhiChu != null )
					return;
					
				this._ghiChu = value;
				this._isDirty = true;
				
				OnPropertyChanged("GhiChu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GhiChu2 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GhiChu2
		{
			get
			{
				return this._ghiChu2; 
			}
			set
			{
				if (_ghiChu2 == value)
					return;
					
				this._ghiChu2 = value;
				this._isDirty = true;
				
				OnPropertyChanged("GhiChu2");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NamHoc
		{
			get
			{
				return this._namHoc; 
			}
			set
			{
				if (_namHoc == value)
					return;
					
				this._namHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HocKy
		{
			get
			{
				return this._hocKy; 
			}
			set
			{
				if (_hocKy == value)
					return;
					
				this._hocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NgayCapNhat
		{
			get
			{
				return this._ngayCapNhat; 
			}
			set
			{
				if (_ngayCapNhat == value)
					return;
					
				this._ngayCapNhat = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NguoiCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NguoiCapNhat
		{
			get
			{
				return this._nguoiCapNhat; 
			}
			set
			{
				if (_nguoiCapNhat == value)
					return;
					
				this._nguoiCapNhat = value;
				this._isDirty = true;
				
				OnPropertyChanged("NguoiCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaGiamTruKhac property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaGiamTruKhacNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaGiamTruKhac
		{
			get
			{
				return this._maGiamTruKhac; 
			}
			set
			{
				if (_maGiamTruKhac == value && MaGiamTruKhac != null )
					return;
					
				this._maGiamTruKhac = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaGiamTruKhac");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTietGiamTruKhac property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoTietGiamTruKhacNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoTietGiamTruKhac
		{
			get
			{
				return this._soTietGiamTruKhac; 
			}
			set
			{
				if (_soTietGiamTruKhac == value && SoTietGiamTruKhac != null )
					return;
					
				this._soTietGiamTruKhac = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTietGiamTruKhac");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietNghiaVuCongTacKhac property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietNghiaVuCongTacKhacNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietNghiaVuCongTacKhac
		{
			get
			{
				return this._tietNghiaVuCongTacKhac; 
			}
			set
			{
				if (_tietNghiaVuCongTacKhac == value && TietNghiaVuCongTacKhac != null )
					return;
					
				this._tietNghiaVuCongTacKhac = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietNghiaVuCongTacKhac");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietNghiaVuCongTacKhacSauGiamTru property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietNghiaVuCongTacKhacSauGiamTruNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietNghiaVuCongTacKhacSauGiamTru
		{
			get
			{
				return this._tietNghiaVuCongTacKhacSauGiamTru; 
			}
			set
			{
				if (_tietNghiaVuCongTacKhacSauGiamTru == value && TietNghiaVuCongTacKhacSauGiamTru != null )
					return;
					
				this._tietNghiaVuCongTacKhacSauGiamTru = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietNghiaVuCongTacKhacSauGiamTru");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this._maDonVi; 
			}
			set
			{
				if (_maDonVi == value)
					return;
					
				this._maDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenDonVi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenDonVi
		{
			get
			{
				return this._tenDonVi; 
			}
			set
			{
				if (_tenDonVi == value)
					return;
					
				this._tenDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenNgach property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenNgach
		{
			get
			{
				return this._tenNgach; 
			}
			set
			{
				if (_tenNgach == value)
					return;
					
				this._tenNgach = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenNgach");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ChucDanh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ChucDanh
		{
			get
			{
				return this._chucDanh; 
			}
			set
			{
				if (_chucDanh == value)
					return;
					
				this._chucDanh = value;
				this._isDirty = true;
				
				OnPropertyChanged("ChucDanh");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PhanTramDuocGiam property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPhanTramDuocGiamNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? PhanTramDuocGiam
		{
			get
			{
				return this._phanTramDuocGiam; 
			}
			set
			{
				if (_phanTramDuocGiam == value && PhanTramDuocGiam != null )
					return;
					
				this._phanTramDuocGiam = value;
				this._isDirty = true;
				
				OnPropertyChanged("PhanTramDuocGiam");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CongPhanTramGiam property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCongPhanTramGiamNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? CongPhanTramGiam
		{
			get
			{
				return this._congPhanTramGiam; 
			}
			set
			{
				if (_congPhanTramGiam == value && CongPhanTramGiam != null )
					return;
					
				this._congPhanTramGiam = value;
				this._isDirty = true;
				
				OnPropertyChanged("CongPhanTramGiam");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_TietNghiaVuTheoNamHocHocKy"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewTietNghiaVuTheoNamHocHocKyBase Entity 
		///</summary>
		public virtual ViewTietNghiaVuTheoNamHocHocKyBase Copy()
		{
			//shallow copy entity
			ViewTietNghiaVuTheoNamHocHocKy copy = new ViewTietNghiaVuTheoNamHocHocKy();
				copy.MaGiangVien = this.MaGiangVien;
				copy.MaQuanLy = this.MaQuanLy;
				copy.Ho = this.Ho;
				copy.Ten = this.Ten;
				copy.HoTen = this.HoTen;
				copy.MaHocHam = this.MaHocHam;
				copy.MaHocVi = this.MaHocVi;
				copy.TenHocHam = this.TenHocHam;
				copy.TenHocVi = this.TenHocVi;
				copy.MaChucVu = this.MaChucVu;
				copy.TenChucVu = this.TenChucVu;
				copy.SoTietNghiaVu = this.SoTietNghiaVu;
				copy.PhanTramGiamTru = this.PhanTramGiamTru;
				copy.TietNghiaVuSauGiamTru = this.TietNghiaVuSauGiamTru;
				copy.TietGioiHan = this.TietGioiHan;
				copy.GhiChu = this.GhiChu;
				copy.GhiChu2 = this.GhiChu2;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.NguoiCapNhat = this.NguoiCapNhat;
				copy.MaGiamTruKhac = this.MaGiamTruKhac;
				copy.SoTietGiamTruKhac = this.SoTietGiamTruKhac;
				copy.TietNghiaVuCongTacKhac = this.TietNghiaVuCongTacKhac;
				copy.TietNghiaVuCongTacKhacSauGiamTru = this.TietNghiaVuCongTacKhacSauGiamTru;
				copy.MaDonVi = this.MaDonVi;
				copy.TenDonVi = this.TenDonVi;
				copy.TenNgach = this.TenNgach;
				copy.ChucDanh = this.ChucDanh;
				copy.PhanTramDuocGiam = this.PhanTramDuocGiam;
				copy.CongPhanTramGiam = this.CongPhanTramGiam;
			copy.AcceptChanges();
			return (ViewTietNghiaVuTheoNamHocHocKy)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewTietNghiaVuTheoNamHocHocKyBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewTietNghiaVuTheoNamHocHocKyBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewTietNghiaVuTheoNamHocHocKyBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewTietNghiaVuTheoNamHocHocKyBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewTietNghiaVuTheoNamHocHocKyBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewTietNghiaVuTheoNamHocHocKyBase Object1, ViewTietNghiaVuTheoNamHocHocKyBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.MaGiangVien != null && Object2.MaGiangVien != null )
			{
				if (Object1.MaGiangVien != Object2.MaGiangVien)
					equal = false;
			}
			else if (Object1.MaGiangVien == null ^ Object1.MaGiangVien == null )
			{
				equal = false;
			}
			if (Object1.MaQuanLy != null && Object2.MaQuanLy != null )
			{
				if (Object1.MaQuanLy != Object2.MaQuanLy)
					equal = false;
			}
			else if (Object1.MaQuanLy == null ^ Object1.MaQuanLy == null )
			{
				equal = false;
			}
			if (Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object1.Ho == null )
			{
				equal = false;
			}
			if (Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object1.Ten == null )
			{
				equal = false;
			}
			if (Object1.HoTen != null && Object2.HoTen != null )
			{
				if (Object1.HoTen != Object2.HoTen)
					equal = false;
			}
			else if (Object1.HoTen == null ^ Object1.HoTen == null )
			{
				equal = false;
			}
			if (Object1.MaHocHam != null && Object2.MaHocHam != null )
			{
				if (Object1.MaHocHam != Object2.MaHocHam)
					equal = false;
			}
			else if (Object1.MaHocHam == null ^ Object1.MaHocHam == null )
			{
				equal = false;
			}
			if (Object1.MaHocVi != null && Object2.MaHocVi != null )
			{
				if (Object1.MaHocVi != Object2.MaHocVi)
					equal = false;
			}
			else if (Object1.MaHocVi == null ^ Object1.MaHocVi == null )
			{
				equal = false;
			}
			if (Object1.TenHocHam != null && Object2.TenHocHam != null )
			{
				if (Object1.TenHocHam != Object2.TenHocHam)
					equal = false;
			}
			else if (Object1.TenHocHam == null ^ Object1.TenHocHam == null )
			{
				equal = false;
			}
			if (Object1.TenHocVi != null && Object2.TenHocVi != null )
			{
				if (Object1.TenHocVi != Object2.TenHocVi)
					equal = false;
			}
			else if (Object1.TenHocVi == null ^ Object1.TenHocVi == null )
			{
				equal = false;
			}
			if (Object1.MaChucVu != null && Object2.MaChucVu != null )
			{
				if (Object1.MaChucVu != Object2.MaChucVu)
					equal = false;
			}
			else if (Object1.MaChucVu == null ^ Object1.MaChucVu == null )
			{
				equal = false;
			}
			if (Object1.TenChucVu != null && Object2.TenChucVu != null )
			{
				if (Object1.TenChucVu != Object2.TenChucVu)
					equal = false;
			}
			else if (Object1.TenChucVu == null ^ Object1.TenChucVu == null )
			{
				equal = false;
			}
			if (Object1.SoTietNghiaVu != null && Object2.SoTietNghiaVu != null )
			{
				if (Object1.SoTietNghiaVu != Object2.SoTietNghiaVu)
					equal = false;
			}
			else if (Object1.SoTietNghiaVu == null ^ Object1.SoTietNghiaVu == null )
			{
				equal = false;
			}
			if (Object1.PhanTramGiamTru != null && Object2.PhanTramGiamTru != null )
			{
				if (Object1.PhanTramGiamTru != Object2.PhanTramGiamTru)
					equal = false;
			}
			else if (Object1.PhanTramGiamTru == null ^ Object1.PhanTramGiamTru == null )
			{
				equal = false;
			}
			if (Object1.TietNghiaVuSauGiamTru != null && Object2.TietNghiaVuSauGiamTru != null )
			{
				if (Object1.TietNghiaVuSauGiamTru != Object2.TietNghiaVuSauGiamTru)
					equal = false;
			}
			else if (Object1.TietNghiaVuSauGiamTru == null ^ Object1.TietNghiaVuSauGiamTru == null )
			{
				equal = false;
			}
			if (Object1.TietGioiHan != null && Object2.TietGioiHan != null )
			{
				if (Object1.TietGioiHan != Object2.TietGioiHan)
					equal = false;
			}
			else if (Object1.TietGioiHan == null ^ Object1.TietGioiHan == null )
			{
				equal = false;
			}
			if (Object1.GhiChu != null && Object2.GhiChu != null )
			{
				if (Object1.GhiChu != Object2.GhiChu)
					equal = false;
			}
			else if (Object1.GhiChu == null ^ Object1.GhiChu == null )
			{
				equal = false;
			}
			if (Object1.GhiChu2 != null && Object2.GhiChu2 != null )
			{
				if (Object1.GhiChu2 != Object2.GhiChu2)
					equal = false;
			}
			else if (Object1.GhiChu2 == null ^ Object1.GhiChu2 == null )
			{
				equal = false;
			}
			if (Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object1.NamHoc == null )
			{
				equal = false;
			}
			if (Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object1.HocKy == null )
			{
				equal = false;
			}
			if (Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object1.NgayCapNhat == null )
			{
				equal = false;
			}
			if (Object1.NguoiCapNhat != null && Object2.NguoiCapNhat != null )
			{
				if (Object1.NguoiCapNhat != Object2.NguoiCapNhat)
					equal = false;
			}
			else if (Object1.NguoiCapNhat == null ^ Object1.NguoiCapNhat == null )
			{
				equal = false;
			}
			if (Object1.MaGiamTruKhac != null && Object2.MaGiamTruKhac != null )
			{
				if (Object1.MaGiamTruKhac != Object2.MaGiamTruKhac)
					equal = false;
			}
			else if (Object1.MaGiamTruKhac == null ^ Object1.MaGiamTruKhac == null )
			{
				equal = false;
			}
			if (Object1.SoTietGiamTruKhac != null && Object2.SoTietGiamTruKhac != null )
			{
				if (Object1.SoTietGiamTruKhac != Object2.SoTietGiamTruKhac)
					equal = false;
			}
			else if (Object1.SoTietGiamTruKhac == null ^ Object1.SoTietGiamTruKhac == null )
			{
				equal = false;
			}
			if (Object1.TietNghiaVuCongTacKhac != null && Object2.TietNghiaVuCongTacKhac != null )
			{
				if (Object1.TietNghiaVuCongTacKhac != Object2.TietNghiaVuCongTacKhac)
					equal = false;
			}
			else if (Object1.TietNghiaVuCongTacKhac == null ^ Object1.TietNghiaVuCongTacKhac == null )
			{
				equal = false;
			}
			if (Object1.TietNghiaVuCongTacKhacSauGiamTru != null && Object2.TietNghiaVuCongTacKhacSauGiamTru != null )
			{
				if (Object1.TietNghiaVuCongTacKhacSauGiamTru != Object2.TietNghiaVuCongTacKhacSauGiamTru)
					equal = false;
			}
			else if (Object1.TietNghiaVuCongTacKhacSauGiamTru == null ^ Object1.TietNghiaVuCongTacKhacSauGiamTru == null )
			{
				equal = false;
			}
			if (Object1.MaDonVi != null && Object2.MaDonVi != null )
			{
				if (Object1.MaDonVi != Object2.MaDonVi)
					equal = false;
			}
			else if (Object1.MaDonVi == null ^ Object1.MaDonVi == null )
			{
				equal = false;
			}
			if (Object1.TenDonVi != null && Object2.TenDonVi != null )
			{
				if (Object1.TenDonVi != Object2.TenDonVi)
					equal = false;
			}
			else if (Object1.TenDonVi == null ^ Object1.TenDonVi == null )
			{
				equal = false;
			}
			if (Object1.TenNgach != null && Object2.TenNgach != null )
			{
				if (Object1.TenNgach != Object2.TenNgach)
					equal = false;
			}
			else if (Object1.TenNgach == null ^ Object1.TenNgach == null )
			{
				equal = false;
			}
			if (Object1.ChucDanh != null && Object2.ChucDanh != null )
			{
				if (Object1.ChucDanh != Object2.ChucDanh)
					equal = false;
			}
			else if (Object1.ChucDanh == null ^ Object1.ChucDanh == null )
			{
				equal = false;
			}
			if (Object1.PhanTramDuocGiam != null && Object2.PhanTramDuocGiam != null )
			{
				if (Object1.PhanTramDuocGiam != Object2.PhanTramDuocGiam)
					equal = false;
			}
			else if (Object1.PhanTramDuocGiam == null ^ Object1.PhanTramDuocGiam == null )
			{
				equal = false;
			}
			if (Object1.CongPhanTramGiam != null && Object2.CongPhanTramGiam != null )
			{
				if (Object1.CongPhanTramGiam != Object2.CongPhanTramGiam)
					equal = false;
			}
			else if (Object1.CongPhanTramGiam == null ^ Object1.CongPhanTramGiam == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewTietNghiaVuTheoNamHocHocKy entity, string propertyName)
		{
			switch (propertyName)
			{
				case "MaGiangVien":
					return entity.MaGiangVien;
				case "MaQuanLy":
					return entity.MaQuanLy;
				case "Ho":
					return entity.Ho;
				case "Ten":
					return entity.Ten;
				case "HoTen":
					return entity.HoTen;
				case "MaHocHam":
					return entity.MaHocHam;
				case "MaHocVi":
					return entity.MaHocVi;
				case "TenHocHam":
					return entity.TenHocHam;
				case "TenHocVi":
					return entity.TenHocVi;
				case "MaChucVu":
					return entity.MaChucVu;
				case "TenChucVu":
					return entity.TenChucVu;
				case "SoTietNghiaVu":
					return entity.SoTietNghiaVu;
				case "PhanTramGiamTru":
					return entity.PhanTramGiamTru;
				case "TietNghiaVuSauGiamTru":
					return entity.TietNghiaVuSauGiamTru;
				case "TietGioiHan":
					return entity.TietGioiHan;
				case "GhiChu":
					return entity.GhiChu;
				case "GhiChu2":
					return entity.GhiChu2;
				case "NamHoc":
					return entity.NamHoc;
				case "HocKy":
					return entity.HocKy;
				case "NgayCapNhat":
					return entity.NgayCapNhat;
				case "NguoiCapNhat":
					return entity.NguoiCapNhat;
				case "MaGiamTruKhac":
					return entity.MaGiamTruKhac;
				case "SoTietGiamTruKhac":
					return entity.SoTietGiamTruKhac;
				case "TietNghiaVuCongTacKhac":
					return entity.TietNghiaVuCongTacKhac;
				case "TietNghiaVuCongTacKhacSauGiamTru":
					return entity.TietNghiaVuCongTacKhacSauGiamTru;
				case "MaDonVi":
					return entity.MaDonVi;
				case "TenDonVi":
					return entity.TenDonVi;
				case "TenNgach":
					return entity.TenNgach;
				case "ChucDanh":
					return entity.ChucDanh;
				case "PhanTramDuocGiam":
					return entity.PhanTramDuocGiam;
				case "CongPhanTramGiam":
					return entity.CongPhanTramGiam;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewTietNghiaVuTheoNamHocHocKy, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{32}{31}- MaGiangVien: {0}{31}- MaQuanLy: {1}{31}- Ho: {2}{31}- Ten: {3}{31}- HoTen: {4}{31}- MaHocHam: {5}{31}- MaHocVi: {6}{31}- TenHocHam: {7}{31}- TenHocVi: {8}{31}- MaChucVu: {9}{31}- TenChucVu: {10}{31}- SoTietNghiaVu: {11}{31}- PhanTramGiamTru: {12}{31}- TietNghiaVuSauGiamTru: {13}{31}- TietGioiHan: {14}{31}- GhiChu: {15}{31}- GhiChu2: {16}{31}- NamHoc: {17}{31}- HocKy: {18}{31}- NgayCapNhat: {19}{31}- NguoiCapNhat: {20}{31}- MaGiamTruKhac: {21}{31}- SoTietGiamTruKhac: {22}{31}- TietNghiaVuCongTacKhac: {23}{31}- TietNghiaVuCongTacKhacSauGiamTru: {24}{31}- MaDonVi: {25}{31}- TenDonVi: {26}{31}- TenNgach: {27}{31}- ChucDanh: {28}{31}- PhanTramDuocGiam: {29}{31}- CongPhanTramGiam: {30}{31}", 
				(this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString(),
			     
				(this.MaQuanLy == null) ? string.Empty : this.MaQuanLy.ToString(),
			     
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
			     
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
			     
				(this.HoTen == null) ? string.Empty : this.HoTen.ToString(),
			     
				(this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString(),
			     
				(this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString(),
			     
				(this.TenHocHam == null) ? string.Empty : this.TenHocHam.ToString(),
			     
				(this.TenHocVi == null) ? string.Empty : this.TenHocVi.ToString(),
			     
				(this.MaChucVu == null) ? string.Empty : this.MaChucVu.ToString(),
			     
				(this.TenChucVu == null) ? string.Empty : this.TenChucVu.ToString(),
			     
				(this.SoTietNghiaVu == null) ? string.Empty : this.SoTietNghiaVu.ToString(),
			     
				(this.PhanTramGiamTru == null) ? string.Empty : this.PhanTramGiamTru.ToString(),
			     
				(this.TietNghiaVuSauGiamTru == null) ? string.Empty : this.TietNghiaVuSauGiamTru.ToString(),
			     
				(this.TietGioiHan == null) ? string.Empty : this.TietGioiHan.ToString(),
			     
				(this.GhiChu == null) ? string.Empty : this.GhiChu.ToString(),
			     
				(this.GhiChu2 == null) ? string.Empty : this.GhiChu2.ToString(),
			     
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
			     
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
			     
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
			     
				(this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString(),
			     
				(this.MaGiamTruKhac == null) ? string.Empty : this.MaGiamTruKhac.ToString(),
			     
				(this.SoTietGiamTruKhac == null) ? string.Empty : this.SoTietGiamTruKhac.ToString(),
			     
				(this.TietNghiaVuCongTacKhac == null) ? string.Empty : this.TietNghiaVuCongTacKhac.ToString(),
			     
				(this.TietNghiaVuCongTacKhacSauGiamTru == null) ? string.Empty : this.TietNghiaVuCongTacKhacSauGiamTru.ToString(),
			     
				(this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString(),
			     
				(this.TenDonVi == null) ? string.Empty : this.TenDonVi.ToString(),
			     
				(this.TenNgach == null) ? string.Empty : this.TenNgach.ToString(),
			     
				(this.ChucDanh == null) ? string.Empty : this.ChucDanh.ToString(),
			     
				(this.PhanTramDuocGiam == null) ? string.Empty : this.PhanTramDuocGiam.ToString(),
			     
				(this.CongPhanTramGiam == null) ? string.Empty : this.CongPhanTramGiam.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewTietNghiaVuTheoNamHocHocKy columns.
	/// </summary>
	[Serializable]
	public enum ViewTietNghiaVuTheoNamHocHocKyColumn
	{
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("MaGiangVien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaGiangVien,
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		[EnumTextValue("MaQuanLy")]
		[ColumnEnum("MaQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaQuanLy,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		Ho,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten,
		/// <summary>
		/// HoTen : 
		/// </summary>
		[EnumTextValue("HoTen")]
		[ColumnEnum("HoTen", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		HoTen,
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		[EnumTextValue("MaHocHam")]
		[ColumnEnum("MaHocHam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocHam,
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		[EnumTextValue("MaHocVi")]
		[ColumnEnum("MaHocVi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocVi,
		/// <summary>
		/// TenHocHam : 
		/// </summary>
		[EnumTextValue("TenHocHam")]
		[ColumnEnum("TenHocHam", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenHocHam,
		/// <summary>
		/// TenHocVi : 
		/// </summary>
		[EnumTextValue("TenHocVi")]
		[ColumnEnum("TenHocVi", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenHocVi,
		/// <summary>
		/// MaChucVu : 
		/// </summary>
		[EnumTextValue("MaChucVu")]
		[ColumnEnum("MaChucVu", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaChucVu,
		/// <summary>
		/// TenChucVu : 
		/// </summary>
		[EnumTextValue("TenChucVu")]
		[ColumnEnum("TenChucVu", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenChucVu,
		/// <summary>
		/// SoTietNghiaVu : 
		/// </summary>
		[EnumTextValue("SoTietNghiaVu")]
		[ColumnEnum("SoTietNghiaVu", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTietNghiaVu,
		/// <summary>
		/// PhanTramGiamTru : 
		/// </summary>
		[EnumTextValue("PhanTramGiamTru")]
		[ColumnEnum("PhanTramGiamTru", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PhanTramGiamTru,
		/// <summary>
		/// TietNghiaVuSauGiamTru : 
		/// </summary>
		[EnumTextValue("TietNghiaVuSauGiamTru")]
		[ColumnEnum("TietNghiaVuSauGiamTru", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiaVuSauGiamTru,
		/// <summary>
		/// TietGioiHan : 
		/// </summary>
		[EnumTextValue("TietGioiHan")]
		[ColumnEnum("TietGioiHan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietGioiHan,
		/// <summary>
		/// GhiChu : 
		/// </summary>
		[EnumTextValue("GhiChu")]
		[ColumnEnum("GhiChu", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		GhiChu,
		/// <summary>
		/// GhiChu2 : 
		/// </summary>
		[EnumTextValue("GhiChu2")]
		[ColumnEnum("GhiChu2", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		GhiChu2,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("NamHoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("HocKy")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("NgayCapNhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		NgayCapNhat,
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		[EnumTextValue("NguoiCapNhat")]
		[ColumnEnum("NguoiCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NguoiCapNhat,
		/// <summary>
		/// MaGiamTruKhac : 
		/// </summary>
		[EnumTextValue("MaGiamTruKhac")]
		[ColumnEnum("MaGiamTruKhac", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaGiamTruKhac,
		/// <summary>
		/// SoTietGiamTruKhac : 
		/// </summary>
		[EnumTextValue("SoTietGiamTruKhac")]
		[ColumnEnum("SoTietGiamTruKhac", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTietGiamTruKhac,
		/// <summary>
		/// TietNghiaVuCongTacKhac : 
		/// </summary>
		[EnumTextValue("TietNghiaVuCongTacKhac")]
		[ColumnEnum("TietNghiaVuCongTacKhac", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiaVuCongTacKhac,
		/// <summary>
		/// TietNghiaVuCongTacKhacSauGiamTru : 
		/// </summary>
		[EnumTextValue("TietNghiaVuCongTacKhacSauGiamTru")]
		[ColumnEnum("TietNghiaVuCongTacKhacSauGiamTru", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiaVuCongTacKhacSauGiamTru,
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("MaDonVi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDonVi,
		/// <summary>
		/// TenDonVi : 
		/// </summary>
		[EnumTextValue("TenDonVi")]
		[ColumnEnum("TenDonVi", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TenDonVi,
		/// <summary>
		/// TenNgach : 
		/// </summary>
		[EnumTextValue("TenNgach")]
		[ColumnEnum("TenNgach", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		TenNgach,
		/// <summary>
		/// ChucDanh : 
		/// </summary>
		[EnumTextValue("ChucDanh")]
		[ColumnEnum("ChucDanh", typeof(System.String), System.Data.DbType.String, false, false, true, 403)]
		ChucDanh,
		/// <summary>
		/// PhanTramDuocGiam : 
		/// </summary>
		[EnumTextValue("PhanTramDuocGiam")]
		[ColumnEnum("PhanTramDuocGiam", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PhanTramDuocGiam,
		/// <summary>
		/// CongPhanTramGiam : 
		/// </summary>
		[EnumTextValue("CongPhanTramGiam")]
		[ColumnEnum("CongPhanTramGiam", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CongPhanTramGiam
	}//End enum

} // end namespace

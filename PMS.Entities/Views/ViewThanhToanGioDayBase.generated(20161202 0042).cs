/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewThanhToanGioDay.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_ThanhToan_GioDay' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewThanhToanGioDayBase")]
	public abstract partial class ViewThanhToanGioDayBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		private System.Int32		  _maGiangVien = (int)0;
		
		/// <summary>
		/// MaQuanLyGiangVien : 
		/// </summary>
		private System.String		  _maQuanLyGiangVien = string.Empty;
		
		/// <summary>
		/// HoTen : 
		/// </summary>
		private System.String		  _hoTen = null;
		
		/// <summary>
		/// HoTen_HocHam_HocVi : 
		/// </summary>
		private System.String		  _hoTenHocHamHocVi = null;
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		private System.String		  _maDonVi = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		private System.Int32?		  _maLoaiGiangVien = null;
		
		/// <summary>
		/// BacLuong : 
		/// </summary>
		private System.Decimal		  _bacLuong = 0.0m;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		private System.String		  _namHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		private System.String		  _hocKy = null;
		
		/// <summary>
		/// TietThucDay : 
		/// </summary>
		private System.Decimal?		  _tietThucDay = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		private System.Decimal		  _tietQuyDoi = 0.0m;
		
		/// <summary>
		/// TietNghiaVu : 
		/// </summary>
		private System.Int32?		  _tietNghiaVu = null;
		
		/// <summary>
		/// TietGioiHan : 
		/// </summary>
		private System.Int32?		  _tietGioiHan = null;
		
		/// <summary>
		/// MaHocHamQuanLy : 
		/// </summary>
		private System.String		  _maHocHamQuanLy = null;
		
		/// <summary>
		/// MaHocViQuanLy : 
		/// </summary>
		private System.String		  _maHocViQuanLy = null;
		
		/// <summary>
		/// TietTD_TietQD : 
		/// </summary>
		private System.String		  _tietTdTietQd = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewThanhToanGioDayBase"/> instance.
		///</summary>
		public ViewThanhToanGioDayBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewThanhToanGioDayBase"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maQuanLyGiangVien"></param>
		///<param name="_hoTen"></param>
		///<param name="_hoTenHocHamHocVi"></param>
		///<param name="_maDonVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_bacLuong"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_tietThucDay"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_tietNghiaVu"></param>
		///<param name="_tietGioiHan"></param>
		///<param name="_maHocHamQuanLy"></param>
		///<param name="_maHocViQuanLy"></param>
		///<param name="_tietTdTietQd"></param>
		public ViewThanhToanGioDayBase(System.Int32 _maGiangVien, System.String _maQuanLyGiangVien, System.String _hoTen, System.String _hoTenHocHamHocVi, System.String _maDonVi, System.Int32? _maLoaiGiangVien, System.Decimal _bacLuong, System.String _namHoc, System.String _hocKy, System.Decimal? _tietThucDay, System.Decimal _tietQuyDoi, System.Int32? _tietNghiaVu, System.Int32? _tietGioiHan, System.String _maHocHamQuanLy, System.String _maHocViQuanLy, System.String _tietTdTietQd)
		{
			this._maGiangVien = _maGiangVien;
			this._maQuanLyGiangVien = _maQuanLyGiangVien;
			this._hoTen = _hoTen;
			this._hoTenHocHamHocVi = _hoTenHocHamHocVi;
			this._maDonVi = _maDonVi;
			this._maLoaiGiangVien = _maLoaiGiangVien;
			this._bacLuong = _bacLuong;
			this._namHoc = _namHoc;
			this._hocKy = _hocKy;
			this._tietThucDay = _tietThucDay;
			this._tietQuyDoi = _tietQuyDoi;
			this._tietNghiaVu = _tietNghiaVu;
			this._tietGioiHan = _tietGioiHan;
			this._maHocHamQuanLy = _maHocHamQuanLy;
			this._maHocViQuanLy = _maHocViQuanLy;
			this._tietTdTietQd = _tietTdTietQd;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewThanhToanGioDay"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maQuanLyGiangVien"></param>
		///<param name="_hoTen"></param>
		///<param name="_hoTenHocHamHocVi"></param>
		///<param name="_maDonVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_bacLuong"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_tietThucDay"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_tietNghiaVu"></param>
		///<param name="_tietGioiHan"></param>
		///<param name="_maHocHamQuanLy"></param>
		///<param name="_maHocViQuanLy"></param>
		///<param name="_tietTdTietQd"></param>
		public static ViewThanhToanGioDay CreateViewThanhToanGioDay(System.Int32 _maGiangVien, System.String _maQuanLyGiangVien, System.String _hoTen, System.String _hoTenHocHamHocVi, System.String _maDonVi, System.Int32? _maLoaiGiangVien, System.Decimal _bacLuong, System.String _namHoc, System.String _hocKy, System.Decimal? _tietThucDay, System.Decimal _tietQuyDoi, System.Int32? _tietNghiaVu, System.Int32? _tietGioiHan, System.String _maHocHamQuanLy, System.String _maHocViQuanLy, System.String _tietTdTietQd)
		{
			ViewThanhToanGioDay newViewThanhToanGioDay = new ViewThanhToanGioDay();
			newViewThanhToanGioDay.MaGiangVien = _maGiangVien;
			newViewThanhToanGioDay.MaQuanLyGiangVien = _maQuanLyGiangVien;
			newViewThanhToanGioDay.HoTen = _hoTen;
			newViewThanhToanGioDay.HoTenHocHamHocVi = _hoTenHocHamHocVi;
			newViewThanhToanGioDay.MaDonVi = _maDonVi;
			newViewThanhToanGioDay.MaLoaiGiangVien = _maLoaiGiangVien;
			newViewThanhToanGioDay.BacLuong = _bacLuong;
			newViewThanhToanGioDay.NamHoc = _namHoc;
			newViewThanhToanGioDay.HocKy = _hocKy;
			newViewThanhToanGioDay.TietThucDay = _tietThucDay;
			newViewThanhToanGioDay.TietQuyDoi = _tietQuyDoi;
			newViewThanhToanGioDay.TietNghiaVu = _tietNghiaVu;
			newViewThanhToanGioDay.TietGioiHan = _tietGioiHan;
			newViewThanhToanGioDay.MaHocHamQuanLy = _maHocHamQuanLy;
			newViewThanhToanGioDay.MaHocViQuanLy = _maHocViQuanLy;
			newViewThanhToanGioDay.TietTdTietQd = _tietTdTietQd;
			return newViewThanhToanGioDay;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 MaGiangVien
		{
			get
			{
				return this._maGiangVien; 
			}
			set
			{
				if (_maGiangVien == value)
					return;
					
				this._maGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaQuanLyGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaQuanLyGiangVien
		{
			get
			{
				return this._maQuanLyGiangVien; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaQuanLyGiangVien does not allow null values.");
				if (_maQuanLyGiangVien == value)
					return;
					
				this._maQuanLyGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaQuanLyGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTen
		{
			get
			{
				return this._hoTen; 
			}
			set
			{
				if (_hoTen == value)
					return;
					
				this._hoTen = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTen");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen_HocHam_HocVi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTenHocHamHocVi
		{
			get
			{
				return this._hoTenHocHamHocVi; 
			}
			set
			{
				if (_hoTenHocHamHocVi == value)
					return;
					
				this._hoTenHocHamHocVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTenHocHamHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this._maDonVi; 
			}
			set
			{
				if (_maDonVi == value)
					return;
					
				this._maDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaLoaiGiangVienNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this._maLoaiGiangVien; 
			}
			set
			{
				if (_maLoaiGiangVien == value && MaLoaiGiangVien != null )
					return;
					
				this._maLoaiGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BacLuong property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal BacLuong
		{
			get
			{
				return this._bacLuong; 
			}
			set
			{
				if (_bacLuong == value)
					return;
					
				this._bacLuong = value;
				this._isDirty = true;
				
				OnPropertyChanged("BacLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NamHoc
		{
			get
			{
				return this._namHoc; 
			}
			set
			{
				if (_namHoc == value)
					return;
					
				this._namHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HocKy
		{
			get
			{
				return this._hocKy; 
			}
			set
			{
				if (_hocKy == value)
					return;
					
				this._hocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietThucDay property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietThucDayNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietThucDay
		{
			get
			{
				return this._tietThucDay; 
			}
			set
			{
				if (_tietThucDay == value && TietThucDay != null )
					return;
					
				this._tietThucDay = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietThucDay");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal TietQuyDoi
		{
			get
			{
				return this._tietQuyDoi; 
			}
			set
			{
				if (_tietQuyDoi == value)
					return;
					
				this._tietQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietNghiaVu property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTietNghiaVuNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? TietNghiaVu
		{
			get
			{
				return this._tietNghiaVu; 
			}
			set
			{
				if (_tietNghiaVu == value && TietNghiaVu != null )
					return;
					
				this._tietNghiaVu = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietNghiaVu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietGioiHan property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTietGioiHanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? TietGioiHan
		{
			get
			{
				return this._tietGioiHan; 
			}
			set
			{
				if (_tietGioiHan == value && TietGioiHan != null )
					return;
					
				this._tietGioiHan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietGioiHan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHocHamQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaHocHamQuanLy
		{
			get
			{
				return this._maHocHamQuanLy; 
			}
			set
			{
				if (_maHocHamQuanLy == value)
					return;
					
				this._maHocHamQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHocHamQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHocViQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaHocViQuanLy
		{
			get
			{
				return this._maHocViQuanLy; 
			}
			set
			{
				if (_maHocViQuanLy == value)
					return;
					
				this._maHocViQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHocViQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietTD_TietQD property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TietTdTietQd
		{
			get
			{
				return this._tietTdTietQd; 
			}
			set
			{
				if (_tietTdTietQd == value)
					return;
					
				this._tietTdTietQd = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietTdTietQd");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_ThanhToan_GioDay"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewThanhToanGioDayBase Entity 
		///</summary>
		public virtual ViewThanhToanGioDayBase Copy()
		{
			//shallow copy entity
			ViewThanhToanGioDay copy = new ViewThanhToanGioDay();
				copy.MaGiangVien = this.MaGiangVien;
				copy.MaQuanLyGiangVien = this.MaQuanLyGiangVien;
				copy.HoTen = this.HoTen;
				copy.HoTenHocHamHocVi = this.HoTenHocHamHocVi;
				copy.MaDonVi = this.MaDonVi;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.BacLuong = this.BacLuong;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.TietThucDay = this.TietThucDay;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.TietNghiaVu = this.TietNghiaVu;
				copy.TietGioiHan = this.TietGioiHan;
				copy.MaHocHamQuanLy = this.MaHocHamQuanLy;
				copy.MaHocViQuanLy = this.MaHocViQuanLy;
				copy.TietTdTietQd = this.TietTdTietQd;
			copy.AcceptChanges();
			return (ViewThanhToanGioDay)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewThanhToanGioDayBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewThanhToanGioDayBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewThanhToanGioDayBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewThanhToanGioDayBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewThanhToanGioDayBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewThanhToanGioDayBase Object1, ViewThanhToanGioDayBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.MaGiangVien != Object2.MaGiangVien)
				equal = false;
			if (Object1.MaQuanLyGiangVien != Object2.MaQuanLyGiangVien)
				equal = false;
			if (Object1.HoTen != null && Object2.HoTen != null )
			{
				if (Object1.HoTen != Object2.HoTen)
					equal = false;
			}
			else if (Object1.HoTen == null ^ Object1.HoTen == null )
			{
				equal = false;
			}
			if (Object1.HoTenHocHamHocVi != null && Object2.HoTenHocHamHocVi != null )
			{
				if (Object1.HoTenHocHamHocVi != Object2.HoTenHocHamHocVi)
					equal = false;
			}
			else if (Object1.HoTenHocHamHocVi == null ^ Object1.HoTenHocHamHocVi == null )
			{
				equal = false;
			}
			if (Object1.MaDonVi != null && Object2.MaDonVi != null )
			{
				if (Object1.MaDonVi != Object2.MaDonVi)
					equal = false;
			}
			else if (Object1.MaDonVi == null ^ Object1.MaDonVi == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object1.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if (Object1.BacLuong != Object2.BacLuong)
				equal = false;
			if (Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object1.NamHoc == null )
			{
				equal = false;
			}
			if (Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object1.HocKy == null )
			{
				equal = false;
			}
			if (Object1.TietThucDay != null && Object2.TietThucDay != null )
			{
				if (Object1.TietThucDay != Object2.TietThucDay)
					equal = false;
			}
			else if (Object1.TietThucDay == null ^ Object1.TietThucDay == null )
			{
				equal = false;
			}
			if (Object1.TietQuyDoi != Object2.TietQuyDoi)
				equal = false;
			if (Object1.TietNghiaVu != null && Object2.TietNghiaVu != null )
			{
				if (Object1.TietNghiaVu != Object2.TietNghiaVu)
					equal = false;
			}
			else if (Object1.TietNghiaVu == null ^ Object1.TietNghiaVu == null )
			{
				equal = false;
			}
			if (Object1.TietGioiHan != null && Object2.TietGioiHan != null )
			{
				if (Object1.TietGioiHan != Object2.TietGioiHan)
					equal = false;
			}
			else if (Object1.TietGioiHan == null ^ Object1.TietGioiHan == null )
			{
				equal = false;
			}
			if (Object1.MaHocHamQuanLy != null && Object2.MaHocHamQuanLy != null )
			{
				if (Object1.MaHocHamQuanLy != Object2.MaHocHamQuanLy)
					equal = false;
			}
			else if (Object1.MaHocHamQuanLy == null ^ Object1.MaHocHamQuanLy == null )
			{
				equal = false;
			}
			if (Object1.MaHocViQuanLy != null && Object2.MaHocViQuanLy != null )
			{
				if (Object1.MaHocViQuanLy != Object2.MaHocViQuanLy)
					equal = false;
			}
			else if (Object1.MaHocViQuanLy == null ^ Object1.MaHocViQuanLy == null )
			{
				equal = false;
			}
			if (Object1.TietTdTietQd != null && Object2.TietTdTietQd != null )
			{
				if (Object1.TietTdTietQd != Object2.TietTdTietQd)
					equal = false;
			}
			else if (Object1.TietTdTietQd == null ^ Object1.TietTdTietQd == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewThanhToanGioDay entity, string propertyName)
		{
			switch (propertyName)
			{
				case "MaGiangVien":
					return entity.MaGiangVien;
				case "MaQuanLyGiangVien":
					return entity.MaQuanLyGiangVien;
				case "HoTen":
					return entity.HoTen;
				case "HoTenHocHamHocVi":
					return entity.HoTenHocHamHocVi;
				case "MaDonVi":
					return entity.MaDonVi;
				case "MaLoaiGiangVien":
					return entity.MaLoaiGiangVien;
				case "BacLuong":
					return entity.BacLuong;
				case "NamHoc":
					return entity.NamHoc;
				case "HocKy":
					return entity.HocKy;
				case "TietThucDay":
					return entity.TietThucDay;
				case "TietQuyDoi":
					return entity.TietQuyDoi;
				case "TietNghiaVu":
					return entity.TietNghiaVu;
				case "TietGioiHan":
					return entity.TietGioiHan;
				case "MaHocHamQuanLy":
					return entity.MaHocHamQuanLy;
				case "MaHocViQuanLy":
					return entity.MaHocViQuanLy;
				case "TietTdTietQd":
					return entity.TietTdTietQd;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewThanhToanGioDay, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{17}{16}- MaGiangVien: {0}{16}- MaQuanLyGiangVien: {1}{16}- HoTen: {2}{16}- HoTenHocHamHocVi: {3}{16}- MaDonVi: {4}{16}- MaLoaiGiangVien: {5}{16}- BacLuong: {6}{16}- NamHoc: {7}{16}- HocKy: {8}{16}- TietThucDay: {9}{16}- TietQuyDoi: {10}{16}- TietNghiaVu: {11}{16}- TietGioiHan: {12}{16}- MaHocHamQuanLy: {13}{16}- MaHocViQuanLy: {14}{16}- TietTdTietQd: {15}{16}", 
				this.MaGiangVien,
				this.MaQuanLyGiangVien,
				(this.HoTen == null) ? string.Empty : this.HoTen.ToString(),
			     
				(this.HoTenHocHamHocVi == null) ? string.Empty : this.HoTenHocHamHocVi.ToString(),
			     
				(this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString(),
			     
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
			     
				this.BacLuong,
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
			     
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
			     
				(this.TietThucDay == null) ? string.Empty : this.TietThucDay.ToString(),
			     
				this.TietQuyDoi,
				(this.TietNghiaVu == null) ? string.Empty : this.TietNghiaVu.ToString(),
			     
				(this.TietGioiHan == null) ? string.Empty : this.TietGioiHan.ToString(),
			     
				(this.MaHocHamQuanLy == null) ? string.Empty : this.MaHocHamQuanLy.ToString(),
			     
				(this.MaHocViQuanLy == null) ? string.Empty : this.MaHocViQuanLy.ToString(),
			     
				(this.TietTdTietQd == null) ? string.Empty : this.TietTdTietQd.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewThanhToanGioDay columns.
	/// </summary>
	[Serializable]
	public enum ViewThanhToanGioDayColumn
	{
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("MaGiangVien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		MaGiangVien,
		/// <summary>
		/// MaQuanLyGiangVien : 
		/// </summary>
		[EnumTextValue("MaQuanLyGiangVien")]
		[ColumnEnum("MaQuanLyGiangVien", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaQuanLyGiangVien,
		/// <summary>
		/// HoTen : 
		/// </summary>
		[EnumTextValue("HoTen")]
		[ColumnEnum("HoTen", typeof(System.String), System.Data.DbType.String, false, false, true, 102)]
		HoTen,
		/// <summary>
		/// HoTen_HocHam_HocVi : 
		/// </summary>
		[EnumTextValue("HoTen_HocHam_HocVi")]
		[ColumnEnum("HoTen_HocHam_HocVi", typeof(System.String), System.Data.DbType.String, false, false, true, 193)]
		HoTenHocHamHocVi,
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("MaDonVi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDonVi,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("MaLoaiGiangVien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien,
		/// <summary>
		/// BacLuong : 
		/// </summary>
		[EnumTextValue("BacLuong")]
		[ColumnEnum("BacLuong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		BacLuong,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("NamHoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("HocKy")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy,
		/// <summary>
		/// TietThucDay : 
		/// </summary>
		[EnumTextValue("TietThucDay")]
		[ColumnEnum("TietThucDay", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietThucDay,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("TietQuyDoi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		TietQuyDoi,
		/// <summary>
		/// TietNghiaVu : 
		/// </summary>
		[EnumTextValue("TietNghiaVu")]
		[ColumnEnum("TietNghiaVu", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TietNghiaVu,
		/// <summary>
		/// TietGioiHan : 
		/// </summary>
		[EnumTextValue("TietGioiHan")]
		[ColumnEnum("TietGioiHan", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TietGioiHan,
		/// <summary>
		/// MaHocHamQuanLy : 
		/// </summary>
		[EnumTextValue("MaHocHamQuanLy")]
		[ColumnEnum("MaHocHamQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHocHamQuanLy,
		/// <summary>
		/// MaHocViQuanLy : 
		/// </summary>
		[EnumTextValue("MaHocViQuanLy")]
		[ColumnEnum("MaHocViQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHocViQuanLy,
		/// <summary>
		/// TietTD_TietQD : 
		/// </summary>
		[EnumTextValue("TietTD_TietQD")]
		[ColumnEnum("TietTD_TietQD", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 41)]
		TietTdTietQd
	}//End enum

} // end namespace

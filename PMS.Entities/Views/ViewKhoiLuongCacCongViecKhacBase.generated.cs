/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewKhoiLuongCacCongViecKhac.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_KhoiLuongCacCongViecKhac' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewKhoiLuongCacCongViecKhacBase")]
	public abstract partial class ViewKhoiLuongCacCongViecKhacBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// Id : 
		/// </summary>
		private System.Int32		  _id = (int)0;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		private System.String		  _namHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		private System.String		  _hocKy = null;
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		private System.Int32?		  _maGiangVien = null;
		
		/// <summary>
		/// MaGiangVienQuanLy : 
		/// </summary>
		private System.String		  _maGiangVienQuanLy = string.Empty;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		private System.String		  _ho = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		private System.String		  _ten = null;
		
		/// <summary>
		/// HoTen : 
		/// </summary>
		private System.String		  _hoTen = null;
		
		/// <summary>
		/// MaLoaiCongViec : 
		/// </summary>
		private System.Int32		  _maLoaiCongViec = (int)0;
		
		/// <summary>
		/// MaCongViec : 
		/// </summary>
		private System.String		  _maCongViec = string.Empty;
		
		/// <summary>
		/// TenCongViec : 
		/// </summary>
		private System.String		  _tenCongViec = null;
		
		/// <summary>
		/// MaDonViTinh : 
		/// </summary>
		private System.Int32?		  _maDonViTinh = null;
		
		/// <summary>
		/// TenDonViTinh : 
		/// </summary>
		private System.String		  _tenDonViTinh = null;
		
		/// <summary>
		/// SoLuong : 
		/// </summary>
		private System.Decimal?		  _soLuong = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		private System.String		  _maLop = null;
		
		/// <summary>
		/// MaNhom : 
		/// </summary>
		private System.String		  _maNhom = null;
		
		/// <summary>
		/// GhiChu : 
		/// </summary>
		private System.String		  _ghiChu = null;
		
		/// <summary>
		/// HeSoQuyDoi : 
		/// </summary>
		private System.Decimal?		  _heSoQuyDoi = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		private System.Decimal?		  _tietQuyDoi = null;
		
		/// <summary>
		/// Chot : 
		/// </summary>
		private System.Boolean?		  _chot = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		private System.String		  _ngayCapNhat = null;
		
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		private System.String		  _nguoiCapNhat = null;
		
		/// <summary>
		/// MaLoaiKhoiLuong : 
		/// </summary>
		private System.String		  _maLoaiKhoiLuong = null;
		
		/// <summary>
		/// HeSoChucDanhKhoiLuongKhac : 
		/// </summary>
		private System.Decimal?		  _heSoChucDanhKhoiLuongKhac = null;
		
		/// <summary>
		/// DotThanhToan : 
		/// </summary>
		private System.String		  _dotThanhToan = null;
		
		/// <summary>
		/// HeSoNhan : 
		/// </summary>
		private System.Int32?		  _heSoNhan = null;
		
		/// <summary>
		/// GioChuanCongThemTrenMotTiet : 
		/// </summary>
		private System.Decimal?		  _gioChuanCongThemTrenMotTiet = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewKhoiLuongCacCongViecKhacBase"/> instance.
		///</summary>
		public ViewKhoiLuongCacCongViecKhacBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewKhoiLuongCacCongViecKhacBase"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maGiangVien"></param>
		///<param name="_maGiangVienQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_maLoaiCongViec"></param>
		///<param name="_maCongViec"></param>
		///<param name="_tenCongViec"></param>
		///<param name="_maDonViTinh"></param>
		///<param name="_tenDonViTinh"></param>
		///<param name="_soLuong"></param>
		///<param name="_maLop"></param>
		///<param name="_maNhom"></param>
		///<param name="_ghiChu"></param>
		///<param name="_heSoQuyDoi"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_chot"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_maLoaiKhoiLuong"></param>
		///<param name="_heSoChucDanhKhoiLuongKhac"></param>
		///<param name="_dotThanhToan"></param>
		///<param name="_heSoNhan"></param>
		///<param name="_gioChuanCongThemTrenMotTiet"></param>
		public ViewKhoiLuongCacCongViecKhacBase(System.Int32 _id, System.String _namHoc, System.String _hocKy, System.Int32? _maGiangVien, System.String _maGiangVienQuanLy, System.String _ho, System.String _ten, System.String _hoTen, System.Int32 _maLoaiCongViec, System.String _maCongViec, System.String _tenCongViec, System.Int32? _maDonViTinh, System.String _tenDonViTinh, System.Decimal? _soLuong, System.String _maLop, System.String _maNhom, System.String _ghiChu, System.Decimal? _heSoQuyDoi, System.Decimal? _tietQuyDoi, System.Boolean? _chot, System.String _ngayCapNhat, System.String _nguoiCapNhat, System.String _maLoaiKhoiLuong, System.Decimal? _heSoChucDanhKhoiLuongKhac, System.String _dotThanhToan, System.Int32? _heSoNhan, System.Decimal? _gioChuanCongThemTrenMotTiet)
		{
			this._id = _id;
			this._namHoc = _namHoc;
			this._hocKy = _hocKy;
			this._maGiangVien = _maGiangVien;
			this._maGiangVienQuanLy = _maGiangVienQuanLy;
			this._ho = _ho;
			this._ten = _ten;
			this._hoTen = _hoTen;
			this._maLoaiCongViec = _maLoaiCongViec;
			this._maCongViec = _maCongViec;
			this._tenCongViec = _tenCongViec;
			this._maDonViTinh = _maDonViTinh;
			this._tenDonViTinh = _tenDonViTinh;
			this._soLuong = _soLuong;
			this._maLop = _maLop;
			this._maNhom = _maNhom;
			this._ghiChu = _ghiChu;
			this._heSoQuyDoi = _heSoQuyDoi;
			this._tietQuyDoi = _tietQuyDoi;
			this._chot = _chot;
			this._ngayCapNhat = _ngayCapNhat;
			this._nguoiCapNhat = _nguoiCapNhat;
			this._maLoaiKhoiLuong = _maLoaiKhoiLuong;
			this._heSoChucDanhKhoiLuongKhac = _heSoChucDanhKhoiLuongKhac;
			this._dotThanhToan = _dotThanhToan;
			this._heSoNhan = _heSoNhan;
			this._gioChuanCongThemTrenMotTiet = _gioChuanCongThemTrenMotTiet;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewKhoiLuongCacCongViecKhac"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maGiangVien"></param>
		///<param name="_maGiangVienQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_maLoaiCongViec"></param>
		///<param name="_maCongViec"></param>
		///<param name="_tenCongViec"></param>
		///<param name="_maDonViTinh"></param>
		///<param name="_tenDonViTinh"></param>
		///<param name="_soLuong"></param>
		///<param name="_maLop"></param>
		///<param name="_maNhom"></param>
		///<param name="_ghiChu"></param>
		///<param name="_heSoQuyDoi"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_chot"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_maLoaiKhoiLuong"></param>
		///<param name="_heSoChucDanhKhoiLuongKhac"></param>
		///<param name="_dotThanhToan"></param>
		///<param name="_heSoNhan"></param>
		///<param name="_gioChuanCongThemTrenMotTiet"></param>
		public static ViewKhoiLuongCacCongViecKhac CreateViewKhoiLuongCacCongViecKhac(System.Int32 _id, System.String _namHoc, System.String _hocKy, System.Int32? _maGiangVien, System.String _maGiangVienQuanLy, System.String _ho, System.String _ten, System.String _hoTen, System.Int32 _maLoaiCongViec, System.String _maCongViec, System.String _tenCongViec, System.Int32? _maDonViTinh, System.String _tenDonViTinh, System.Decimal? _soLuong, System.String _maLop, System.String _maNhom, System.String _ghiChu, System.Decimal? _heSoQuyDoi, System.Decimal? _tietQuyDoi, System.Boolean? _chot, System.String _ngayCapNhat, System.String _nguoiCapNhat, System.String _maLoaiKhoiLuong, System.Decimal? _heSoChucDanhKhoiLuongKhac, System.String _dotThanhToan, System.Int32? _heSoNhan, System.Decimal? _gioChuanCongThemTrenMotTiet)
		{
			ViewKhoiLuongCacCongViecKhac newViewKhoiLuongCacCongViecKhac = new ViewKhoiLuongCacCongViecKhac();
			newViewKhoiLuongCacCongViecKhac.Id = _id;
			newViewKhoiLuongCacCongViecKhac.NamHoc = _namHoc;
			newViewKhoiLuongCacCongViecKhac.HocKy = _hocKy;
			newViewKhoiLuongCacCongViecKhac.MaGiangVien = _maGiangVien;
			newViewKhoiLuongCacCongViecKhac.MaGiangVienQuanLy = _maGiangVienQuanLy;
			newViewKhoiLuongCacCongViecKhac.Ho = _ho;
			newViewKhoiLuongCacCongViecKhac.Ten = _ten;
			newViewKhoiLuongCacCongViecKhac.HoTen = _hoTen;
			newViewKhoiLuongCacCongViecKhac.MaLoaiCongViec = _maLoaiCongViec;
			newViewKhoiLuongCacCongViecKhac.MaCongViec = _maCongViec;
			newViewKhoiLuongCacCongViecKhac.TenCongViec = _tenCongViec;
			newViewKhoiLuongCacCongViecKhac.MaDonViTinh = _maDonViTinh;
			newViewKhoiLuongCacCongViecKhac.TenDonViTinh = _tenDonViTinh;
			newViewKhoiLuongCacCongViecKhac.SoLuong = _soLuong;
			newViewKhoiLuongCacCongViecKhac.MaLop = _maLop;
			newViewKhoiLuongCacCongViecKhac.MaNhom = _maNhom;
			newViewKhoiLuongCacCongViecKhac.GhiChu = _ghiChu;
			newViewKhoiLuongCacCongViecKhac.HeSoQuyDoi = _heSoQuyDoi;
			newViewKhoiLuongCacCongViecKhac.TietQuyDoi = _tietQuyDoi;
			newViewKhoiLuongCacCongViecKhac.Chot = _chot;
			newViewKhoiLuongCacCongViecKhac.NgayCapNhat = _ngayCapNhat;
			newViewKhoiLuongCacCongViecKhac.NguoiCapNhat = _nguoiCapNhat;
			newViewKhoiLuongCacCongViecKhac.MaLoaiKhoiLuong = _maLoaiKhoiLuong;
			newViewKhoiLuongCacCongViecKhac.HeSoChucDanhKhoiLuongKhac = _heSoChucDanhKhoiLuongKhac;
			newViewKhoiLuongCacCongViecKhac.DotThanhToan = _dotThanhToan;
			newViewKhoiLuongCacCongViecKhac.HeSoNhan = _heSoNhan;
			newViewKhoiLuongCacCongViecKhac.GioChuanCongThemTrenMotTiet = _gioChuanCongThemTrenMotTiet;
			return newViewKhoiLuongCacCongViecKhac;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 Id
		{
			get
			{
				return this._id; 
			}
			set
			{
				if (_id == value)
					return;
					
				this._id = value;
				this._isDirty = true;
				
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NamHoc
		{
			get
			{
				return this._namHoc; 
			}
			set
			{
				if (_namHoc == value)
					return;
					
				this._namHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HocKy
		{
			get
			{
				return this._hocKy; 
			}
			set
			{
				if (_hocKy == value)
					return;
					
				this._hocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaGiangVienNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaGiangVien
		{
			get
			{
				return this._maGiangVien; 
			}
			set
			{
				if (_maGiangVien == value && MaGiangVien != null )
					return;
					
				this._maGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaGiangVienQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaGiangVienQuanLy
		{
			get
			{
				return this._maGiangVienQuanLy; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaGiangVienQuanLy does not allow null values.");
				if (_maGiangVienQuanLy == value)
					return;
					
				this._maGiangVienQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaGiangVienQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ho
		{
			get
			{
				return this._ho; 
			}
			set
			{
				if (_ho == value)
					return;
					
				this._ho = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ten
		{
			get
			{
				return this._ten; 
			}
			set
			{
				if (_ten == value)
					return;
					
				this._ten = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTen
		{
			get
			{
				return this._hoTen; 
			}
			set
			{
				if (_hoTen == value)
					return;
					
				this._hoTen = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTen");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiCongViec property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 MaLoaiCongViec
		{
			get
			{
				return this._maLoaiCongViec; 
			}
			set
			{
				if (_maLoaiCongViec == value)
					return;
					
				this._maLoaiCongViec = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiCongViec");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaCongViec property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaCongViec
		{
			get
			{
				return this._maCongViec; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaCongViec does not allow null values.");
				if (_maCongViec == value)
					return;
					
				this._maCongViec = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaCongViec");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenCongViec property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenCongViec
		{
			get
			{
				return this._tenCongViec; 
			}
			set
			{
				if (_tenCongViec == value)
					return;
					
				this._tenCongViec = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenCongViec");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDonViTinh property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaDonViTinhNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaDonViTinh
		{
			get
			{
				return this._maDonViTinh; 
			}
			set
			{
				if (_maDonViTinh == value && MaDonViTinh != null )
					return;
					
				this._maDonViTinh = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDonViTinh");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenDonViTinh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenDonViTinh
		{
			get
			{
				return this._tenDonViTinh; 
			}
			set
			{
				if (_tenDonViTinh == value)
					return;
					
				this._tenDonViTinh = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenDonViTinh");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoLuong property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoLuongNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoLuong
		{
			get
			{
				return this._soLuong; 
			}
			set
			{
				if (_soLuong == value && SoLuong != null )
					return;
					
				this._soLuong = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLop
		{
			get
			{
				return this._maLop; 
			}
			set
			{
				if (_maLop == value)
					return;
					
				this._maLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaNhom property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaNhom
		{
			get
			{
				return this._maNhom; 
			}
			set
			{
				if (_maNhom == value)
					return;
					
				this._maNhom = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaNhom");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GhiChu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GhiChu
		{
			get
			{
				return this._ghiChu; 
			}
			set
			{
				if (_ghiChu == value)
					return;
					
				this._ghiChu = value;
				this._isDirty = true;
				
				OnPropertyChanged("GhiChu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoQuyDoiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoQuyDoi
		{
			get
			{
				return this._heSoQuyDoi; 
			}
			set
			{
				if (_heSoQuyDoi == value && HeSoQuyDoi != null )
					return;
					
				this._heSoQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietQuyDoiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this._tietQuyDoi; 
			}
			set
			{
				if (_tietQuyDoi == value && TietQuyDoi != null )
					return;
					
				this._tietQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Chot property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsChotNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? Chot
		{
			get
			{
				return this._chot; 
			}
			set
			{
				if (_chot == value && Chot != null )
					return;
					
				this._chot = value;
				this._isDirty = true;
				
				OnPropertyChanged("Chot");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NgayCapNhat
		{
			get
			{
				return this._ngayCapNhat; 
			}
			set
			{
				if (_ngayCapNhat == value)
					return;
					
				this._ngayCapNhat = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NguoiCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NguoiCapNhat
		{
			get
			{
				return this._nguoiCapNhat; 
			}
			set
			{
				if (_nguoiCapNhat == value)
					return;
					
				this._nguoiCapNhat = value;
				this._isDirty = true;
				
				OnPropertyChanged("NguoiCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiKhoiLuong property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLoaiKhoiLuong
		{
			get
			{
				return this._maLoaiKhoiLuong; 
			}
			set
			{
				if (_maLoaiKhoiLuong == value)
					return;
					
				this._maLoaiKhoiLuong = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiKhoiLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoChucDanhKhoiLuongKhac property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoChucDanhKhoiLuongKhacNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoChucDanhKhoiLuongKhac
		{
			get
			{
				return this._heSoChucDanhKhoiLuongKhac; 
			}
			set
			{
				if (_heSoChucDanhKhoiLuongKhac == value && HeSoChucDanhKhoiLuongKhac != null )
					return;
					
				this._heSoChucDanhKhoiLuongKhac = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoChucDanhKhoiLuongKhac");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DotThanhToan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DotThanhToan
		{
			get
			{
				return this._dotThanhToan; 
			}
			set
			{
				if (_dotThanhToan == value)
					return;
					
				this._dotThanhToan = value;
				this._isDirty = true;
				
				OnPropertyChanged("DotThanhToan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoNhan property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsHeSoNhanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? HeSoNhan
		{
			get
			{
				return this._heSoNhan; 
			}
			set
			{
				if (_heSoNhan == value && HeSoNhan != null )
					return;
					
				this._heSoNhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoNhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GioChuanCongThemTrenMotTiet property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGioChuanCongThemTrenMotTietNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? GioChuanCongThemTrenMotTiet
		{
			get
			{
				return this._gioChuanCongThemTrenMotTiet; 
			}
			set
			{
				if (_gioChuanCongThemTrenMotTiet == value && GioChuanCongThemTrenMotTiet != null )
					return;
					
				this._gioChuanCongThemTrenMotTiet = value;
				this._isDirty = true;
				
				OnPropertyChanged("GioChuanCongThemTrenMotTiet");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_KhoiLuongCacCongViecKhac"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewKhoiLuongCacCongViecKhacBase Entity 
		///</summary>
		public virtual ViewKhoiLuongCacCongViecKhacBase Copy()
		{
			//shallow copy entity
			ViewKhoiLuongCacCongViecKhac copy = new ViewKhoiLuongCacCongViecKhac();
				copy.Id = this.Id;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.MaGiangVien = this.MaGiangVien;
				copy.MaGiangVienQuanLy = this.MaGiangVienQuanLy;
				copy.Ho = this.Ho;
				copy.Ten = this.Ten;
				copy.HoTen = this.HoTen;
				copy.MaLoaiCongViec = this.MaLoaiCongViec;
				copy.MaCongViec = this.MaCongViec;
				copy.TenCongViec = this.TenCongViec;
				copy.MaDonViTinh = this.MaDonViTinh;
				copy.TenDonViTinh = this.TenDonViTinh;
				copy.SoLuong = this.SoLuong;
				copy.MaLop = this.MaLop;
				copy.MaNhom = this.MaNhom;
				copy.GhiChu = this.GhiChu;
				copy.HeSoQuyDoi = this.HeSoQuyDoi;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.Chot = this.Chot;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.NguoiCapNhat = this.NguoiCapNhat;
				copy.MaLoaiKhoiLuong = this.MaLoaiKhoiLuong;
				copy.HeSoChucDanhKhoiLuongKhac = this.HeSoChucDanhKhoiLuongKhac;
				copy.DotThanhToan = this.DotThanhToan;
				copy.HeSoNhan = this.HeSoNhan;
				copy.GioChuanCongThemTrenMotTiet = this.GioChuanCongThemTrenMotTiet;
			copy.AcceptChanges();
			return (ViewKhoiLuongCacCongViecKhac)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewKhoiLuongCacCongViecKhacBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewKhoiLuongCacCongViecKhacBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewKhoiLuongCacCongViecKhacBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewKhoiLuongCacCongViecKhacBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewKhoiLuongCacCongViecKhacBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewKhoiLuongCacCongViecKhacBase Object1, ViewKhoiLuongCacCongViecKhacBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if (Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object1.NamHoc == null )
			{
				equal = false;
			}
			if (Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object1.HocKy == null )
			{
				equal = false;
			}
			if (Object1.MaGiangVien != null && Object2.MaGiangVien != null )
			{
				if (Object1.MaGiangVien != Object2.MaGiangVien)
					equal = false;
			}
			else if (Object1.MaGiangVien == null ^ Object1.MaGiangVien == null )
			{
				equal = false;
			}
			if (Object1.MaGiangVienQuanLy != Object2.MaGiangVienQuanLy)
				equal = false;
			if (Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object1.Ho == null )
			{
				equal = false;
			}
			if (Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object1.Ten == null )
			{
				equal = false;
			}
			if (Object1.HoTen != null && Object2.HoTen != null )
			{
				if (Object1.HoTen != Object2.HoTen)
					equal = false;
			}
			else if (Object1.HoTen == null ^ Object1.HoTen == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiCongViec != Object2.MaLoaiCongViec)
				equal = false;
			if (Object1.MaCongViec != Object2.MaCongViec)
				equal = false;
			if (Object1.TenCongViec != null && Object2.TenCongViec != null )
			{
				if (Object1.TenCongViec != Object2.TenCongViec)
					equal = false;
			}
			else if (Object1.TenCongViec == null ^ Object1.TenCongViec == null )
			{
				equal = false;
			}
			if (Object1.MaDonViTinh != null && Object2.MaDonViTinh != null )
			{
				if (Object1.MaDonViTinh != Object2.MaDonViTinh)
					equal = false;
			}
			else if (Object1.MaDonViTinh == null ^ Object1.MaDonViTinh == null )
			{
				equal = false;
			}
			if (Object1.TenDonViTinh != null && Object2.TenDonViTinh != null )
			{
				if (Object1.TenDonViTinh != Object2.TenDonViTinh)
					equal = false;
			}
			else if (Object1.TenDonViTinh == null ^ Object1.TenDonViTinh == null )
			{
				equal = false;
			}
			if (Object1.SoLuong != null && Object2.SoLuong != null )
			{
				if (Object1.SoLuong != Object2.SoLuong)
					equal = false;
			}
			else if (Object1.SoLuong == null ^ Object1.SoLuong == null )
			{
				equal = false;
			}
			if (Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object1.MaLop == null )
			{
				equal = false;
			}
			if (Object1.MaNhom != null && Object2.MaNhom != null )
			{
				if (Object1.MaNhom != Object2.MaNhom)
					equal = false;
			}
			else if (Object1.MaNhom == null ^ Object1.MaNhom == null )
			{
				equal = false;
			}
			if (Object1.GhiChu != null && Object2.GhiChu != null )
			{
				if (Object1.GhiChu != Object2.GhiChu)
					equal = false;
			}
			else if (Object1.GhiChu == null ^ Object1.GhiChu == null )
			{
				equal = false;
			}
			if (Object1.HeSoQuyDoi != null && Object2.HeSoQuyDoi != null )
			{
				if (Object1.HeSoQuyDoi != Object2.HeSoQuyDoi)
					equal = false;
			}
			else if (Object1.HeSoQuyDoi == null ^ Object1.HeSoQuyDoi == null )
			{
				equal = false;
			}
			if (Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object1.TietQuyDoi == null )
			{
				equal = false;
			}
			if (Object1.Chot != null && Object2.Chot != null )
			{
				if (Object1.Chot != Object2.Chot)
					equal = false;
			}
			else if (Object1.Chot == null ^ Object1.Chot == null )
			{
				equal = false;
			}
			if (Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object1.NgayCapNhat == null )
			{
				equal = false;
			}
			if (Object1.NguoiCapNhat != null && Object2.NguoiCapNhat != null )
			{
				if (Object1.NguoiCapNhat != Object2.NguoiCapNhat)
					equal = false;
			}
			else if (Object1.NguoiCapNhat == null ^ Object1.NguoiCapNhat == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiKhoiLuong != null && Object2.MaLoaiKhoiLuong != null )
			{
				if (Object1.MaLoaiKhoiLuong != Object2.MaLoaiKhoiLuong)
					equal = false;
			}
			else if (Object1.MaLoaiKhoiLuong == null ^ Object1.MaLoaiKhoiLuong == null )
			{
				equal = false;
			}
			if (Object1.HeSoChucDanhKhoiLuongKhac != null && Object2.HeSoChucDanhKhoiLuongKhac != null )
			{
				if (Object1.HeSoChucDanhKhoiLuongKhac != Object2.HeSoChucDanhKhoiLuongKhac)
					equal = false;
			}
			else if (Object1.HeSoChucDanhKhoiLuongKhac == null ^ Object1.HeSoChucDanhKhoiLuongKhac == null )
			{
				equal = false;
			}
			if (Object1.DotThanhToan != null && Object2.DotThanhToan != null )
			{
				if (Object1.DotThanhToan != Object2.DotThanhToan)
					equal = false;
			}
			else if (Object1.DotThanhToan == null ^ Object1.DotThanhToan == null )
			{
				equal = false;
			}
			if (Object1.HeSoNhan != null && Object2.HeSoNhan != null )
			{
				if (Object1.HeSoNhan != Object2.HeSoNhan)
					equal = false;
			}
			else if (Object1.HeSoNhan == null ^ Object1.HeSoNhan == null )
			{
				equal = false;
			}
			if (Object1.GioChuanCongThemTrenMotTiet != null && Object2.GioChuanCongThemTrenMotTiet != null )
			{
				if (Object1.GioChuanCongThemTrenMotTiet != Object2.GioChuanCongThemTrenMotTiet)
					equal = false;
			}
			else if (Object1.GioChuanCongThemTrenMotTiet == null ^ Object1.GioChuanCongThemTrenMotTiet == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewKhoiLuongCacCongViecKhac entity, string propertyName)
		{
			switch (propertyName)
			{
				case "Id":
					return entity.Id;
				case "NamHoc":
					return entity.NamHoc;
				case "HocKy":
					return entity.HocKy;
				case "MaGiangVien":
					return entity.MaGiangVien;
				case "MaGiangVienQuanLy":
					return entity.MaGiangVienQuanLy;
				case "Ho":
					return entity.Ho;
				case "Ten":
					return entity.Ten;
				case "HoTen":
					return entity.HoTen;
				case "MaLoaiCongViec":
					return entity.MaLoaiCongViec;
				case "MaCongViec":
					return entity.MaCongViec;
				case "TenCongViec":
					return entity.TenCongViec;
				case "MaDonViTinh":
					return entity.MaDonViTinh;
				case "TenDonViTinh":
					return entity.TenDonViTinh;
				case "SoLuong":
					return entity.SoLuong;
				case "MaLop":
					return entity.MaLop;
				case "MaNhom":
					return entity.MaNhom;
				case "GhiChu":
					return entity.GhiChu;
				case "HeSoQuyDoi":
					return entity.HeSoQuyDoi;
				case "TietQuyDoi":
					return entity.TietQuyDoi;
				case "Chot":
					return entity.Chot;
				case "NgayCapNhat":
					return entity.NgayCapNhat;
				case "NguoiCapNhat":
					return entity.NguoiCapNhat;
				case "MaLoaiKhoiLuong":
					return entity.MaLoaiKhoiLuong;
				case "HeSoChucDanhKhoiLuongKhac":
					return entity.HeSoChucDanhKhoiLuongKhac;
				case "DotThanhToan":
					return entity.DotThanhToan;
				case "HeSoNhan":
					return entity.HeSoNhan;
				case "GioChuanCongThemTrenMotTiet":
					return entity.GioChuanCongThemTrenMotTiet;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewKhoiLuongCacCongViecKhac, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{28}{27}- Id: {0}{27}- NamHoc: {1}{27}- HocKy: {2}{27}- MaGiangVien: {3}{27}- MaGiangVienQuanLy: {4}{27}- Ho: {5}{27}- Ten: {6}{27}- HoTen: {7}{27}- MaLoaiCongViec: {8}{27}- MaCongViec: {9}{27}- TenCongViec: {10}{27}- MaDonViTinh: {11}{27}- TenDonViTinh: {12}{27}- SoLuong: {13}{27}- MaLop: {14}{27}- MaNhom: {15}{27}- GhiChu: {16}{27}- HeSoQuyDoi: {17}{27}- TietQuyDoi: {18}{27}- Chot: {19}{27}- NgayCapNhat: {20}{27}- NguoiCapNhat: {21}{27}- MaLoaiKhoiLuong: {22}{27}- HeSoChucDanhKhoiLuongKhac: {23}{27}- DotThanhToan: {24}{27}- HeSoNhan: {25}{27}- GioChuanCongThemTrenMotTiet: {26}{27}", 
				this.Id,
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
			     
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
			     
				(this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString(),
			     
				this.MaGiangVienQuanLy,
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
			     
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
			     
				(this.HoTen == null) ? string.Empty : this.HoTen.ToString(),
			     
				this.MaLoaiCongViec,
				this.MaCongViec,
				(this.TenCongViec == null) ? string.Empty : this.TenCongViec.ToString(),
			     
				(this.MaDonViTinh == null) ? string.Empty : this.MaDonViTinh.ToString(),
			     
				(this.TenDonViTinh == null) ? string.Empty : this.TenDonViTinh.ToString(),
			     
				(this.SoLuong == null) ? string.Empty : this.SoLuong.ToString(),
			     
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
			     
				(this.MaNhom == null) ? string.Empty : this.MaNhom.ToString(),
			     
				(this.GhiChu == null) ? string.Empty : this.GhiChu.ToString(),
			     
				(this.HeSoQuyDoi == null) ? string.Empty : this.HeSoQuyDoi.ToString(),
			     
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
			     
				(this.Chot == null) ? string.Empty : this.Chot.ToString(),
			     
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
			     
				(this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString(),
			     
				(this.MaLoaiKhoiLuong == null) ? string.Empty : this.MaLoaiKhoiLuong.ToString(),
			     
				(this.HeSoChucDanhKhoiLuongKhac == null) ? string.Empty : this.HeSoChucDanhKhoiLuongKhac.ToString(),
			     
				(this.DotThanhToan == null) ? string.Empty : this.DotThanhToan.ToString(),
			     
				(this.HeSoNhan == null) ? string.Empty : this.HeSoNhan.ToString(),
			     
				(this.GioChuanCongThemTrenMotTiet == null) ? string.Empty : this.GioChuanCongThemTrenMotTiet.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewKhoiLuongCacCongViecKhac columns.
	/// </summary>
	[Serializable]
	public enum ViewKhoiLuongCacCongViecKhacColumn
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		Id,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("NamHoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("HocKy")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy,
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("MaGiangVien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaGiangVien,
		/// <summary>
		/// MaGiangVienQuanLy : 
		/// </summary>
		[EnumTextValue("MaGiangVienQuanLy")]
		[ColumnEnum("MaGiangVienQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaGiangVienQuanLy,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 101)]
		Ho,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten,
		/// <summary>
		/// HoTen : 
		/// </summary>
		[EnumTextValue("HoTen")]
		[ColumnEnum("HoTen", typeof(System.String), System.Data.DbType.String, false, false, true, 152)]
		HoTen,
		/// <summary>
		/// MaLoaiCongViec : 
		/// </summary>
		[EnumTextValue("MaLoaiCongViec")]
		[ColumnEnum("MaLoaiCongViec", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		MaLoaiCongViec,
		/// <summary>
		/// MaCongViec : 
		/// </summary>
		[EnumTextValue("MaCongViec")]
		[ColumnEnum("MaCongViec", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaCongViec,
		/// <summary>
		/// TenCongViec : 
		/// </summary>
		[EnumTextValue("TenCongViec")]
		[ColumnEnum("TenCongViec", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenCongViec,
		/// <summary>
		/// MaDonViTinh : 
		/// </summary>
		[EnumTextValue("MaDonViTinh")]
		[ColumnEnum("MaDonViTinh", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaDonViTinh,
		/// <summary>
		/// TenDonViTinh : 
		/// </summary>
		[EnumTextValue("TenDonViTinh")]
		[ColumnEnum("TenDonViTinh", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TenDonViTinh,
		/// <summary>
		/// SoLuong : 
		/// </summary>
		[EnumTextValue("SoLuong")]
		[ColumnEnum("SoLuong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoLuong,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("MaLop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		MaLop,
		/// <summary>
		/// MaNhom : 
		/// </summary>
		[EnumTextValue("MaNhom")]
		[ColumnEnum("MaNhom", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		MaNhom,
		/// <summary>
		/// GhiChu : 
		/// </summary>
		[EnumTextValue("GhiChu")]
		[ColumnEnum("GhiChu", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		GhiChu,
		/// <summary>
		/// HeSoQuyDoi : 
		/// </summary>
		[EnumTextValue("HeSoQuyDoi")]
		[ColumnEnum("HeSoQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoQuyDoi,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("TietQuyDoi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi,
		/// <summary>
		/// Chot : 
		/// </summary>
		[EnumTextValue("Chot")]
		[ColumnEnum("Chot", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		Chot,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("NgayCapNhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NgayCapNhat,
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		[EnumTextValue("NguoiCapNhat")]
		[ColumnEnum("NguoiCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NguoiCapNhat,
		/// <summary>
		/// MaLoaiKhoiLuong : 
		/// </summary>
		[EnumTextValue("MaLoaiKhoiLuong")]
		[ColumnEnum("MaLoaiKhoiLuong", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLoaiKhoiLuong,
		/// <summary>
		/// HeSoChucDanhKhoiLuongKhac : 
		/// </summary>
		[EnumTextValue("HeSoChucDanhKhoiLuongKhac")]
		[ColumnEnum("HeSoChucDanhKhoiLuongKhac", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoChucDanhKhoiLuongKhac,
		/// <summary>
		/// DotThanhToan : 
		/// </summary>
		[EnumTextValue("DotThanhToan")]
		[ColumnEnum("DotThanhToan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		DotThanhToan,
		/// <summary>
		/// HeSoNhan : 
		/// </summary>
		[EnumTextValue("HeSoNhan")]
		[ColumnEnum("HeSoNhan", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		HeSoNhan,
		/// <summary>
		/// GioChuanCongThemTrenMotTiet : 
		/// </summary>
		[EnumTextValue("GioChuanCongThemTrenMotTiet")]
		[ColumnEnum("GioChuanCongThemTrenMotTiet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GioChuanCongThemTrenMotTiet
	}//End enum

} // end namespace

/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewSdhUteKhoiLuongQuyDoi.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'view_SdhUte_KhoiLuongQuyDoi' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewSdhUteKhoiLuongQuyDoiBase")]
	public abstract partial class ViewSdhUteKhoiLuongQuyDoiBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// Id : 
		/// </summary>
		private System.Int32		  _id = (int)0;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		private System.String		  _maMonHoc = null;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		private System.String		  _tenMonHoc = null;
		
		/// <summary>
		/// NhomMonHoc : 
		/// </summary>
		private System.String		  _nhomMonHoc = null;
		
		/// <summary>
		/// MaHocPhan : 
		/// </summary>
		private System.String		  _maHocPhan = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		private System.String		  _namHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		private System.String		  _hocKy = null;
		
		/// <summary>
		/// MaDot : 
		/// </summary>
		private System.String		  _maDot = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		private System.String		  _maLopHocPhan = null;
		
		/// <summary>
		/// Nhom : 
		/// </summary>
		private System.String		  _nhom = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		private System.String		  _maLop = null;
		
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		private System.String		  _maDiaDiem = null;
		
		/// <summary>
		/// TenDiaDiem : 
		/// </summary>
		private System.String		  _tenDiaDiem = null;
		
		/// <summary>
		/// TienXeDiaDiem : 
		/// </summary>
		private System.Decimal?		  _tienXeDiaDiem = null;
		
		/// <summary>
		/// MaGiangVienQuanLy : 
		/// </summary>
		private System.String		  _maGiangVienQuanLy = null;
		
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		private System.Int32?		  _soTinChi = null;
		
		/// <summary>
		/// SiSo : 
		/// </summary>
		private System.Int32?		  _siSo = null;
		
		/// <summary>
		/// LopClc : 
		/// </summary>
		private System.Boolean?		  _lopClc = null;
		
		/// <summary>
		/// SoTietDayChuNhat : 
		/// </summary>
		private System.Int32?		  _soTietDayChuNhat = null;
		
		/// <summary>
		/// SoTiet : 
		/// </summary>
		private System.Decimal?		  _soTiet = null;
		
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		private System.Int32?		  _maLoaiHocPhan = null;
		
		/// <summary>
		/// HeSoLopDongLyThuyet : 
		/// </summary>
		private System.Decimal?		  _heSoLopDongLyThuyet = null;
		
		/// <summary>
		/// HeSoLopDongThTnTt : 
		/// </summary>
		private System.Decimal?		  _heSoLopDongThTnTt = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		private System.Decimal?		  _tietQuyDoi = null;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		private System.String		  _ho = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		private System.String		  _ten = null;
		
		/// <summary>
		/// HoTen : 
		/// </summary>
		private System.String		  _hoTen = null;
		
		/// <summary>
		/// TenLoaiHocPhan : 
		/// </summary>
		private System.String		  _tenLoaiHocPhan = null;
		
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		private System.String		  _loaiHocPhan = null;
		
		/// <summary>
		/// SoGioThucGiangTrenLop : 
		/// </summary>
		private System.Decimal?		  _soGioThucGiangTrenLop = null;
		
		/// <summary>
		/// SoGioChuanTinhThem : 
		/// </summary>
		private System.Decimal?		  _soGioChuanTinhThem = null;
		
		/// <summary>
		/// MaNhomMon : 
		/// </summary>
		private System.Int32?		  _maNhomMon = null;
		
		/// <summary>
		/// TenNhomMon : 
		/// </summary>
		private System.String		  _tenNhomMon = null;
		
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		private System.Decimal?		  _heSoHocKy = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewSdhUteKhoiLuongQuyDoiBase"/> instance.
		///</summary>
		public ViewSdhUteKhoiLuongQuyDoiBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewSdhUteKhoiLuongQuyDoiBase"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_nhomMonHoc"></param>
		///<param name="_maHocPhan"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maDot"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_nhom"></param>
		///<param name="_maLop"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_tenDiaDiem"></param>
		///<param name="_tienXeDiaDiem"></param>
		///<param name="_maGiangVienQuanLy"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSo"></param>
		///<param name="_lopClc"></param>
		///<param name="_soTietDayChuNhat"></param>
		///<param name="_soTiet"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_heSoLopDongLyThuyet"></param>
		///<param name="_heSoLopDongThTnTt"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_tenLoaiHocPhan"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_soGioThucGiangTrenLop"></param>
		///<param name="_soGioChuanTinhThem"></param>
		///<param name="_maNhomMon"></param>
		///<param name="_tenNhomMon"></param>
		///<param name="_heSoHocKy"></param>
		public ViewSdhUteKhoiLuongQuyDoiBase(System.Int32 _id, System.String _maMonHoc, System.String _tenMonHoc, System.String _nhomMonHoc, System.String _maHocPhan, System.String _namHoc, System.String _hocKy, System.String _maDot, System.String _maLopHocPhan, System.String _nhom, System.String _maLop, System.String _maDiaDiem, System.String _tenDiaDiem, System.Decimal? _tienXeDiaDiem, System.String _maGiangVienQuanLy, System.Int32? _soTinChi, System.Int32? _siSo, System.Boolean? _lopClc, System.Int32? _soTietDayChuNhat, System.Decimal? _soTiet, System.Int32? _maLoaiHocPhan, System.Decimal? _heSoLopDongLyThuyet, System.Decimal? _heSoLopDongThTnTt, System.Decimal? _tietQuyDoi, System.String _ho, System.String _ten, System.String _hoTen, System.String _tenLoaiHocPhan, System.String _loaiHocPhan, System.Decimal? _soGioThucGiangTrenLop, System.Decimal? _soGioChuanTinhThem, System.Int32? _maNhomMon, System.String _tenNhomMon, System.Decimal? _heSoHocKy)
		{
			this._id = _id;
			this._maMonHoc = _maMonHoc;
			this._tenMonHoc = _tenMonHoc;
			this._nhomMonHoc = _nhomMonHoc;
			this._maHocPhan = _maHocPhan;
			this._namHoc = _namHoc;
			this._hocKy = _hocKy;
			this._maDot = _maDot;
			this._maLopHocPhan = _maLopHocPhan;
			this._nhom = _nhom;
			this._maLop = _maLop;
			this._maDiaDiem = _maDiaDiem;
			this._tenDiaDiem = _tenDiaDiem;
			this._tienXeDiaDiem = _tienXeDiaDiem;
			this._maGiangVienQuanLy = _maGiangVienQuanLy;
			this._soTinChi = _soTinChi;
			this._siSo = _siSo;
			this._lopClc = _lopClc;
			this._soTietDayChuNhat = _soTietDayChuNhat;
			this._soTiet = _soTiet;
			this._maLoaiHocPhan = _maLoaiHocPhan;
			this._heSoLopDongLyThuyet = _heSoLopDongLyThuyet;
			this._heSoLopDongThTnTt = _heSoLopDongThTnTt;
			this._tietQuyDoi = _tietQuyDoi;
			this._ho = _ho;
			this._ten = _ten;
			this._hoTen = _hoTen;
			this._tenLoaiHocPhan = _tenLoaiHocPhan;
			this._loaiHocPhan = _loaiHocPhan;
			this._soGioThucGiangTrenLop = _soGioThucGiangTrenLop;
			this._soGioChuanTinhThem = _soGioChuanTinhThem;
			this._maNhomMon = _maNhomMon;
			this._tenNhomMon = _tenNhomMon;
			this._heSoHocKy = _heSoHocKy;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewSdhUteKhoiLuongQuyDoi"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_nhomMonHoc"></param>
		///<param name="_maHocPhan"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maDot"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_nhom"></param>
		///<param name="_maLop"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_tenDiaDiem"></param>
		///<param name="_tienXeDiaDiem"></param>
		///<param name="_maGiangVienQuanLy"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSo"></param>
		///<param name="_lopClc"></param>
		///<param name="_soTietDayChuNhat"></param>
		///<param name="_soTiet"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_heSoLopDongLyThuyet"></param>
		///<param name="_heSoLopDongThTnTt"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_tenLoaiHocPhan"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_soGioThucGiangTrenLop"></param>
		///<param name="_soGioChuanTinhThem"></param>
		///<param name="_maNhomMon"></param>
		///<param name="_tenNhomMon"></param>
		///<param name="_heSoHocKy"></param>
		public static ViewSdhUteKhoiLuongQuyDoi CreateViewSdhUteKhoiLuongQuyDoi(System.Int32 _id, System.String _maMonHoc, System.String _tenMonHoc, System.String _nhomMonHoc, System.String _maHocPhan, System.String _namHoc, System.String _hocKy, System.String _maDot, System.String _maLopHocPhan, System.String _nhom, System.String _maLop, System.String _maDiaDiem, System.String _tenDiaDiem, System.Decimal? _tienXeDiaDiem, System.String _maGiangVienQuanLy, System.Int32? _soTinChi, System.Int32? _siSo, System.Boolean? _lopClc, System.Int32? _soTietDayChuNhat, System.Decimal? _soTiet, System.Int32? _maLoaiHocPhan, System.Decimal? _heSoLopDongLyThuyet, System.Decimal? _heSoLopDongThTnTt, System.Decimal? _tietQuyDoi, System.String _ho, System.String _ten, System.String _hoTen, System.String _tenLoaiHocPhan, System.String _loaiHocPhan, System.Decimal? _soGioThucGiangTrenLop, System.Decimal? _soGioChuanTinhThem, System.Int32? _maNhomMon, System.String _tenNhomMon, System.Decimal? _heSoHocKy)
		{
			ViewSdhUteKhoiLuongQuyDoi newViewSdhUteKhoiLuongQuyDoi = new ViewSdhUteKhoiLuongQuyDoi();
			newViewSdhUteKhoiLuongQuyDoi.Id = _id;
			newViewSdhUteKhoiLuongQuyDoi.MaMonHoc = _maMonHoc;
			newViewSdhUteKhoiLuongQuyDoi.TenMonHoc = _tenMonHoc;
			newViewSdhUteKhoiLuongQuyDoi.NhomMonHoc = _nhomMonHoc;
			newViewSdhUteKhoiLuongQuyDoi.MaHocPhan = _maHocPhan;
			newViewSdhUteKhoiLuongQuyDoi.NamHoc = _namHoc;
			newViewSdhUteKhoiLuongQuyDoi.HocKy = _hocKy;
			newViewSdhUteKhoiLuongQuyDoi.MaDot = _maDot;
			newViewSdhUteKhoiLuongQuyDoi.MaLopHocPhan = _maLopHocPhan;
			newViewSdhUteKhoiLuongQuyDoi.Nhom = _nhom;
			newViewSdhUteKhoiLuongQuyDoi.MaLop = _maLop;
			newViewSdhUteKhoiLuongQuyDoi.MaDiaDiem = _maDiaDiem;
			newViewSdhUteKhoiLuongQuyDoi.TenDiaDiem = _tenDiaDiem;
			newViewSdhUteKhoiLuongQuyDoi.TienXeDiaDiem = _tienXeDiaDiem;
			newViewSdhUteKhoiLuongQuyDoi.MaGiangVienQuanLy = _maGiangVienQuanLy;
			newViewSdhUteKhoiLuongQuyDoi.SoTinChi = _soTinChi;
			newViewSdhUteKhoiLuongQuyDoi.SiSo = _siSo;
			newViewSdhUteKhoiLuongQuyDoi.LopClc = _lopClc;
			newViewSdhUteKhoiLuongQuyDoi.SoTietDayChuNhat = _soTietDayChuNhat;
			newViewSdhUteKhoiLuongQuyDoi.SoTiet = _soTiet;
			newViewSdhUteKhoiLuongQuyDoi.MaLoaiHocPhan = _maLoaiHocPhan;
			newViewSdhUteKhoiLuongQuyDoi.HeSoLopDongLyThuyet = _heSoLopDongLyThuyet;
			newViewSdhUteKhoiLuongQuyDoi.HeSoLopDongThTnTt = _heSoLopDongThTnTt;
			newViewSdhUteKhoiLuongQuyDoi.TietQuyDoi = _tietQuyDoi;
			newViewSdhUteKhoiLuongQuyDoi.Ho = _ho;
			newViewSdhUteKhoiLuongQuyDoi.Ten = _ten;
			newViewSdhUteKhoiLuongQuyDoi.HoTen = _hoTen;
			newViewSdhUteKhoiLuongQuyDoi.TenLoaiHocPhan = _tenLoaiHocPhan;
			newViewSdhUteKhoiLuongQuyDoi.LoaiHocPhan = _loaiHocPhan;
			newViewSdhUteKhoiLuongQuyDoi.SoGioThucGiangTrenLop = _soGioThucGiangTrenLop;
			newViewSdhUteKhoiLuongQuyDoi.SoGioChuanTinhThem = _soGioChuanTinhThem;
			newViewSdhUteKhoiLuongQuyDoi.MaNhomMon = _maNhomMon;
			newViewSdhUteKhoiLuongQuyDoi.TenNhomMon = _tenNhomMon;
			newViewSdhUteKhoiLuongQuyDoi.HeSoHocKy = _heSoHocKy;
			return newViewSdhUteKhoiLuongQuyDoi;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 Id
		{
			get
			{
				return this._id; 
			}
			set
			{
				if (_id == value)
					return;
					
				this._id = value;
				this._isDirty = true;
				
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this._maMonHoc; 
			}
			set
			{
				if (_maMonHoc == value)
					return;
					
				this._maMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this._tenMonHoc; 
			}
			set
			{
				if (_tenMonHoc == value)
					return;
					
				this._tenMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NhomMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NhomMonHoc
		{
			get
			{
				return this._nhomMonHoc; 
			}
			set
			{
				if (_nhomMonHoc == value)
					return;
					
				this._nhomMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NhomMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaHocPhan
		{
			get
			{
				return this._maHocPhan; 
			}
			set
			{
				if (_maHocPhan == value)
					return;
					
				this._maHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NamHoc
		{
			get
			{
				return this._namHoc; 
			}
			set
			{
				if (_namHoc == value)
					return;
					
				this._namHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HocKy
		{
			get
			{
				return this._hocKy; 
			}
			set
			{
				if (_hocKy == value)
					return;
					
				this._hocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDot property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDot
		{
			get
			{
				return this._maDot; 
			}
			set
			{
				if (_maDot == value)
					return;
					
				this._maDot = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDot");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this._maLopHocPhan; 
			}
			set
			{
				if (_maLopHocPhan == value)
					return;
					
				this._maLopHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Nhom property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Nhom
		{
			get
			{
				return this._nhom; 
			}
			set
			{
				if (_nhom == value)
					return;
					
				this._nhom = value;
				this._isDirty = true;
				
				OnPropertyChanged("Nhom");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLop
		{
			get
			{
				return this._maLop; 
			}
			set
			{
				if (_maLop == value)
					return;
					
				this._maLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDiaDiem
		{
			get
			{
				return this._maDiaDiem; 
			}
			set
			{
				if (_maDiaDiem == value)
					return;
					
				this._maDiaDiem = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenDiaDiem
		{
			get
			{
				return this._tenDiaDiem; 
			}
			set
			{
				if (_tenDiaDiem == value)
					return;
					
				this._tenDiaDiem = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TienXeDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTienXeDiaDiemNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TienXeDiaDiem
		{
			get
			{
				return this._tienXeDiaDiem; 
			}
			set
			{
				if (_tienXeDiaDiem == value && TienXeDiaDiem != null )
					return;
					
				this._tienXeDiaDiem = value;
				this._isDirty = true;
				
				OnPropertyChanged("TienXeDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaGiangVienQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaGiangVienQuanLy
		{
			get
			{
				return this._maGiangVienQuanLy; 
			}
			set
			{
				if (_maGiangVienQuanLy == value)
					return;
					
				this._maGiangVienQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaGiangVienQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTinChi property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSoTinChiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SoTinChi
		{
			get
			{
				return this._soTinChi; 
			}
			set
			{
				if (_soTinChi == value && SoTinChi != null )
					return;
					
				this._soTinChi = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SiSo property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSiSoNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SiSo
		{
			get
			{
				return this._siSo; 
			}
			set
			{
				if (_siSo == value && SiSo != null )
					return;
					
				this._siSo = value;
				this._isDirty = true;
				
				OnPropertyChanged("SiSo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LopClc property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsLopClcNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? LopClc
		{
			get
			{
				return this._lopClc; 
			}
			set
			{
				if (_lopClc == value && LopClc != null )
					return;
					
				this._lopClc = value;
				this._isDirty = true;
				
				OnPropertyChanged("LopClc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTietDayChuNhat property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSoTietDayChuNhatNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SoTietDayChuNhat
		{
			get
			{
				return this._soTietDayChuNhat; 
			}
			set
			{
				if (_soTietDayChuNhat == value && SoTietDayChuNhat != null )
					return;
					
				this._soTietDayChuNhat = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTietDayChuNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTiet property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoTietNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoTiet
		{
			get
			{
				return this._soTiet; 
			}
			set
			{
				if (_soTiet == value && SoTiet != null )
					return;
					
				this._soTiet = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTiet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaLoaiHocPhanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaLoaiHocPhan
		{
			get
			{
				return this._maLoaiHocPhan; 
			}
			set
			{
				if (_maLoaiHocPhan == value && MaLoaiHocPhan != null )
					return;
					
				this._maLoaiHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoLopDongLyThuyet property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoLopDongLyThuyetNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoLopDongLyThuyet
		{
			get
			{
				return this._heSoLopDongLyThuyet; 
			}
			set
			{
				if (_heSoLopDongLyThuyet == value && HeSoLopDongLyThuyet != null )
					return;
					
				this._heSoLopDongLyThuyet = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoLopDongLyThuyet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoLopDongThTnTt property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoLopDongThTnTtNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoLopDongThTnTt
		{
			get
			{
				return this._heSoLopDongThTnTt; 
			}
			set
			{
				if (_heSoLopDongThTnTt == value && HeSoLopDongThTnTt != null )
					return;
					
				this._heSoLopDongThTnTt = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoLopDongThTnTt");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietQuyDoiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this._tietQuyDoi; 
			}
			set
			{
				if (_tietQuyDoi == value && TietQuyDoi != null )
					return;
					
				this._tietQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ho
		{
			get
			{
				return this._ho; 
			}
			set
			{
				if (_ho == value)
					return;
					
				this._ho = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ten
		{
			get
			{
				return this._ten; 
			}
			set
			{
				if (_ten == value)
					return;
					
				this._ten = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTen
		{
			get
			{
				return this._hoTen; 
			}
			set
			{
				if (_hoTen == value)
					return;
					
				this._hoTen = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTen");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenLoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenLoaiHocPhan
		{
			get
			{
				return this._tenLoaiHocPhan; 
			}
			set
			{
				if (_tenLoaiHocPhan == value)
					return;
					
				this._tenLoaiHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenLoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LoaiHocPhan
		{
			get
			{
				return this._loaiHocPhan; 
			}
			set
			{
				if (_loaiHocPhan == value)
					return;
					
				this._loaiHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("LoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoGioThucGiangTrenLop property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoGioThucGiangTrenLopNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoGioThucGiangTrenLop
		{
			get
			{
				return this._soGioThucGiangTrenLop; 
			}
			set
			{
				if (_soGioThucGiangTrenLop == value && SoGioThucGiangTrenLop != null )
					return;
					
				this._soGioThucGiangTrenLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoGioThucGiangTrenLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoGioChuanTinhThem property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoGioChuanTinhThemNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoGioChuanTinhThem
		{
			get
			{
				return this._soGioChuanTinhThem; 
			}
			set
			{
				if (_soGioChuanTinhThem == value && SoGioChuanTinhThem != null )
					return;
					
				this._soGioChuanTinhThem = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoGioChuanTinhThem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaNhomMon property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaNhomMonNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaNhomMon
		{
			get
			{
				return this._maNhomMon; 
			}
			set
			{
				if (_maNhomMon == value && MaNhomMon != null )
					return;
					
				this._maNhomMon = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaNhomMon");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenNhomMon property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenNhomMon
		{
			get
			{
				return this._tenNhomMon; 
			}
			set
			{
				if (_tenNhomMon == value)
					return;
					
				this._tenNhomMon = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenNhomMon");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoHocKy property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoHocKyNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoHocKy
		{
			get
			{
				return this._heSoHocKy; 
			}
			set
			{
				if (_heSoHocKy == value && HeSoHocKy != null )
					return;
					
				this._heSoHocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoHocKy");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "view_SdhUte_KhoiLuongQuyDoi"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewSdhUteKhoiLuongQuyDoiBase Entity 
		///</summary>
		public virtual ViewSdhUteKhoiLuongQuyDoiBase Copy()
		{
			//shallow copy entity
			ViewSdhUteKhoiLuongQuyDoi copy = new ViewSdhUteKhoiLuongQuyDoi();
				copy.Id = this.Id;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.NhomMonHoc = this.NhomMonHoc;
				copy.MaHocPhan = this.MaHocPhan;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.MaDot = this.MaDot;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.Nhom = this.Nhom;
				copy.MaLop = this.MaLop;
				copy.MaDiaDiem = this.MaDiaDiem;
				copy.TenDiaDiem = this.TenDiaDiem;
				copy.TienXeDiaDiem = this.TienXeDiaDiem;
				copy.MaGiangVienQuanLy = this.MaGiangVienQuanLy;
				copy.SoTinChi = this.SoTinChi;
				copy.SiSo = this.SiSo;
				copy.LopClc = this.LopClc;
				copy.SoTietDayChuNhat = this.SoTietDayChuNhat;
				copy.SoTiet = this.SoTiet;
				copy.MaLoaiHocPhan = this.MaLoaiHocPhan;
				copy.HeSoLopDongLyThuyet = this.HeSoLopDongLyThuyet;
				copy.HeSoLopDongThTnTt = this.HeSoLopDongThTnTt;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.Ho = this.Ho;
				copy.Ten = this.Ten;
				copy.HoTen = this.HoTen;
				copy.TenLoaiHocPhan = this.TenLoaiHocPhan;
				copy.LoaiHocPhan = this.LoaiHocPhan;
				copy.SoGioThucGiangTrenLop = this.SoGioThucGiangTrenLop;
				copy.SoGioChuanTinhThem = this.SoGioChuanTinhThem;
				copy.MaNhomMon = this.MaNhomMon;
				copy.TenNhomMon = this.TenNhomMon;
				copy.HeSoHocKy = this.HeSoHocKy;
			copy.AcceptChanges();
			return (ViewSdhUteKhoiLuongQuyDoi)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewSdhUteKhoiLuongQuyDoiBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewSdhUteKhoiLuongQuyDoiBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewSdhUteKhoiLuongQuyDoiBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewSdhUteKhoiLuongQuyDoiBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewSdhUteKhoiLuongQuyDoiBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewSdhUteKhoiLuongQuyDoiBase Object1, ViewSdhUteKhoiLuongQuyDoiBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if (Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object1.MaMonHoc == null )
			{
				equal = false;
			}
			if (Object1.TenMonHoc != null && Object2.TenMonHoc != null )
			{
				if (Object1.TenMonHoc != Object2.TenMonHoc)
					equal = false;
			}
			else if (Object1.TenMonHoc == null ^ Object1.TenMonHoc == null )
			{
				equal = false;
			}
			if (Object1.NhomMonHoc != null && Object2.NhomMonHoc != null )
			{
				if (Object1.NhomMonHoc != Object2.NhomMonHoc)
					equal = false;
			}
			else if (Object1.NhomMonHoc == null ^ Object1.NhomMonHoc == null )
			{
				equal = false;
			}
			if (Object1.MaHocPhan != null && Object2.MaHocPhan != null )
			{
				if (Object1.MaHocPhan != Object2.MaHocPhan)
					equal = false;
			}
			else if (Object1.MaHocPhan == null ^ Object1.MaHocPhan == null )
			{
				equal = false;
			}
			if (Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object1.NamHoc == null )
			{
				equal = false;
			}
			if (Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object1.HocKy == null )
			{
				equal = false;
			}
			if (Object1.MaDot != null && Object2.MaDot != null )
			{
				if (Object1.MaDot != Object2.MaDot)
					equal = false;
			}
			else if (Object1.MaDot == null ^ Object1.MaDot == null )
			{
				equal = false;
			}
			if (Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object1.MaLopHocPhan == null )
			{
				equal = false;
			}
			if (Object1.Nhom != null && Object2.Nhom != null )
			{
				if (Object1.Nhom != Object2.Nhom)
					equal = false;
			}
			else if (Object1.Nhom == null ^ Object1.Nhom == null )
			{
				equal = false;
			}
			if (Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object1.MaLop == null )
			{
				equal = false;
			}
			if (Object1.MaDiaDiem != null && Object2.MaDiaDiem != null )
			{
				if (Object1.MaDiaDiem != Object2.MaDiaDiem)
					equal = false;
			}
			else if (Object1.MaDiaDiem == null ^ Object1.MaDiaDiem == null )
			{
				equal = false;
			}
			if (Object1.TenDiaDiem != null && Object2.TenDiaDiem != null )
			{
				if (Object1.TenDiaDiem != Object2.TenDiaDiem)
					equal = false;
			}
			else if (Object1.TenDiaDiem == null ^ Object1.TenDiaDiem == null )
			{
				equal = false;
			}
			if (Object1.TienXeDiaDiem != null && Object2.TienXeDiaDiem != null )
			{
				if (Object1.TienXeDiaDiem != Object2.TienXeDiaDiem)
					equal = false;
			}
			else if (Object1.TienXeDiaDiem == null ^ Object1.TienXeDiaDiem == null )
			{
				equal = false;
			}
			if (Object1.MaGiangVienQuanLy != null && Object2.MaGiangVienQuanLy != null )
			{
				if (Object1.MaGiangVienQuanLy != Object2.MaGiangVienQuanLy)
					equal = false;
			}
			else if (Object1.MaGiangVienQuanLy == null ^ Object1.MaGiangVienQuanLy == null )
			{
				equal = false;
			}
			if (Object1.SoTinChi != null && Object2.SoTinChi != null )
			{
				if (Object1.SoTinChi != Object2.SoTinChi)
					equal = false;
			}
			else if (Object1.SoTinChi == null ^ Object1.SoTinChi == null )
			{
				equal = false;
			}
			if (Object1.SiSo != null && Object2.SiSo != null )
			{
				if (Object1.SiSo != Object2.SiSo)
					equal = false;
			}
			else if (Object1.SiSo == null ^ Object1.SiSo == null )
			{
				equal = false;
			}
			if (Object1.LopClc != null && Object2.LopClc != null )
			{
				if (Object1.LopClc != Object2.LopClc)
					equal = false;
			}
			else if (Object1.LopClc == null ^ Object1.LopClc == null )
			{
				equal = false;
			}
			if (Object1.SoTietDayChuNhat != null && Object2.SoTietDayChuNhat != null )
			{
				if (Object1.SoTietDayChuNhat != Object2.SoTietDayChuNhat)
					equal = false;
			}
			else if (Object1.SoTietDayChuNhat == null ^ Object1.SoTietDayChuNhat == null )
			{
				equal = false;
			}
			if (Object1.SoTiet != null && Object2.SoTiet != null )
			{
				if (Object1.SoTiet != Object2.SoTiet)
					equal = false;
			}
			else if (Object1.SoTiet == null ^ Object1.SoTiet == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiHocPhan != null && Object2.MaLoaiHocPhan != null )
			{
				if (Object1.MaLoaiHocPhan != Object2.MaLoaiHocPhan)
					equal = false;
			}
			else if (Object1.MaLoaiHocPhan == null ^ Object1.MaLoaiHocPhan == null )
			{
				equal = false;
			}
			if (Object1.HeSoLopDongLyThuyet != null && Object2.HeSoLopDongLyThuyet != null )
			{
				if (Object1.HeSoLopDongLyThuyet != Object2.HeSoLopDongLyThuyet)
					equal = false;
			}
			else if (Object1.HeSoLopDongLyThuyet == null ^ Object1.HeSoLopDongLyThuyet == null )
			{
				equal = false;
			}
			if (Object1.HeSoLopDongThTnTt != null && Object2.HeSoLopDongThTnTt != null )
			{
				if (Object1.HeSoLopDongThTnTt != Object2.HeSoLopDongThTnTt)
					equal = false;
			}
			else if (Object1.HeSoLopDongThTnTt == null ^ Object1.HeSoLopDongThTnTt == null )
			{
				equal = false;
			}
			if (Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object1.TietQuyDoi == null )
			{
				equal = false;
			}
			if (Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object1.Ho == null )
			{
				equal = false;
			}
			if (Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object1.Ten == null )
			{
				equal = false;
			}
			if (Object1.HoTen != null && Object2.HoTen != null )
			{
				if (Object1.HoTen != Object2.HoTen)
					equal = false;
			}
			else if (Object1.HoTen == null ^ Object1.HoTen == null )
			{
				equal = false;
			}
			if (Object1.TenLoaiHocPhan != null && Object2.TenLoaiHocPhan != null )
			{
				if (Object1.TenLoaiHocPhan != Object2.TenLoaiHocPhan)
					equal = false;
			}
			else if (Object1.TenLoaiHocPhan == null ^ Object1.TenLoaiHocPhan == null )
			{
				equal = false;
			}
			if (Object1.LoaiHocPhan != null && Object2.LoaiHocPhan != null )
			{
				if (Object1.LoaiHocPhan != Object2.LoaiHocPhan)
					equal = false;
			}
			else if (Object1.LoaiHocPhan == null ^ Object1.LoaiHocPhan == null )
			{
				equal = false;
			}
			if (Object1.SoGioThucGiangTrenLop != null && Object2.SoGioThucGiangTrenLop != null )
			{
				if (Object1.SoGioThucGiangTrenLop != Object2.SoGioThucGiangTrenLop)
					equal = false;
			}
			else if (Object1.SoGioThucGiangTrenLop == null ^ Object1.SoGioThucGiangTrenLop == null )
			{
				equal = false;
			}
			if (Object1.SoGioChuanTinhThem != null && Object2.SoGioChuanTinhThem != null )
			{
				if (Object1.SoGioChuanTinhThem != Object2.SoGioChuanTinhThem)
					equal = false;
			}
			else if (Object1.SoGioChuanTinhThem == null ^ Object1.SoGioChuanTinhThem == null )
			{
				equal = false;
			}
			if (Object1.MaNhomMon != null && Object2.MaNhomMon != null )
			{
				if (Object1.MaNhomMon != Object2.MaNhomMon)
					equal = false;
			}
			else if (Object1.MaNhomMon == null ^ Object1.MaNhomMon == null )
			{
				equal = false;
			}
			if (Object1.TenNhomMon != null && Object2.TenNhomMon != null )
			{
				if (Object1.TenNhomMon != Object2.TenNhomMon)
					equal = false;
			}
			else if (Object1.TenNhomMon == null ^ Object1.TenNhomMon == null )
			{
				equal = false;
			}
			if (Object1.HeSoHocKy != null && Object2.HeSoHocKy != null )
			{
				if (Object1.HeSoHocKy != Object2.HeSoHocKy)
					equal = false;
			}
			else if (Object1.HeSoHocKy == null ^ Object1.HeSoHocKy == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewSdhUteKhoiLuongQuyDoi entity, string propertyName)
		{
			switch (propertyName)
			{
				case "Id":
					return entity.Id;
				case "MaMonHoc":
					return entity.MaMonHoc;
				case "TenMonHoc":
					return entity.TenMonHoc;
				case "NhomMonHoc":
					return entity.NhomMonHoc;
				case "MaHocPhan":
					return entity.MaHocPhan;
				case "NamHoc":
					return entity.NamHoc;
				case "HocKy":
					return entity.HocKy;
				case "MaDot":
					return entity.MaDot;
				case "MaLopHocPhan":
					return entity.MaLopHocPhan;
				case "Nhom":
					return entity.Nhom;
				case "MaLop":
					return entity.MaLop;
				case "MaDiaDiem":
					return entity.MaDiaDiem;
				case "TenDiaDiem":
					return entity.TenDiaDiem;
				case "TienXeDiaDiem":
					return entity.TienXeDiaDiem;
				case "MaGiangVienQuanLy":
					return entity.MaGiangVienQuanLy;
				case "SoTinChi":
					return entity.SoTinChi;
				case "SiSo":
					return entity.SiSo;
				case "LopClc":
					return entity.LopClc;
				case "SoTietDayChuNhat":
					return entity.SoTietDayChuNhat;
				case "SoTiet":
					return entity.SoTiet;
				case "MaLoaiHocPhan":
					return entity.MaLoaiHocPhan;
				case "HeSoLopDongLyThuyet":
					return entity.HeSoLopDongLyThuyet;
				case "HeSoLopDongThTnTt":
					return entity.HeSoLopDongThTnTt;
				case "TietQuyDoi":
					return entity.TietQuyDoi;
				case "Ho":
					return entity.Ho;
				case "Ten":
					return entity.Ten;
				case "HoTen":
					return entity.HoTen;
				case "TenLoaiHocPhan":
					return entity.TenLoaiHocPhan;
				case "LoaiHocPhan":
					return entity.LoaiHocPhan;
				case "SoGioThucGiangTrenLop":
					return entity.SoGioThucGiangTrenLop;
				case "SoGioChuanTinhThem":
					return entity.SoGioChuanTinhThem;
				case "MaNhomMon":
					return entity.MaNhomMon;
				case "TenNhomMon":
					return entity.TenNhomMon;
				case "HeSoHocKy":
					return entity.HeSoHocKy;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewSdhUteKhoiLuongQuyDoi, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{35}{34}- Id: {0}{34}- MaMonHoc: {1}{34}- TenMonHoc: {2}{34}- NhomMonHoc: {3}{34}- MaHocPhan: {4}{34}- NamHoc: {5}{34}- HocKy: {6}{34}- MaDot: {7}{34}- MaLopHocPhan: {8}{34}- Nhom: {9}{34}- MaLop: {10}{34}- MaDiaDiem: {11}{34}- TenDiaDiem: {12}{34}- TienXeDiaDiem: {13}{34}- MaGiangVienQuanLy: {14}{34}- SoTinChi: {15}{34}- SiSo: {16}{34}- LopClc: {17}{34}- SoTietDayChuNhat: {18}{34}- SoTiet: {19}{34}- MaLoaiHocPhan: {20}{34}- HeSoLopDongLyThuyet: {21}{34}- HeSoLopDongThTnTt: {22}{34}- TietQuyDoi: {23}{34}- Ho: {24}{34}- Ten: {25}{34}- HoTen: {26}{34}- TenLoaiHocPhan: {27}{34}- LoaiHocPhan: {28}{34}- SoGioThucGiangTrenLop: {29}{34}- SoGioChuanTinhThem: {30}{34}- MaNhomMon: {31}{34}- TenNhomMon: {32}{34}- HeSoHocKy: {33}{34}", 
				this.Id,
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
			     
				(this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString(),
			     
				(this.NhomMonHoc == null) ? string.Empty : this.NhomMonHoc.ToString(),
			     
				(this.MaHocPhan == null) ? string.Empty : this.MaHocPhan.ToString(),
			     
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
			     
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
			     
				(this.MaDot == null) ? string.Empty : this.MaDot.ToString(),
			     
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
			     
				(this.Nhom == null) ? string.Empty : this.Nhom.ToString(),
			     
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
			     
				(this.MaDiaDiem == null) ? string.Empty : this.MaDiaDiem.ToString(),
			     
				(this.TenDiaDiem == null) ? string.Empty : this.TenDiaDiem.ToString(),
			     
				(this.TienXeDiaDiem == null) ? string.Empty : this.TienXeDiaDiem.ToString(),
			     
				(this.MaGiangVienQuanLy == null) ? string.Empty : this.MaGiangVienQuanLy.ToString(),
			     
				(this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString(),
			     
				(this.SiSo == null) ? string.Empty : this.SiSo.ToString(),
			     
				(this.LopClc == null) ? string.Empty : this.LopClc.ToString(),
			     
				(this.SoTietDayChuNhat == null) ? string.Empty : this.SoTietDayChuNhat.ToString(),
			     
				(this.SoTiet == null) ? string.Empty : this.SoTiet.ToString(),
			     
				(this.MaLoaiHocPhan == null) ? string.Empty : this.MaLoaiHocPhan.ToString(),
			     
				(this.HeSoLopDongLyThuyet == null) ? string.Empty : this.HeSoLopDongLyThuyet.ToString(),
			     
				(this.HeSoLopDongThTnTt == null) ? string.Empty : this.HeSoLopDongThTnTt.ToString(),
			     
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
			     
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
			     
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
			     
				(this.HoTen == null) ? string.Empty : this.HoTen.ToString(),
			     
				(this.TenLoaiHocPhan == null) ? string.Empty : this.TenLoaiHocPhan.ToString(),
			     
				(this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString(),
			     
				(this.SoGioThucGiangTrenLop == null) ? string.Empty : this.SoGioThucGiangTrenLop.ToString(),
			     
				(this.SoGioChuanTinhThem == null) ? string.Empty : this.SoGioChuanTinhThem.ToString(),
			     
				(this.MaNhomMon == null) ? string.Empty : this.MaNhomMon.ToString(),
			     
				(this.TenNhomMon == null) ? string.Empty : this.TenNhomMon.ToString(),
			     
				(this.HeSoHocKy == null) ? string.Empty : this.HeSoHocKy.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewSdhUteKhoiLuongQuyDoi columns.
	/// </summary>
	[Serializable]
	public enum ViewSdhUteKhoiLuongQuyDoiColumn
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		Id,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("MaMonHoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("TenMonHoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TenMonHoc,
		/// <summary>
		/// NhomMonHoc : 
		/// </summary>
		[EnumTextValue("NhomMonHoc")]
		[ColumnEnum("NhomMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NhomMonHoc,
		/// <summary>
		/// MaHocPhan : 
		/// </summary>
		[EnumTextValue("MaHocPhan")]
		[ColumnEnum("MaHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHocPhan,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("NamHoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("HocKy")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy,
		/// <summary>
		/// MaDot : 
		/// </summary>
		[EnumTextValue("MaDot")]
		[ColumnEnum("MaDot", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		MaDot,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("MaLopHocPhan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MaLopHocPhan,
		/// <summary>
		/// Nhom : 
		/// </summary>
		[EnumTextValue("Nhom")]
		[ColumnEnum("Nhom", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Nhom,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("MaLop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 200)]
		MaLop,
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		[EnumTextValue("MaDiaDiem")]
		[ColumnEnum("MaDiaDiem", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDiaDiem,
		/// <summary>
		/// TenDiaDiem : 
		/// </summary>
		[EnumTextValue("TenDiaDiem")]
		[ColumnEnum("TenDiaDiem", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenDiaDiem,
		/// <summary>
		/// TienXeDiaDiem : 
		/// </summary>
		[EnumTextValue("TienXeDiaDiem")]
		[ColumnEnum("TienXeDiaDiem", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TienXeDiaDiem,
		/// <summary>
		/// MaGiangVienQuanLy : 
		/// </summary>
		[EnumTextValue("MaGiangVienQuanLy")]
		[ColumnEnum("MaGiangVienQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaGiangVienQuanLy,
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		[EnumTextValue("SoTinChi")]
		[ColumnEnum("SoTinChi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoTinChi,
		/// <summary>
		/// SiSo : 
		/// </summary>
		[EnumTextValue("SiSo")]
		[ColumnEnum("SiSo", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSo,
		/// <summary>
		/// LopClc : 
		/// </summary>
		[EnumTextValue("LopClc")]
		[ColumnEnum("LopClc", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		LopClc,
		/// <summary>
		/// SoTietDayChuNhat : 
		/// </summary>
		[EnumTextValue("SoTietDayChuNhat")]
		[ColumnEnum("SoTietDayChuNhat", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoTietDayChuNhat,
		/// <summary>
		/// SoTiet : 
		/// </summary>
		[EnumTextValue("SoTiet")]
		[ColumnEnum("SoTiet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTiet,
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		[EnumTextValue("MaLoaiHocPhan")]
		[ColumnEnum("MaLoaiHocPhan", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiHocPhan,
		/// <summary>
		/// HeSoLopDongLyThuyet : 
		/// </summary>
		[EnumTextValue("HeSoLopDongLyThuyet")]
		[ColumnEnum("HeSoLopDongLyThuyet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDongLyThuyet,
		/// <summary>
		/// HeSoLopDongThTnTt : 
		/// </summary>
		[EnumTextValue("HeSoLopDongThTnTt")]
		[ColumnEnum("HeSoLopDongThTnTt", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDongThTnTt,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("TietQuyDoi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 101)]
		Ho,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten,
		/// <summary>
		/// HoTen : 
		/// </summary>
		[EnumTextValue("HoTen")]
		[ColumnEnum("HoTen", typeof(System.String), System.Data.DbType.String, false, false, true, 152)]
		HoTen,
		/// <summary>
		/// TenLoaiHocPhan : 
		/// </summary>
		[EnumTextValue("TenLoaiHocPhan")]
		[ColumnEnum("TenLoaiHocPhan", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TenLoaiHocPhan,
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		[EnumTextValue("LoaiHocPhan")]
		[ColumnEnum("LoaiHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		LoaiHocPhan,
		/// <summary>
		/// SoGioThucGiangTrenLop : 
		/// </summary>
		[EnumTextValue("SoGioThucGiangTrenLop")]
		[ColumnEnum("SoGioThucGiangTrenLop", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoGioThucGiangTrenLop,
		/// <summary>
		/// SoGioChuanTinhThem : 
		/// </summary>
		[EnumTextValue("SoGioChuanTinhThem")]
		[ColumnEnum("SoGioChuanTinhThem", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoGioChuanTinhThem,
		/// <summary>
		/// MaNhomMon : 
		/// </summary>
		[EnumTextValue("MaNhomMon")]
		[ColumnEnum("MaNhomMon", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaNhomMon,
		/// <summary>
		/// TenNhomMon : 
		/// </summary>
		[EnumTextValue("TenNhomMon")]
		[ColumnEnum("TenNhomMon", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenNhomMon,
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		[EnumTextValue("HeSoHocKy")]
		[ColumnEnum("HeSoHocKy", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoHocKy
	}//End enum

} // end namespace

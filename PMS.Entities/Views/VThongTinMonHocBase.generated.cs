/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file VThongTinMonHoc.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'v_ThongTinMonHoc' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("VThongTinMonHocBase")]
	public abstract partial class VThongTinMonHocBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		private System.String		  _maMonHoc = string.Empty;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		private System.String		  _tenMonHoc = string.Empty;
		
		/// <summary>
		/// Credits : 
		/// </summary>
		private System.Int32?		  _credits = null;
		
		/// <summary>
		/// TheoryCredits : 
		/// </summary>
		private System.Decimal?		  _theoryCredits = null;
		
		/// <summary>
		/// PracticeCredits : 
		/// </summary>
		private System.Decimal?		  _practiceCredits = null;
		
		/// <summary>
		/// SelfCredits : 
		/// </summary>
		private System.Decimal?		  _selfCredits = null;
		
		/// <summary>
		/// Note : 
		/// </summary>
		private System.String		  _note = null;
		
		/// <summary>
		/// CreditInfos : 
		/// </summary>
		private System.String		  _creditInfos = null;
		
		/// <summary>
		/// LyThuyet : 
		/// </summary>
		private System.Decimal		  _lyThuyet = 0.0m;
		
		/// <summary>
		/// ThucHanh : 
		/// </summary>
		private System.Decimal		  _thucHanh = 0.0m;
		
		/// <summary>
		/// ThucTap : 
		/// </summary>
		private System.Decimal		  _thucTap = 0.0m;
		
		/// <summary>
		/// TieuLuan : 
		/// </summary>
		private System.Decimal		  _tieuLuan = 0.0m;
		
		/// <summary>
		/// DoAn : 
		/// </summary>
		private System.Decimal		  _doAn = 0.0m;
		
		/// <summary>
		/// LuanAn : 
		/// </summary>
		private System.Decimal		  _luanAn = 0.0m;
		
		/// <summary>
		/// BaiTap : 
		/// </summary>
		private System.Int32		  _baiTap = (int)0;
		
		/// <summary>
		/// BaiTapLon : 
		/// </summary>
		private System.Int32		  _baiTapLon = (int)0;
		
		/// <summary>
		/// MaLoaiPhong : 
		/// </summary>
		private System.String		  _maLoaiPhong = string.Empty;
		
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		private System.String		  _maBacDaoTao = string.Empty;
		
		/// <summary>
		/// TenBacDaoTao : 
		/// </summary>
		private System.String		  _tenBacDaoTao = null;
		
		/// <summary>
		/// MaNhomMonHoc : 
		/// </summary>
		private System.String		  _maNhomMonHoc = null;
		
		/// <summary>
		/// TenNhomMonHoc : 
		/// </summary>
		private System.String		  _tenNhomMonHoc = null;
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		private System.String		  _maDonVi = null;
		
		/// <summary>
		/// TenDonVi : 
		/// </summary>
		private System.String		  _tenDonVi = null;
		
		/// <summary>
		/// MaKhoaBoMon : 
		/// </summary>
		private System.String		  _maKhoaBoMon = null;
		
		/// <summary>
		/// TenKhoaBoMon : 
		/// </summary>
		private System.String		  _tenKhoaBoMon = null;
		
		/// <summary>
		/// ThongTinDonVi : 
		/// </summary>
		private System.String		  _thongTinDonVi = null;
		
		/// <summary>
		/// UpdateStaff : 
		/// </summary>
		private System.String		  _updateStaff = null;
		
		/// <summary>
		/// UpdateDate : 
		/// </summary>
		private System.DateTime?		  _updateDate = null;
		
		/// <summary>
		/// CreditInfo : 
		/// </summary>
		private System.String		  _creditInfo = null;
		
		/// <summary>
		/// LoaiMonHoc : 
		/// </summary>
		private System.String		  _loaiMonHoc = string.Empty;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="VThongTinMonHocBase"/> instance.
		///</summary>
		public VThongTinMonHocBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="VThongTinMonHocBase"/> instance.
		///</summary>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_credits"></param>
		///<param name="_theoryCredits"></param>
		///<param name="_practiceCredits"></param>
		///<param name="_selfCredits"></param>
		///<param name="_note"></param>
		///<param name="_creditInfos"></param>
		///<param name="_lyThuyet"></param>
		///<param name="_thucHanh"></param>
		///<param name="_thucTap"></param>
		///<param name="_tieuLuan"></param>
		///<param name="_doAn"></param>
		///<param name="_luanAn"></param>
		///<param name="_baiTap"></param>
		///<param name="_baiTapLon"></param>
		///<param name="_maLoaiPhong"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_tenBacDaoTao"></param>
		///<param name="_maNhomMonHoc"></param>
		///<param name="_tenNhomMonHoc"></param>
		///<param name="_maDonVi"></param>
		///<param name="_tenDonVi"></param>
		///<param name="_maKhoaBoMon"></param>
		///<param name="_tenKhoaBoMon"></param>
		///<param name="_thongTinDonVi"></param>
		///<param name="_updateStaff"></param>
		///<param name="_updateDate"></param>
		///<param name="_creditInfo"></param>
		///<param name="_loaiMonHoc"></param>
		public VThongTinMonHocBase(System.String _maMonHoc, System.String _tenMonHoc, System.Int32? _credits, System.Decimal? _theoryCredits, System.Decimal? _practiceCredits, System.Decimal? _selfCredits, System.String _note, System.String _creditInfos, System.Decimal _lyThuyet, System.Decimal _thucHanh, System.Decimal _thucTap, System.Decimal _tieuLuan, System.Decimal _doAn, System.Decimal _luanAn, System.Int32 _baiTap, System.Int32 _baiTapLon, System.String _maLoaiPhong, System.String _maBacDaoTao, System.String _tenBacDaoTao, System.String _maNhomMonHoc, System.String _tenNhomMonHoc, System.String _maDonVi, System.String _tenDonVi, System.String _maKhoaBoMon, System.String _tenKhoaBoMon, System.String _thongTinDonVi, System.String _updateStaff, System.DateTime? _updateDate, System.String _creditInfo, System.String _loaiMonHoc)
		{
			this._maMonHoc = _maMonHoc;
			this._tenMonHoc = _tenMonHoc;
			this._credits = _credits;
			this._theoryCredits = _theoryCredits;
			this._practiceCredits = _practiceCredits;
			this._selfCredits = _selfCredits;
			this._note = _note;
			this._creditInfos = _creditInfos;
			this._lyThuyet = _lyThuyet;
			this._thucHanh = _thucHanh;
			this._thucTap = _thucTap;
			this._tieuLuan = _tieuLuan;
			this._doAn = _doAn;
			this._luanAn = _luanAn;
			this._baiTap = _baiTap;
			this._baiTapLon = _baiTapLon;
			this._maLoaiPhong = _maLoaiPhong;
			this._maBacDaoTao = _maBacDaoTao;
			this._tenBacDaoTao = _tenBacDaoTao;
			this._maNhomMonHoc = _maNhomMonHoc;
			this._tenNhomMonHoc = _tenNhomMonHoc;
			this._maDonVi = _maDonVi;
			this._tenDonVi = _tenDonVi;
			this._maKhoaBoMon = _maKhoaBoMon;
			this._tenKhoaBoMon = _tenKhoaBoMon;
			this._thongTinDonVi = _thongTinDonVi;
			this._updateStaff = _updateStaff;
			this._updateDate = _updateDate;
			this._creditInfo = _creditInfo;
			this._loaiMonHoc = _loaiMonHoc;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="VThongTinMonHoc"/> instance.
		///</summary>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_credits"></param>
		///<param name="_theoryCredits"></param>
		///<param name="_practiceCredits"></param>
		///<param name="_selfCredits"></param>
		///<param name="_note"></param>
		///<param name="_creditInfos"></param>
		///<param name="_lyThuyet"></param>
		///<param name="_thucHanh"></param>
		///<param name="_thucTap"></param>
		///<param name="_tieuLuan"></param>
		///<param name="_doAn"></param>
		///<param name="_luanAn"></param>
		///<param name="_baiTap"></param>
		///<param name="_baiTapLon"></param>
		///<param name="_maLoaiPhong"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_tenBacDaoTao"></param>
		///<param name="_maNhomMonHoc"></param>
		///<param name="_tenNhomMonHoc"></param>
		///<param name="_maDonVi"></param>
		///<param name="_tenDonVi"></param>
		///<param name="_maKhoaBoMon"></param>
		///<param name="_tenKhoaBoMon"></param>
		///<param name="_thongTinDonVi"></param>
		///<param name="_updateStaff"></param>
		///<param name="_updateDate"></param>
		///<param name="_creditInfo"></param>
		///<param name="_loaiMonHoc"></param>
		public static VThongTinMonHoc CreateVThongTinMonHoc(System.String _maMonHoc, System.String _tenMonHoc, System.Int32? _credits, System.Decimal? _theoryCredits, System.Decimal? _practiceCredits, System.Decimal? _selfCredits, System.String _note, System.String _creditInfos, System.Decimal _lyThuyet, System.Decimal _thucHanh, System.Decimal _thucTap, System.Decimal _tieuLuan, System.Decimal _doAn, System.Decimal _luanAn, System.Int32 _baiTap, System.Int32 _baiTapLon, System.String _maLoaiPhong, System.String _maBacDaoTao, System.String _tenBacDaoTao, System.String _maNhomMonHoc, System.String _tenNhomMonHoc, System.String _maDonVi, System.String _tenDonVi, System.String _maKhoaBoMon, System.String _tenKhoaBoMon, System.String _thongTinDonVi, System.String _updateStaff, System.DateTime? _updateDate, System.String _creditInfo, System.String _loaiMonHoc)
		{
			VThongTinMonHoc newVThongTinMonHoc = new VThongTinMonHoc();
			newVThongTinMonHoc.MaMonHoc = _maMonHoc;
			newVThongTinMonHoc.TenMonHoc = _tenMonHoc;
			newVThongTinMonHoc.Credits = _credits;
			newVThongTinMonHoc.TheoryCredits = _theoryCredits;
			newVThongTinMonHoc.PracticeCredits = _practiceCredits;
			newVThongTinMonHoc.SelfCredits = _selfCredits;
			newVThongTinMonHoc.Note = _note;
			newVThongTinMonHoc.CreditInfos = _creditInfos;
			newVThongTinMonHoc.LyThuyet = _lyThuyet;
			newVThongTinMonHoc.ThucHanh = _thucHanh;
			newVThongTinMonHoc.ThucTap = _thucTap;
			newVThongTinMonHoc.TieuLuan = _tieuLuan;
			newVThongTinMonHoc.DoAn = _doAn;
			newVThongTinMonHoc.LuanAn = _luanAn;
			newVThongTinMonHoc.BaiTap = _baiTap;
			newVThongTinMonHoc.BaiTapLon = _baiTapLon;
			newVThongTinMonHoc.MaLoaiPhong = _maLoaiPhong;
			newVThongTinMonHoc.MaBacDaoTao = _maBacDaoTao;
			newVThongTinMonHoc.TenBacDaoTao = _tenBacDaoTao;
			newVThongTinMonHoc.MaNhomMonHoc = _maNhomMonHoc;
			newVThongTinMonHoc.TenNhomMonHoc = _tenNhomMonHoc;
			newVThongTinMonHoc.MaDonVi = _maDonVi;
			newVThongTinMonHoc.TenDonVi = _tenDonVi;
			newVThongTinMonHoc.MaKhoaBoMon = _maKhoaBoMon;
			newVThongTinMonHoc.TenKhoaBoMon = _tenKhoaBoMon;
			newVThongTinMonHoc.ThongTinDonVi = _thongTinDonVi;
			newVThongTinMonHoc.UpdateStaff = _updateStaff;
			newVThongTinMonHoc.UpdateDate = _updateDate;
			newVThongTinMonHoc.CreditInfo = _creditInfo;
			newVThongTinMonHoc.LoaiMonHoc = _loaiMonHoc;
			return newVThongTinMonHoc;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this._maMonHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaMonHoc does not allow null values.");
				if (_maMonHoc == value)
					return;
					
				this._maMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this._tenMonHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TenMonHoc does not allow null values.");
				if (_tenMonHoc == value)
					return;
					
				this._tenMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Credits property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsCreditsNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? Credits
		{
			get
			{
				return this._credits; 
			}
			set
			{
				if (_credits == value && Credits != null )
					return;
					
				this._credits = value;
				this._isDirty = true;
				
				OnPropertyChanged("Credits");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TheoryCredits property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTheoryCreditsNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TheoryCredits
		{
			get
			{
				return this._theoryCredits; 
			}
			set
			{
				if (_theoryCredits == value && TheoryCredits != null )
					return;
					
				this._theoryCredits = value;
				this._isDirty = true;
				
				OnPropertyChanged("TheoryCredits");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PracticeCredits property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPracticeCreditsNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? PracticeCredits
		{
			get
			{
				return this._practiceCredits; 
			}
			set
			{
				if (_practiceCredits == value && PracticeCredits != null )
					return;
					
				this._practiceCredits = value;
				this._isDirty = true;
				
				OnPropertyChanged("PracticeCredits");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SelfCredits property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSelfCreditsNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SelfCredits
		{
			get
			{
				return this._selfCredits; 
			}
			set
			{
				if (_selfCredits == value && SelfCredits != null )
					return;
					
				this._selfCredits = value;
				this._isDirty = true;
				
				OnPropertyChanged("SelfCredits");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Note property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Note
		{
			get
			{
				return this._note; 
			}
			set
			{
				if (_note == value)
					return;
					
				this._note = value;
				this._isDirty = true;
				
				OnPropertyChanged("Note");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreditInfos property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CreditInfos
		{
			get
			{
				return this._creditInfos; 
			}
			set
			{
				if (_creditInfos == value)
					return;
					
				this._creditInfos = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreditInfos");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LyThuyet property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal LyThuyet
		{
			get
			{
				return this._lyThuyet; 
			}
			set
			{
				if (_lyThuyet == value)
					return;
					
				this._lyThuyet = value;
				this._isDirty = true;
				
				OnPropertyChanged("LyThuyet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThucHanh property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal ThucHanh
		{
			get
			{
				return this._thucHanh; 
			}
			set
			{
				if (_thucHanh == value)
					return;
					
				this._thucHanh = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThucHanh");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThucTap property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal ThucTap
		{
			get
			{
				return this._thucTap; 
			}
			set
			{
				if (_thucTap == value)
					return;
					
				this._thucTap = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThucTap");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TieuLuan property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal TieuLuan
		{
			get
			{
				return this._tieuLuan; 
			}
			set
			{
				if (_tieuLuan == value)
					return;
					
				this._tieuLuan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TieuLuan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DoAn property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal DoAn
		{
			get
			{
				return this._doAn; 
			}
			set
			{
				if (_doAn == value)
					return;
					
				this._doAn = value;
				this._isDirty = true;
				
				OnPropertyChanged("DoAn");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LuanAn property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal LuanAn
		{
			get
			{
				return this._luanAn; 
			}
			set
			{
				if (_luanAn == value)
					return;
					
				this._luanAn = value;
				this._isDirty = true;
				
				OnPropertyChanged("LuanAn");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BaiTap property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 BaiTap
		{
			get
			{
				return this._baiTap; 
			}
			set
			{
				if (_baiTap == value)
					return;
					
				this._baiTap = value;
				this._isDirty = true;
				
				OnPropertyChanged("BaiTap");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BaiTapLon property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 BaiTapLon
		{
			get
			{
				return this._baiTapLon; 
			}
			set
			{
				if (_baiTapLon == value)
					return;
					
				this._baiTapLon = value;
				this._isDirty = true;
				
				OnPropertyChanged("BaiTapLon");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiPhong property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLoaiPhong
		{
			get
			{
				return this._maLoaiPhong; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaLoaiPhong does not allow null values.");
				if (_maLoaiPhong == value)
					return;
					
				this._maLoaiPhong = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiPhong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaBacDaoTao
		{
			get
			{
				return this._maBacDaoTao; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaBacDaoTao does not allow null values.");
				if (_maBacDaoTao == value)
					return;
					
				this._maBacDaoTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenBacDaoTao
		{
			get
			{
				return this._tenBacDaoTao; 
			}
			set
			{
				if (_tenBacDaoTao == value)
					return;
					
				this._tenBacDaoTao = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaNhomMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaNhomMonHoc
		{
			get
			{
				return this._maNhomMonHoc; 
			}
			set
			{
				if (_maNhomMonHoc == value)
					return;
					
				this._maNhomMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaNhomMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenNhomMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenNhomMonHoc
		{
			get
			{
				return this._tenNhomMonHoc; 
			}
			set
			{
				if (_tenNhomMonHoc == value)
					return;
					
				this._tenNhomMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenNhomMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this._maDonVi; 
			}
			set
			{
				if (_maDonVi == value)
					return;
					
				this._maDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenDonVi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenDonVi
		{
			get
			{
				return this._tenDonVi; 
			}
			set
			{
				if (_tenDonVi == value)
					return;
					
				this._tenDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaKhoaBoMon property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaKhoaBoMon
		{
			get
			{
				return this._maKhoaBoMon; 
			}
			set
			{
				if (_maKhoaBoMon == value)
					return;
					
				this._maKhoaBoMon = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaKhoaBoMon");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenKhoaBoMon property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenKhoaBoMon
		{
			get
			{
				return this._tenKhoaBoMon; 
			}
			set
			{
				if (_tenKhoaBoMon == value)
					return;
					
				this._tenKhoaBoMon = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenKhoaBoMon");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThongTinDonVi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ThongTinDonVi
		{
			get
			{
				return this._thongTinDonVi; 
			}
			set
			{
				if (_thongTinDonVi == value)
					return;
					
				this._thongTinDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThongTinDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UpdateStaff property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String UpdateStaff
		{
			get
			{
				return this._updateStaff; 
			}
			set
			{
				if (_updateStaff == value)
					return;
					
				this._updateStaff = value;
				this._isDirty = true;
				
				OnPropertyChanged("UpdateStaff");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UpdateDate property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsUpdateDateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? UpdateDate
		{
			get
			{
				return this._updateDate; 
			}
			set
			{
				if (_updateDate == value && UpdateDate != null )
					return;
					
				this._updateDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("UpdateDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreditInfo property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CreditInfo
		{
			get
			{
				return this._creditInfo; 
			}
			set
			{
				if (_creditInfo == value)
					return;
					
				this._creditInfo = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreditInfo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LoaiMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LoaiMonHoc
		{
			get
			{
				return this._loaiMonHoc; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "LoaiMonHoc does not allow null values.");
				if (_loaiMonHoc == value)
					return;
					
				this._loaiMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("LoaiMonHoc");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "v_ThongTinMonHoc"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed VThongTinMonHocBase Entity 
		///</summary>
		public virtual VThongTinMonHocBase Copy()
		{
			//shallow copy entity
			VThongTinMonHoc copy = new VThongTinMonHoc();
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.Credits = this.Credits;
				copy.TheoryCredits = this.TheoryCredits;
				copy.PracticeCredits = this.PracticeCredits;
				copy.SelfCredits = this.SelfCredits;
				copy.Note = this.Note;
				copy.CreditInfos = this.CreditInfos;
				copy.LyThuyet = this.LyThuyet;
				copy.ThucHanh = this.ThucHanh;
				copy.ThucTap = this.ThucTap;
				copy.TieuLuan = this.TieuLuan;
				copy.DoAn = this.DoAn;
				copy.LuanAn = this.LuanAn;
				copy.BaiTap = this.BaiTap;
				copy.BaiTapLon = this.BaiTapLon;
				copy.MaLoaiPhong = this.MaLoaiPhong;
				copy.MaBacDaoTao = this.MaBacDaoTao;
				copy.TenBacDaoTao = this.TenBacDaoTao;
				copy.MaNhomMonHoc = this.MaNhomMonHoc;
				copy.TenNhomMonHoc = this.TenNhomMonHoc;
				copy.MaDonVi = this.MaDonVi;
				copy.TenDonVi = this.TenDonVi;
				copy.MaKhoaBoMon = this.MaKhoaBoMon;
				copy.TenKhoaBoMon = this.TenKhoaBoMon;
				copy.ThongTinDonVi = this.ThongTinDonVi;
				copy.UpdateStaff = this.UpdateStaff;
				copy.UpdateDate = this.UpdateDate;
				copy.CreditInfo = this.CreditInfo;
				copy.LoaiMonHoc = this.LoaiMonHoc;
			copy.AcceptChanges();
			return (VThongTinMonHoc)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="VThongTinMonHocBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(VThongTinMonHocBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="VThongTinMonHocBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="VThongTinMonHocBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="VThongTinMonHocBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(VThongTinMonHocBase Object1, VThongTinMonHocBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.MaMonHoc != Object2.MaMonHoc)
				equal = false;
			if (Object1.TenMonHoc != Object2.TenMonHoc)
				equal = false;
			if (Object1.Credits != null && Object2.Credits != null )
			{
				if (Object1.Credits != Object2.Credits)
					equal = false;
			}
			else if (Object1.Credits == null ^ Object1.Credits == null )
			{
				equal = false;
			}
			if (Object1.TheoryCredits != null && Object2.TheoryCredits != null )
			{
				if (Object1.TheoryCredits != Object2.TheoryCredits)
					equal = false;
			}
			else if (Object1.TheoryCredits == null ^ Object1.TheoryCredits == null )
			{
				equal = false;
			}
			if (Object1.PracticeCredits != null && Object2.PracticeCredits != null )
			{
				if (Object1.PracticeCredits != Object2.PracticeCredits)
					equal = false;
			}
			else if (Object1.PracticeCredits == null ^ Object1.PracticeCredits == null )
			{
				equal = false;
			}
			if (Object1.SelfCredits != null && Object2.SelfCredits != null )
			{
				if (Object1.SelfCredits != Object2.SelfCredits)
					equal = false;
			}
			else if (Object1.SelfCredits == null ^ Object1.SelfCredits == null )
			{
				equal = false;
			}
			if (Object1.Note != null && Object2.Note != null )
			{
				if (Object1.Note != Object2.Note)
					equal = false;
			}
			else if (Object1.Note == null ^ Object1.Note == null )
			{
				equal = false;
			}
			if (Object1.CreditInfos != null && Object2.CreditInfos != null )
			{
				if (Object1.CreditInfos != Object2.CreditInfos)
					equal = false;
			}
			else if (Object1.CreditInfos == null ^ Object1.CreditInfos == null )
			{
				equal = false;
			}
			if (Object1.LyThuyet != Object2.LyThuyet)
				equal = false;
			if (Object1.ThucHanh != Object2.ThucHanh)
				equal = false;
			if (Object1.ThucTap != Object2.ThucTap)
				equal = false;
			if (Object1.TieuLuan != Object2.TieuLuan)
				equal = false;
			if (Object1.DoAn != Object2.DoAn)
				equal = false;
			if (Object1.LuanAn != Object2.LuanAn)
				equal = false;
			if (Object1.BaiTap != Object2.BaiTap)
				equal = false;
			if (Object1.BaiTapLon != Object2.BaiTapLon)
				equal = false;
			if (Object1.MaLoaiPhong != Object2.MaLoaiPhong)
				equal = false;
			if (Object1.MaBacDaoTao != Object2.MaBacDaoTao)
				equal = false;
			if (Object1.TenBacDaoTao != null && Object2.TenBacDaoTao != null )
			{
				if (Object1.TenBacDaoTao != Object2.TenBacDaoTao)
					equal = false;
			}
			else if (Object1.TenBacDaoTao == null ^ Object1.TenBacDaoTao == null )
			{
				equal = false;
			}
			if (Object1.MaNhomMonHoc != null && Object2.MaNhomMonHoc != null )
			{
				if (Object1.MaNhomMonHoc != Object2.MaNhomMonHoc)
					equal = false;
			}
			else if (Object1.MaNhomMonHoc == null ^ Object1.MaNhomMonHoc == null )
			{
				equal = false;
			}
			if (Object1.TenNhomMonHoc != null && Object2.TenNhomMonHoc != null )
			{
				if (Object1.TenNhomMonHoc != Object2.TenNhomMonHoc)
					equal = false;
			}
			else if (Object1.TenNhomMonHoc == null ^ Object1.TenNhomMonHoc == null )
			{
				equal = false;
			}
			if (Object1.MaDonVi != null && Object2.MaDonVi != null )
			{
				if (Object1.MaDonVi != Object2.MaDonVi)
					equal = false;
			}
			else if (Object1.MaDonVi == null ^ Object1.MaDonVi == null )
			{
				equal = false;
			}
			if (Object1.TenDonVi != null && Object2.TenDonVi != null )
			{
				if (Object1.TenDonVi != Object2.TenDonVi)
					equal = false;
			}
			else if (Object1.TenDonVi == null ^ Object1.TenDonVi == null )
			{
				equal = false;
			}
			if (Object1.MaKhoaBoMon != null && Object2.MaKhoaBoMon != null )
			{
				if (Object1.MaKhoaBoMon != Object2.MaKhoaBoMon)
					equal = false;
			}
			else if (Object1.MaKhoaBoMon == null ^ Object1.MaKhoaBoMon == null )
			{
				equal = false;
			}
			if (Object1.TenKhoaBoMon != null && Object2.TenKhoaBoMon != null )
			{
				if (Object1.TenKhoaBoMon != Object2.TenKhoaBoMon)
					equal = false;
			}
			else if (Object1.TenKhoaBoMon == null ^ Object1.TenKhoaBoMon == null )
			{
				equal = false;
			}
			if (Object1.ThongTinDonVi != null && Object2.ThongTinDonVi != null )
			{
				if (Object1.ThongTinDonVi != Object2.ThongTinDonVi)
					equal = false;
			}
			else if (Object1.ThongTinDonVi == null ^ Object1.ThongTinDonVi == null )
			{
				equal = false;
			}
			if (Object1.UpdateStaff != null && Object2.UpdateStaff != null )
			{
				if (Object1.UpdateStaff != Object2.UpdateStaff)
					equal = false;
			}
			else if (Object1.UpdateStaff == null ^ Object1.UpdateStaff == null )
			{
				equal = false;
			}
			if (Object1.UpdateDate != null && Object2.UpdateDate != null )
			{
				if (Object1.UpdateDate != Object2.UpdateDate)
					equal = false;
			}
			else if (Object1.UpdateDate == null ^ Object1.UpdateDate == null )
			{
				equal = false;
			}
			if (Object1.CreditInfo != null && Object2.CreditInfo != null )
			{
				if (Object1.CreditInfo != Object2.CreditInfo)
					equal = false;
			}
			else if (Object1.CreditInfo == null ^ Object1.CreditInfo == null )
			{
				equal = false;
			}
			if (Object1.LoaiMonHoc != Object2.LoaiMonHoc)
				equal = false;
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(VThongTinMonHoc entity, string propertyName)
		{
			switch (propertyName)
			{
				case "MaMonHoc":
					return entity.MaMonHoc;
				case "TenMonHoc":
					return entity.TenMonHoc;
				case "Credits":
					return entity.Credits;
				case "TheoryCredits":
					return entity.TheoryCredits;
				case "PracticeCredits":
					return entity.PracticeCredits;
				case "SelfCredits":
					return entity.SelfCredits;
				case "Note":
					return entity.Note;
				case "CreditInfos":
					return entity.CreditInfos;
				case "LyThuyet":
					return entity.LyThuyet;
				case "ThucHanh":
					return entity.ThucHanh;
				case "ThucTap":
					return entity.ThucTap;
				case "TieuLuan":
					return entity.TieuLuan;
				case "DoAn":
					return entity.DoAn;
				case "LuanAn":
					return entity.LuanAn;
				case "BaiTap":
					return entity.BaiTap;
				case "BaiTapLon":
					return entity.BaiTapLon;
				case "MaLoaiPhong":
					return entity.MaLoaiPhong;
				case "MaBacDaoTao":
					return entity.MaBacDaoTao;
				case "TenBacDaoTao":
					return entity.TenBacDaoTao;
				case "MaNhomMonHoc":
					return entity.MaNhomMonHoc;
				case "TenNhomMonHoc":
					return entity.TenNhomMonHoc;
				case "MaDonVi":
					return entity.MaDonVi;
				case "TenDonVi":
					return entity.TenDonVi;
				case "MaKhoaBoMon":
					return entity.MaKhoaBoMon;
				case "TenKhoaBoMon":
					return entity.TenKhoaBoMon;
				case "ThongTinDonVi":
					return entity.ThongTinDonVi;
				case "UpdateStaff":
					return entity.UpdateStaff;
				case "UpdateDate":
					return entity.UpdateDate;
				case "CreditInfo":
					return entity.CreditInfo;
				case "LoaiMonHoc":
					return entity.LoaiMonHoc;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as VThongTinMonHoc, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{31}{30}- MaMonHoc: {0}{30}- TenMonHoc: {1}{30}- Credits: {2}{30}- TheoryCredits: {3}{30}- PracticeCredits: {4}{30}- SelfCredits: {5}{30}- Note: {6}{30}- CreditInfos: {7}{30}- LyThuyet: {8}{30}- ThucHanh: {9}{30}- ThucTap: {10}{30}- TieuLuan: {11}{30}- DoAn: {12}{30}- LuanAn: {13}{30}- BaiTap: {14}{30}- BaiTapLon: {15}{30}- MaLoaiPhong: {16}{30}- MaBacDaoTao: {17}{30}- TenBacDaoTao: {18}{30}- MaNhomMonHoc: {19}{30}- TenNhomMonHoc: {20}{30}- MaDonVi: {21}{30}- TenDonVi: {22}{30}- MaKhoaBoMon: {23}{30}- TenKhoaBoMon: {24}{30}- ThongTinDonVi: {25}{30}- UpdateStaff: {26}{30}- UpdateDate: {27}{30}- CreditInfo: {28}{30}- LoaiMonHoc: {29}{30}", 
				this.MaMonHoc,
				this.TenMonHoc,
				(this.Credits == null) ? string.Empty : this.Credits.ToString(),
			     
				(this.TheoryCredits == null) ? string.Empty : this.TheoryCredits.ToString(),
			     
				(this.PracticeCredits == null) ? string.Empty : this.PracticeCredits.ToString(),
			     
				(this.SelfCredits == null) ? string.Empty : this.SelfCredits.ToString(),
			     
				(this.Note == null) ? string.Empty : this.Note.ToString(),
			     
				(this.CreditInfos == null) ? string.Empty : this.CreditInfos.ToString(),
			     
				this.LyThuyet,
				this.ThucHanh,
				this.ThucTap,
				this.TieuLuan,
				this.DoAn,
				this.LuanAn,
				this.BaiTap,
				this.BaiTapLon,
				this.MaLoaiPhong,
				this.MaBacDaoTao,
				(this.TenBacDaoTao == null) ? string.Empty : this.TenBacDaoTao.ToString(),
			     
				(this.MaNhomMonHoc == null) ? string.Empty : this.MaNhomMonHoc.ToString(),
			     
				(this.TenNhomMonHoc == null) ? string.Empty : this.TenNhomMonHoc.ToString(),
			     
				(this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString(),
			     
				(this.TenDonVi == null) ? string.Empty : this.TenDonVi.ToString(),
			     
				(this.MaKhoaBoMon == null) ? string.Empty : this.MaKhoaBoMon.ToString(),
			     
				(this.TenKhoaBoMon == null) ? string.Empty : this.TenKhoaBoMon.ToString(),
			     
				(this.ThongTinDonVi == null) ? string.Empty : this.ThongTinDonVi.ToString(),
			     
				(this.UpdateStaff == null) ? string.Empty : this.UpdateStaff.ToString(),
			     
				(this.UpdateDate == null) ? string.Empty : this.UpdateDate.ToString(),
			     
				(this.CreditInfo == null) ? string.Empty : this.CreditInfo.ToString(),
			     
				this.LoaiMonHoc,
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the VThongTinMonHoc columns.
	/// </summary>
	[Serializable]
	public enum VThongTinMonHocColumn
	{
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("MaMonHoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaMonHoc,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("TenMonHoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, false, 255)]
		TenMonHoc,
		/// <summary>
		/// Credits : 
		/// </summary>
		[EnumTextValue("Credits")]
		[ColumnEnum("Credits", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Credits,
		/// <summary>
		/// TheoryCredits : 
		/// </summary>
		[EnumTextValue("TheoryCredits")]
		[ColumnEnum("TheoryCredits", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TheoryCredits,
		/// <summary>
		/// PracticeCredits : 
		/// </summary>
		[EnumTextValue("PracticeCredits")]
		[ColumnEnum("PracticeCredits", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PracticeCredits,
		/// <summary>
		/// SelfCredits : 
		/// </summary>
		[EnumTextValue("SelfCredits")]
		[ColumnEnum("SelfCredits", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SelfCredits,
		/// <summary>
		/// Note : 
		/// </summary>
		[EnumTextValue("Note")]
		[ColumnEnum("Note", typeof(System.String), System.Data.DbType.String, false, false, true, 2000)]
		Note,
		/// <summary>
		/// CreditInfos : 
		/// </summary>
		[EnumTextValue("CreditInfos")]
		[ColumnEnum("CreditInfos", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 77)]
		CreditInfos,
		/// <summary>
		/// LyThuyet : 
		/// </summary>
		[EnumTextValue("LyThuyet")]
		[ColumnEnum("LyThuyet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		LyThuyet,
		/// <summary>
		/// ThucHanh : 
		/// </summary>
		[EnumTextValue("ThucHanh")]
		[ColumnEnum("ThucHanh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		ThucHanh,
		/// <summary>
		/// ThucTap : 
		/// </summary>
		[EnumTextValue("ThucTap")]
		[ColumnEnum("ThucTap", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		ThucTap,
		/// <summary>
		/// TieuLuan : 
		/// </summary>
		[EnumTextValue("TieuLuan")]
		[ColumnEnum("TieuLuan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		TieuLuan,
		/// <summary>
		/// DoAn : 
		/// </summary>
		[EnumTextValue("DoAn")]
		[ColumnEnum("DoAn", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		DoAn,
		/// <summary>
		/// LuanAn : 
		/// </summary>
		[EnumTextValue("LuanAn")]
		[ColumnEnum("LuanAn", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		LuanAn,
		/// <summary>
		/// BaiTap : 
		/// </summary>
		[EnumTextValue("BaiTap")]
		[ColumnEnum("BaiTap", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		BaiTap,
		/// <summary>
		/// BaiTapLon : 
		/// </summary>
		[EnumTextValue("BaiTapLon")]
		[ColumnEnum("BaiTapLon", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		BaiTapLon,
		/// <summary>
		/// MaLoaiPhong : 
		/// </summary>
		[EnumTextValue("MaLoaiPhong")]
		[ColumnEnum("MaLoaiPhong", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaLoaiPhong,
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		[EnumTextValue("MaBacDaoTao")]
		[ColumnEnum("MaBacDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaBacDaoTao,
		/// <summary>
		/// TenBacDaoTao : 
		/// </summary>
		[EnumTextValue("TenBacDaoTao")]
		[ColumnEnum("TenBacDaoTao", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TenBacDaoTao,
		/// <summary>
		/// MaNhomMonHoc : 
		/// </summary>
		[EnumTextValue("MaNhomMonHoc")]
		[ColumnEnum("MaNhomMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaNhomMonHoc,
		/// <summary>
		/// TenNhomMonHoc : 
		/// </summary>
		[EnumTextValue("TenNhomMonHoc")]
		[ColumnEnum("TenNhomMonHoc", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		TenNhomMonHoc,
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("MaDonVi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDonVi,
		/// <summary>
		/// TenDonVi : 
		/// </summary>
		[EnumTextValue("TenDonVi")]
		[ColumnEnum("TenDonVi", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TenDonVi,
		/// <summary>
		/// MaKhoaBoMon : 
		/// </summary>
		[EnumTextValue("MaKhoaBoMon")]
		[ColumnEnum("MaKhoaBoMon", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaKhoaBoMon,
		/// <summary>
		/// TenKhoaBoMon : 
		/// </summary>
		[EnumTextValue("TenKhoaBoMon")]
		[ColumnEnum("TenKhoaBoMon", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TenKhoaBoMon,
		/// <summary>
		/// ThongTinDonVi : 
		/// </summary>
		[EnumTextValue("ThongTinDonVi")]
		[ColumnEnum("ThongTinDonVi", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		ThongTinDonVi,
		/// <summary>
		/// UpdateStaff : 
		/// </summary>
		[EnumTextValue("UpdateStaff")]
		[ColumnEnum("UpdateStaff", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		UpdateStaff,
		/// <summary>
		/// UpdateDate : 
		/// </summary>
		[EnumTextValue("UpdateDate")]
		[ColumnEnum("UpdateDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		UpdateDate,
		/// <summary>
		/// CreditInfo : 
		/// </summary>
		[EnumTextValue("CreditInfo")]
		[ColumnEnum("CreditInfo", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 101)]
		CreditInfo,
		/// <summary>
		/// LoaiMonHoc : 
		/// </summary>
		[EnumTextValue("LoaiMonHoc")]
		[ColumnEnum("LoaiMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 16)]
		LoaiMonHoc
	}//End enum

} // end namespace

/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewKcqLietKeKhoiLuongGiangDayChiTiet2.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_KcqLietKeKhoiLuongGiangDayChiTiet2' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base")]
	public abstract partial class ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		private System.String		  _maQuanLy = null;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		private System.String		  _ho = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		private System.String		  _ten = null;
		
		/// <summary>
		/// HoTen : 
		/// </summary>
		private System.String		  _hoTen = null;
		
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		private System.Int32?		  _maHocHam = null;
		
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		private System.Int32?		  _maHocVi = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		private System.Int32?		  _maLoaiGiangVien = null;
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		private System.String		  _maDonVi = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		private System.String		  _namHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		private System.String		  _hocKy = null;
		
		/// <summary>
		/// Loai : 
		/// </summary>
		private System.String		  _loai = null;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		private System.String		  _maMonHoc = null;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		private System.String		  _tenMonHoc = null;
		
		/// <summary>
		/// Nhom : 
		/// </summary>
		private System.String		  _nhom = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		private System.String		  _maLop = null;
		
		/// <summary>
		/// SiSo : 
		/// </summary>
		private System.Int32?		  _siSo = null;
		
		/// <summary>
		/// SoTiet : 
		/// </summary>
		private System.Decimal?		  _soTiet = null;
		
		/// <summary>
		/// TietChuNhat : 
		/// </summary>
		private System.Int32?		  _tietChuNhat = null;
		
		/// <summary>
		/// LopClc : 
		/// </summary>
		private System.Boolean?		  _lopClc = null;
		
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		private System.Decimal?		  _heSoLopDong = null;
		
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		private System.Decimal?		  _heSoHocKy = null;
		
		/// <summary>
		/// DonGia : 
		/// </summary>
		private System.Decimal?		  _donGia = null;
		
		/// <summary>
		/// TongThanhTien : 
		/// </summary>
		private System.Decimal?		  _tongThanhTien = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		private System.Decimal?		  _tietQuyDoi = null;
		
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		private System.String		  _phanLoai = null;
		
		/// <summary>
		/// SoGioThucGiangTrenLop : 
		/// </summary>
		private System.Decimal?		  _soGioThucGiangTrenLop = null;
		
		/// <summary>
		/// SoGioChuanTinhThem : 
		/// </summary>
		private System.Decimal?		  _soGioChuanTinhThem = null;
		
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		private System.String		  _maDiaDiem = null;
		
		/// <summary>
		/// TenDiaDiem : 
		/// </summary>
		private System.String		  _tenDiaDiem = null;
		
		/// <summary>
		/// DonGiaDiaDiem : 
		/// </summary>
		private System.Decimal?		  _donGiaDiaDiem = null;
		
		/// <summary>
		/// TienXeDiaDiem : 
		/// </summary>
		private System.Decimal?		  _tienXeDiaDiem = null;
		
		/// <summary>
		/// HeSoDiaDiem : 
		/// </summary>
		private System.Decimal?		  _heSoDiaDiem = null;
		
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		private System.Decimal?		  _soTinChi = null;
		
		/// <summary>
		/// TenBoMon : 
		/// </summary>
		private System.String		  _tenBoMon = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base"/> instance.
		///</summary>
		public ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base"/> instance.
		///</summary>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maDonVi"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_loai"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_nhom"></param>
		///<param name="_maLop"></param>
		///<param name="_siSo"></param>
		///<param name="_soTiet"></param>
		///<param name="_tietChuNhat"></param>
		///<param name="_lopClc"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoHocKy"></param>
		///<param name="_donGia"></param>
		///<param name="_tongThanhTien"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_phanLoai"></param>
		///<param name="_soGioThucGiangTrenLop"></param>
		///<param name="_soGioChuanTinhThem"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_tenDiaDiem"></param>
		///<param name="_donGiaDiaDiem"></param>
		///<param name="_tienXeDiaDiem"></param>
		///<param name="_heSoDiaDiem"></param>
		///<param name="_soTinChi"></param>
		///<param name="_tenBoMon"></param>
		public ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base(System.String _maQuanLy, System.String _ho, System.String _ten, System.String _hoTen, System.Int32? _maHocHam, System.Int32? _maHocVi, System.Int32? _maLoaiGiangVien, System.String _maDonVi, System.String _namHoc, System.String _hocKy, System.String _loai, System.String _maMonHoc, System.String _tenMonHoc, System.String _nhom, System.String _maLop, System.Int32? _siSo, System.Decimal? _soTiet, System.Int32? _tietChuNhat, System.Boolean? _lopClc, System.Decimal? _heSoLopDong, System.Decimal? _heSoHocKy, System.Decimal? _donGia, System.Decimal? _tongThanhTien, System.Decimal? _tietQuyDoi, System.String _phanLoai, System.Decimal? _soGioThucGiangTrenLop, System.Decimal? _soGioChuanTinhThem, System.String _maDiaDiem, System.String _tenDiaDiem, System.Decimal? _donGiaDiaDiem, System.Decimal? _tienXeDiaDiem, System.Decimal? _heSoDiaDiem, System.Decimal? _soTinChi, System.String _tenBoMon)
		{
			this._maQuanLy = _maQuanLy;
			this._ho = _ho;
			this._ten = _ten;
			this._hoTen = _hoTen;
			this._maHocHam = _maHocHam;
			this._maHocVi = _maHocVi;
			this._maLoaiGiangVien = _maLoaiGiangVien;
			this._maDonVi = _maDonVi;
			this._namHoc = _namHoc;
			this._hocKy = _hocKy;
			this._loai = _loai;
			this._maMonHoc = _maMonHoc;
			this._tenMonHoc = _tenMonHoc;
			this._nhom = _nhom;
			this._maLop = _maLop;
			this._siSo = _siSo;
			this._soTiet = _soTiet;
			this._tietChuNhat = _tietChuNhat;
			this._lopClc = _lopClc;
			this._heSoLopDong = _heSoLopDong;
			this._heSoHocKy = _heSoHocKy;
			this._donGia = _donGia;
			this._tongThanhTien = _tongThanhTien;
			this._tietQuyDoi = _tietQuyDoi;
			this._phanLoai = _phanLoai;
			this._soGioThucGiangTrenLop = _soGioThucGiangTrenLop;
			this._soGioChuanTinhThem = _soGioChuanTinhThem;
			this._maDiaDiem = _maDiaDiem;
			this._tenDiaDiem = _tenDiaDiem;
			this._donGiaDiaDiem = _donGiaDiaDiem;
			this._tienXeDiaDiem = _tienXeDiaDiem;
			this._heSoDiaDiem = _heSoDiaDiem;
			this._soTinChi = _soTinChi;
			this._tenBoMon = _tenBoMon;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewKcqLietKeKhoiLuongGiangDayChiTiet2"/> instance.
		///</summary>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maDonVi"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_loai"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_nhom"></param>
		///<param name="_maLop"></param>
		///<param name="_siSo"></param>
		///<param name="_soTiet"></param>
		///<param name="_tietChuNhat"></param>
		///<param name="_lopClc"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoHocKy"></param>
		///<param name="_donGia"></param>
		///<param name="_tongThanhTien"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_phanLoai"></param>
		///<param name="_soGioThucGiangTrenLop"></param>
		///<param name="_soGioChuanTinhThem"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_tenDiaDiem"></param>
		///<param name="_donGiaDiaDiem"></param>
		///<param name="_tienXeDiaDiem"></param>
		///<param name="_heSoDiaDiem"></param>
		///<param name="_soTinChi"></param>
		///<param name="_tenBoMon"></param>
		public static ViewKcqLietKeKhoiLuongGiangDayChiTiet2 CreateViewKcqLietKeKhoiLuongGiangDayChiTiet2(System.String _maQuanLy, System.String _ho, System.String _ten, System.String _hoTen, System.Int32? _maHocHam, System.Int32? _maHocVi, System.Int32? _maLoaiGiangVien, System.String _maDonVi, System.String _namHoc, System.String _hocKy, System.String _loai, System.String _maMonHoc, System.String _tenMonHoc, System.String _nhom, System.String _maLop, System.Int32? _siSo, System.Decimal? _soTiet, System.Int32? _tietChuNhat, System.Boolean? _lopClc, System.Decimal? _heSoLopDong, System.Decimal? _heSoHocKy, System.Decimal? _donGia, System.Decimal? _tongThanhTien, System.Decimal? _tietQuyDoi, System.String _phanLoai, System.Decimal? _soGioThucGiangTrenLop, System.Decimal? _soGioChuanTinhThem, System.String _maDiaDiem, System.String _tenDiaDiem, System.Decimal? _donGiaDiaDiem, System.Decimal? _tienXeDiaDiem, System.Decimal? _heSoDiaDiem, System.Decimal? _soTinChi, System.String _tenBoMon)
		{
			ViewKcqLietKeKhoiLuongGiangDayChiTiet2 newViewKcqLietKeKhoiLuongGiangDayChiTiet2 = new ViewKcqLietKeKhoiLuongGiangDayChiTiet2();
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.MaQuanLy = _maQuanLy;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.Ho = _ho;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.Ten = _ten;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.HoTen = _hoTen;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.MaHocHam = _maHocHam;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.MaHocVi = _maHocVi;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.MaLoaiGiangVien = _maLoaiGiangVien;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.MaDonVi = _maDonVi;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.NamHoc = _namHoc;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.HocKy = _hocKy;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.Loai = _loai;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.MaMonHoc = _maMonHoc;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.TenMonHoc = _tenMonHoc;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.Nhom = _nhom;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.MaLop = _maLop;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.SiSo = _siSo;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.SoTiet = _soTiet;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.TietChuNhat = _tietChuNhat;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.LopClc = _lopClc;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.HeSoLopDong = _heSoLopDong;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.HeSoHocKy = _heSoHocKy;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.DonGia = _donGia;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.TongThanhTien = _tongThanhTien;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.TietQuyDoi = _tietQuyDoi;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.PhanLoai = _phanLoai;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.SoGioThucGiangTrenLop = _soGioThucGiangTrenLop;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.SoGioChuanTinhThem = _soGioChuanTinhThem;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.MaDiaDiem = _maDiaDiem;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.TenDiaDiem = _tenDiaDiem;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.DonGiaDiaDiem = _donGiaDiaDiem;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.TienXeDiaDiem = _tienXeDiaDiem;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.HeSoDiaDiem = _heSoDiaDiem;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.SoTinChi = _soTinChi;
			newViewKcqLietKeKhoiLuongGiangDayChiTiet2.TenBoMon = _tenBoMon;
			return newViewKcqLietKeKhoiLuongGiangDayChiTiet2;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the MaQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaQuanLy
		{
			get
			{
				return this._maQuanLy; 
			}
			set
			{
				if (_maQuanLy == value)
					return;
					
				this._maQuanLy = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ho
		{
			get
			{
				return this._ho; 
			}
			set
			{
				if (_ho == value)
					return;
					
				this._ho = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ten
		{
			get
			{
				return this._ten; 
			}
			set
			{
				if (_ten == value)
					return;
					
				this._ten = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTen
		{
			get
			{
				return this._hoTen; 
			}
			set
			{
				if (_hoTen == value)
					return;
					
				this._hoTen = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTen");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHocHam property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaHocHamNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaHocHam
		{
			get
			{
				return this._maHocHam; 
			}
			set
			{
				if (_maHocHam == value && MaHocHam != null )
					return;
					
				this._maHocHam = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHocVi property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaHocViNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaHocVi
		{
			get
			{
				return this._maHocVi; 
			}
			set
			{
				if (_maHocVi == value && MaHocVi != null )
					return;
					
				this._maHocVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaLoaiGiangVienNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this._maLoaiGiangVien; 
			}
			set
			{
				if (_maLoaiGiangVien == value && MaLoaiGiangVien != null )
					return;
					
				this._maLoaiGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this._maDonVi; 
			}
			set
			{
				if (_maDonVi == value)
					return;
					
				this._maDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NamHoc
		{
			get
			{
				return this._namHoc; 
			}
			set
			{
				if (_namHoc == value)
					return;
					
				this._namHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HocKy
		{
			get
			{
				return this._hocKy; 
			}
			set
			{
				if (_hocKy == value)
					return;
					
				this._hocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Loai property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Loai
		{
			get
			{
				return this._loai; 
			}
			set
			{
				if (_loai == value)
					return;
					
				this._loai = value;
				this._isDirty = true;
				
				OnPropertyChanged("Loai");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this._maMonHoc; 
			}
			set
			{
				if (_maMonHoc == value)
					return;
					
				this._maMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this._tenMonHoc; 
			}
			set
			{
				if (_tenMonHoc == value)
					return;
					
				this._tenMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Nhom property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Nhom
		{
			get
			{
				return this._nhom; 
			}
			set
			{
				if (_nhom == value)
					return;
					
				this._nhom = value;
				this._isDirty = true;
				
				OnPropertyChanged("Nhom");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLop
		{
			get
			{
				return this._maLop; 
			}
			set
			{
				if (_maLop == value)
					return;
					
				this._maLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SiSo property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSiSoNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SiSo
		{
			get
			{
				return this._siSo; 
			}
			set
			{
				if (_siSo == value && SiSo != null )
					return;
					
				this._siSo = value;
				this._isDirty = true;
				
				OnPropertyChanged("SiSo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTiet property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoTietNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoTiet
		{
			get
			{
				return this._soTiet; 
			}
			set
			{
				if (_soTiet == value && SoTiet != null )
					return;
					
				this._soTiet = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTiet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietChuNhat property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTietChuNhatNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? TietChuNhat
		{
			get
			{
				return this._tietChuNhat; 
			}
			set
			{
				if (_tietChuNhat == value && TietChuNhat != null )
					return;
					
				this._tietChuNhat = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietChuNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LopClc property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsLopClcNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? LopClc
		{
			get
			{
				return this._lopClc; 
			}
			set
			{
				if (_lopClc == value && LopClc != null )
					return;
					
				this._lopClc = value;
				this._isDirty = true;
				
				OnPropertyChanged("LopClc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoLopDong property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoLopDongNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoLopDong
		{
			get
			{
				return this._heSoLopDong; 
			}
			set
			{
				if (_heSoLopDong == value && HeSoLopDong != null )
					return;
					
				this._heSoLopDong = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoLopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoHocKy property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoHocKyNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoHocKy
		{
			get
			{
				return this._heSoHocKy; 
			}
			set
			{
				if (_heSoHocKy == value && HeSoHocKy != null )
					return;
					
				this._heSoHocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoHocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DonGia property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsDonGiaNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? DonGia
		{
			get
			{
				return this._donGia; 
			}
			set
			{
				if (_donGia == value && DonGia != null )
					return;
					
				this._donGia = value;
				this._isDirty = true;
				
				OnPropertyChanged("DonGia");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TongThanhTien property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTongThanhTienNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TongThanhTien
		{
			get
			{
				return this._tongThanhTien; 
			}
			set
			{
				if (_tongThanhTien == value && TongThanhTien != null )
					return;
					
				this._tongThanhTien = value;
				this._isDirty = true;
				
				OnPropertyChanged("TongThanhTien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietQuyDoiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this._tietQuyDoi; 
			}
			set
			{
				if (_tietQuyDoi == value && TietQuyDoi != null )
					return;
					
				this._tietQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PhanLoai property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PhanLoai
		{
			get
			{
				return this._phanLoai; 
			}
			set
			{
				if (_phanLoai == value)
					return;
					
				this._phanLoai = value;
				this._isDirty = true;
				
				OnPropertyChanged("PhanLoai");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoGioThucGiangTrenLop property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoGioThucGiangTrenLopNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoGioThucGiangTrenLop
		{
			get
			{
				return this._soGioThucGiangTrenLop; 
			}
			set
			{
				if (_soGioThucGiangTrenLop == value && SoGioThucGiangTrenLop != null )
					return;
					
				this._soGioThucGiangTrenLop = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoGioThucGiangTrenLop");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoGioChuanTinhThem property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoGioChuanTinhThemNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoGioChuanTinhThem
		{
			get
			{
				return this._soGioChuanTinhThem; 
			}
			set
			{
				if (_soGioChuanTinhThem == value && SoGioChuanTinhThem != null )
					return;
					
				this._soGioChuanTinhThem = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoGioChuanTinhThem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDiaDiem
		{
			get
			{
				return this._maDiaDiem; 
			}
			set
			{
				if (_maDiaDiem == value)
					return;
					
				this._maDiaDiem = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenDiaDiem
		{
			get
			{
				return this._tenDiaDiem; 
			}
			set
			{
				if (_tenDiaDiem == value)
					return;
					
				this._tenDiaDiem = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DonGiaDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsDonGiaDiaDiemNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? DonGiaDiaDiem
		{
			get
			{
				return this._donGiaDiaDiem; 
			}
			set
			{
				if (_donGiaDiaDiem == value && DonGiaDiaDiem != null )
					return;
					
				this._donGiaDiaDiem = value;
				this._isDirty = true;
				
				OnPropertyChanged("DonGiaDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TienXeDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTienXeDiaDiemNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TienXeDiaDiem
		{
			get
			{
				return this._tienXeDiaDiem; 
			}
			set
			{
				if (_tienXeDiaDiem == value && TienXeDiaDiem != null )
					return;
					
				this._tienXeDiaDiem = value;
				this._isDirty = true;
				
				OnPropertyChanged("TienXeDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HeSoDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsHeSoDiaDiemNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? HeSoDiaDiem
		{
			get
			{
				return this._heSoDiaDiem; 
			}
			set
			{
				if (_heSoDiaDiem == value && HeSoDiaDiem != null )
					return;
					
				this._heSoDiaDiem = value;
				this._isDirty = true;
				
				OnPropertyChanged("HeSoDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTinChi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSoTinChiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SoTinChi
		{
			get
			{
				return this._soTinChi; 
			}
			set
			{
				if (_soTinChi == value && SoTinChi != null )
					return;
					
				this._soTinChi = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenBoMon property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenBoMon
		{
			get
			{
				return this._tenBoMon; 
			}
			set
			{
				if (_tenBoMon == value)
					return;
					
				this._tenBoMon = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenBoMon");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_KcqLietKeKhoiLuongGiangDayChiTiet2"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base Entity 
		///</summary>
		public virtual ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base Copy()
		{
			//shallow copy entity
			ViewKcqLietKeKhoiLuongGiangDayChiTiet2 copy = new ViewKcqLietKeKhoiLuongGiangDayChiTiet2();
				copy.MaQuanLy = this.MaQuanLy;
				copy.Ho = this.Ho;
				copy.Ten = this.Ten;
				copy.HoTen = this.HoTen;
				copy.MaHocHam = this.MaHocHam;
				copy.MaHocVi = this.MaHocVi;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.MaDonVi = this.MaDonVi;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.Loai = this.Loai;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.Nhom = this.Nhom;
				copy.MaLop = this.MaLop;
				copy.SiSo = this.SiSo;
				copy.SoTiet = this.SoTiet;
				copy.TietChuNhat = this.TietChuNhat;
				copy.LopClc = this.LopClc;
				copy.HeSoLopDong = this.HeSoLopDong;
				copy.HeSoHocKy = this.HeSoHocKy;
				copy.DonGia = this.DonGia;
				copy.TongThanhTien = this.TongThanhTien;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.PhanLoai = this.PhanLoai;
				copy.SoGioThucGiangTrenLop = this.SoGioThucGiangTrenLop;
				copy.SoGioChuanTinhThem = this.SoGioChuanTinhThem;
				copy.MaDiaDiem = this.MaDiaDiem;
				copy.TenDiaDiem = this.TenDiaDiem;
				copy.DonGiaDiaDiem = this.DonGiaDiaDiem;
				copy.TienXeDiaDiem = this.TienXeDiaDiem;
				copy.HeSoDiaDiem = this.HeSoDiaDiem;
				copy.SoTinChi = this.SoTinChi;
				copy.TenBoMon = this.TenBoMon;
			copy.AcceptChanges();
			return (ViewKcqLietKeKhoiLuongGiangDayChiTiet2)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base Object1, ViewKcqLietKeKhoiLuongGiangDayChiTiet2Base Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.MaQuanLy != null && Object2.MaQuanLy != null )
			{
				if (Object1.MaQuanLy != Object2.MaQuanLy)
					equal = false;
			}
			else if (Object1.MaQuanLy == null ^ Object1.MaQuanLy == null )
			{
				equal = false;
			}
			if (Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object1.Ho == null )
			{
				equal = false;
			}
			if (Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object1.Ten == null )
			{
				equal = false;
			}
			if (Object1.HoTen != null && Object2.HoTen != null )
			{
				if (Object1.HoTen != Object2.HoTen)
					equal = false;
			}
			else if (Object1.HoTen == null ^ Object1.HoTen == null )
			{
				equal = false;
			}
			if (Object1.MaHocHam != null && Object2.MaHocHam != null )
			{
				if (Object1.MaHocHam != Object2.MaHocHam)
					equal = false;
			}
			else if (Object1.MaHocHam == null ^ Object1.MaHocHam == null )
			{
				equal = false;
			}
			if (Object1.MaHocVi != null && Object2.MaHocVi != null )
			{
				if (Object1.MaHocVi != Object2.MaHocVi)
					equal = false;
			}
			else if (Object1.MaHocVi == null ^ Object1.MaHocVi == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object1.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if (Object1.MaDonVi != null && Object2.MaDonVi != null )
			{
				if (Object1.MaDonVi != Object2.MaDonVi)
					equal = false;
			}
			else if (Object1.MaDonVi == null ^ Object1.MaDonVi == null )
			{
				equal = false;
			}
			if (Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object1.NamHoc == null )
			{
				equal = false;
			}
			if (Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object1.HocKy == null )
			{
				equal = false;
			}
			if (Object1.Loai != null && Object2.Loai != null )
			{
				if (Object1.Loai != Object2.Loai)
					equal = false;
			}
			else if (Object1.Loai == null ^ Object1.Loai == null )
			{
				equal = false;
			}
			if (Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object1.MaMonHoc == null )
			{
				equal = false;
			}
			if (Object1.TenMonHoc != null && Object2.TenMonHoc != null )
			{
				if (Object1.TenMonHoc != Object2.TenMonHoc)
					equal = false;
			}
			else if (Object1.TenMonHoc == null ^ Object1.TenMonHoc == null )
			{
				equal = false;
			}
			if (Object1.Nhom != null && Object2.Nhom != null )
			{
				if (Object1.Nhom != Object2.Nhom)
					equal = false;
			}
			else if (Object1.Nhom == null ^ Object1.Nhom == null )
			{
				equal = false;
			}
			if (Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object1.MaLop == null )
			{
				equal = false;
			}
			if (Object1.SiSo != null && Object2.SiSo != null )
			{
				if (Object1.SiSo != Object2.SiSo)
					equal = false;
			}
			else if (Object1.SiSo == null ^ Object1.SiSo == null )
			{
				equal = false;
			}
			if (Object1.SoTiet != null && Object2.SoTiet != null )
			{
				if (Object1.SoTiet != Object2.SoTiet)
					equal = false;
			}
			else if (Object1.SoTiet == null ^ Object1.SoTiet == null )
			{
				equal = false;
			}
			if (Object1.TietChuNhat != null && Object2.TietChuNhat != null )
			{
				if (Object1.TietChuNhat != Object2.TietChuNhat)
					equal = false;
			}
			else if (Object1.TietChuNhat == null ^ Object1.TietChuNhat == null )
			{
				equal = false;
			}
			if (Object1.LopClc != null && Object2.LopClc != null )
			{
				if (Object1.LopClc != Object2.LopClc)
					equal = false;
			}
			else if (Object1.LopClc == null ^ Object1.LopClc == null )
			{
				equal = false;
			}
			if (Object1.HeSoLopDong != null && Object2.HeSoLopDong != null )
			{
				if (Object1.HeSoLopDong != Object2.HeSoLopDong)
					equal = false;
			}
			else if (Object1.HeSoLopDong == null ^ Object1.HeSoLopDong == null )
			{
				equal = false;
			}
			if (Object1.HeSoHocKy != null && Object2.HeSoHocKy != null )
			{
				if (Object1.HeSoHocKy != Object2.HeSoHocKy)
					equal = false;
			}
			else if (Object1.HeSoHocKy == null ^ Object1.HeSoHocKy == null )
			{
				equal = false;
			}
			if (Object1.DonGia != null && Object2.DonGia != null )
			{
				if (Object1.DonGia != Object2.DonGia)
					equal = false;
			}
			else if (Object1.DonGia == null ^ Object1.DonGia == null )
			{
				equal = false;
			}
			if (Object1.TongThanhTien != null && Object2.TongThanhTien != null )
			{
				if (Object1.TongThanhTien != Object2.TongThanhTien)
					equal = false;
			}
			else if (Object1.TongThanhTien == null ^ Object1.TongThanhTien == null )
			{
				equal = false;
			}
			if (Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object1.TietQuyDoi == null )
			{
				equal = false;
			}
			if (Object1.PhanLoai != null && Object2.PhanLoai != null )
			{
				if (Object1.PhanLoai != Object2.PhanLoai)
					equal = false;
			}
			else if (Object1.PhanLoai == null ^ Object1.PhanLoai == null )
			{
				equal = false;
			}
			if (Object1.SoGioThucGiangTrenLop != null && Object2.SoGioThucGiangTrenLop != null )
			{
				if (Object1.SoGioThucGiangTrenLop != Object2.SoGioThucGiangTrenLop)
					equal = false;
			}
			else if (Object1.SoGioThucGiangTrenLop == null ^ Object1.SoGioThucGiangTrenLop == null )
			{
				equal = false;
			}
			if (Object1.SoGioChuanTinhThem != null && Object2.SoGioChuanTinhThem != null )
			{
				if (Object1.SoGioChuanTinhThem != Object2.SoGioChuanTinhThem)
					equal = false;
			}
			else if (Object1.SoGioChuanTinhThem == null ^ Object1.SoGioChuanTinhThem == null )
			{
				equal = false;
			}
			if (Object1.MaDiaDiem != null && Object2.MaDiaDiem != null )
			{
				if (Object1.MaDiaDiem != Object2.MaDiaDiem)
					equal = false;
			}
			else if (Object1.MaDiaDiem == null ^ Object1.MaDiaDiem == null )
			{
				equal = false;
			}
			if (Object1.TenDiaDiem != null && Object2.TenDiaDiem != null )
			{
				if (Object1.TenDiaDiem != Object2.TenDiaDiem)
					equal = false;
			}
			else if (Object1.TenDiaDiem == null ^ Object1.TenDiaDiem == null )
			{
				equal = false;
			}
			if (Object1.DonGiaDiaDiem != null && Object2.DonGiaDiaDiem != null )
			{
				if (Object1.DonGiaDiaDiem != Object2.DonGiaDiaDiem)
					equal = false;
			}
			else if (Object1.DonGiaDiaDiem == null ^ Object1.DonGiaDiaDiem == null )
			{
				equal = false;
			}
			if (Object1.TienXeDiaDiem != null && Object2.TienXeDiaDiem != null )
			{
				if (Object1.TienXeDiaDiem != Object2.TienXeDiaDiem)
					equal = false;
			}
			else if (Object1.TienXeDiaDiem == null ^ Object1.TienXeDiaDiem == null )
			{
				equal = false;
			}
			if (Object1.HeSoDiaDiem != null && Object2.HeSoDiaDiem != null )
			{
				if (Object1.HeSoDiaDiem != Object2.HeSoDiaDiem)
					equal = false;
			}
			else if (Object1.HeSoDiaDiem == null ^ Object1.HeSoDiaDiem == null )
			{
				equal = false;
			}
			if (Object1.SoTinChi != null && Object2.SoTinChi != null )
			{
				if (Object1.SoTinChi != Object2.SoTinChi)
					equal = false;
			}
			else if (Object1.SoTinChi == null ^ Object1.SoTinChi == null )
			{
				equal = false;
			}
			if (Object1.TenBoMon != null && Object2.TenBoMon != null )
			{
				if (Object1.TenBoMon != Object2.TenBoMon)
					equal = false;
			}
			else if (Object1.TenBoMon == null ^ Object1.TenBoMon == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewKcqLietKeKhoiLuongGiangDayChiTiet2 entity, string propertyName)
		{
			switch (propertyName)
			{
				case "MaQuanLy":
					return entity.MaQuanLy;
				case "Ho":
					return entity.Ho;
				case "Ten":
					return entity.Ten;
				case "HoTen":
					return entity.HoTen;
				case "MaHocHam":
					return entity.MaHocHam;
				case "MaHocVi":
					return entity.MaHocVi;
				case "MaLoaiGiangVien":
					return entity.MaLoaiGiangVien;
				case "MaDonVi":
					return entity.MaDonVi;
				case "NamHoc":
					return entity.NamHoc;
				case "HocKy":
					return entity.HocKy;
				case "Loai":
					return entity.Loai;
				case "MaMonHoc":
					return entity.MaMonHoc;
				case "TenMonHoc":
					return entity.TenMonHoc;
				case "Nhom":
					return entity.Nhom;
				case "MaLop":
					return entity.MaLop;
				case "SiSo":
					return entity.SiSo;
				case "SoTiet":
					return entity.SoTiet;
				case "TietChuNhat":
					return entity.TietChuNhat;
				case "LopClc":
					return entity.LopClc;
				case "HeSoLopDong":
					return entity.HeSoLopDong;
				case "HeSoHocKy":
					return entity.HeSoHocKy;
				case "DonGia":
					return entity.DonGia;
				case "TongThanhTien":
					return entity.TongThanhTien;
				case "TietQuyDoi":
					return entity.TietQuyDoi;
				case "PhanLoai":
					return entity.PhanLoai;
				case "SoGioThucGiangTrenLop":
					return entity.SoGioThucGiangTrenLop;
				case "SoGioChuanTinhThem":
					return entity.SoGioChuanTinhThem;
				case "MaDiaDiem":
					return entity.MaDiaDiem;
				case "TenDiaDiem":
					return entity.TenDiaDiem;
				case "DonGiaDiaDiem":
					return entity.DonGiaDiaDiem;
				case "TienXeDiaDiem":
					return entity.TienXeDiaDiem;
				case "HeSoDiaDiem":
					return entity.HeSoDiaDiem;
				case "SoTinChi":
					return entity.SoTinChi;
				case "TenBoMon":
					return entity.TenBoMon;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewKcqLietKeKhoiLuongGiangDayChiTiet2, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{35}{34}- MaQuanLy: {0}{34}- Ho: {1}{34}- Ten: {2}{34}- HoTen: {3}{34}- MaHocHam: {4}{34}- MaHocVi: {5}{34}- MaLoaiGiangVien: {6}{34}- MaDonVi: {7}{34}- NamHoc: {8}{34}- HocKy: {9}{34}- Loai: {10}{34}- MaMonHoc: {11}{34}- TenMonHoc: {12}{34}- Nhom: {13}{34}- MaLop: {14}{34}- SiSo: {15}{34}- SoTiet: {16}{34}- TietChuNhat: {17}{34}- LopClc: {18}{34}- HeSoLopDong: {19}{34}- HeSoHocKy: {20}{34}- DonGia: {21}{34}- TongThanhTien: {22}{34}- TietQuyDoi: {23}{34}- PhanLoai: {24}{34}- SoGioThucGiangTrenLop: {25}{34}- SoGioChuanTinhThem: {26}{34}- MaDiaDiem: {27}{34}- TenDiaDiem: {28}{34}- DonGiaDiaDiem: {29}{34}- TienXeDiaDiem: {30}{34}- HeSoDiaDiem: {31}{34}- SoTinChi: {32}{34}- TenBoMon: {33}{34}", 
				(this.MaQuanLy == null) ? string.Empty : this.MaQuanLy.ToString(),
			     
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
			     
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
			     
				(this.HoTen == null) ? string.Empty : this.HoTen.ToString(),
			     
				(this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString(),
			     
				(this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString(),
			     
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
			     
				(this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString(),
			     
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
			     
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
			     
				(this.Loai == null) ? string.Empty : this.Loai.ToString(),
			     
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
			     
				(this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString(),
			     
				(this.Nhom == null) ? string.Empty : this.Nhom.ToString(),
			     
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
			     
				(this.SiSo == null) ? string.Empty : this.SiSo.ToString(),
			     
				(this.SoTiet == null) ? string.Empty : this.SoTiet.ToString(),
			     
				(this.TietChuNhat == null) ? string.Empty : this.TietChuNhat.ToString(),
			     
				(this.LopClc == null) ? string.Empty : this.LopClc.ToString(),
			     
				(this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString(),
			     
				(this.HeSoHocKy == null) ? string.Empty : this.HeSoHocKy.ToString(),
			     
				(this.DonGia == null) ? string.Empty : this.DonGia.ToString(),
			     
				(this.TongThanhTien == null) ? string.Empty : this.TongThanhTien.ToString(),
			     
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
			     
				(this.PhanLoai == null) ? string.Empty : this.PhanLoai.ToString(),
			     
				(this.SoGioThucGiangTrenLop == null) ? string.Empty : this.SoGioThucGiangTrenLop.ToString(),
			     
				(this.SoGioChuanTinhThem == null) ? string.Empty : this.SoGioChuanTinhThem.ToString(),
			     
				(this.MaDiaDiem == null) ? string.Empty : this.MaDiaDiem.ToString(),
			     
				(this.TenDiaDiem == null) ? string.Empty : this.TenDiaDiem.ToString(),
			     
				(this.DonGiaDiaDiem == null) ? string.Empty : this.DonGiaDiaDiem.ToString(),
			     
				(this.TienXeDiaDiem == null) ? string.Empty : this.TienXeDiaDiem.ToString(),
			     
				(this.HeSoDiaDiem == null) ? string.Empty : this.HeSoDiaDiem.ToString(),
			     
				(this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString(),
			     
				(this.TenBoMon == null) ? string.Empty : this.TenBoMon.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewKcqLietKeKhoiLuongGiangDayChiTiet2 columns.
	/// </summary>
	[Serializable]
	public enum ViewKcqLietKeKhoiLuongGiangDayChiTiet2Column
	{
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		[EnumTextValue("MaQuanLy")]
		[ColumnEnum("MaQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaQuanLy,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 101)]
		Ho,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten,
		/// <summary>
		/// HoTen : 
		/// </summary>
		[EnumTextValue("HoTen")]
		[ColumnEnum("HoTen", typeof(System.String), System.Data.DbType.String, false, false, true, 152)]
		HoTen,
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		[EnumTextValue("MaHocHam")]
		[ColumnEnum("MaHocHam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocHam,
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		[EnumTextValue("MaHocVi")]
		[ColumnEnum("MaHocVi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocVi,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("MaLoaiGiangVien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien,
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("MaDonVi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDonVi,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("NamHoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("HocKy")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy,
		/// <summary>
		/// Loai : 
		/// </summary>
		[EnumTextValue("Loai")]
		[ColumnEnum("Loai", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		Loai,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("MaMonHoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("TenMonHoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		TenMonHoc,
		/// <summary>
		/// Nhom : 
		/// </summary>
		[EnumTextValue("Nhom")]
		[ColumnEnum("Nhom", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Nhom,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("MaLop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		MaLop,
		/// <summary>
		/// SiSo : 
		/// </summary>
		[EnumTextValue("SiSo")]
		[ColumnEnum("SiSo", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSo,
		/// <summary>
		/// SoTiet : 
		/// </summary>
		[EnumTextValue("SoTiet")]
		[ColumnEnum("SoTiet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTiet,
		/// <summary>
		/// TietChuNhat : 
		/// </summary>
		[EnumTextValue("TietChuNhat")]
		[ColumnEnum("TietChuNhat", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TietChuNhat,
		/// <summary>
		/// LopClc : 
		/// </summary>
		[EnumTextValue("LopClc")]
		[ColumnEnum("LopClc", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		LopClc,
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		[EnumTextValue("HeSoLopDong")]
		[ColumnEnum("HeSoLopDong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDong,
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		[EnumTextValue("HeSoHocKy")]
		[ColumnEnum("HeSoHocKy", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoHocKy,
		/// <summary>
		/// DonGia : 
		/// </summary>
		[EnumTextValue("DonGia")]
		[ColumnEnum("DonGia", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGia,
		/// <summary>
		/// TongThanhTien : 
		/// </summary>
		[EnumTextValue("TongThanhTien")]
		[ColumnEnum("TongThanhTien", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TongThanhTien,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("TietQuyDoi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi,
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		[EnumTextValue("PhanLoai")]
		[ColumnEnum("PhanLoai", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		PhanLoai,
		/// <summary>
		/// SoGioThucGiangTrenLop : 
		/// </summary>
		[EnumTextValue("SoGioThucGiangTrenLop")]
		[ColumnEnum("SoGioThucGiangTrenLop", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoGioThucGiangTrenLop,
		/// <summary>
		/// SoGioChuanTinhThem : 
		/// </summary>
		[EnumTextValue("SoGioChuanTinhThem")]
		[ColumnEnum("SoGioChuanTinhThem", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoGioChuanTinhThem,
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		[EnumTextValue("MaDiaDiem")]
		[ColumnEnum("MaDiaDiem", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDiaDiem,
		/// <summary>
		/// TenDiaDiem : 
		/// </summary>
		[EnumTextValue("TenDiaDiem")]
		[ColumnEnum("TenDiaDiem", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenDiaDiem,
		/// <summary>
		/// DonGiaDiaDiem : 
		/// </summary>
		[EnumTextValue("DonGiaDiaDiem")]
		[ColumnEnum("DonGiaDiaDiem", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGiaDiaDiem,
		/// <summary>
		/// TienXeDiaDiem : 
		/// </summary>
		[EnumTextValue("TienXeDiaDiem")]
		[ColumnEnum("TienXeDiaDiem", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TienXeDiaDiem,
		/// <summary>
		/// HeSoDiaDiem : 
		/// </summary>
		[EnumTextValue("HeSoDiaDiem")]
		[ColumnEnum("HeSoDiaDiem", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoDiaDiem,
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		[EnumTextValue("SoTinChi")]
		[ColumnEnum("SoTinChi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTinChi,
		/// <summary>
		/// TenBoMon : 
		/// </summary>
		[EnumTextValue("TenBoMon")]
		[ColumnEnum("TenBoMon", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TenBoMon
	}//End enum

} // end namespace

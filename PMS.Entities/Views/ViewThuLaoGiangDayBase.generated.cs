/*
	File generated by NetTiers templates [www.nettiers.com]
	Generated on : Friday, December 10, 2010
	Important: Do not modify this file. Edit the file ViewThuLaoGiangDay.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_ThuLao_GiangDay' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewThuLaoGiangDayBase")]
	public abstract partial class ViewThuLaoGiangDayBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		private System.String		  _maGiangVien = string.Empty;
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		private System.String		  _maDonVi = string.Empty;
		
		/// <summary>
		/// HoTen : 
		/// </summary>
		private System.String		  _hoTen = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		private System.String		  _namHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		private System.String		  _hocKy = null;
		
		/// <summary>
		/// ChucDanh : 
		/// </summary>
		private System.String		  _chucDanh = string.Empty;
		
		/// <summary>
		/// TietNghiVu : 
		/// </summary>
		private System.Decimal?		  _tietNghiVu = null;
		
		/// <summary>
		/// TietDoAn : 
		/// </summary>
		private System.Decimal?		  _tietDoAn = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		private System.Decimal?		  _tietQuyDoi = null;
		
		/// <summary>
		/// DonGia : 
		/// </summary>
		private System.Decimal?		  _donGia = null;
		
		/// <summary>
		/// TienGiangDay : 
		/// </summary>
		private System.Decimal?		  _tienGiangDay = null;
		
		/// <summary>
		/// TienDoAn : 
		/// </summary>
		private System.Decimal?		  _tienDoAn = null;
		
		/// <summary>
		/// TietThieu : 
		/// </summary>
		private System.Decimal?		  _tietThieu = null;
		
		/// <summary>
		/// TietVuot : 
		/// </summary>
		private System.Decimal?		  _tietVuot = null;
		
		/// <summary>
		/// TienVuot : 
		/// </summary>
		private System.Decimal?		  _tienVuot = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		private System.Int32		  _maLoaiGiangVien = (int)0;
		
		/// <summary>
		/// TietGioiHan : 
		/// </summary>
		private System.Decimal?		  _tietGioiHan = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewThuLaoGiangDayBase"/> instance.
		///</summary>
		public ViewThuLaoGiangDayBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewThuLaoGiangDayBase"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maDonVi"></param>
		///<param name="_hoTen"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_chucDanh"></param>
		///<param name="_tietNghiVu"></param>
		///<param name="_tietDoAn"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_donGia"></param>
		///<param name="_tienGiangDay"></param>
		///<param name="_tienDoAn"></param>
		///<param name="_tietThieu"></param>
		///<param name="_tietVuot"></param>
		///<param name="_tienVuot"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_tietGioiHan"></param>
		public ViewThuLaoGiangDayBase(System.String _maGiangVien, System.String _maDonVi, System.String _hoTen, System.String _namHoc, System.String _hocKy, System.String _chucDanh, System.Decimal? _tietNghiVu, System.Decimal? _tietDoAn, System.Decimal? _tietQuyDoi, System.Decimal? _donGia, System.Decimal? _tienGiangDay, System.Decimal? _tienDoAn, System.Decimal? _tietThieu, System.Decimal? _tietVuot, System.Decimal? _tienVuot, System.Int32 _maLoaiGiangVien, System.Decimal? _tietGioiHan)
		{
			this._maGiangVien = _maGiangVien;
			this._maDonVi = _maDonVi;
			this._hoTen = _hoTen;
			this._namHoc = _namHoc;
			this._hocKy = _hocKy;
			this._chucDanh = _chucDanh;
			this._tietNghiVu = _tietNghiVu;
			this._tietDoAn = _tietDoAn;
			this._tietQuyDoi = _tietQuyDoi;
			this._donGia = _donGia;
			this._tienGiangDay = _tienGiangDay;
			this._tienDoAn = _tienDoAn;
			this._tietThieu = _tietThieu;
			this._tietVuot = _tietVuot;
			this._tienVuot = _tienVuot;
			this._maLoaiGiangVien = _maLoaiGiangVien;
			this._tietGioiHan = _tietGioiHan;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewThuLaoGiangDay"/> instance.
		///</summary>
		///<param name="_maGiangVien"></param>
		///<param name="_maDonVi"></param>
		///<param name="_hoTen"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_chucDanh"></param>
		///<param name="_tietNghiVu"></param>
		///<param name="_tietDoAn"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_donGia"></param>
		///<param name="_tienGiangDay"></param>
		///<param name="_tienDoAn"></param>
		///<param name="_tietThieu"></param>
		///<param name="_tietVuot"></param>
		///<param name="_tienVuot"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_tietGioiHan"></param>
		public static ViewThuLaoGiangDay CreateViewThuLaoGiangDay(System.String _maGiangVien, System.String _maDonVi, System.String _hoTen, System.String _namHoc, System.String _hocKy, System.String _chucDanh, System.Decimal? _tietNghiVu, System.Decimal? _tietDoAn, System.Decimal? _tietQuyDoi, System.Decimal? _donGia, System.Decimal? _tienGiangDay, System.Decimal? _tienDoAn, System.Decimal? _tietThieu, System.Decimal? _tietVuot, System.Decimal? _tienVuot, System.Int32 _maLoaiGiangVien, System.Decimal? _tietGioiHan)
		{
			ViewThuLaoGiangDay newViewThuLaoGiangDay = new ViewThuLaoGiangDay();
			newViewThuLaoGiangDay.MaGiangVien = _maGiangVien;
			newViewThuLaoGiangDay.MaDonVi = _maDonVi;
			newViewThuLaoGiangDay.HoTen = _hoTen;
			newViewThuLaoGiangDay.NamHoc = _namHoc;
			newViewThuLaoGiangDay.HocKy = _hocKy;
			newViewThuLaoGiangDay.ChucDanh = _chucDanh;
			newViewThuLaoGiangDay.TietNghiVu = _tietNghiVu;
			newViewThuLaoGiangDay.TietDoAn = _tietDoAn;
			newViewThuLaoGiangDay.TietQuyDoi = _tietQuyDoi;
			newViewThuLaoGiangDay.DonGia = _donGia;
			newViewThuLaoGiangDay.TienGiangDay = _tienGiangDay;
			newViewThuLaoGiangDay.TienDoAn = _tienDoAn;
			newViewThuLaoGiangDay.TietThieu = _tietThieu;
			newViewThuLaoGiangDay.TietVuot = _tietVuot;
			newViewThuLaoGiangDay.TienVuot = _tienVuot;
			newViewThuLaoGiangDay.MaLoaiGiangVien = _maLoaiGiangVien;
			newViewThuLaoGiangDay.TietGioiHan = _tietGioiHan;
			return newViewThuLaoGiangDay;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaGiangVien
		{
			get
			{
				return this._maGiangVien; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaGiangVien does not allow null values.");
				if (_maGiangVien == value)
					return;
					
				this._maGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this._maDonVi; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaDonVi does not allow null values.");
				if (_maDonVi == value)
					return;
					
				this._maDonVi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTen
		{
			get
			{
				return this._hoTen; 
			}
			set
			{
				if (_hoTen == value)
					return;
					
				this._hoTen = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTen");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NamHoc
		{
			get
			{
				return this._namHoc; 
			}
			set
			{
				if (_namHoc == value)
					return;
					
				this._namHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HocKy
		{
			get
			{
				return this._hocKy; 
			}
			set
			{
				if (_hocKy == value)
					return;
					
				this._hocKy = value;
				this._isDirty = true;
				
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ChucDanh property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ChucDanh
		{
			get
			{
				return this._chucDanh; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "ChucDanh does not allow null values.");
				if (_chucDanh == value)
					return;
					
				this._chucDanh = value;
				this._isDirty = true;
				
				OnPropertyChanged("ChucDanh");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietNghiVu property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietNghiVuNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietNghiVu
		{
			get
			{
				return this._tietNghiVu; 
			}
			set
			{
				if (_tietNghiVu == value && TietNghiVu != null )
					return;
					
				this._tietNghiVu = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietNghiVu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietDoAn property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietDoAnNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietDoAn
		{
			get
			{
				return this._tietDoAn; 
			}
			set
			{
				if (_tietDoAn == value && TietDoAn != null )
					return;
					
				this._tietDoAn = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietDoAn");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietQuyDoiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this._tietQuyDoi; 
			}
			set
			{
				if (_tietQuyDoi == value && TietQuyDoi != null )
					return;
					
				this._tietQuyDoi = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DonGia property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsDonGiaNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? DonGia
		{
			get
			{
				return this._donGia; 
			}
			set
			{
				if (_donGia == value && DonGia != null )
					return;
					
				this._donGia = value;
				this._isDirty = true;
				
				OnPropertyChanged("DonGia");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TienGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTienGiangDayNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TienGiangDay
		{
			get
			{
				return this._tienGiangDay; 
			}
			set
			{
				if (_tienGiangDay == value && TienGiangDay != null )
					return;
					
				this._tienGiangDay = value;
				this._isDirty = true;
				
				OnPropertyChanged("TienGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TienDoAn property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTienDoAnNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TienDoAn
		{
			get
			{
				return this._tienDoAn; 
			}
			set
			{
				if (_tienDoAn == value && TienDoAn != null )
					return;
					
				this._tienDoAn = value;
				this._isDirty = true;
				
				OnPropertyChanged("TienDoAn");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietThieu property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietThieuNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietThieu
		{
			get
			{
				return this._tietThieu; 
			}
			set
			{
				if (_tietThieu == value && TietThieu != null )
					return;
					
				this._tietThieu = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietThieu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietVuot property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietVuotNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietVuot
		{
			get
			{
				return this._tietVuot; 
			}
			set
			{
				if (_tietVuot == value && TietVuot != null )
					return;
					
				this._tietVuot = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietVuot");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TienVuot property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTienVuotNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TienVuot
		{
			get
			{
				return this._tienVuot; 
			}
			set
			{
				if (_tienVuot == value && TienVuot != null )
					return;
					
				this._tienVuot = value;
				this._isDirty = true;
				
				OnPropertyChanged("TienVuot");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 MaLoaiGiangVien
		{
			get
			{
				return this._maLoaiGiangVien; 
			}
			set
			{
				if (_maLoaiGiangVien == value)
					return;
					
				this._maLoaiGiangVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietGioiHan property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTietGioiHanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TietGioiHan
		{
			get
			{
				return this._tietGioiHan; 
			}
			set
			{
				if (_tietGioiHan == value && TietGioiHan != null )
					return;
					
				this._tietGioiHan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietGioiHan");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_ThuLao_GiangDay"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewThuLaoGiangDayBase Entity 
		///</summary>
		public virtual ViewThuLaoGiangDayBase Copy()
		{
			//shallow copy entity
			ViewThuLaoGiangDay copy = new ViewThuLaoGiangDay();
				copy.MaGiangVien = this.MaGiangVien;
				copy.MaDonVi = this.MaDonVi;
				copy.HoTen = this.HoTen;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.ChucDanh = this.ChucDanh;
				copy.TietNghiVu = this.TietNghiVu;
				copy.TietDoAn = this.TietDoAn;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.DonGia = this.DonGia;
				copy.TienGiangDay = this.TienGiangDay;
				copy.TienDoAn = this.TienDoAn;
				copy.TietThieu = this.TietThieu;
				copy.TietVuot = this.TietVuot;
				copy.TienVuot = this.TienVuot;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.TietGioiHan = this.TietGioiHan;
			copy.AcceptChanges();
			return (ViewThuLaoGiangDay)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewThuLaoGiangDayBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewThuLaoGiangDayBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewThuLaoGiangDayBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewThuLaoGiangDayBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewThuLaoGiangDayBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewThuLaoGiangDayBase Object1, ViewThuLaoGiangDayBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.MaGiangVien != Object2.MaGiangVien)
				equal = false;
			if (Object1.MaDonVi != Object2.MaDonVi)
				equal = false;
			if (Object1.HoTen != null && Object2.HoTen != null )
			{
				if (Object1.HoTen != Object2.HoTen)
					equal = false;
			}
			else if (Object1.HoTen == null ^ Object1.HoTen == null )
			{
				equal = false;
			}
			if (Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object1.NamHoc == null )
			{
				equal = false;
			}
			if (Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object1.HocKy == null )
			{
				equal = false;
			}
			if (Object1.ChucDanh != Object2.ChucDanh)
				equal = false;
			if (Object1.TietNghiVu != null && Object2.TietNghiVu != null )
			{
				if (Object1.TietNghiVu != Object2.TietNghiVu)
					equal = false;
			}
			else if (Object1.TietNghiVu == null ^ Object1.TietNghiVu == null )
			{
				equal = false;
			}
			if (Object1.TietDoAn != null && Object2.TietDoAn != null )
			{
				if (Object1.TietDoAn != Object2.TietDoAn)
					equal = false;
			}
			else if (Object1.TietDoAn == null ^ Object1.TietDoAn == null )
			{
				equal = false;
			}
			if (Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object1.TietQuyDoi == null )
			{
				equal = false;
			}
			if (Object1.DonGia != null && Object2.DonGia != null )
			{
				if (Object1.DonGia != Object2.DonGia)
					equal = false;
			}
			else if (Object1.DonGia == null ^ Object1.DonGia == null )
			{
				equal = false;
			}
			if (Object1.TienGiangDay != null && Object2.TienGiangDay != null )
			{
				if (Object1.TienGiangDay != Object2.TienGiangDay)
					equal = false;
			}
			else if (Object1.TienGiangDay == null ^ Object1.TienGiangDay == null )
			{
				equal = false;
			}
			if (Object1.TienDoAn != null && Object2.TienDoAn != null )
			{
				if (Object1.TienDoAn != Object2.TienDoAn)
					equal = false;
			}
			else if (Object1.TienDoAn == null ^ Object1.TienDoAn == null )
			{
				equal = false;
			}
			if (Object1.TietThieu != null && Object2.TietThieu != null )
			{
				if (Object1.TietThieu != Object2.TietThieu)
					equal = false;
			}
			else if (Object1.TietThieu == null ^ Object1.TietThieu == null )
			{
				equal = false;
			}
			if (Object1.TietVuot != null && Object2.TietVuot != null )
			{
				if (Object1.TietVuot != Object2.TietVuot)
					equal = false;
			}
			else if (Object1.TietVuot == null ^ Object1.TietVuot == null )
			{
				equal = false;
			}
			if (Object1.TienVuot != null && Object2.TienVuot != null )
			{
				if (Object1.TienVuot != Object2.TienVuot)
					equal = false;
			}
			else if (Object1.TienVuot == null ^ Object1.TienVuot == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
				equal = false;
			if (Object1.TietGioiHan != null && Object2.TietGioiHan != null )
			{
				if (Object1.TietGioiHan != Object2.TietGioiHan)
					equal = false;
			}
			else if (Object1.TietGioiHan == null ^ Object1.TietGioiHan == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewThuLaoGiangDay entity, string propertyName)
		{
			switch (propertyName)
			{
				case "MaGiangVien":
					return entity.MaGiangVien;
				case "MaDonVi":
					return entity.MaDonVi;
				case "HoTen":
					return entity.HoTen;
				case "NamHoc":
					return entity.NamHoc;
				case "HocKy":
					return entity.HocKy;
				case "ChucDanh":
					return entity.ChucDanh;
				case "TietNghiVu":
					return entity.TietNghiVu;
				case "TietDoAn":
					return entity.TietDoAn;
				case "TietQuyDoi":
					return entity.TietQuyDoi;
				case "DonGia":
					return entity.DonGia;
				case "TienGiangDay":
					return entity.TienGiangDay;
				case "TienDoAn":
					return entity.TienDoAn;
				case "TietThieu":
					return entity.TietThieu;
				case "TietVuot":
					return entity.TietVuot;
				case "TienVuot":
					return entity.TienVuot;
				case "MaLoaiGiangVien":
					return entity.MaLoaiGiangVien;
				case "TietGioiHan":
					return entity.TietGioiHan;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewThuLaoGiangDay, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{18}{17}- MaGiangVien: {0}{17}- MaDonVi: {1}{17}- HoTen: {2}{17}- NamHoc: {3}{17}- HocKy: {4}{17}- ChucDanh: {5}{17}- TietNghiVu: {6}{17}- TietDoAn: {7}{17}- TietQuyDoi: {8}{17}- DonGia: {9}{17}- TienGiangDay: {10}{17}- TienDoAn: {11}{17}- TietThieu: {12}{17}- TietVuot: {13}{17}- TienVuot: {14}{17}- MaLoaiGiangVien: {15}{17}- TietGioiHan: {16}{17}", 
				this.MaGiangVien,
				this.MaDonVi,
				(this.HoTen == null) ? string.Empty : this.HoTen.ToString(),
			     
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
			     
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
			     
				this.ChucDanh,
				(this.TietNghiVu == null) ? string.Empty : this.TietNghiVu.ToString(),
			     
				(this.TietDoAn == null) ? string.Empty : this.TietDoAn.ToString(),
			     
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
			     
				(this.DonGia == null) ? string.Empty : this.DonGia.ToString(),
			     
				(this.TienGiangDay == null) ? string.Empty : this.TienGiangDay.ToString(),
			     
				(this.TienDoAn == null) ? string.Empty : this.TienDoAn.ToString(),
			     
				(this.TietThieu == null) ? string.Empty : this.TietThieu.ToString(),
			     
				(this.TietVuot == null) ? string.Empty : this.TietVuot.ToString(),
			     
				(this.TienVuot == null) ? string.Empty : this.TienVuot.ToString(),
			     
				this.MaLoaiGiangVien,
				(this.TietGioiHan == null) ? string.Empty : this.TietGioiHan.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewThuLaoGiangDay columns.
	/// </summary>
	[Serializable]
	public enum ViewThuLaoGiangDayColumn
	{
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("MaGiangVien")]
		[ColumnEnum("MaGiangVien", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaGiangVien,
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("MaDonVi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaDonVi,
		/// <summary>
		/// HoTen : 
		/// </summary>
		[EnumTextValue("HoTen")]
		[ColumnEnum("HoTen", typeof(System.String), System.Data.DbType.String, false, false, true, 152)]
		HoTen,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("NamHoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("HocKy")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy,
		/// <summary>
		/// ChucDanh : 
		/// </summary>
		[EnumTextValue("ChucDanh")]
		[ColumnEnum("ChucDanh", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		ChucDanh,
		/// <summary>
		/// TietNghiVu : 
		/// </summary>
		[EnumTextValue("TietNghiVu")]
		[ColumnEnum("TietNghiVu", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietNghiVu,
		/// <summary>
		/// TietDoAn : 
		/// </summary>
		[EnumTextValue("TietDoAn")]
		[ColumnEnum("TietDoAn", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietDoAn,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("TietQuyDoi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi,
		/// <summary>
		/// DonGia : 
		/// </summary>
		[EnumTextValue("DonGia")]
		[ColumnEnum("DonGia", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGia,
		/// <summary>
		/// TienGiangDay : 
		/// </summary>
		[EnumTextValue("TienGiangDay")]
		[ColumnEnum("TienGiangDay", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TienGiangDay,
		/// <summary>
		/// TienDoAn : 
		/// </summary>
		[EnumTextValue("TienDoAn")]
		[ColumnEnum("TienDoAn", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TienDoAn,
		/// <summary>
		/// TietThieu : 
		/// </summary>
		[EnumTextValue("TietThieu")]
		[ColumnEnum("TietThieu", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietThieu,
		/// <summary>
		/// TietVuot : 
		/// </summary>
		[EnumTextValue("TietVuot")]
		[ColumnEnum("TietVuot", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietVuot,
		/// <summary>
		/// TienVuot : 
		/// </summary>
		[EnumTextValue("TienVuot")]
		[ColumnEnum("TienVuot", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TienVuot,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("MaLoaiGiangVien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		MaLoaiGiangVien,
		/// <summary>
		/// TietGioiHan : 
		/// </summary>
		[EnumTextValue("TietGioiHan")]
		[ColumnEnum("TietGioiHan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietGioiHan
	}//End enum

} // end namespace

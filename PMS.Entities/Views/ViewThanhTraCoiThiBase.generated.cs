/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file ViewThanhTraCoiThi.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'View_ThanhTraCoiThi' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ViewThanhTraCoiThiBase")]
	public abstract partial class ViewThanhTraCoiThiBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// Examination : 
		/// </summary>
		private System.Int32		  _examination = (int)0;
		
		/// <summary>
		/// MaCanBoCoiThi : 
		/// </summary>
		private System.String		  _maCanBoCoiThi = string.Empty;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		private System.String		  _ho = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		private System.String		  _ten = null;
		
		/// <summary>
		/// HoTen : 
		/// </summary>
		private System.String		  _hoTen = null;
		
		/// <summary>
		/// NgayThi : 
		/// </summary>
		private System.String		  _ngayThi = null;
		
		/// <summary>
		/// ThoiGianBatDau : 
		/// </summary>
		private System.String		  _thoiGianBatDau = null;
		
		/// <summary>
		/// MaPhong : 
		/// </summary>
		private System.String		  _maPhong = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		private System.String		  _maLopHocPhan = null;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		private System.String		  _maMonHoc = null;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		private System.String		  _tenMonHoc = null;
		
		/// <summary>
		/// ThoiGianLamBai : 
		/// </summary>
		private System.String		  _thoiGianLamBai = null;
		
		/// <summary>
		/// TietBatDau : 
		/// </summary>
		private System.Int32?		  _tietBatDau = null;
		
		/// <summary>
		/// MaLopSinhVien : 
		/// </summary>
		private System.String		  _maLopSinhVien = null;
		
		/// <summary>
		/// SoLuongSinhVien : 
		/// </summary>
		private System.Int32?		  _soLuongSinhVien = null;
		
		/// <summary>
		/// TenKhoaChuQuan : 
		/// </summary>
		private System.String		  _tenKhoaChuQuan = null;
		
		/// <summary>
		/// MaViPham : 
		/// </summary>
		private System.String		  _maViPham = null;
		
		/// <summary>
		/// MaHinhThucViPhamHrm : 
		/// </summary>
		private System.Guid?		  _maHinhThucViPhamHrm = null;
		
		/// <summary>
		/// SiSoThanhTra : 
		/// </summary>
		private System.Int32?		  _siSoThanhTra = null;
		
		/// <summary>
		/// ThoiDiemGhiNhan : 
		/// </summary>
		private System.String		  _thoiDiemGhiNhan = null;
		
		/// <summary>
		/// LyDo : 
		/// </summary>
		private System.String		  _lyDo = null;
		
		/// <summary>
		/// GhiChu : 
		/// </summary>
		private System.String		  _ghiChu = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		private System.String		  _ngayCapNhat = null;
		
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		private System.String		  _nguoiCapNhat = null;
		
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		private System.Int32?		  _maLoaiHocPhan = null;
		
		/// <summary>
		/// TuTietDenTiet : 
		/// </summary>
		private System.String		  _tuTietDenTiet = null;
		
		/// <summary>
		/// TrangThai : 
		/// </summary>
		private System.Boolean?		  _trangThai = null;
		
		/// <summary>
		/// XacNhan : 
		/// </summary>
		private System.Boolean?		  _xacNhan = null;
		
		/// <summary>
		/// SoTiet : 
		/// </summary>
		private System.Int32		  _soTiet = (int)0;
		
		/// <summary>
		/// Lt : 
		/// </summary>
		private System.Int32?		  _lt = null;
		
		/// <summary>
		/// Th : 
		/// </summary>
		private System.Int32?		  _th = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ViewThanhTraCoiThiBase"/> instance.
		///</summary>
		public ViewThanhTraCoiThiBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ViewThanhTraCoiThiBase"/> instance.
		///</summary>
		///<param name="_examination"></param>
		///<param name="_maCanBoCoiThi"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_ngayThi"></param>
		///<param name="_thoiGianBatDau"></param>
		///<param name="_maPhong"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_thoiGianLamBai"></param>
		///<param name="_tietBatDau"></param>
		///<param name="_maLopSinhVien"></param>
		///<param name="_soLuongSinhVien"></param>
		///<param name="_tenKhoaChuQuan"></param>
		///<param name="_maViPham"></param>
		///<param name="_maHinhThucViPhamHrm"></param>
		///<param name="_siSoThanhTra"></param>
		///<param name="_thoiDiemGhiNhan"></param>
		///<param name="_lyDo"></param>
		///<param name="_ghiChu"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_tuTietDenTiet"></param>
		///<param name="_trangThai"></param>
		///<param name="_xacNhan"></param>
		///<param name="_soTiet"></param>
		///<param name="_lt"></param>
		///<param name="_th"></param>
		public ViewThanhTraCoiThiBase(System.Int32 _examination, System.String _maCanBoCoiThi, System.String _ho, System.String _ten, System.String _hoTen, System.String _ngayThi, System.String _thoiGianBatDau, System.String _maPhong, System.String _maLopHocPhan, System.String _maMonHoc, System.String _tenMonHoc, System.String _thoiGianLamBai, System.Int32? _tietBatDau, System.String _maLopSinhVien, System.Int32? _soLuongSinhVien, System.String _tenKhoaChuQuan, System.String _maViPham, System.Guid? _maHinhThucViPhamHrm, System.Int32? _siSoThanhTra, System.String _thoiDiemGhiNhan, System.String _lyDo, System.String _ghiChu, System.String _ngayCapNhat, System.String _nguoiCapNhat, System.Int32? _maLoaiHocPhan, System.String _tuTietDenTiet, System.Boolean? _trangThai, System.Boolean? _xacNhan, System.Int32 _soTiet, System.Int32? _lt, System.Int32? _th)
		{
			this._examination = _examination;
			this._maCanBoCoiThi = _maCanBoCoiThi;
			this._ho = _ho;
			this._ten = _ten;
			this._hoTen = _hoTen;
			this._ngayThi = _ngayThi;
			this._thoiGianBatDau = _thoiGianBatDau;
			this._maPhong = _maPhong;
			this._maLopHocPhan = _maLopHocPhan;
			this._maMonHoc = _maMonHoc;
			this._tenMonHoc = _tenMonHoc;
			this._thoiGianLamBai = _thoiGianLamBai;
			this._tietBatDau = _tietBatDau;
			this._maLopSinhVien = _maLopSinhVien;
			this._soLuongSinhVien = _soLuongSinhVien;
			this._tenKhoaChuQuan = _tenKhoaChuQuan;
			this._maViPham = _maViPham;
			this._maHinhThucViPhamHrm = _maHinhThucViPhamHrm;
			this._siSoThanhTra = _siSoThanhTra;
			this._thoiDiemGhiNhan = _thoiDiemGhiNhan;
			this._lyDo = _lyDo;
			this._ghiChu = _ghiChu;
			this._ngayCapNhat = _ngayCapNhat;
			this._nguoiCapNhat = _nguoiCapNhat;
			this._maLoaiHocPhan = _maLoaiHocPhan;
			this._tuTietDenTiet = _tuTietDenTiet;
			this._trangThai = _trangThai;
			this._xacNhan = _xacNhan;
			this._soTiet = _soTiet;
			this._lt = _lt;
			this._th = _th;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ViewThanhTraCoiThi"/> instance.
		///</summary>
		///<param name="_examination"></param>
		///<param name="_maCanBoCoiThi"></param>
		///<param name="_ho"></param>
		///<param name="_ten"></param>
		///<param name="_hoTen"></param>
		///<param name="_ngayThi"></param>
		///<param name="_thoiGianBatDau"></param>
		///<param name="_maPhong"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_thoiGianLamBai"></param>
		///<param name="_tietBatDau"></param>
		///<param name="_maLopSinhVien"></param>
		///<param name="_soLuongSinhVien"></param>
		///<param name="_tenKhoaChuQuan"></param>
		///<param name="_maViPham"></param>
		///<param name="_maHinhThucViPhamHrm"></param>
		///<param name="_siSoThanhTra"></param>
		///<param name="_thoiDiemGhiNhan"></param>
		///<param name="_lyDo"></param>
		///<param name="_ghiChu"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_tuTietDenTiet"></param>
		///<param name="_trangThai"></param>
		///<param name="_xacNhan"></param>
		///<param name="_soTiet"></param>
		///<param name="_lt"></param>
		///<param name="_th"></param>
		public static ViewThanhTraCoiThi CreateViewThanhTraCoiThi(System.Int32 _examination, System.String _maCanBoCoiThi, System.String _ho, System.String _ten, System.String _hoTen, System.String _ngayThi, System.String _thoiGianBatDau, System.String _maPhong, System.String _maLopHocPhan, System.String _maMonHoc, System.String _tenMonHoc, System.String _thoiGianLamBai, System.Int32? _tietBatDau, System.String _maLopSinhVien, System.Int32? _soLuongSinhVien, System.String _tenKhoaChuQuan, System.String _maViPham, System.Guid? _maHinhThucViPhamHrm, System.Int32? _siSoThanhTra, System.String _thoiDiemGhiNhan, System.String _lyDo, System.String _ghiChu, System.String _ngayCapNhat, System.String _nguoiCapNhat, System.Int32? _maLoaiHocPhan, System.String _tuTietDenTiet, System.Boolean? _trangThai, System.Boolean? _xacNhan, System.Int32 _soTiet, System.Int32? _lt, System.Int32? _th)
		{
			ViewThanhTraCoiThi newViewThanhTraCoiThi = new ViewThanhTraCoiThi();
			newViewThanhTraCoiThi.Examination = _examination;
			newViewThanhTraCoiThi.MaCanBoCoiThi = _maCanBoCoiThi;
			newViewThanhTraCoiThi.Ho = _ho;
			newViewThanhTraCoiThi.Ten = _ten;
			newViewThanhTraCoiThi.HoTen = _hoTen;
			newViewThanhTraCoiThi.NgayThi = _ngayThi;
			newViewThanhTraCoiThi.ThoiGianBatDau = _thoiGianBatDau;
			newViewThanhTraCoiThi.MaPhong = _maPhong;
			newViewThanhTraCoiThi.MaLopHocPhan = _maLopHocPhan;
			newViewThanhTraCoiThi.MaMonHoc = _maMonHoc;
			newViewThanhTraCoiThi.TenMonHoc = _tenMonHoc;
			newViewThanhTraCoiThi.ThoiGianLamBai = _thoiGianLamBai;
			newViewThanhTraCoiThi.TietBatDau = _tietBatDau;
			newViewThanhTraCoiThi.MaLopSinhVien = _maLopSinhVien;
			newViewThanhTraCoiThi.SoLuongSinhVien = _soLuongSinhVien;
			newViewThanhTraCoiThi.TenKhoaChuQuan = _tenKhoaChuQuan;
			newViewThanhTraCoiThi.MaViPham = _maViPham;
			newViewThanhTraCoiThi.MaHinhThucViPhamHrm = _maHinhThucViPhamHrm;
			newViewThanhTraCoiThi.SiSoThanhTra = _siSoThanhTra;
			newViewThanhTraCoiThi.ThoiDiemGhiNhan = _thoiDiemGhiNhan;
			newViewThanhTraCoiThi.LyDo = _lyDo;
			newViewThanhTraCoiThi.GhiChu = _ghiChu;
			newViewThanhTraCoiThi.NgayCapNhat = _ngayCapNhat;
			newViewThanhTraCoiThi.NguoiCapNhat = _nguoiCapNhat;
			newViewThanhTraCoiThi.MaLoaiHocPhan = _maLoaiHocPhan;
			newViewThanhTraCoiThi.TuTietDenTiet = _tuTietDenTiet;
			newViewThanhTraCoiThi.TrangThai = _trangThai;
			newViewThanhTraCoiThi.XacNhan = _xacNhan;
			newViewThanhTraCoiThi.SoTiet = _soTiet;
			newViewThanhTraCoiThi.Lt = _lt;
			newViewThanhTraCoiThi.Th = _th;
			return newViewThanhTraCoiThi;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the Examination property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 Examination
		{
			get
			{
				return this._examination; 
			}
			set
			{
				if (_examination == value)
					return;
					
				this._examination = value;
				this._isDirty = true;
				
				OnPropertyChanged("Examination");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaCanBoCoiThi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaCanBoCoiThi
		{
			get
			{
				return this._maCanBoCoiThi; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "MaCanBoCoiThi does not allow null values.");
				if (_maCanBoCoiThi == value)
					return;
					
				this._maCanBoCoiThi = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaCanBoCoiThi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ho
		{
			get
			{
				return this._ho; 
			}
			set
			{
				if (_ho == value)
					return;
					
				this._ho = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ten
		{
			get
			{
				return this._ten; 
			}
			set
			{
				if (_ten == value)
					return;
					
				this._ten = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the HoTen property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String HoTen
		{
			get
			{
				return this._hoTen; 
			}
			set
			{
				if (_hoTen == value)
					return;
					
				this._hoTen = value;
				this._isDirty = true;
				
				OnPropertyChanged("HoTen");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayThi property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NgayThi
		{
			get
			{
				return this._ngayThi; 
			}
			set
			{
				if (_ngayThi == value)
					return;
					
				this._ngayThi = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayThi");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThoiGianBatDau property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ThoiGianBatDau
		{
			get
			{
				return this._thoiGianBatDau; 
			}
			set
			{
				if (_thoiGianBatDau == value)
					return;
					
				this._thoiGianBatDau = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThoiGianBatDau");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaPhong property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaPhong
		{
			get
			{
				return this._maPhong; 
			}
			set
			{
				if (_maPhong == value)
					return;
					
				this._maPhong = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaPhong");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this._maLopHocPhan; 
			}
			set
			{
				if (_maLopHocPhan == value)
					return;
					
				this._maLopHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this._maMonHoc; 
			}
			set
			{
				if (_maMonHoc == value)
					return;
					
				this._maMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this._tenMonHoc; 
			}
			set
			{
				if (_tenMonHoc == value)
					return;
					
				this._tenMonHoc = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThoiGianLamBai property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ThoiGianLamBai
		{
			get
			{
				return this._thoiGianLamBai; 
			}
			set
			{
				if (_thoiGianLamBai == value)
					return;
					
				this._thoiGianLamBai = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThoiGianLamBai");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TietBatDau property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTietBatDauNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? TietBatDau
		{
			get
			{
				return this._tietBatDau; 
			}
			set
			{
				if (_tietBatDau == value && TietBatDau != null )
					return;
					
				this._tietBatDau = value;
				this._isDirty = true;
				
				OnPropertyChanged("TietBatDau");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLopSinhVien property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaLopSinhVien
		{
			get
			{
				return this._maLopSinhVien; 
			}
			set
			{
				if (_maLopSinhVien == value)
					return;
					
				this._maLopSinhVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLopSinhVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoLuongSinhVien property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSoLuongSinhVienNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SoLuongSinhVien
		{
			get
			{
				return this._soLuongSinhVien; 
			}
			set
			{
				if (_soLuongSinhVien == value && SoLuongSinhVien != null )
					return;
					
				this._soLuongSinhVien = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoLuongSinhVien");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TenKhoaChuQuan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TenKhoaChuQuan
		{
			get
			{
				return this._tenKhoaChuQuan; 
			}
			set
			{
				if (_tenKhoaChuQuan == value)
					return;
					
				this._tenKhoaChuQuan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TenKhoaChuQuan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaViPham property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MaViPham
		{
			get
			{
				return this._maViPham; 
			}
			set
			{
				if (_maViPham == value)
					return;
					
				this._maViPham = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaViPham");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaHinhThucViPhamHrm property. 
		///		
		/// </summary>
		/// <value>This type is uniqueidentifier</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return Guid.Empty. It is up to the developer
		/// to check the value of IsMaHinhThucViPhamHrmNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Guid? MaHinhThucViPhamHrm
		{
			get
			{
				return this._maHinhThucViPhamHrm; 
			}
			set
			{
				if (_maHinhThucViPhamHrm == value && MaHinhThucViPhamHrm != null )
					return;
					
				this._maHinhThucViPhamHrm = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaHinhThucViPhamHrm");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SiSoThanhTra property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSiSoThanhTraNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SiSoThanhTra
		{
			get
			{
				return this._siSoThanhTra; 
			}
			set
			{
				if (_siSoThanhTra == value && SiSoThanhTra != null )
					return;
					
				this._siSoThanhTra = value;
				this._isDirty = true;
				
				OnPropertyChanged("SiSoThanhTra");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ThoiDiemGhiNhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ThoiDiemGhiNhan
		{
			get
			{
				return this._thoiDiemGhiNhan; 
			}
			set
			{
				if (_thoiDiemGhiNhan == value)
					return;
					
				this._thoiDiemGhiNhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("ThoiDiemGhiNhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LyDo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LyDo
		{
			get
			{
				return this._lyDo; 
			}
			set
			{
				if (_lyDo == value)
					return;
					
				this._lyDo = value;
				this._isDirty = true;
				
				OnPropertyChanged("LyDo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GhiChu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GhiChu
		{
			get
			{
				return this._ghiChu; 
			}
			set
			{
				if (_ghiChu == value)
					return;
					
				this._ghiChu = value;
				this._isDirty = true;
				
				OnPropertyChanged("GhiChu");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NgayCapNhat
		{
			get
			{
				return this._ngayCapNhat; 
			}
			set
			{
				if (_ngayCapNhat == value)
					return;
					
				this._ngayCapNhat = value;
				this._isDirty = true;
				
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NguoiCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NguoiCapNhat
		{
			get
			{
				return this._nguoiCapNhat; 
			}
			set
			{
				if (_nguoiCapNhat == value)
					return;
					
				this._nguoiCapNhat = value;
				this._isDirty = true;
				
				OnPropertyChanged("NguoiCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MaLoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaLoaiHocPhanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MaLoaiHocPhan
		{
			get
			{
				return this._maLoaiHocPhan; 
			}
			set
			{
				if (_maLoaiHocPhan == value && MaLoaiHocPhan != null )
					return;
					
				this._maLoaiHocPhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("MaLoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TuTietDenTiet property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TuTietDenTiet
		{
			get
			{
				return this._tuTietDenTiet; 
			}
			set
			{
				if (_tuTietDenTiet == value)
					return;
					
				this._tuTietDenTiet = value;
				this._isDirty = true;
				
				OnPropertyChanged("TuTietDenTiet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrangThai property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsTrangThaiNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? TrangThai
		{
			get
			{
				return this._trangThai; 
			}
			set
			{
				if (_trangThai == value && TrangThai != null )
					return;
					
				this._trangThai = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrangThai");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the XacNhan property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsXacNhanNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? XacNhan
		{
			get
			{
				return this._xacNhan; 
			}
			set
			{
				if (_xacNhan == value && XacNhan != null )
					return;
					
				this._xacNhan = value;
				this._isDirty = true;
				
				OnPropertyChanged("XacNhan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SoTiet property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 SoTiet
		{
			get
			{
				return this._soTiet; 
			}
			set
			{
				if (_soTiet == value)
					return;
					
				this._soTiet = value;
				this._isDirty = true;
				
				OnPropertyChanged("SoTiet");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Lt property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsLtNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? Lt
		{
			get
			{
				return this._lt; 
			}
			set
			{
				if (_lt == value && Lt != null )
					return;
					
				this._lt = value;
				this._isDirty = true;
				
				OnPropertyChanged("Lt");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Th property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsThNull() and perform business logic appropriately.
		/// </remarks>
		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? Th
		{
			get
			{
				return this._th; 
			}
			set
			{
				if (_th == value && Th != null )
					return;
					
				this._th = value;
				this._isDirty = true;
				
				OnPropertyChanged("Th");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "View_ThanhTraCoiThi"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ViewThanhTraCoiThiBase Entity 
		///</summary>
		public virtual ViewThanhTraCoiThiBase Copy()
		{
			//shallow copy entity
			ViewThanhTraCoiThi copy = new ViewThanhTraCoiThi();
				copy.Examination = this.Examination;
				copy.MaCanBoCoiThi = this.MaCanBoCoiThi;
				copy.Ho = this.Ho;
				copy.Ten = this.Ten;
				copy.HoTen = this.HoTen;
				copy.NgayThi = this.NgayThi;
				copy.ThoiGianBatDau = this.ThoiGianBatDau;
				copy.MaPhong = this.MaPhong;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.ThoiGianLamBai = this.ThoiGianLamBai;
				copy.TietBatDau = this.TietBatDau;
				copy.MaLopSinhVien = this.MaLopSinhVien;
				copy.SoLuongSinhVien = this.SoLuongSinhVien;
				copy.TenKhoaChuQuan = this.TenKhoaChuQuan;
				copy.MaViPham = this.MaViPham;
				copy.MaHinhThucViPhamHrm = this.MaHinhThucViPhamHrm;
				copy.SiSoThanhTra = this.SiSoThanhTra;
				copy.ThoiDiemGhiNhan = this.ThoiDiemGhiNhan;
				copy.LyDo = this.LyDo;
				copy.GhiChu = this.GhiChu;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.NguoiCapNhat = this.NguoiCapNhat;
				copy.MaLoaiHocPhan = this.MaLoaiHocPhan;
				copy.TuTietDenTiet = this.TuTietDenTiet;
				copy.TrangThai = this.TrangThai;
				copy.XacNhan = this.XacNhan;
				copy.SoTiet = this.SoTiet;
				copy.Lt = this.Lt;
				copy.Th = this.Th;
			copy.AcceptChanges();
			return (ViewThanhTraCoiThi)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ViewThanhTraCoiThiBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ViewThanhTraCoiThiBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ViewThanhTraCoiThiBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ViewThanhTraCoiThiBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ViewThanhTraCoiThiBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ViewThanhTraCoiThiBase Object1, ViewThanhTraCoiThiBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.Examination != Object2.Examination)
				equal = false;
			if (Object1.MaCanBoCoiThi != Object2.MaCanBoCoiThi)
				equal = false;
			if (Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object1.Ho == null )
			{
				equal = false;
			}
			if (Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object1.Ten == null )
			{
				equal = false;
			}
			if (Object1.HoTen != null && Object2.HoTen != null )
			{
				if (Object1.HoTen != Object2.HoTen)
					equal = false;
			}
			else if (Object1.HoTen == null ^ Object1.HoTen == null )
			{
				equal = false;
			}
			if (Object1.NgayThi != null && Object2.NgayThi != null )
			{
				if (Object1.NgayThi != Object2.NgayThi)
					equal = false;
			}
			else if (Object1.NgayThi == null ^ Object1.NgayThi == null )
			{
				equal = false;
			}
			if (Object1.ThoiGianBatDau != null && Object2.ThoiGianBatDau != null )
			{
				if (Object1.ThoiGianBatDau != Object2.ThoiGianBatDau)
					equal = false;
			}
			else if (Object1.ThoiGianBatDau == null ^ Object1.ThoiGianBatDau == null )
			{
				equal = false;
			}
			if (Object1.MaPhong != null && Object2.MaPhong != null )
			{
				if (Object1.MaPhong != Object2.MaPhong)
					equal = false;
			}
			else if (Object1.MaPhong == null ^ Object1.MaPhong == null )
			{
				equal = false;
			}
			if (Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object1.MaLopHocPhan == null )
			{
				equal = false;
			}
			if (Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object1.MaMonHoc == null )
			{
				equal = false;
			}
			if (Object1.TenMonHoc != null && Object2.TenMonHoc != null )
			{
				if (Object1.TenMonHoc != Object2.TenMonHoc)
					equal = false;
			}
			else if (Object1.TenMonHoc == null ^ Object1.TenMonHoc == null )
			{
				equal = false;
			}
			if (Object1.ThoiGianLamBai != null && Object2.ThoiGianLamBai != null )
			{
				if (Object1.ThoiGianLamBai != Object2.ThoiGianLamBai)
					equal = false;
			}
			else if (Object1.ThoiGianLamBai == null ^ Object1.ThoiGianLamBai == null )
			{
				equal = false;
			}
			if (Object1.TietBatDau != null && Object2.TietBatDau != null )
			{
				if (Object1.TietBatDau != Object2.TietBatDau)
					equal = false;
			}
			else if (Object1.TietBatDau == null ^ Object1.TietBatDau == null )
			{
				equal = false;
			}
			if (Object1.MaLopSinhVien != null && Object2.MaLopSinhVien != null )
			{
				if (Object1.MaLopSinhVien != Object2.MaLopSinhVien)
					equal = false;
			}
			else if (Object1.MaLopSinhVien == null ^ Object1.MaLopSinhVien == null )
			{
				equal = false;
			}
			if (Object1.SoLuongSinhVien != null && Object2.SoLuongSinhVien != null )
			{
				if (Object1.SoLuongSinhVien != Object2.SoLuongSinhVien)
					equal = false;
			}
			else if (Object1.SoLuongSinhVien == null ^ Object1.SoLuongSinhVien == null )
			{
				equal = false;
			}
			if (Object1.TenKhoaChuQuan != null && Object2.TenKhoaChuQuan != null )
			{
				if (Object1.TenKhoaChuQuan != Object2.TenKhoaChuQuan)
					equal = false;
			}
			else if (Object1.TenKhoaChuQuan == null ^ Object1.TenKhoaChuQuan == null )
			{
				equal = false;
			}
			if (Object1.MaViPham != null && Object2.MaViPham != null )
			{
				if (Object1.MaViPham != Object2.MaViPham)
					equal = false;
			}
			else if (Object1.MaViPham == null ^ Object1.MaViPham == null )
			{
				equal = false;
			}
			if (Object1.MaHinhThucViPhamHrm != null && Object2.MaHinhThucViPhamHrm != null )
			{
				if (Object1.MaHinhThucViPhamHrm != Object2.MaHinhThucViPhamHrm)
					equal = false;
			}
			else if (Object1.MaHinhThucViPhamHrm == null ^ Object1.MaHinhThucViPhamHrm == null )
			{
				equal = false;
			}
			if (Object1.SiSoThanhTra != null && Object2.SiSoThanhTra != null )
			{
				if (Object1.SiSoThanhTra != Object2.SiSoThanhTra)
					equal = false;
			}
			else if (Object1.SiSoThanhTra == null ^ Object1.SiSoThanhTra == null )
			{
				equal = false;
			}
			if (Object1.ThoiDiemGhiNhan != null && Object2.ThoiDiemGhiNhan != null )
			{
				if (Object1.ThoiDiemGhiNhan != Object2.ThoiDiemGhiNhan)
					equal = false;
			}
			else if (Object1.ThoiDiemGhiNhan == null ^ Object1.ThoiDiemGhiNhan == null )
			{
				equal = false;
			}
			if (Object1.LyDo != null && Object2.LyDo != null )
			{
				if (Object1.LyDo != Object2.LyDo)
					equal = false;
			}
			else if (Object1.LyDo == null ^ Object1.LyDo == null )
			{
				equal = false;
			}
			if (Object1.GhiChu != null && Object2.GhiChu != null )
			{
				if (Object1.GhiChu != Object2.GhiChu)
					equal = false;
			}
			else if (Object1.GhiChu == null ^ Object1.GhiChu == null )
			{
				equal = false;
			}
			if (Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object1.NgayCapNhat == null )
			{
				equal = false;
			}
			if (Object1.NguoiCapNhat != null && Object2.NguoiCapNhat != null )
			{
				if (Object1.NguoiCapNhat != Object2.NguoiCapNhat)
					equal = false;
			}
			else if (Object1.NguoiCapNhat == null ^ Object1.NguoiCapNhat == null )
			{
				equal = false;
			}
			if (Object1.MaLoaiHocPhan != null && Object2.MaLoaiHocPhan != null )
			{
				if (Object1.MaLoaiHocPhan != Object2.MaLoaiHocPhan)
					equal = false;
			}
			else if (Object1.MaLoaiHocPhan == null ^ Object1.MaLoaiHocPhan == null )
			{
				equal = false;
			}
			if (Object1.TuTietDenTiet != null && Object2.TuTietDenTiet != null )
			{
				if (Object1.TuTietDenTiet != Object2.TuTietDenTiet)
					equal = false;
			}
			else if (Object1.TuTietDenTiet == null ^ Object1.TuTietDenTiet == null )
			{
				equal = false;
			}
			if (Object1.TrangThai != null && Object2.TrangThai != null )
			{
				if (Object1.TrangThai != Object2.TrangThai)
					equal = false;
			}
			else if (Object1.TrangThai == null ^ Object1.TrangThai == null )
			{
				equal = false;
			}
			if (Object1.XacNhan != null && Object2.XacNhan != null )
			{
				if (Object1.XacNhan != Object2.XacNhan)
					equal = false;
			}
			else if (Object1.XacNhan == null ^ Object1.XacNhan == null )
			{
				equal = false;
			}
			if (Object1.SoTiet != Object2.SoTiet)
				equal = false;
			if (Object1.Lt != null && Object2.Lt != null )
			{
				if (Object1.Lt != Object2.Lt)
					equal = false;
			}
			else if (Object1.Lt == null ^ Object1.Lt == null )
			{
				equal = false;
			}
			if (Object1.Th != null && Object2.Th != null )
			{
				if (Object1.Th != Object2.Th)
					equal = false;
			}
			else if (Object1.Th == null ^ Object1.Th == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ViewThanhTraCoiThi entity, string propertyName)
		{
			switch (propertyName)
			{
				case "Examination":
					return entity.Examination;
				case "MaCanBoCoiThi":
					return entity.MaCanBoCoiThi;
				case "Ho":
					return entity.Ho;
				case "Ten":
					return entity.Ten;
				case "HoTen":
					return entity.HoTen;
				case "NgayThi":
					return entity.NgayThi;
				case "ThoiGianBatDau":
					return entity.ThoiGianBatDau;
				case "MaPhong":
					return entity.MaPhong;
				case "MaLopHocPhan":
					return entity.MaLopHocPhan;
				case "MaMonHoc":
					return entity.MaMonHoc;
				case "TenMonHoc":
					return entity.TenMonHoc;
				case "ThoiGianLamBai":
					return entity.ThoiGianLamBai;
				case "TietBatDau":
					return entity.TietBatDau;
				case "MaLopSinhVien":
					return entity.MaLopSinhVien;
				case "SoLuongSinhVien":
					return entity.SoLuongSinhVien;
				case "TenKhoaChuQuan":
					return entity.TenKhoaChuQuan;
				case "MaViPham":
					return entity.MaViPham;
				case "MaHinhThucViPhamHrm":
					return entity.MaHinhThucViPhamHrm;
				case "SiSoThanhTra":
					return entity.SiSoThanhTra;
				case "ThoiDiemGhiNhan":
					return entity.ThoiDiemGhiNhan;
				case "LyDo":
					return entity.LyDo;
				case "GhiChu":
					return entity.GhiChu;
				case "NgayCapNhat":
					return entity.NgayCapNhat;
				case "NguoiCapNhat":
					return entity.NguoiCapNhat;
				case "MaLoaiHocPhan":
					return entity.MaLoaiHocPhan;
				case "TuTietDenTiet":
					return entity.TuTietDenTiet;
				case "TrangThai":
					return entity.TrangThai;
				case "XacNhan":
					return entity.XacNhan;
				case "SoTiet":
					return entity.SoTiet;
				case "Lt":
					return entity.Lt;
				case "Th":
					return entity.Th;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ViewThanhTraCoiThi, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{32}{31}- Examination: {0}{31}- MaCanBoCoiThi: {1}{31}- Ho: {2}{31}- Ten: {3}{31}- HoTen: {4}{31}- NgayThi: {5}{31}- ThoiGianBatDau: {6}{31}- MaPhong: {7}{31}- MaLopHocPhan: {8}{31}- MaMonHoc: {9}{31}- TenMonHoc: {10}{31}- ThoiGianLamBai: {11}{31}- TietBatDau: {12}{31}- MaLopSinhVien: {13}{31}- SoLuongSinhVien: {14}{31}- TenKhoaChuQuan: {15}{31}- MaViPham: {16}{31}- MaHinhThucViPhamHrm: {17}{31}- SiSoThanhTra: {18}{31}- ThoiDiemGhiNhan: {19}{31}- LyDo: {20}{31}- GhiChu: {21}{31}- NgayCapNhat: {22}{31}- NguoiCapNhat: {23}{31}- MaLoaiHocPhan: {24}{31}- TuTietDenTiet: {25}{31}- TrangThai: {26}{31}- XacNhan: {27}{31}- SoTiet: {28}{31}- Lt: {29}{31}- Th: {30}{31}", 
				this.Examination,
				this.MaCanBoCoiThi,
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
			     
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
			     
				(this.HoTen == null) ? string.Empty : this.HoTen.ToString(),
			     
				(this.NgayThi == null) ? string.Empty : this.NgayThi.ToString(),
			     
				(this.ThoiGianBatDau == null) ? string.Empty : this.ThoiGianBatDau.ToString(),
			     
				(this.MaPhong == null) ? string.Empty : this.MaPhong.ToString(),
			     
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
			     
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
			     
				(this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString(),
			     
				(this.ThoiGianLamBai == null) ? string.Empty : this.ThoiGianLamBai.ToString(),
			     
				(this.TietBatDau == null) ? string.Empty : this.TietBatDau.ToString(),
			     
				(this.MaLopSinhVien == null) ? string.Empty : this.MaLopSinhVien.ToString(),
			     
				(this.SoLuongSinhVien == null) ? string.Empty : this.SoLuongSinhVien.ToString(),
			     
				(this.TenKhoaChuQuan == null) ? string.Empty : this.TenKhoaChuQuan.ToString(),
			     
				(this.MaViPham == null) ? string.Empty : this.MaViPham.ToString(),
			     
				(this.MaHinhThucViPhamHrm == null) ? string.Empty : this.MaHinhThucViPhamHrm.ToString(),
			     
				(this.SiSoThanhTra == null) ? string.Empty : this.SiSoThanhTra.ToString(),
			     
				(this.ThoiDiemGhiNhan == null) ? string.Empty : this.ThoiDiemGhiNhan.ToString(),
			     
				(this.LyDo == null) ? string.Empty : this.LyDo.ToString(),
			     
				(this.GhiChu == null) ? string.Empty : this.GhiChu.ToString(),
			     
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
			     
				(this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString(),
			     
				(this.MaLoaiHocPhan == null) ? string.Empty : this.MaLoaiHocPhan.ToString(),
			     
				(this.TuTietDenTiet == null) ? string.Empty : this.TuTietDenTiet.ToString(),
			     
				(this.TrangThai == null) ? string.Empty : this.TrangThai.ToString(),
			     
				(this.XacNhan == null) ? string.Empty : this.XacNhan.ToString(),
			     
				this.SoTiet,
				(this.Lt == null) ? string.Empty : this.Lt.ToString(),
			     
				(this.Th == null) ? string.Empty : this.Th.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ViewThanhTraCoiThi columns.
	/// </summary>
	[Serializable]
	public enum ViewThanhTraCoiThiColumn
	{
		/// <summary>
		/// Examination : 
		/// </summary>
		[EnumTextValue("Examination")]
		[ColumnEnum("Examination", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		Examination,
		/// <summary>
		/// MaCanBoCoiThi : 
		/// </summary>
		[EnumTextValue("MaCanBoCoiThi")]
		[ColumnEnum("MaCanBoCoiThi", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaCanBoCoiThi,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 101)]
		Ho,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten,
		/// <summary>
		/// HoTen : 
		/// </summary>
		[EnumTextValue("HoTen")]
		[ColumnEnum("HoTen", typeof(System.String), System.Data.DbType.String, false, false, true, 152)]
		HoTen,
		/// <summary>
		/// NgayThi : 
		/// </summary>
		[EnumTextValue("NgayThi")]
		[ColumnEnum("NgayThi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgayThi,
		/// <summary>
		/// ThoiGianBatDau : 
		/// </summary>
		[EnumTextValue("ThoiGianBatDau")]
		[ColumnEnum("ThoiGianBatDau", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		ThoiGianBatDau,
		/// <summary>
		/// MaPhong : 
		/// </summary>
		[EnumTextValue("MaPhong")]
		[ColumnEnum("MaPhong", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaPhong,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("MaLopHocPhan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLopHocPhan,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("MaMonHoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("TenMonHoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TenMonHoc,
		/// <summary>
		/// ThoiGianLamBai : 
		/// </summary>
		[EnumTextValue("ThoiGianLamBai")]
		[ColumnEnum("ThoiGianLamBai", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		ThoiGianLamBai,
		/// <summary>
		/// TietBatDau : 
		/// </summary>
		[EnumTextValue("TietBatDau")]
		[ColumnEnum("TietBatDau", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TietBatDau,
		/// <summary>
		/// MaLopSinhVien : 
		/// </summary>
		[EnumTextValue("MaLopSinhVien")]
		[ColumnEnum("MaLopSinhVien", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 2000)]
		MaLopSinhVien,
		/// <summary>
		/// SoLuongSinhVien : 
		/// </summary>
		[EnumTextValue("SoLuongSinhVien")]
		[ColumnEnum("SoLuongSinhVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoLuongSinhVien,
		/// <summary>
		/// TenKhoaChuQuan : 
		/// </summary>
		[EnumTextValue("TenKhoaChuQuan")]
		[ColumnEnum("TenKhoaChuQuan", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TenKhoaChuQuan,
		/// <summary>
		/// MaViPham : 
		/// </summary>
		[EnumTextValue("MaViPham")]
		[ColumnEnum("MaViPham", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaViPham,
		/// <summary>
		/// MaHinhThucViPhamHrm : 
		/// </summary>
		[EnumTextValue("MaHinhThucViPhamHrm")]
		[ColumnEnum("MaHinhThucViPhamHrm", typeof(System.Guid), System.Data.DbType.Guid, false, false, true)]
		MaHinhThucViPhamHrm,
		/// <summary>
		/// SiSoThanhTra : 
		/// </summary>
		[EnumTextValue("SiSoThanhTra")]
		[ColumnEnum("SiSoThanhTra", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSoThanhTra,
		/// <summary>
		/// ThoiDiemGhiNhan : 
		/// </summary>
		[EnumTextValue("ThoiDiemGhiNhan")]
		[ColumnEnum("ThoiDiemGhiNhan", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		ThoiDiemGhiNhan,
		/// <summary>
		/// LyDo : 
		/// </summary>
		[EnumTextValue("LyDo")]
		[ColumnEnum("LyDo", typeof(System.String), System.Data.DbType.String, false, false, true, 2000)]
		LyDo,
		/// <summary>
		/// GhiChu : 
		/// </summary>
		[EnumTextValue("GhiChu")]
		[ColumnEnum("GhiChu", typeof(System.String), System.Data.DbType.String, false, false, true, 2000)]
		GhiChu,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("NgayCapNhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NgayCapNhat,
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		[EnumTextValue("NguoiCapNhat")]
		[ColumnEnum("NguoiCapNhat", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		NguoiCapNhat,
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		[EnumTextValue("MaLoaiHocPhan")]
		[ColumnEnum("MaLoaiHocPhan", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiHocPhan,
		/// <summary>
		/// TuTietDenTiet : 
		/// </summary>
		[EnumTextValue("TuTietDenTiet")]
		[ColumnEnum("TuTietDenTiet", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 7)]
		TuTietDenTiet,
		/// <summary>
		/// TrangThai : 
		/// </summary>
		[EnumTextValue("TrangThai")]
		[ColumnEnum("TrangThai", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		TrangThai,
		/// <summary>
		/// XacNhan : 
		/// </summary>
		[EnumTextValue("XacNhan")]
		[ColumnEnum("XacNhan", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		XacNhan,
		/// <summary>
		/// SoTiet : 
		/// </summary>
		[EnumTextValue("SoTiet")]
		[ColumnEnum("SoTiet", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		SoTiet,
		/// <summary>
		/// Lt : 
		/// </summary>
		[EnumTextValue("Lt")]
		[ColumnEnum("Lt", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Lt,
		/// <summary>
		/// Th : 
		/// </summary>
		[EnumTextValue("Th")]
		[ColumnEnum("Th", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Th
	}//End enum

} // end namespace

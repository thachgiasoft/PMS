
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file TcbKetQuaQuyDoi.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'Tcb_KetQuaQuyDoi' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class TcbKetQuaQuyDoiBase : EntityBase, ITcbKetQuaQuyDoi, IEntityId<TcbKetQuaQuyDoiKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private TcbKetQuaQuyDoiEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private TcbKetQuaQuyDoiEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private TcbKetQuaQuyDoiEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<TcbKetQuaQuyDoi> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event TcbKetQuaQuyDoiEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event TcbKetQuaQuyDoiEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="TcbKetQuaQuyDoiBase"/> instance.
		///</summary>
		public TcbKetQuaQuyDoiBase()
		{
			this.entityData = new TcbKetQuaQuyDoiEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="TcbKetQuaQuyDoiBase"/> instance.
		///</summary>
		///<param name="_maKhoiLuongGiangDay"></param>
		///<param name="_maGiangVien"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_soTinChi"></param>
		///<param name="_soLuong"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_maBuoiHoc"></param>
		///<param name="_maLop"></param>
		///<param name="_tietBatDau"></param>
		///<param name="_soTiet"></param>
		///<param name="_tinhTrang"></param>
		///<param name="_ngayDay"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_maKhoaHoc"></param>
		///<param name="_maKhoa"></param>
		///<param name="_maNhomMonHoc"></param>
		///<param name="_maCoSo"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_donGia"></param>
		///<param name="_thanhTien"></param>
		///<param name="_congTacPhi"></param>
		///<param name="_tienGiangNgoaiGio"></param>
		///<param name="_tongThanhTien"></param>
		public TcbKetQuaQuyDoiBase(System.Int32? _maKhoiLuongGiangDay, System.String _maGiangVien, 
			System.String _maLopHocPhan, System.String _namHoc, System.String _hocKy, 
			System.String _maMonHoc, System.String _tenMonHoc, System.Decimal? _soTinChi, 
			System.Int32? _soLuong, System.String _maLoaiHocPhan, System.String _loaiHocPhan, 
			System.Int32? _maBuoiHoc, System.String _maLop, System.Int32? _tietBatDau, 
			System.Int32? _soTiet, System.Int32? _tinhTrang, System.DateTime? _ngayDay, 
			System.String _maBacDaoTao, System.String _maKhoaHoc, System.String _maKhoa, 
			System.String _maNhomMonHoc, System.String _maCoSo, System.Decimal? _heSoLopDong, 
			System.Decimal? _donGia, System.Decimal? _thanhTien, System.Decimal? _congTacPhi, 
			System.Decimal? _tienGiangNgoaiGio, System.Decimal? _tongThanhTien)
		{
			this.entityData = new TcbKetQuaQuyDoiEntityData();
			this.backupData = null;

			this.MaKhoiLuongGiangDay = _maKhoiLuongGiangDay;
			this.MaGiangVien = _maGiangVien;
			this.MaLopHocPhan = _maLopHocPhan;
			this.NamHoc = _namHoc;
			this.HocKy = _hocKy;
			this.MaMonHoc = _maMonHoc;
			this.TenMonHoc = _tenMonHoc;
			this.SoTinChi = _soTinChi;
			this.SoLuong = _soLuong;
			this.MaLoaiHocPhan = _maLoaiHocPhan;
			this.LoaiHocPhan = _loaiHocPhan;
			this.MaBuoiHoc = _maBuoiHoc;
			this.MaLop = _maLop;
			this.TietBatDau = _tietBatDau;
			this.SoTiet = _soTiet;
			this.TinhTrang = _tinhTrang;
			this.NgayDay = _ngayDay;
			this.MaBacDaoTao = _maBacDaoTao;
			this.MaKhoaHoc = _maKhoaHoc;
			this.MaKhoa = _maKhoa;
			this.MaNhomMonHoc = _maNhomMonHoc;
			this.MaCoSo = _maCoSo;
			this.HeSoLopDong = _heSoLopDong;
			this.DonGia = _donGia;
			this.ThanhTien = _thanhTien;
			this.CongTacPhi = _congTacPhi;
			this.TienGiangNgoaiGio = _tienGiangNgoaiGio;
			this.TongThanhTien = _tongThanhTien;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="TcbKetQuaQuyDoi"/> instance.
		///</summary>
		///<param name="_maKhoiLuongGiangDay"></param>
		///<param name="_maGiangVien"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_namHoc"></param>
		///<param name="_hocKy"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_tenMonHoc"></param>
		///<param name="_soTinChi"></param>
		///<param name="_soLuong"></param>
		///<param name="_maLoaiHocPhan"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_maBuoiHoc"></param>
		///<param name="_maLop"></param>
		///<param name="_tietBatDau"></param>
		///<param name="_soTiet"></param>
		///<param name="_tinhTrang"></param>
		///<param name="_ngayDay"></param>
		///<param name="_maBacDaoTao"></param>
		///<param name="_maKhoaHoc"></param>
		///<param name="_maKhoa"></param>
		///<param name="_maNhomMonHoc"></param>
		///<param name="_maCoSo"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_donGia"></param>
		///<param name="_thanhTien"></param>
		///<param name="_congTacPhi"></param>
		///<param name="_tienGiangNgoaiGio"></param>
		///<param name="_tongThanhTien"></param>
		public static TcbKetQuaQuyDoi CreateTcbKetQuaQuyDoi(System.Int32? _maKhoiLuongGiangDay, System.String _maGiangVien, 
			System.String _maLopHocPhan, System.String _namHoc, System.String _hocKy, 
			System.String _maMonHoc, System.String _tenMonHoc, System.Decimal? _soTinChi, 
			System.Int32? _soLuong, System.String _maLoaiHocPhan, System.String _loaiHocPhan, 
			System.Int32? _maBuoiHoc, System.String _maLop, System.Int32? _tietBatDau, 
			System.Int32? _soTiet, System.Int32? _tinhTrang, System.DateTime? _ngayDay, 
			System.String _maBacDaoTao, System.String _maKhoaHoc, System.String _maKhoa, 
			System.String _maNhomMonHoc, System.String _maCoSo, System.Decimal? _heSoLopDong, 
			System.Decimal? _donGia, System.Decimal? _thanhTien, System.Decimal? _congTacPhi, 
			System.Decimal? _tienGiangNgoaiGio, System.Decimal? _tongThanhTien)
		{
			TcbKetQuaQuyDoi newTcbKetQuaQuyDoi = new TcbKetQuaQuyDoi();
			newTcbKetQuaQuyDoi.MaKhoiLuongGiangDay = _maKhoiLuongGiangDay;
			newTcbKetQuaQuyDoi.MaGiangVien = _maGiangVien;
			newTcbKetQuaQuyDoi.MaLopHocPhan = _maLopHocPhan;
			newTcbKetQuaQuyDoi.NamHoc = _namHoc;
			newTcbKetQuaQuyDoi.HocKy = _hocKy;
			newTcbKetQuaQuyDoi.MaMonHoc = _maMonHoc;
			newTcbKetQuaQuyDoi.TenMonHoc = _tenMonHoc;
			newTcbKetQuaQuyDoi.SoTinChi = _soTinChi;
			newTcbKetQuaQuyDoi.SoLuong = _soLuong;
			newTcbKetQuaQuyDoi.MaLoaiHocPhan = _maLoaiHocPhan;
			newTcbKetQuaQuyDoi.LoaiHocPhan = _loaiHocPhan;
			newTcbKetQuaQuyDoi.MaBuoiHoc = _maBuoiHoc;
			newTcbKetQuaQuyDoi.MaLop = _maLop;
			newTcbKetQuaQuyDoi.TietBatDau = _tietBatDau;
			newTcbKetQuaQuyDoi.SoTiet = _soTiet;
			newTcbKetQuaQuyDoi.TinhTrang = _tinhTrang;
			newTcbKetQuaQuyDoi.NgayDay = _ngayDay;
			newTcbKetQuaQuyDoi.MaBacDaoTao = _maBacDaoTao;
			newTcbKetQuaQuyDoi.MaKhoaHoc = _maKhoaHoc;
			newTcbKetQuaQuyDoi.MaKhoa = _maKhoa;
			newTcbKetQuaQuyDoi.MaNhomMonHoc = _maNhomMonHoc;
			newTcbKetQuaQuyDoi.MaCoSo = _maCoSo;
			newTcbKetQuaQuyDoi.HeSoLopDong = _heSoLopDong;
			newTcbKetQuaQuyDoi.DonGia = _donGia;
			newTcbKetQuaQuyDoi.ThanhTien = _thanhTien;
			newTcbKetQuaQuyDoi.CongTacPhi = _congTacPhi;
			newTcbKetQuaQuyDoi.TienGiangNgoaiGio = _tienGiangNgoaiGio;
			newTcbKetQuaQuyDoi.TongThanhTien = _tongThanhTien;
			return newTcbKetQuaQuyDoi;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
				
                OnPropertyChanging("Id");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaKhoiLuongGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaKhoiLuongGiangDay
		{
			get
			{
				return this.entityData.MaKhoiLuongGiangDay; 
			}
			
			set
			{
				if (this.entityData.MaKhoiLuongGiangDay == value)
					return;
				
                OnPropertyChanging("MaKhoiLuongGiangDay");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaKhoiLuongGiangDay, this.entityData.MaKhoiLuongGiangDay);
				this.entityData.MaKhoiLuongGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaKhoiLuongGiangDay, this.entityData.MaKhoiLuongGiangDay);
				OnPropertyChanged("MaKhoiLuongGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaGiangVien
		{
			get
			{
				return this.entityData.MaGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaGiangVien == value)
					return;
				
                OnPropertyChanging("MaGiangVien");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaGiangVien, this.entityData.MaGiangVien);
				this.entityData.MaGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaGiangVien, this.entityData.MaGiangVien);
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this.entityData.MaLopHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaLopHocPhan == value)
					return;
				
                OnPropertyChanging("MaLopHocPhan");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				this.entityData.MaLopHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NamHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NamHoc
		{
			get
			{
				return this.entityData.NamHoc; 
			}
			
			set
			{
				if (this.entityData.NamHoc == value)
					return;
				
                OnPropertyChanging("NamHoc");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.NamHoc, this.entityData.NamHoc);
				this.entityData.NamHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.NamHoc, this.entityData.NamHoc);
				OnPropertyChanged("NamHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HocKy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String HocKy
		{
			get
			{
				return this.entityData.HocKy; 
			}
			
			set
			{
				if (this.entityData.HocKy == value)
					return;
				
                OnPropertyChanging("HocKy");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.HocKy, this.entityData.HocKy);
				this.entityData.HocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.HocKy, this.entityData.HocKy);
				OnPropertyChanged("HocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this.entityData.MaMonHoc; 
			}
			
			set
			{
				if (this.entityData.MaMonHoc == value)
					return;
				
                OnPropertyChanging("MaMonHoc");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaMonHoc, this.entityData.MaMonHoc);
				this.entityData.MaMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaMonHoc, this.entityData.MaMonHoc);
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String TenMonHoc
		{
			get
			{
				return this.entityData.TenMonHoc; 
			}
			
			set
			{
				if (this.entityData.TenMonHoc == value)
					return;
				
                OnPropertyChanging("TenMonHoc");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.TenMonHoc, this.entityData.TenMonHoc);
				this.entityData.TenMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.TenMonHoc, this.entityData.TenMonHoc);
				OnPropertyChanged("TenMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTinChi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTinChi
		{
			get
			{
				return this.entityData.SoTinChi; 
			}
			
			set
			{
				if (this.entityData.SoTinChi == value)
					return;
				
                OnPropertyChanging("SoTinChi");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.SoTinChi, this.entityData.SoTinChi);
				this.entityData.SoTinChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.SoTinChi, this.entityData.SoTinChi);
				OnPropertyChanged("SoTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoLuong property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoLuong
		{
			get
			{
				return this.entityData.SoLuong; 
			}
			
			set
			{
				if (this.entityData.SoLuong == value)
					return;
				
                OnPropertyChanging("SoLuong");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.SoLuong, this.entityData.SoLuong);
				this.entityData.SoLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.SoLuong, this.entityData.SoLuong);
				OnPropertyChanged("SoLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaLoaiHocPhan
		{
			get
			{
				return this.entityData.MaLoaiHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaLoaiHocPhan == value)
					return;
				
                OnPropertyChanging("MaLoaiHocPhan");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaLoaiHocPhan, this.entityData.MaLoaiHocPhan);
				this.entityData.MaLoaiHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaLoaiHocPhan, this.entityData.MaLoaiHocPhan);
				OnPropertyChanged("MaLoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String LoaiHocPhan
		{
			get
			{
				return this.entityData.LoaiHocPhan; 
			}
			
			set
			{
				if (this.entityData.LoaiHocPhan == value)
					return;
				
                OnPropertyChanging("LoaiHocPhan");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.LoaiHocPhan, this.entityData.LoaiHocPhan);
				this.entityData.LoaiHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.LoaiHocPhan, this.entityData.LoaiHocPhan);
				OnPropertyChanged("LoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaBuoiHoc property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaBuoiHoc
		{
			get
			{
				return this.entityData.MaBuoiHoc; 
			}
			
			set
			{
				if (this.entityData.MaBuoiHoc == value)
					return;
				
                OnPropertyChanging("MaBuoiHoc");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaBuoiHoc, this.entityData.MaBuoiHoc);
				this.entityData.MaBuoiHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaBuoiHoc, this.entityData.MaBuoiHoc);
				OnPropertyChanged("MaBuoiHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String MaLop
		{
			get
			{
				return this.entityData.MaLop; 
			}
			
			set
			{
				if (this.entityData.MaLop == value)
					return;
				
                OnPropertyChanging("MaLop");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaLop, this.entityData.MaLop);
				this.entityData.MaLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaLop, this.entityData.MaLop);
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietBatDau property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? TietBatDau
		{
			get
			{
				return this.entityData.TietBatDau; 
			}
			
			set
			{
				if (this.entityData.TietBatDau == value)
					return;
				
                OnPropertyChanging("TietBatDau");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.TietBatDau, this.entityData.TietBatDau);
				this.entityData.TietBatDau = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.TietBatDau, this.entityData.TietBatDau);
				OnPropertyChanged("TietBatDau");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTiet property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoTiet
		{
			get
			{
				return this.entityData.SoTiet; 
			}
			
			set
			{
				if (this.entityData.SoTiet == value)
					return;
				
                OnPropertyChanging("SoTiet");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.SoTiet, this.entityData.SoTiet);
				this.entityData.SoTiet = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.SoTiet, this.entityData.SoTiet);
				OnPropertyChanged("SoTiet");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TinhTrang property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? TinhTrang
		{
			get
			{
				return this.entityData.TinhTrang; 
			}
			
			set
			{
				if (this.entityData.TinhTrang == value)
					return;
				
                OnPropertyChanging("TinhTrang");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.TinhTrang, this.entityData.TinhTrang);
				this.entityData.TinhTrang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.TinhTrang, this.entityData.TinhTrang);
				OnPropertyChanged("TinhTrang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayDay property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayDay
		{
			get
			{
				return this.entityData.NgayDay; 
			}
			
			set
			{
				if (this.entityData.NgayDay == value)
					return;
				
                OnPropertyChanging("NgayDay");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.NgayDay, this.entityData.NgayDay);
				this.entityData.NgayDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.NgayDay, this.entityData.NgayDay);
				OnPropertyChanged("NgayDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaBacDaoTao
		{
			get
			{
				return this.entityData.MaBacDaoTao; 
			}
			
			set
			{
				if (this.entityData.MaBacDaoTao == value)
					return;
				
                OnPropertyChanging("MaBacDaoTao");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaBacDaoTao, this.entityData.MaBacDaoTao);
				this.entityData.MaBacDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaBacDaoTao, this.entityData.MaBacDaoTao);
				OnPropertyChanged("MaBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaKhoaHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaKhoaHoc
		{
			get
			{
				return this.entityData.MaKhoaHoc; 
			}
			
			set
			{
				if (this.entityData.MaKhoaHoc == value)
					return;
				
                OnPropertyChanging("MaKhoaHoc");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaKhoaHoc, this.entityData.MaKhoaHoc);
				this.entityData.MaKhoaHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaKhoaHoc, this.entityData.MaKhoaHoc);
				OnPropertyChanged("MaKhoaHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaKhoa property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaKhoa
		{
			get
			{
				return this.entityData.MaKhoa; 
			}
			
			set
			{
				if (this.entityData.MaKhoa == value)
					return;
				
                OnPropertyChanging("MaKhoa");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaKhoa, this.entityData.MaKhoa);
				this.entityData.MaKhoa = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaKhoa, this.entityData.MaKhoa);
				OnPropertyChanged("MaKhoa");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaNhomMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaNhomMonHoc
		{
			get
			{
				return this.entityData.MaNhomMonHoc; 
			}
			
			set
			{
				if (this.entityData.MaNhomMonHoc == value)
					return;
				
                OnPropertyChanging("MaNhomMonHoc");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaNhomMonHoc, this.entityData.MaNhomMonHoc);
				this.entityData.MaNhomMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaNhomMonHoc, this.entityData.MaNhomMonHoc);
				OnPropertyChanged("MaNhomMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaCoSo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MaCoSo
		{
			get
			{
				return this.entityData.MaCoSo; 
			}
			
			set
			{
				if (this.entityData.MaCoSo == value)
					return;
				
                OnPropertyChanging("MaCoSo");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.MaCoSo, this.entityData.MaCoSo);
				this.entityData.MaCoSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.MaCoSo, this.entityData.MaCoSo);
				OnPropertyChanged("MaCoSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoLopDong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoLopDong
		{
			get
			{
				return this.entityData.HeSoLopDong; 
			}
			
			set
			{
				if (this.entityData.HeSoLopDong == value)
					return;
				
                OnPropertyChanging("HeSoLopDong");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				this.entityData.HeSoLopDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				OnPropertyChanged("HeSoLopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DonGia property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DonGia
		{
			get
			{
				return this.entityData.DonGia; 
			}
			
			set
			{
				if (this.entityData.DonGia == value)
					return;
				
                OnPropertyChanging("DonGia");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.DonGia, this.entityData.DonGia);
				this.entityData.DonGia = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.DonGia, this.entityData.DonGia);
				OnPropertyChanged("DonGia");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThanhTien property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ThanhTien
		{
			get
			{
				return this.entityData.ThanhTien; 
			}
			
			set
			{
				if (this.entityData.ThanhTien == value)
					return;
				
                OnPropertyChanging("ThanhTien");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.ThanhTien, this.entityData.ThanhTien);
				this.entityData.ThanhTien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.ThanhTien, this.entityData.ThanhTien);
				OnPropertyChanged("ThanhTien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CongTacPhi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CongTacPhi
		{
			get
			{
				return this.entityData.CongTacPhi; 
			}
			
			set
			{
				if (this.entityData.CongTacPhi == value)
					return;
				
                OnPropertyChanging("CongTacPhi");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.CongTacPhi, this.entityData.CongTacPhi);
				this.entityData.CongTacPhi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.CongTacPhi, this.entityData.CongTacPhi);
				OnPropertyChanged("CongTacPhi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TienGiangNgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TienGiangNgoaiGio
		{
			get
			{
				return this.entityData.TienGiangNgoaiGio; 
			}
			
			set
			{
				if (this.entityData.TienGiangNgoaiGio == value)
					return;
				
                OnPropertyChanging("TienGiangNgoaiGio");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.TienGiangNgoaiGio, this.entityData.TienGiangNgoaiGio);
				this.entityData.TienGiangNgoaiGio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.TienGiangNgoaiGio, this.entityData.TienGiangNgoaiGio);
				OnPropertyChanged("TienGiangNgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TongThanhTien property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TongThanhTien
		{
			get
			{
				return this.entityData.TongThanhTien; 
			}
			
			set
			{
				if (this.entityData.TongThanhTien == value)
					return;
				
                OnPropertyChanging("TongThanhTien");                    
				OnColumnChanging(TcbKetQuaQuyDoiColumn.TongThanhTien, this.entityData.TongThanhTien);
				this.entityData.TongThanhTien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(TcbKetQuaQuyDoiColumn.TongThanhTien, this.entityData.TongThanhTien);
				OnPropertyChanged("TongThanhTien");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaGiangVien", "Ma Giang Vien", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLopHocPhan", "Ma Lop Hoc Phan", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NamHoc", "Nam Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HocKy", "Hoc Ky", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaMonHoc", "Ma Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenMonHoc", "Ten Mon Hoc", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLoaiHocPhan", "Ma Loai Hoc Phan", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LoaiHocPhan", "Loai Hoc Phan", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLop", "Ma Lop", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaBacDaoTao", "Ma Bac Dao Tao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaKhoaHoc", "Ma Khoa Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaKhoa", "Ma Khoa", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaNhomMonHoc", "Ma Nhom Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaCoSo", "Ma Co So", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "Tcb_KetQuaQuyDoi"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Id", "MaKhoiLuongGiangDay", "MaGiangVien", "MaLopHocPhan", "NamHoc", "HocKy", "MaMonHoc", "TenMonHoc", "SoTinChi", "SoLuong", "MaLoaiHocPhan", "LoaiHocPhan", "MaBuoiHoc", "MaLop", "TietBatDau", "SoTiet", "TinhTrang", "NgayDay", "MaBacDaoTao", "MaKhoaHoc", "MaKhoa", "MaNhomMonHoc", "MaCoSo", "HeSoLopDong", "DonGia", "ThanhTien", "CongTacPhi", "TienGiangNgoaiGio", "TongThanhTien"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as TcbKetQuaQuyDoiEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (TcbKetQuaQuyDoi) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<TcbKetQuaQuyDoi>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as TcbKetQuaQuyDoi);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed TcbKetQuaQuyDoi Entity 
		///</summary>
		protected virtual TcbKetQuaQuyDoi Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			TcbKetQuaQuyDoi copy = new TcbKetQuaQuyDoi();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.Id = this.Id;
				copy.MaKhoiLuongGiangDay = this.MaKhoiLuongGiangDay;
				copy.MaGiangVien = this.MaGiangVien;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.NamHoc = this.NamHoc;
				copy.HocKy = this.HocKy;
				copy.MaMonHoc = this.MaMonHoc;
				copy.TenMonHoc = this.TenMonHoc;
				copy.SoTinChi = this.SoTinChi;
				copy.SoLuong = this.SoLuong;
				copy.MaLoaiHocPhan = this.MaLoaiHocPhan;
				copy.LoaiHocPhan = this.LoaiHocPhan;
				copy.MaBuoiHoc = this.MaBuoiHoc;
				copy.MaLop = this.MaLop;
				copy.TietBatDau = this.TietBatDau;
				copy.SoTiet = this.SoTiet;
				copy.TinhTrang = this.TinhTrang;
				copy.NgayDay = this.NgayDay;
				copy.MaBacDaoTao = this.MaBacDaoTao;
				copy.MaKhoaHoc = this.MaKhoaHoc;
				copy.MaKhoa = this.MaKhoa;
				copy.MaNhomMonHoc = this.MaNhomMonHoc;
				copy.MaCoSo = this.MaCoSo;
				copy.HeSoLopDong = this.HeSoLopDong;
				copy.DonGia = this.DonGia;
				copy.ThanhTien = this.ThanhTien;
				copy.CongTacPhi = this.CongTacPhi;
				copy.TienGiangNgoaiGio = this.TienGiangNgoaiGio;
				copy.TongThanhTien = this.TongThanhTien;
			
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed TcbKetQuaQuyDoi Entity 
		///</summary>
		public virtual TcbKetQuaQuyDoi Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed TcbKetQuaQuyDoi Entity which is a deep copy of the current entity.
		///</summary>
		public virtual TcbKetQuaQuyDoi DeepCopy()
		{
			return EntityHelper.Clone<TcbKetQuaQuyDoi>(this as TcbKetQuaQuyDoi);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as TcbKetQuaQuyDoiEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new TcbKetQuaQuyDoiEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as TcbKetQuaQuyDoiEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(TcbKetQuaQuyDoiColumn column)
		{
			switch(column)
			{
					case TcbKetQuaQuyDoiColumn.Id:
					return entityData.Id != _originalData.Id;
					case TcbKetQuaQuyDoiColumn.MaKhoiLuongGiangDay:
					return entityData.MaKhoiLuongGiangDay != _originalData.MaKhoiLuongGiangDay;
					case TcbKetQuaQuyDoiColumn.MaGiangVien:
					return entityData.MaGiangVien != _originalData.MaGiangVien;
					case TcbKetQuaQuyDoiColumn.MaLopHocPhan:
					return entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
					case TcbKetQuaQuyDoiColumn.NamHoc:
					return entityData.NamHoc != _originalData.NamHoc;
					case TcbKetQuaQuyDoiColumn.HocKy:
					return entityData.HocKy != _originalData.HocKy;
					case TcbKetQuaQuyDoiColumn.MaMonHoc:
					return entityData.MaMonHoc != _originalData.MaMonHoc;
					case TcbKetQuaQuyDoiColumn.TenMonHoc:
					return entityData.TenMonHoc != _originalData.TenMonHoc;
					case TcbKetQuaQuyDoiColumn.SoTinChi:
					return entityData.SoTinChi != _originalData.SoTinChi;
					case TcbKetQuaQuyDoiColumn.SoLuong:
					return entityData.SoLuong != _originalData.SoLuong;
					case TcbKetQuaQuyDoiColumn.MaLoaiHocPhan:
					return entityData.MaLoaiHocPhan != _originalData.MaLoaiHocPhan;
					case TcbKetQuaQuyDoiColumn.LoaiHocPhan:
					return entityData.LoaiHocPhan != _originalData.LoaiHocPhan;
					case TcbKetQuaQuyDoiColumn.MaBuoiHoc:
					return entityData.MaBuoiHoc != _originalData.MaBuoiHoc;
					case TcbKetQuaQuyDoiColumn.MaLop:
					return entityData.MaLop != _originalData.MaLop;
					case TcbKetQuaQuyDoiColumn.TietBatDau:
					return entityData.TietBatDau != _originalData.TietBatDau;
					case TcbKetQuaQuyDoiColumn.SoTiet:
					return entityData.SoTiet != _originalData.SoTiet;
					case TcbKetQuaQuyDoiColumn.TinhTrang:
					return entityData.TinhTrang != _originalData.TinhTrang;
					case TcbKetQuaQuyDoiColumn.NgayDay:
					return entityData.NgayDay != _originalData.NgayDay;
					case TcbKetQuaQuyDoiColumn.MaBacDaoTao:
					return entityData.MaBacDaoTao != _originalData.MaBacDaoTao;
					case TcbKetQuaQuyDoiColumn.MaKhoaHoc:
					return entityData.MaKhoaHoc != _originalData.MaKhoaHoc;
					case TcbKetQuaQuyDoiColumn.MaKhoa:
					return entityData.MaKhoa != _originalData.MaKhoa;
					case TcbKetQuaQuyDoiColumn.MaNhomMonHoc:
					return entityData.MaNhomMonHoc != _originalData.MaNhomMonHoc;
					case TcbKetQuaQuyDoiColumn.MaCoSo:
					return entityData.MaCoSo != _originalData.MaCoSo;
					case TcbKetQuaQuyDoiColumn.HeSoLopDong:
					return entityData.HeSoLopDong != _originalData.HeSoLopDong;
					case TcbKetQuaQuyDoiColumn.DonGia:
					return entityData.DonGia != _originalData.DonGia;
					case TcbKetQuaQuyDoiColumn.ThanhTien:
					return entityData.ThanhTien != _originalData.ThanhTien;
					case TcbKetQuaQuyDoiColumn.CongTacPhi:
					return entityData.CongTacPhi != _originalData.CongTacPhi;
					case TcbKetQuaQuyDoiColumn.TienGiangNgoaiGio:
					return entityData.TienGiangNgoaiGio != _originalData.TienGiangNgoaiGio;
					case TcbKetQuaQuyDoiColumn.TongThanhTien:
					return entityData.TongThanhTien != _originalData.TongThanhTien;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< TcbKetQuaQuyDoiColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.MaKhoiLuongGiangDay != _originalData.MaKhoiLuongGiangDay;
			result = result || entityData.MaGiangVien != _originalData.MaGiangVien;
			result = result || entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
			result = result || entityData.NamHoc != _originalData.NamHoc;
			result = result || entityData.HocKy != _originalData.HocKy;
			result = result || entityData.MaMonHoc != _originalData.MaMonHoc;
			result = result || entityData.TenMonHoc != _originalData.TenMonHoc;
			result = result || entityData.SoTinChi != _originalData.SoTinChi;
			result = result || entityData.SoLuong != _originalData.SoLuong;
			result = result || entityData.MaLoaiHocPhan != _originalData.MaLoaiHocPhan;
			result = result || entityData.LoaiHocPhan != _originalData.LoaiHocPhan;
			result = result || entityData.MaBuoiHoc != _originalData.MaBuoiHoc;
			result = result || entityData.MaLop != _originalData.MaLop;
			result = result || entityData.TietBatDau != _originalData.TietBatDau;
			result = result || entityData.SoTiet != _originalData.SoTiet;
			result = result || entityData.TinhTrang != _originalData.TinhTrang;
			result = result || entityData.NgayDay != _originalData.NgayDay;
			result = result || entityData.MaBacDaoTao != _originalData.MaBacDaoTao;
			result = result || entityData.MaKhoaHoc != _originalData.MaKhoaHoc;
			result = result || entityData.MaKhoa != _originalData.MaKhoa;
			result = result || entityData.MaNhomMonHoc != _originalData.MaNhomMonHoc;
			result = result || entityData.MaCoSo != _originalData.MaCoSo;
			result = result || entityData.HeSoLopDong != _originalData.HeSoLopDong;
			result = result || entityData.DonGia != _originalData.DonGia;
			result = result || entityData.ThanhTien != _originalData.ThanhTien;
			result = result || entityData.CongTacPhi != _originalData.CongTacPhi;
			result = result || entityData.TienGiangNgoaiGio != _originalData.TienGiangNgoaiGio;
			result = result || entityData.TongThanhTien != _originalData.TongThanhTien;
			return result;
		}	
		
		///<summary>
		///  Returns a TcbKetQuaQuyDoi Entity with the original data.
		///</summary>
		public TcbKetQuaQuyDoi GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateTcbKetQuaQuyDoi(
				_originalData.MaKhoiLuongGiangDay,
				_originalData.MaGiangVien,
				_originalData.MaLopHocPhan,
				_originalData.NamHoc,
				_originalData.HocKy,
				_originalData.MaMonHoc,
				_originalData.TenMonHoc,
				_originalData.SoTinChi,
				_originalData.SoLuong,
				_originalData.MaLoaiHocPhan,
				_originalData.LoaiHocPhan,
				_originalData.MaBuoiHoc,
				_originalData.MaLop,
				_originalData.TietBatDau,
				_originalData.SoTiet,
				_originalData.TinhTrang,
				_originalData.NgayDay,
				_originalData.MaBacDaoTao,
				_originalData.MaKhoaHoc,
				_originalData.MaKhoa,
				_originalData.MaNhomMonHoc,
				_originalData.MaCoSo,
				_originalData.HeSoLopDong,
				_originalData.DonGia,
				_originalData.ThanhTien,
				_originalData.CongTacPhi,
				_originalData.TienGiangNgoaiGio,
				_originalData.TongThanhTien
				);
				
			return (TcbKetQuaQuyDoi)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="TcbKetQuaQuyDoiBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is TcbKetQuaQuyDoiBase)
				return ValueEquals(this, (TcbKetQuaQuyDoiBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="TcbKetQuaQuyDoiBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.MaKhoiLuongGiangDay == null) ? string.Empty : this.MaKhoiLuongGiangDay.ToString()).GetHashCode() ^ 
					((this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString()).GetHashCode() ^ 
					((this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString()).GetHashCode() ^ 
					((this.NamHoc == null) ? string.Empty : this.NamHoc.ToString()).GetHashCode() ^ 
					((this.HocKy == null) ? string.Empty : this.HocKy.ToString()).GetHashCode() ^ 
					((this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString()).GetHashCode() ^ 
					((this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString()).GetHashCode() ^ 
					((this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString()).GetHashCode() ^ 
					((this.SoLuong == null) ? string.Empty : this.SoLuong.ToString()).GetHashCode() ^ 
					((this.MaLoaiHocPhan == null) ? string.Empty : this.MaLoaiHocPhan.ToString()).GetHashCode() ^ 
					((this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString()).GetHashCode() ^ 
					((this.MaBuoiHoc == null) ? string.Empty : this.MaBuoiHoc.ToString()).GetHashCode() ^ 
					((this.MaLop == null) ? string.Empty : this.MaLop.ToString()).GetHashCode() ^ 
					((this.TietBatDau == null) ? string.Empty : this.TietBatDau.ToString()).GetHashCode() ^ 
					((this.SoTiet == null) ? string.Empty : this.SoTiet.ToString()).GetHashCode() ^ 
					((this.TinhTrang == null) ? string.Empty : this.TinhTrang.ToString()).GetHashCode() ^ 
					((this.NgayDay == null) ? string.Empty : this.NgayDay.ToString()).GetHashCode() ^ 
					((this.MaBacDaoTao == null) ? string.Empty : this.MaBacDaoTao.ToString()).GetHashCode() ^ 
					((this.MaKhoaHoc == null) ? string.Empty : this.MaKhoaHoc.ToString()).GetHashCode() ^ 
					((this.MaKhoa == null) ? string.Empty : this.MaKhoa.ToString()).GetHashCode() ^ 
					((this.MaNhomMonHoc == null) ? string.Empty : this.MaNhomMonHoc.ToString()).GetHashCode() ^ 
					((this.MaCoSo == null) ? string.Empty : this.MaCoSo.ToString()).GetHashCode() ^ 
					((this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString()).GetHashCode() ^ 
					((this.DonGia == null) ? string.Empty : this.DonGia.ToString()).GetHashCode() ^ 
					((this.ThanhTien == null) ? string.Empty : this.ThanhTien.ToString()).GetHashCode() ^ 
					((this.CongTacPhi == null) ? string.Empty : this.CongTacPhi.ToString()).GetHashCode() ^ 
					((this.TienGiangNgoaiGio == null) ? string.Empty : this.TienGiangNgoaiGio.ToString()).GetHashCode() ^ 
					((this.TongThanhTien == null) ? string.Empty : this.TongThanhTien.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="TcbKetQuaQuyDoiBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(TcbKetQuaQuyDoiBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="TcbKetQuaQuyDoiBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="TcbKetQuaQuyDoiBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="TcbKetQuaQuyDoiBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(TcbKetQuaQuyDoiBase Object1, TcbKetQuaQuyDoiBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.MaKhoiLuongGiangDay != null && Object2.MaKhoiLuongGiangDay != null )
			{
				if (Object1.MaKhoiLuongGiangDay != Object2.MaKhoiLuongGiangDay)
					equal = false;
			}
			else if (Object1.MaKhoiLuongGiangDay == null ^ Object2.MaKhoiLuongGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.MaGiangVien != null && Object2.MaGiangVien != null )
			{
				if (Object1.MaGiangVien != Object2.MaGiangVien)
					equal = false;
			}
			else if (Object1.MaGiangVien == null ^ Object2.MaGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object2.MaLopHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.NamHoc != null && Object2.NamHoc != null )
			{
				if (Object1.NamHoc != Object2.NamHoc)
					equal = false;
			}
			else if (Object1.NamHoc == null ^ Object2.NamHoc == null )
			{
				equal = false;
			}
			if ( Object1.HocKy != null && Object2.HocKy != null )
			{
				if (Object1.HocKy != Object2.HocKy)
					equal = false;
			}
			else if (Object1.HocKy == null ^ Object2.HocKy == null )
			{
				equal = false;
			}
			if ( Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object2.MaMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.TenMonHoc != null && Object2.TenMonHoc != null )
			{
				if (Object1.TenMonHoc != Object2.TenMonHoc)
					equal = false;
			}
			else if (Object1.TenMonHoc == null ^ Object2.TenMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.SoTinChi != null && Object2.SoTinChi != null )
			{
				if (Object1.SoTinChi != Object2.SoTinChi)
					equal = false;
			}
			else if (Object1.SoTinChi == null ^ Object2.SoTinChi == null )
			{
				equal = false;
			}
			if ( Object1.SoLuong != null && Object2.SoLuong != null )
			{
				if (Object1.SoLuong != Object2.SoLuong)
					equal = false;
			}
			else if (Object1.SoLuong == null ^ Object2.SoLuong == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiHocPhan != null && Object2.MaLoaiHocPhan != null )
			{
				if (Object1.MaLoaiHocPhan != Object2.MaLoaiHocPhan)
					equal = false;
			}
			else if (Object1.MaLoaiHocPhan == null ^ Object2.MaLoaiHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.LoaiHocPhan != null && Object2.LoaiHocPhan != null )
			{
				if (Object1.LoaiHocPhan != Object2.LoaiHocPhan)
					equal = false;
			}
			else if (Object1.LoaiHocPhan == null ^ Object2.LoaiHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.MaBuoiHoc != null && Object2.MaBuoiHoc != null )
			{
				if (Object1.MaBuoiHoc != Object2.MaBuoiHoc)
					equal = false;
			}
			else if (Object1.MaBuoiHoc == null ^ Object2.MaBuoiHoc == null )
			{
				equal = false;
			}
			if ( Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object2.MaLop == null )
			{
				equal = false;
			}
			if ( Object1.TietBatDau != null && Object2.TietBatDau != null )
			{
				if (Object1.TietBatDau != Object2.TietBatDau)
					equal = false;
			}
			else if (Object1.TietBatDau == null ^ Object2.TietBatDau == null )
			{
				equal = false;
			}
			if ( Object1.SoTiet != null && Object2.SoTiet != null )
			{
				if (Object1.SoTiet != Object2.SoTiet)
					equal = false;
			}
			else if (Object1.SoTiet == null ^ Object2.SoTiet == null )
			{
				equal = false;
			}
			if ( Object1.TinhTrang != null && Object2.TinhTrang != null )
			{
				if (Object1.TinhTrang != Object2.TinhTrang)
					equal = false;
			}
			else if (Object1.TinhTrang == null ^ Object2.TinhTrang == null )
			{
				equal = false;
			}
			if ( Object1.NgayDay != null && Object2.NgayDay != null )
			{
				if (Object1.NgayDay != Object2.NgayDay)
					equal = false;
			}
			else if (Object1.NgayDay == null ^ Object2.NgayDay == null )
			{
				equal = false;
			}
			if ( Object1.MaBacDaoTao != null && Object2.MaBacDaoTao != null )
			{
				if (Object1.MaBacDaoTao != Object2.MaBacDaoTao)
					equal = false;
			}
			else if (Object1.MaBacDaoTao == null ^ Object2.MaBacDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.MaKhoaHoc != null && Object2.MaKhoaHoc != null )
			{
				if (Object1.MaKhoaHoc != Object2.MaKhoaHoc)
					equal = false;
			}
			else if (Object1.MaKhoaHoc == null ^ Object2.MaKhoaHoc == null )
			{
				equal = false;
			}
			if ( Object1.MaKhoa != null && Object2.MaKhoa != null )
			{
				if (Object1.MaKhoa != Object2.MaKhoa)
					equal = false;
			}
			else if (Object1.MaKhoa == null ^ Object2.MaKhoa == null )
			{
				equal = false;
			}
			if ( Object1.MaNhomMonHoc != null && Object2.MaNhomMonHoc != null )
			{
				if (Object1.MaNhomMonHoc != Object2.MaNhomMonHoc)
					equal = false;
			}
			else if (Object1.MaNhomMonHoc == null ^ Object2.MaNhomMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.MaCoSo != null && Object2.MaCoSo != null )
			{
				if (Object1.MaCoSo != Object2.MaCoSo)
					equal = false;
			}
			else if (Object1.MaCoSo == null ^ Object2.MaCoSo == null )
			{
				equal = false;
			}
			if ( Object1.HeSoLopDong != null && Object2.HeSoLopDong != null )
			{
				if (Object1.HeSoLopDong != Object2.HeSoLopDong)
					equal = false;
			}
			else if (Object1.HeSoLopDong == null ^ Object2.HeSoLopDong == null )
			{
				equal = false;
			}
			if ( Object1.DonGia != null && Object2.DonGia != null )
			{
				if (Object1.DonGia != Object2.DonGia)
					equal = false;
			}
			else if (Object1.DonGia == null ^ Object2.DonGia == null )
			{
				equal = false;
			}
			if ( Object1.ThanhTien != null && Object2.ThanhTien != null )
			{
				if (Object1.ThanhTien != Object2.ThanhTien)
					equal = false;
			}
			else if (Object1.ThanhTien == null ^ Object2.ThanhTien == null )
			{
				equal = false;
			}
			if ( Object1.CongTacPhi != null && Object2.CongTacPhi != null )
			{
				if (Object1.CongTacPhi != Object2.CongTacPhi)
					equal = false;
			}
			else if (Object1.CongTacPhi == null ^ Object2.CongTacPhi == null )
			{
				equal = false;
			}
			if ( Object1.TienGiangNgoaiGio != null && Object2.TienGiangNgoaiGio != null )
			{
				if (Object1.TienGiangNgoaiGio != Object2.TienGiangNgoaiGio)
					equal = false;
			}
			else if (Object1.TienGiangNgoaiGio == null ^ Object2.TienGiangNgoaiGio == null )
			{
				equal = false;
			}
			if ( Object1.TongThanhTien != null && Object2.TongThanhTien != null )
			{
				if (Object1.TongThanhTien != Object2.TongThanhTien)
					equal = false;
			}
			else if (Object1.TongThanhTien == null ^ Object2.TongThanhTien == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((TcbKetQuaQuyDoiBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static TcbKetQuaQuyDoiComparer GetComparer()
        {
            return new TcbKetQuaQuyDoiComparer();
        }
        */

        // Comparer delegates back to TcbKetQuaQuyDoi
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(TcbKetQuaQuyDoi rhs, TcbKetQuaQuyDoiColumn which)
        {
            switch (which)
            {
            	
            	
            	case TcbKetQuaQuyDoiColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaKhoiLuongGiangDay:
            		return this.MaKhoiLuongGiangDay.Value.CompareTo(rhs.MaKhoiLuongGiangDay.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaGiangVien:
            		return this.MaGiangVien.CompareTo(rhs.MaGiangVien);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaLopHocPhan:
            		return this.MaLopHocPhan.CompareTo(rhs.MaLopHocPhan);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.NamHoc:
            		return this.NamHoc.CompareTo(rhs.NamHoc);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.HocKy:
            		return this.HocKy.CompareTo(rhs.HocKy);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaMonHoc:
            		return this.MaMonHoc.CompareTo(rhs.MaMonHoc);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.TenMonHoc:
            		return this.TenMonHoc.CompareTo(rhs.TenMonHoc);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.SoTinChi:
            		return this.SoTinChi.Value.CompareTo(rhs.SoTinChi.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.SoLuong:
            		return this.SoLuong.Value.CompareTo(rhs.SoLuong.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaLoaiHocPhan:
            		return this.MaLoaiHocPhan.CompareTo(rhs.MaLoaiHocPhan);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.LoaiHocPhan:
            		return this.LoaiHocPhan.CompareTo(rhs.LoaiHocPhan);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaBuoiHoc:
            		return this.MaBuoiHoc.Value.CompareTo(rhs.MaBuoiHoc.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaLop:
            		return this.MaLop.CompareTo(rhs.MaLop);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.TietBatDau:
            		return this.TietBatDau.Value.CompareTo(rhs.TietBatDau.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.SoTiet:
            		return this.SoTiet.Value.CompareTo(rhs.SoTiet.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.TinhTrang:
            		return this.TinhTrang.Value.CompareTo(rhs.TinhTrang.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.NgayDay:
            		return this.NgayDay.Value.CompareTo(rhs.NgayDay.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaBacDaoTao:
            		return this.MaBacDaoTao.CompareTo(rhs.MaBacDaoTao);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaKhoaHoc:
            		return this.MaKhoaHoc.CompareTo(rhs.MaKhoaHoc);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaKhoa:
            		return this.MaKhoa.CompareTo(rhs.MaKhoa);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaNhomMonHoc:
            		return this.MaNhomMonHoc.CompareTo(rhs.MaNhomMonHoc);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.MaCoSo:
            		return this.MaCoSo.CompareTo(rhs.MaCoSo);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.HeSoLopDong:
            		return this.HeSoLopDong.Value.CompareTo(rhs.HeSoLopDong.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.DonGia:
            		return this.DonGia.Value.CompareTo(rhs.DonGia.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.ThanhTien:
            		return this.ThanhTien.Value.CompareTo(rhs.ThanhTien.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.CongTacPhi:
            		return this.CongTacPhi.Value.CompareTo(rhs.CongTacPhi.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.TienGiangNgoaiGio:
            		return this.TienGiangNgoaiGio.Value.CompareTo(rhs.TienGiangNgoaiGio.Value);
            		
            		                 
            	
            	
            	case TcbKetQuaQuyDoiColumn.TongThanhTien:
            		return this.TongThanhTien.Value.CompareTo(rhs.TongThanhTien.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<TcbKetQuaQuyDoiKey> Members
		
		// member variable for the EntityId property
		private TcbKetQuaQuyDoiKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual TcbKetQuaQuyDoiKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new TcbKetQuaQuyDoiKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("TcbKetQuaQuyDoi")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{30}{29}- Id: {0}{29}- MaKhoiLuongGiangDay: {1}{29}- MaGiangVien: {2}{29}- MaLopHocPhan: {3}{29}- NamHoc: {4}{29}- HocKy: {5}{29}- MaMonHoc: {6}{29}- TenMonHoc: {7}{29}- SoTinChi: {8}{29}- SoLuong: {9}{29}- MaLoaiHocPhan: {10}{29}- LoaiHocPhan: {11}{29}- MaBuoiHoc: {12}{29}- MaLop: {13}{29}- TietBatDau: {14}{29}- SoTiet: {15}{29}- TinhTrang: {16}{29}- NgayDay: {17}{29}- MaBacDaoTao: {18}{29}- MaKhoaHoc: {19}{29}- MaKhoa: {20}{29}- MaNhomMonHoc: {21}{29}- MaCoSo: {22}{29}- HeSoLopDong: {23}{29}- DonGia: {24}{29}- ThanhTien: {25}{29}- CongTacPhi: {26}{29}- TienGiangNgoaiGio: {27}{29}- TongThanhTien: {28}{29}{31}", 
				this.Id,
				(this.MaKhoiLuongGiangDay == null) ? string.Empty : this.MaKhoiLuongGiangDay.ToString(),
				(this.MaGiangVien == null) ? string.Empty : this.MaGiangVien.ToString(),
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
				(this.NamHoc == null) ? string.Empty : this.NamHoc.ToString(),
				(this.HocKy == null) ? string.Empty : this.HocKy.ToString(),
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
				(this.TenMonHoc == null) ? string.Empty : this.TenMonHoc.ToString(),
				(this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString(),
				(this.SoLuong == null) ? string.Empty : this.SoLuong.ToString(),
				(this.MaLoaiHocPhan == null) ? string.Empty : this.MaLoaiHocPhan.ToString(),
				(this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString(),
				(this.MaBuoiHoc == null) ? string.Empty : this.MaBuoiHoc.ToString(),
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
				(this.TietBatDau == null) ? string.Empty : this.TietBatDau.ToString(),
				(this.SoTiet == null) ? string.Empty : this.SoTiet.ToString(),
				(this.TinhTrang == null) ? string.Empty : this.TinhTrang.ToString(),
				(this.NgayDay == null) ? string.Empty : this.NgayDay.ToString(),
				(this.MaBacDaoTao == null) ? string.Empty : this.MaBacDaoTao.ToString(),
				(this.MaKhoaHoc == null) ? string.Empty : this.MaKhoaHoc.ToString(),
				(this.MaKhoa == null) ? string.Empty : this.MaKhoa.ToString(),
				(this.MaNhomMonHoc == null) ? string.Empty : this.MaNhomMonHoc.ToString(),
				(this.MaCoSo == null) ? string.Empty : this.MaCoSo.ToString(),
				(this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString(),
				(this.DonGia == null) ? string.Empty : this.DonGia.ToString(),
				(this.ThanhTien == null) ? string.Empty : this.ThanhTien.ToString(),
				(this.CongTacPhi == null) ? string.Empty : this.CongTacPhi.ToString(),
				(this.TienGiangNgoaiGio == null) ? string.Empty : this.TienGiangNgoaiGio.ToString(),
				(this.TongThanhTien == null) ? string.Empty : this.TongThanhTien.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'Tcb_KetQuaQuyDoi' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class TcbKetQuaQuyDoiEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "Tcb_KetQuaQuyDoi"</remarks>
		public System.Int32 Id;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaKhoiLuongGiangDay : 
		/// </summary>
		public System.Int32? MaKhoiLuongGiangDay = null;
		
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		public System.String MaGiangVien = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		public System.String MaLopHocPhan = null;
		
		/// <summary>
		/// NamHoc : 
		/// </summary>
		public System.String NamHoc = null;
		
		/// <summary>
		/// HocKy : 
		/// </summary>
		public System.String HocKy = null;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		public System.String MaMonHoc = null;
		
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		public System.String TenMonHoc = null;
		
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		public System.Decimal? SoTinChi = null;
		
		/// <summary>
		/// SoLuong : 
		/// </summary>
		public System.Int32? SoLuong = null;
		
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		public System.String MaLoaiHocPhan = null;
		
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		public System.String LoaiHocPhan = null;
		
		/// <summary>
		/// MaBuoiHoc : 
		/// </summary>
		public System.Int32? MaBuoiHoc = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		public System.String MaLop = null;
		
		/// <summary>
		/// TietBatDau : 
		/// </summary>
		public System.Int32? TietBatDau = null;
		
		/// <summary>
		/// SoTiet : 
		/// </summary>
		public System.Int32? SoTiet = null;
		
		/// <summary>
		/// TinhTrang : 
		/// </summary>
		public System.Int32? TinhTrang = null;
		
		/// <summary>
		/// NgayDay : 
		/// </summary>
		public System.DateTime? NgayDay = null;
		
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		public System.String MaBacDaoTao = null;
		
		/// <summary>
		/// MaKhoaHoc : 
		/// </summary>
		public System.String MaKhoaHoc = null;
		
		/// <summary>
		/// MaKhoa : 
		/// </summary>
		public System.String MaKhoa = null;
		
		/// <summary>
		/// MaNhomMonHoc : 
		/// </summary>
		public System.String MaNhomMonHoc = null;
		
		/// <summary>
		/// MaCoSo : 
		/// </summary>
		public System.String MaCoSo = null;
		
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		public System.Decimal? HeSoLopDong = null;
		
		/// <summary>
		/// DonGia : 
		/// </summary>
		public System.Decimal? DonGia = null;
		
		/// <summary>
		/// ThanhTien : 
		/// </summary>
		public System.Decimal? ThanhTien = null;
		
		/// <summary>
		/// CongTacPhi : 
		/// </summary>
		public System.Decimal? CongTacPhi = null;
		
		/// <summary>
		/// TienGiangNgoaiGio : 
		/// </summary>
		public System.Decimal? TienGiangNgoaiGio = null;
		
		/// <summary>
		/// TongThanhTien : 
		/// </summary>
		public System.Decimal? TongThanhTien = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			TcbKetQuaQuyDoiEntityData _tmp = new TcbKetQuaQuyDoiEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaKhoiLuongGiangDay = this.MaKhoiLuongGiangDay;
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.TenMonHoc = this.TenMonHoc;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.SoLuong = this.SoLuong;
			_tmp.MaLoaiHocPhan = this.MaLoaiHocPhan;
			_tmp.LoaiHocPhan = this.LoaiHocPhan;
			_tmp.MaBuoiHoc = this.MaBuoiHoc;
			_tmp.MaLop = this.MaLop;
			_tmp.TietBatDau = this.TietBatDau;
			_tmp.SoTiet = this.SoTiet;
			_tmp.TinhTrang = this.TinhTrang;
			_tmp.NgayDay = this.NgayDay;
			_tmp.MaBacDaoTao = this.MaBacDaoTao;
			_tmp.MaKhoaHoc = this.MaKhoaHoc;
			_tmp.MaKhoa = this.MaKhoa;
			_tmp.MaNhomMonHoc = this.MaNhomMonHoc;
			_tmp.MaCoSo = this.MaCoSo;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.DonGia = this.DonGia;
			_tmp.ThanhTien = this.ThanhTien;
			_tmp.CongTacPhi = this.CongTacPhi;
			_tmp.TienGiangNgoaiGio = this.TienGiangNgoaiGio;
			_tmp.TongThanhTien = this.TongThanhTien;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			TcbKetQuaQuyDoiEntityData _tmp = new TcbKetQuaQuyDoiEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaKhoiLuongGiangDay = this.MaKhoiLuongGiangDay;
			_tmp.MaGiangVien = this.MaGiangVien;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.NamHoc = this.NamHoc;
			_tmp.HocKy = this.HocKy;
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.TenMonHoc = this.TenMonHoc;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.SoLuong = this.SoLuong;
			_tmp.MaLoaiHocPhan = this.MaLoaiHocPhan;
			_tmp.LoaiHocPhan = this.LoaiHocPhan;
			_tmp.MaBuoiHoc = this.MaBuoiHoc;
			_tmp.MaLop = this.MaLop;
			_tmp.TietBatDau = this.TietBatDau;
			_tmp.SoTiet = this.SoTiet;
			_tmp.TinhTrang = this.TinhTrang;
			_tmp.NgayDay = this.NgayDay;
			_tmp.MaBacDaoTao = this.MaBacDaoTao;
			_tmp.MaKhoaHoc = this.MaKhoaHoc;
			_tmp.MaKhoa = this.MaKhoa;
			_tmp.MaNhomMonHoc = this.MaNhomMonHoc;
			_tmp.MaCoSo = this.MaCoSo;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.DonGia = this.DonGia;
			_tmp.ThanhTien = this.ThanhTien;
			_tmp.CongTacPhi = this.CongTacPhi;
			_tmp.TienGiangNgoaiGio = this.TienGiangNgoaiGio;
			_tmp.TongThanhTien = this.TongThanhTien;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="TcbKetQuaQuyDoiColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(TcbKetQuaQuyDoiColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="TcbKetQuaQuyDoiColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(TcbKetQuaQuyDoiColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="TcbKetQuaQuyDoiColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(TcbKetQuaQuyDoiColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				TcbKetQuaQuyDoiEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new TcbKetQuaQuyDoiEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="TcbKetQuaQuyDoiColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(TcbKetQuaQuyDoiColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				TcbKetQuaQuyDoiEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new TcbKetQuaQuyDoiEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region TcbKetQuaQuyDoiEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="TcbKetQuaQuyDoi"/> object.
	/// </remarks>
	public class TcbKetQuaQuyDoiEventArgs : System.EventArgs
	{
		private TcbKetQuaQuyDoiColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the TcbKetQuaQuyDoiEventArgs class.
		///</summary>
		public TcbKetQuaQuyDoiEventArgs(TcbKetQuaQuyDoiColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the TcbKetQuaQuyDoiEventArgs class.
		///</summary>
		public TcbKetQuaQuyDoiEventArgs(TcbKetQuaQuyDoiColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The TcbKetQuaQuyDoiColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="TcbKetQuaQuyDoiColumn" />
		public TcbKetQuaQuyDoiColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all TcbKetQuaQuyDoi related events.
	///</summary>
	public delegate void TcbKetQuaQuyDoiEventHandler(object sender, TcbKetQuaQuyDoiEventArgs e);
	
	#region TcbKetQuaQuyDoiComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class TcbKetQuaQuyDoiComparer : System.Collections.Generic.IComparer<TcbKetQuaQuyDoi>
	{
		TcbKetQuaQuyDoiColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:TcbKetQuaQuyDoiComparer"/> class.
        /// </summary>
		public TcbKetQuaQuyDoiComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:TcbKetQuaQuyDoiComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public TcbKetQuaQuyDoiComparer(TcbKetQuaQuyDoiColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="TcbKetQuaQuyDoi"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="TcbKetQuaQuyDoi"/> to compare.</param>
        /// <param name="b">The second <c>TcbKetQuaQuyDoi</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(TcbKetQuaQuyDoi a, TcbKetQuaQuyDoi b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(TcbKetQuaQuyDoi entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(TcbKetQuaQuyDoi a, TcbKetQuaQuyDoi b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public TcbKetQuaQuyDoiColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region TcbKetQuaQuyDoiKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="TcbKetQuaQuyDoi"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class TcbKetQuaQuyDoiKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the TcbKetQuaQuyDoiKey class.
		/// </summary>
		public TcbKetQuaQuyDoiKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the TcbKetQuaQuyDoiKey class.
		/// </summary>
		public TcbKetQuaQuyDoiKey(TcbKetQuaQuyDoiBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the TcbKetQuaQuyDoiKey class.
		/// </summary>
		public TcbKetQuaQuyDoiKey(System.Int32 _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private TcbKetQuaQuyDoiBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public TcbKetQuaQuyDoiBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.Int32 _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.Int32 Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["Id"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region TcbKetQuaQuyDoiColumn Enum
	
	/// <summary>
	/// Enumerate the TcbKetQuaQuyDoi columns.
	/// </summary>
	[Serializable]
	public enum TcbKetQuaQuyDoiColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		Id = 1,
		/// <summary>
		/// MaKhoiLuongGiangDay : 
		/// </summary>
		[EnumTextValue("Ma Khoi Luong Giang Day")]
		[ColumnEnum("MaKhoiLuongGiangDay", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaKhoiLuongGiangDay = 2,
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Giang Vien")]
		[ColumnEnum("MaGiangVien", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaGiangVien = 3,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Lop Hoc Phan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MaLopHocPhan = 4,
		/// <summary>
		/// NamHoc : 
		/// </summary>
		[EnumTextValue("Nam Hoc")]
		[ColumnEnum("NamHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NamHoc = 5,
		/// <summary>
		/// HocKy : 
		/// </summary>
		[EnumTextValue("Hoc Ky")]
		[ColumnEnum("HocKy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		HocKy = 6,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("Ma Mon Hoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc = 7,
		/// <summary>
		/// TenMonHoc : 
		/// </summary>
		[EnumTextValue("Ten Mon Hoc")]
		[ColumnEnum("TenMonHoc", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenMonHoc = 8,
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		[EnumTextValue("So Tin Chi")]
		[ColumnEnum("SoTinChi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTinChi = 9,
		/// <summary>
		/// SoLuong : 
		/// </summary>
		[EnumTextValue("So Luong")]
		[ColumnEnum("SoLuong", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoLuong = 10,
		/// <summary>
		/// MaLoaiHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Loai Hoc Phan")]
		[ColumnEnum("MaLoaiHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLoaiHocPhan = 11,
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		[EnumTextValue("Loai Hoc Phan")]
		[ColumnEnum("LoaiHocPhan", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		LoaiHocPhan = 12,
		/// <summary>
		/// MaBuoiHoc : 
		/// </summary>
		[EnumTextValue("Ma Buoi Hoc")]
		[ColumnEnum("MaBuoiHoc", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaBuoiHoc = 13,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("Ma Lop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		MaLop = 14,
		/// <summary>
		/// TietBatDau : 
		/// </summary>
		[EnumTextValue("Tiet Bat Dau")]
		[ColumnEnum("TietBatDau", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TietBatDau = 15,
		/// <summary>
		/// SoTiet : 
		/// </summary>
		[EnumTextValue("So Tiet")]
		[ColumnEnum("SoTiet", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoTiet = 16,
		/// <summary>
		/// TinhTrang : 
		/// </summary>
		[EnumTextValue("Tinh Trang")]
		[ColumnEnum("TinhTrang", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TinhTrang = 17,
		/// <summary>
		/// NgayDay : 
		/// </summary>
		[EnumTextValue("Ngay Day")]
		[ColumnEnum("NgayDay", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayDay = 18,
		/// <summary>
		/// MaBacDaoTao : 
		/// </summary>
		[EnumTextValue("Ma Bac Dao Tao")]
		[ColumnEnum("MaBacDaoTao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaBacDaoTao = 19,
		/// <summary>
		/// MaKhoaHoc : 
		/// </summary>
		[EnumTextValue("Ma Khoa Hoc")]
		[ColumnEnum("MaKhoaHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaKhoaHoc = 20,
		/// <summary>
		/// MaKhoa : 
		/// </summary>
		[EnumTextValue("Ma Khoa")]
		[ColumnEnum("MaKhoa", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaKhoa = 21,
		/// <summary>
		/// MaNhomMonHoc : 
		/// </summary>
		[EnumTextValue("Ma Nhom Mon Hoc")]
		[ColumnEnum("MaNhomMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaNhomMonHoc = 22,
		/// <summary>
		/// MaCoSo : 
		/// </summary>
		[EnumTextValue("Ma Co So")]
		[ColumnEnum("MaCoSo", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		MaCoSo = 23,
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		[EnumTextValue("He So Lop Dong")]
		[ColumnEnum("HeSoLopDong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDong = 24,
		/// <summary>
		/// DonGia : 
		/// </summary>
		[EnumTextValue("Don Gia")]
		[ColumnEnum("DonGia", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DonGia = 25,
		/// <summary>
		/// ThanhTien : 
		/// </summary>
		[EnumTextValue("Thanh Tien")]
		[ColumnEnum("ThanhTien", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ThanhTien = 26,
		/// <summary>
		/// CongTacPhi : 
		/// </summary>
		[EnumTextValue("Cong Tac Phi")]
		[ColumnEnum("CongTacPhi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CongTacPhi = 27,
		/// <summary>
		/// TienGiangNgoaiGio : 
		/// </summary>
		[EnumTextValue("Tien Giang Ngoai Gio")]
		[ColumnEnum("TienGiangNgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TienGiangNgoaiGio = 28,
		/// <summary>
		/// TongThanhTien : 
		/// </summary>
		[EnumTextValue("Tong Thanh Tien")]
		[ColumnEnum("TongThanhTien", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TongThanhTien = 29
	}//End enum

	#endregion TcbKetQuaQuyDoiColumn Enum

} // end namespace


/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file CauHinh.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'CauHinh' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class CauHinhBase : EntityBase, ICauHinh, IEntityId<CauHinhKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private CauHinhEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private CauHinhEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private CauHinhEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<CauHinh> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event CauHinhEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event CauHinhEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="CauHinhBase"/> instance.
		///</summary>
		public CauHinhBase()
		{
			this.entityData = new CauHinhEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="CauHinhBase"/> instance.
		///</summary>
		///<param name="_tenTruong"></param>
		///<param name="_phongDaoTao"></param>
		///<param name="_nguoiLapbieu"></param>
		///<param name="_trangThai"></param>
		///<param name="_phongToChucCanBo"></param>
		///<param name="_phongKeHoachTaiChinh"></param>
		///<param name="_banGiamHieu"></param>
		///<param name="_keToan"></param>
		///<param name="_chucVuBanGiamHieu"></param>
		///<param name="_daiDienHopDongThinhGiang"></param>
		///<param name="_chucVuDaiDienHopDongThinhGiang"></param>
		///<param name="_chucVuDaiDienHopDongThinhGiang02"></param>
		///<param name="_chucVuKeToan"></param>
		///<param name="_chucVuDaoTao"></param>
		///<param name="_diaChiDaiDien"></param>
		///<param name="_dienThoaiDaiDien"></param>
		///<param name="_faxDaiDien"></param>
		///<param name="_chucVuKhoa"></param>
		///<param name="_chucVuToChucCanBo"></param>
		///<param name="_chucVuKeHoachTaiChinh"></param>
		///<param name="_daiDienHopDongThinhGiang02"></param>
		///<param name="_maSoThue"></param>
		///<param name="_chucVuKiemNhiemKhac"></param>
		public CauHinhBase(System.String _tenTruong, System.String _phongDaoTao, System.String _nguoiLapbieu, 
			System.Boolean? _trangThai, System.String _phongToChucCanBo, System.String _phongKeHoachTaiChinh, System.String _banGiamHieu, 
			System.String _keToan, System.String _chucVuBanGiamHieu, System.String _daiDienHopDongThinhGiang, System.String _chucVuDaiDienHopDongThinhGiang, 
			System.String _chucVuDaiDienHopDongThinhGiang02, System.String _chucVuKeToan, System.String _chucVuDaoTao, 
			System.String _diaChiDaiDien, System.String _dienThoaiDaiDien, System.String _faxDaiDien, System.String _chucVuKhoa, 
			System.String _chucVuToChucCanBo, System.String _chucVuKeHoachTaiChinh, System.String _daiDienHopDongThinhGiang02, 
			System.String _maSoThue, System.String _chucVuKiemNhiemKhac)
		{
			this.entityData = new CauHinhEntityData();
			this.backupData = null;

			this.TenTruong = _tenTruong;
			this.PhongDaoTao = _phongDaoTao;
			this.NguoiLapbieu = _nguoiLapbieu;
			this.TrangThai = _trangThai;
			this.PhongToChucCanBo = _phongToChucCanBo;
			this.PhongKeHoachTaiChinh = _phongKeHoachTaiChinh;
			this.BanGiamHieu = _banGiamHieu;
			this.KeToan = _keToan;
			this.ChucVuBanGiamHieu = _chucVuBanGiamHieu;
			this.DaiDienHopDongThinhGiang = _daiDienHopDongThinhGiang;
			this.ChucVuDaiDienHopDongThinhGiang = _chucVuDaiDienHopDongThinhGiang;
			this.ChucVuDaiDienHopDongThinhGiang02 = _chucVuDaiDienHopDongThinhGiang02;
			this.ChucVuKeToan = _chucVuKeToan;
			this.ChucVuDaoTao = _chucVuDaoTao;
			this.DiaChiDaiDien = _diaChiDaiDien;
			this.DienThoaiDaiDien = _dienThoaiDaiDien;
			this.FaxDaiDien = _faxDaiDien;
			this.ChucVuKhoa = _chucVuKhoa;
			this.ChucVuToChucCanBo = _chucVuToChucCanBo;
			this.ChucVuKeHoachTaiChinh = _chucVuKeHoachTaiChinh;
			this.DaiDienHopDongThinhGiang02 = _daiDienHopDongThinhGiang02;
			this.MaSoThue = _maSoThue;
			this.ChucVuKiemNhiemKhac = _chucVuKiemNhiemKhac;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="CauHinh"/> instance.
		///</summary>
		///<param name="_tenTruong"></param>
		///<param name="_phongDaoTao"></param>
		///<param name="_nguoiLapbieu"></param>
		///<param name="_trangThai"></param>
		///<param name="_phongToChucCanBo"></param>
		///<param name="_phongKeHoachTaiChinh"></param>
		///<param name="_banGiamHieu"></param>
		///<param name="_keToan"></param>
		///<param name="_chucVuBanGiamHieu"></param>
		///<param name="_daiDienHopDongThinhGiang"></param>
		///<param name="_chucVuDaiDienHopDongThinhGiang"></param>
		///<param name="_chucVuDaiDienHopDongThinhGiang02"></param>
		///<param name="_chucVuKeToan"></param>
		///<param name="_chucVuDaoTao"></param>
		///<param name="_diaChiDaiDien"></param>
		///<param name="_dienThoaiDaiDien"></param>
		///<param name="_faxDaiDien"></param>
		///<param name="_chucVuKhoa"></param>
		///<param name="_chucVuToChucCanBo"></param>
		///<param name="_chucVuKeHoachTaiChinh"></param>
		///<param name="_daiDienHopDongThinhGiang02"></param>
		///<param name="_maSoThue"></param>
		///<param name="_chucVuKiemNhiemKhac"></param>
		public static CauHinh CreateCauHinh(System.String _tenTruong, System.String _phongDaoTao, System.String _nguoiLapbieu, 
			System.Boolean? _trangThai, System.String _phongToChucCanBo, System.String _phongKeHoachTaiChinh, System.String _banGiamHieu, 
			System.String _keToan, System.String _chucVuBanGiamHieu, System.String _daiDienHopDongThinhGiang, System.String _chucVuDaiDienHopDongThinhGiang, 
			System.String _chucVuDaiDienHopDongThinhGiang02, System.String _chucVuKeToan, System.String _chucVuDaoTao, 
			System.String _diaChiDaiDien, System.String _dienThoaiDaiDien, System.String _faxDaiDien, System.String _chucVuKhoa, 
			System.String _chucVuToChucCanBo, System.String _chucVuKeHoachTaiChinh, System.String _daiDienHopDongThinhGiang02, 
			System.String _maSoThue, System.String _chucVuKiemNhiemKhac)
		{
			CauHinh newCauHinh = new CauHinh();
			newCauHinh.TenTruong = _tenTruong;
			newCauHinh.PhongDaoTao = _phongDaoTao;
			newCauHinh.NguoiLapbieu = _nguoiLapbieu;
			newCauHinh.TrangThai = _trangThai;
			newCauHinh.PhongToChucCanBo = _phongToChucCanBo;
			newCauHinh.PhongKeHoachTaiChinh = _phongKeHoachTaiChinh;
			newCauHinh.BanGiamHieu = _banGiamHieu;
			newCauHinh.KeToan = _keToan;
			newCauHinh.ChucVuBanGiamHieu = _chucVuBanGiamHieu;
			newCauHinh.DaiDienHopDongThinhGiang = _daiDienHopDongThinhGiang;
			newCauHinh.ChucVuDaiDienHopDongThinhGiang = _chucVuDaiDienHopDongThinhGiang;
			newCauHinh.ChucVuDaiDienHopDongThinhGiang02 = _chucVuDaiDienHopDongThinhGiang02;
			newCauHinh.ChucVuKeToan = _chucVuKeToan;
			newCauHinh.ChucVuDaoTao = _chucVuDaoTao;
			newCauHinh.DiaChiDaiDien = _diaChiDaiDien;
			newCauHinh.DienThoaiDaiDien = _dienThoaiDaiDien;
			newCauHinh.FaxDaiDien = _faxDaiDien;
			newCauHinh.ChucVuKhoa = _chucVuKhoa;
			newCauHinh.ChucVuToChucCanBo = _chucVuToChucCanBo;
			newCauHinh.ChucVuKeHoachTaiChinh = _chucVuKeHoachTaiChinh;
			newCauHinh.DaiDienHopDongThinhGiang02 = _daiDienHopDongThinhGiang02;
			newCauHinh.MaSoThue = _maSoThue;
			newCauHinh.ChucVuKiemNhiemKhac = _chucVuKiemNhiemKhac;
			return newCauHinh;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the MaCauHinh property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 MaCauHinh
		{
			get
			{
				return this.entityData.MaCauHinh; 
			}
			
			set
			{
				if (this.entityData.MaCauHinh == value)
					return;
				
                OnPropertyChanging("MaCauHinh");                    
				OnColumnChanging(CauHinhColumn.MaCauHinh, this.entityData.MaCauHinh);
				this.entityData.MaCauHinh = value;
				this.EntityId.MaCauHinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.MaCauHinh, this.entityData.MaCauHinh);
				OnPropertyChanged("MaCauHinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenTruong property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String TenTruong
		{
			get
			{
				return this.entityData.TenTruong; 
			}
			
			set
			{
				if (this.entityData.TenTruong == value)
					return;
				
                OnPropertyChanging("TenTruong");                    
				OnColumnChanging(CauHinhColumn.TenTruong, this.entityData.TenTruong);
				this.entityData.TenTruong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.TenTruong, this.entityData.TenTruong);
				OnPropertyChanged("TenTruong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PhongDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String PhongDaoTao
		{
			get
			{
				return this.entityData.PhongDaoTao; 
			}
			
			set
			{
				if (this.entityData.PhongDaoTao == value)
					return;
				
                OnPropertyChanging("PhongDaoTao");                    
				OnColumnChanging(CauHinhColumn.PhongDaoTao, this.entityData.PhongDaoTao);
				this.entityData.PhongDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.PhongDaoTao, this.entityData.PhongDaoTao);
				OnPropertyChanged("PhongDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NguoiLapbieu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String NguoiLapbieu
		{
			get
			{
				return this.entityData.NguoiLapbieu; 
			}
			
			set
			{
				if (this.entityData.NguoiLapbieu == value)
					return;
				
                OnPropertyChanging("NguoiLapbieu");                    
				OnColumnChanging(CauHinhColumn.NguoiLapbieu, this.entityData.NguoiLapbieu);
				this.entityData.NguoiLapbieu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.NguoiLapbieu, this.entityData.NguoiLapbieu);
				OnPropertyChanged("NguoiLapbieu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TrangThai property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? TrangThai
		{
			get
			{
				return this.entityData.TrangThai; 
			}
			
			set
			{
				if (this.entityData.TrangThai == value)
					return;
				
                OnPropertyChanging("TrangThai");                    
				OnColumnChanging(CauHinhColumn.TrangThai, this.entityData.TrangThai);
				this.entityData.TrangThai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.TrangThai, this.entityData.TrangThai);
				OnPropertyChanged("TrangThai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PhongToChucCanBo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String PhongToChucCanBo
		{
			get
			{
				return this.entityData.PhongToChucCanBo; 
			}
			
			set
			{
				if (this.entityData.PhongToChucCanBo == value)
					return;
				
                OnPropertyChanging("PhongToChucCanBo");                    
				OnColumnChanging(CauHinhColumn.PhongToChucCanBo, this.entityData.PhongToChucCanBo);
				this.entityData.PhongToChucCanBo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.PhongToChucCanBo, this.entityData.PhongToChucCanBo);
				OnPropertyChanged("PhongToChucCanBo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PhongKeHoachTaiChinh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String PhongKeHoachTaiChinh
		{
			get
			{
				return this.entityData.PhongKeHoachTaiChinh; 
			}
			
			set
			{
				if (this.entityData.PhongKeHoachTaiChinh == value)
					return;
				
                OnPropertyChanging("PhongKeHoachTaiChinh");                    
				OnColumnChanging(CauHinhColumn.PhongKeHoachTaiChinh, this.entityData.PhongKeHoachTaiChinh);
				this.entityData.PhongKeHoachTaiChinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.PhongKeHoachTaiChinh, this.entityData.PhongKeHoachTaiChinh);
				OnPropertyChanged("PhongKeHoachTaiChinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BanGiamHieu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String BanGiamHieu
		{
			get
			{
				return this.entityData.BanGiamHieu; 
			}
			
			set
			{
				if (this.entityData.BanGiamHieu == value)
					return;
				
                OnPropertyChanging("BanGiamHieu");                    
				OnColumnChanging(CauHinhColumn.BanGiamHieu, this.entityData.BanGiamHieu);
				this.entityData.BanGiamHieu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.BanGiamHieu, this.entityData.BanGiamHieu);
				OnPropertyChanged("BanGiamHieu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the KeToan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String KeToan
		{
			get
			{
				return this.entityData.KeToan; 
			}
			
			set
			{
				if (this.entityData.KeToan == value)
					return;
				
                OnPropertyChanging("KeToan");                    
				OnColumnChanging(CauHinhColumn.KeToan, this.entityData.KeToan);
				this.entityData.KeToan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.KeToan, this.entityData.KeToan);
				OnPropertyChanged("KeToan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChucVuBanGiamHieu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChucVuBanGiamHieu
		{
			get
			{
				return this.entityData.ChucVuBanGiamHieu; 
			}
			
			set
			{
				if (this.entityData.ChucVuBanGiamHieu == value)
					return;
				
                OnPropertyChanging("ChucVuBanGiamHieu");                    
				OnColumnChanging(CauHinhColumn.ChucVuBanGiamHieu, this.entityData.ChucVuBanGiamHieu);
				this.entityData.ChucVuBanGiamHieu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.ChucVuBanGiamHieu, this.entityData.ChucVuBanGiamHieu);
				OnPropertyChanged("ChucVuBanGiamHieu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DaiDienHopDongThinhGiang property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String DaiDienHopDongThinhGiang
		{
			get
			{
				return this.entityData.DaiDienHopDongThinhGiang; 
			}
			
			set
			{
				if (this.entityData.DaiDienHopDongThinhGiang == value)
					return;
				
                OnPropertyChanging("DaiDienHopDongThinhGiang");                    
				OnColumnChanging(CauHinhColumn.DaiDienHopDongThinhGiang, this.entityData.DaiDienHopDongThinhGiang);
				this.entityData.DaiDienHopDongThinhGiang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.DaiDienHopDongThinhGiang, this.entityData.DaiDienHopDongThinhGiang);
				OnPropertyChanged("DaiDienHopDongThinhGiang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChucVuDaiDienHopDongThinhGiang property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChucVuDaiDienHopDongThinhGiang
		{
			get
			{
				return this.entityData.ChucVuDaiDienHopDongThinhGiang; 
			}
			
			set
			{
				if (this.entityData.ChucVuDaiDienHopDongThinhGiang == value)
					return;
				
                OnPropertyChanging("ChucVuDaiDienHopDongThinhGiang");                    
				OnColumnChanging(CauHinhColumn.ChucVuDaiDienHopDongThinhGiang, this.entityData.ChucVuDaiDienHopDongThinhGiang);
				this.entityData.ChucVuDaiDienHopDongThinhGiang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.ChucVuDaiDienHopDongThinhGiang, this.entityData.ChucVuDaiDienHopDongThinhGiang);
				OnPropertyChanged("ChucVuDaiDienHopDongThinhGiang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChucVuDaiDienHopDongThinhGiang02 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChucVuDaiDienHopDongThinhGiang02
		{
			get
			{
				return this.entityData.ChucVuDaiDienHopDongThinhGiang02; 
			}
			
			set
			{
				if (this.entityData.ChucVuDaiDienHopDongThinhGiang02 == value)
					return;
				
                OnPropertyChanging("ChucVuDaiDienHopDongThinhGiang02");                    
				OnColumnChanging(CauHinhColumn.ChucVuDaiDienHopDongThinhGiang02, this.entityData.ChucVuDaiDienHopDongThinhGiang02);
				this.entityData.ChucVuDaiDienHopDongThinhGiang02 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.ChucVuDaiDienHopDongThinhGiang02, this.entityData.ChucVuDaiDienHopDongThinhGiang02);
				OnPropertyChanged("ChucVuDaiDienHopDongThinhGiang02");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChucVuKeToan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChucVuKeToan
		{
			get
			{
				return this.entityData.ChucVuKeToan; 
			}
			
			set
			{
				if (this.entityData.ChucVuKeToan == value)
					return;
				
                OnPropertyChanging("ChucVuKeToan");                    
				OnColumnChanging(CauHinhColumn.ChucVuKeToan, this.entityData.ChucVuKeToan);
				this.entityData.ChucVuKeToan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.ChucVuKeToan, this.entityData.ChucVuKeToan);
				OnPropertyChanged("ChucVuKeToan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChucVuDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChucVuDaoTao
		{
			get
			{
				return this.entityData.ChucVuDaoTao; 
			}
			
			set
			{
				if (this.entityData.ChucVuDaoTao == value)
					return;
				
                OnPropertyChanging("ChucVuDaoTao");                    
				OnColumnChanging(CauHinhColumn.ChucVuDaoTao, this.entityData.ChucVuDaoTao);
				this.entityData.ChucVuDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.ChucVuDaoTao, this.entityData.ChucVuDaoTao);
				OnPropertyChanged("ChucVuDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DiaChiDaiDien property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String DiaChiDaiDien
		{
			get
			{
				return this.entityData.DiaChiDaiDien; 
			}
			
			set
			{
				if (this.entityData.DiaChiDaiDien == value)
					return;
				
                OnPropertyChanging("DiaChiDaiDien");                    
				OnColumnChanging(CauHinhColumn.DiaChiDaiDien, this.entityData.DiaChiDaiDien);
				this.entityData.DiaChiDaiDien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.DiaChiDaiDien, this.entityData.DiaChiDaiDien);
				OnPropertyChanged("DiaChiDaiDien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DienThoaiDaiDien property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String DienThoaiDaiDien
		{
			get
			{
				return this.entityData.DienThoaiDaiDien; 
			}
			
			set
			{
				if (this.entityData.DienThoaiDaiDien == value)
					return;
				
                OnPropertyChanging("DienThoaiDaiDien");                    
				OnColumnChanging(CauHinhColumn.DienThoaiDaiDien, this.entityData.DienThoaiDaiDien);
				this.entityData.DienThoaiDaiDien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.DienThoaiDaiDien, this.entityData.DienThoaiDaiDien);
				OnPropertyChanged("DienThoaiDaiDien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FaxDaiDien property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String FaxDaiDien
		{
			get
			{
				return this.entityData.FaxDaiDien; 
			}
			
			set
			{
				if (this.entityData.FaxDaiDien == value)
					return;
				
                OnPropertyChanging("FaxDaiDien");                    
				OnColumnChanging(CauHinhColumn.FaxDaiDien, this.entityData.FaxDaiDien);
				this.entityData.FaxDaiDien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.FaxDaiDien, this.entityData.FaxDaiDien);
				OnPropertyChanged("FaxDaiDien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChucVuKhoa property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChucVuKhoa
		{
			get
			{
				return this.entityData.ChucVuKhoa; 
			}
			
			set
			{
				if (this.entityData.ChucVuKhoa == value)
					return;
				
                OnPropertyChanging("ChucVuKhoa");                    
				OnColumnChanging(CauHinhColumn.ChucVuKhoa, this.entityData.ChucVuKhoa);
				this.entityData.ChucVuKhoa = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.ChucVuKhoa, this.entityData.ChucVuKhoa);
				OnPropertyChanged("ChucVuKhoa");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChucVuToChucCanBo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChucVuToChucCanBo
		{
			get
			{
				return this.entityData.ChucVuToChucCanBo; 
			}
			
			set
			{
				if (this.entityData.ChucVuToChucCanBo == value)
					return;
				
                OnPropertyChanging("ChucVuToChucCanBo");                    
				OnColumnChanging(CauHinhColumn.ChucVuToChucCanBo, this.entityData.ChucVuToChucCanBo);
				this.entityData.ChucVuToChucCanBo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.ChucVuToChucCanBo, this.entityData.ChucVuToChucCanBo);
				OnPropertyChanged("ChucVuToChucCanBo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChucVuKeHoachTaiChinh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChucVuKeHoachTaiChinh
		{
			get
			{
				return this.entityData.ChucVuKeHoachTaiChinh; 
			}
			
			set
			{
				if (this.entityData.ChucVuKeHoachTaiChinh == value)
					return;
				
                OnPropertyChanging("ChucVuKeHoachTaiChinh");                    
				OnColumnChanging(CauHinhColumn.ChucVuKeHoachTaiChinh, this.entityData.ChucVuKeHoachTaiChinh);
				this.entityData.ChucVuKeHoachTaiChinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.ChucVuKeHoachTaiChinh, this.entityData.ChucVuKeHoachTaiChinh);
				OnPropertyChanged("ChucVuKeHoachTaiChinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DaiDienHopDongThinhGiang02 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String DaiDienHopDongThinhGiang02
		{
			get
			{
				return this.entityData.DaiDienHopDongThinhGiang02; 
			}
			
			set
			{
				if (this.entityData.DaiDienHopDongThinhGiang02 == value)
					return;
				
                OnPropertyChanging("DaiDienHopDongThinhGiang02");                    
				OnColumnChanging(CauHinhColumn.DaiDienHopDongThinhGiang02, this.entityData.DaiDienHopDongThinhGiang02);
				this.entityData.DaiDienHopDongThinhGiang02 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.DaiDienHopDongThinhGiang02, this.entityData.DaiDienHopDongThinhGiang02);
				OnPropertyChanged("DaiDienHopDongThinhGiang02");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaSoThue property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaSoThue
		{
			get
			{
				return this.entityData.MaSoThue; 
			}
			
			set
			{
				if (this.entityData.MaSoThue == value)
					return;
				
                OnPropertyChanging("MaSoThue");                    
				OnColumnChanging(CauHinhColumn.MaSoThue, this.entityData.MaSoThue);
				this.entityData.MaSoThue = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.MaSoThue, this.entityData.MaSoThue);
				OnPropertyChanged("MaSoThue");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChucVuKiemNhiemKhac property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChucVuKiemNhiemKhac
		{
			get
			{
				return this.entityData.ChucVuKiemNhiemKhac; 
			}
			
			set
			{
				if (this.entityData.ChucVuKiemNhiemKhac == value)
					return;
				
                OnPropertyChanging("ChucVuKiemNhiemKhac");                    
				OnColumnChanging(CauHinhColumn.ChucVuKiemNhiemKhac, this.entityData.ChucVuKiemNhiemKhac);
				this.entityData.ChucVuKiemNhiemKhac = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(CauHinhColumn.ChucVuKiemNhiemKhac, this.entityData.ChucVuKiemNhiemKhac);
				OnPropertyChanged("ChucVuKiemNhiemKhac");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenTruong", "Ten Truong", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PhongDaoTao", "Phong Dao Tao", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NguoiLapbieu", "Nguoi Lapbieu", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PhongToChucCanBo", "Phong To Chuc Can Bo", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PhongKeHoachTaiChinh", "Phong Ke Hoach Tai Chinh", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("BanGiamHieu", "Ban Giam Hieu", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("KeToan", "Ke Toan", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChucVuBanGiamHieu", "Chuc Vu Ban Giam Hieu", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DaiDienHopDongThinhGiang", "Dai Dien Hop Dong Thinh Giang", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChucVuDaiDienHopDongThinhGiang", "Chuc Vu Dai Dien Hop Dong Thinh Giang", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChucVuDaiDienHopDongThinhGiang02", "Chuc Vu Dai Dien Hop Dong Thinh Giang02", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChucVuKeToan", "Chuc Vu Ke Toan", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChucVuDaoTao", "Chuc Vu Dao Tao", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DiaChiDaiDien", "Dia Chi Dai Dien", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DienThoaiDaiDien", "Dien Thoai Dai Dien", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FaxDaiDien", "Fax Dai Dien", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChucVuKhoa", "Chuc Vu Khoa", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChucVuToChucCanBo", "Chuc Vu To Chuc Can Bo", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChucVuKeHoachTaiChinh", "Chuc Vu Ke Hoach Tai Chinh", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DaiDienHopDongThinhGiang02", "Dai Dien Hop Dong Thinh Giang02", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaSoThue", "Ma So Thue", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChucVuKiemNhiemKhac", "Chuc Vu Kiem Nhiem Khac", 100));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "CauHinh"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"MaCauHinh", "TenTruong", "PhongDaoTao", "NguoiLapbieu", "TrangThai", "PhongToChucCanBo", "PhongKeHoachTaiChinh", "BanGiamHieu", "KeToan", "ChucVuBanGiamHieu", "DaiDienHopDongThinhGiang", "ChucVuDaiDienHopDongThinhGiang", "ChucVuDaiDienHopDongThinhGiang02", "ChucVuKeToan", "ChucVuDaoTao", "DiaChiDaiDien", "DienThoaiDaiDien", "FaxDaiDien", "ChucVuKhoa", "ChucVuToChucCanBo", "ChucVuKeHoachTaiChinh", "DaiDienHopDongThinhGiang02", "MaSoThue", "ChucVuKiemNhiemKhac"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as CauHinhEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (CauHinh) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<CauHinh>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as CauHinh);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed CauHinh Entity 
		///</summary>
		protected virtual CauHinh Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			CauHinh copy = new CauHinh();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.MaCauHinh = this.MaCauHinh;
				copy.TenTruong = this.TenTruong;
				copy.PhongDaoTao = this.PhongDaoTao;
				copy.NguoiLapbieu = this.NguoiLapbieu;
				copy.TrangThai = this.TrangThai;
				copy.PhongToChucCanBo = this.PhongToChucCanBo;
				copy.PhongKeHoachTaiChinh = this.PhongKeHoachTaiChinh;
				copy.BanGiamHieu = this.BanGiamHieu;
				copy.KeToan = this.KeToan;
				copy.ChucVuBanGiamHieu = this.ChucVuBanGiamHieu;
				copy.DaiDienHopDongThinhGiang = this.DaiDienHopDongThinhGiang;
				copy.ChucVuDaiDienHopDongThinhGiang = this.ChucVuDaiDienHopDongThinhGiang;
				copy.ChucVuDaiDienHopDongThinhGiang02 = this.ChucVuDaiDienHopDongThinhGiang02;
				copy.ChucVuKeToan = this.ChucVuKeToan;
				copy.ChucVuDaoTao = this.ChucVuDaoTao;
				copy.DiaChiDaiDien = this.DiaChiDaiDien;
				copy.DienThoaiDaiDien = this.DienThoaiDaiDien;
				copy.FaxDaiDien = this.FaxDaiDien;
				copy.ChucVuKhoa = this.ChucVuKhoa;
				copy.ChucVuToChucCanBo = this.ChucVuToChucCanBo;
				copy.ChucVuKeHoachTaiChinh = this.ChucVuKeHoachTaiChinh;
				copy.DaiDienHopDongThinhGiang02 = this.DaiDienHopDongThinhGiang02;
				copy.MaSoThue = this.MaSoThue;
				copy.ChucVuKiemNhiemKhac = this.ChucVuKiemNhiemKhac;
			
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed CauHinh Entity 
		///</summary>
		public virtual CauHinh Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed CauHinh Entity which is a deep copy of the current entity.
		///</summary>
		public virtual CauHinh DeepCopy()
		{
			return EntityHelper.Clone<CauHinh>(this as CauHinh);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as CauHinhEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new CauHinhEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as CauHinhEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(CauHinhColumn column)
		{
			switch(column)
			{
					case CauHinhColumn.MaCauHinh:
					return entityData.MaCauHinh != _originalData.MaCauHinh;
					case CauHinhColumn.TenTruong:
					return entityData.TenTruong != _originalData.TenTruong;
					case CauHinhColumn.PhongDaoTao:
					return entityData.PhongDaoTao != _originalData.PhongDaoTao;
					case CauHinhColumn.NguoiLapbieu:
					return entityData.NguoiLapbieu != _originalData.NguoiLapbieu;
					case CauHinhColumn.TrangThai:
					return entityData.TrangThai != _originalData.TrangThai;
					case CauHinhColumn.PhongToChucCanBo:
					return entityData.PhongToChucCanBo != _originalData.PhongToChucCanBo;
					case CauHinhColumn.PhongKeHoachTaiChinh:
					return entityData.PhongKeHoachTaiChinh != _originalData.PhongKeHoachTaiChinh;
					case CauHinhColumn.BanGiamHieu:
					return entityData.BanGiamHieu != _originalData.BanGiamHieu;
					case CauHinhColumn.KeToan:
					return entityData.KeToan != _originalData.KeToan;
					case CauHinhColumn.ChucVuBanGiamHieu:
					return entityData.ChucVuBanGiamHieu != _originalData.ChucVuBanGiamHieu;
					case CauHinhColumn.DaiDienHopDongThinhGiang:
					return entityData.DaiDienHopDongThinhGiang != _originalData.DaiDienHopDongThinhGiang;
					case CauHinhColumn.ChucVuDaiDienHopDongThinhGiang:
					return entityData.ChucVuDaiDienHopDongThinhGiang != _originalData.ChucVuDaiDienHopDongThinhGiang;
					case CauHinhColumn.ChucVuDaiDienHopDongThinhGiang02:
					return entityData.ChucVuDaiDienHopDongThinhGiang02 != _originalData.ChucVuDaiDienHopDongThinhGiang02;
					case CauHinhColumn.ChucVuKeToan:
					return entityData.ChucVuKeToan != _originalData.ChucVuKeToan;
					case CauHinhColumn.ChucVuDaoTao:
					return entityData.ChucVuDaoTao != _originalData.ChucVuDaoTao;
					case CauHinhColumn.DiaChiDaiDien:
					return entityData.DiaChiDaiDien != _originalData.DiaChiDaiDien;
					case CauHinhColumn.DienThoaiDaiDien:
					return entityData.DienThoaiDaiDien != _originalData.DienThoaiDaiDien;
					case CauHinhColumn.FaxDaiDien:
					return entityData.FaxDaiDien != _originalData.FaxDaiDien;
					case CauHinhColumn.ChucVuKhoa:
					return entityData.ChucVuKhoa != _originalData.ChucVuKhoa;
					case CauHinhColumn.ChucVuToChucCanBo:
					return entityData.ChucVuToChucCanBo != _originalData.ChucVuToChucCanBo;
					case CauHinhColumn.ChucVuKeHoachTaiChinh:
					return entityData.ChucVuKeHoachTaiChinh != _originalData.ChucVuKeHoachTaiChinh;
					case CauHinhColumn.DaiDienHopDongThinhGiang02:
					return entityData.DaiDienHopDongThinhGiang02 != _originalData.DaiDienHopDongThinhGiang02;
					case CauHinhColumn.MaSoThue:
					return entityData.MaSoThue != _originalData.MaSoThue;
					case CauHinhColumn.ChucVuKiemNhiemKhac:
					return entityData.ChucVuKiemNhiemKhac != _originalData.ChucVuKiemNhiemKhac;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< CauHinhColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.MaCauHinh != _originalData.MaCauHinh;
			result = result || entityData.TenTruong != _originalData.TenTruong;
			result = result || entityData.PhongDaoTao != _originalData.PhongDaoTao;
			result = result || entityData.NguoiLapbieu != _originalData.NguoiLapbieu;
			result = result || entityData.TrangThai != _originalData.TrangThai;
			result = result || entityData.PhongToChucCanBo != _originalData.PhongToChucCanBo;
			result = result || entityData.PhongKeHoachTaiChinh != _originalData.PhongKeHoachTaiChinh;
			result = result || entityData.BanGiamHieu != _originalData.BanGiamHieu;
			result = result || entityData.KeToan != _originalData.KeToan;
			result = result || entityData.ChucVuBanGiamHieu != _originalData.ChucVuBanGiamHieu;
			result = result || entityData.DaiDienHopDongThinhGiang != _originalData.DaiDienHopDongThinhGiang;
			result = result || entityData.ChucVuDaiDienHopDongThinhGiang != _originalData.ChucVuDaiDienHopDongThinhGiang;
			result = result || entityData.ChucVuDaiDienHopDongThinhGiang02 != _originalData.ChucVuDaiDienHopDongThinhGiang02;
			result = result || entityData.ChucVuKeToan != _originalData.ChucVuKeToan;
			result = result || entityData.ChucVuDaoTao != _originalData.ChucVuDaoTao;
			result = result || entityData.DiaChiDaiDien != _originalData.DiaChiDaiDien;
			result = result || entityData.DienThoaiDaiDien != _originalData.DienThoaiDaiDien;
			result = result || entityData.FaxDaiDien != _originalData.FaxDaiDien;
			result = result || entityData.ChucVuKhoa != _originalData.ChucVuKhoa;
			result = result || entityData.ChucVuToChucCanBo != _originalData.ChucVuToChucCanBo;
			result = result || entityData.ChucVuKeHoachTaiChinh != _originalData.ChucVuKeHoachTaiChinh;
			result = result || entityData.DaiDienHopDongThinhGiang02 != _originalData.DaiDienHopDongThinhGiang02;
			result = result || entityData.MaSoThue != _originalData.MaSoThue;
			result = result || entityData.ChucVuKiemNhiemKhac != _originalData.ChucVuKiemNhiemKhac;
			return result;
		}	
		
		///<summary>
		///  Returns a CauHinh Entity with the original data.
		///</summary>
		public CauHinh GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateCauHinh(
				_originalData.TenTruong,
				_originalData.PhongDaoTao,
				_originalData.NguoiLapbieu,
				_originalData.TrangThai,
				_originalData.PhongToChucCanBo,
				_originalData.PhongKeHoachTaiChinh,
				_originalData.BanGiamHieu,
				_originalData.KeToan,
				_originalData.ChucVuBanGiamHieu,
				_originalData.DaiDienHopDongThinhGiang,
				_originalData.ChucVuDaiDienHopDongThinhGiang,
				_originalData.ChucVuDaiDienHopDongThinhGiang02,
				_originalData.ChucVuKeToan,
				_originalData.ChucVuDaoTao,
				_originalData.DiaChiDaiDien,
				_originalData.DienThoaiDaiDien,
				_originalData.FaxDaiDien,
				_originalData.ChucVuKhoa,
				_originalData.ChucVuToChucCanBo,
				_originalData.ChucVuKeHoachTaiChinh,
				_originalData.DaiDienHopDongThinhGiang02,
				_originalData.MaSoThue,
				_originalData.ChucVuKiemNhiemKhac
				);
				
			return (CauHinh)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="CauHinhBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is CauHinhBase)
				return ValueEquals(this, (CauHinhBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="CauHinhBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.MaCauHinh.GetHashCode() ^ 
					((this.TenTruong == null) ? string.Empty : this.TenTruong.ToString()).GetHashCode() ^ 
					((this.PhongDaoTao == null) ? string.Empty : this.PhongDaoTao.ToString()).GetHashCode() ^ 
					((this.NguoiLapbieu == null) ? string.Empty : this.NguoiLapbieu.ToString()).GetHashCode() ^ 
					((this.TrangThai == null) ? string.Empty : this.TrangThai.ToString()).GetHashCode() ^ 
					((this.PhongToChucCanBo == null) ? string.Empty : this.PhongToChucCanBo.ToString()).GetHashCode() ^ 
					((this.PhongKeHoachTaiChinh == null) ? string.Empty : this.PhongKeHoachTaiChinh.ToString()).GetHashCode() ^ 
					((this.BanGiamHieu == null) ? string.Empty : this.BanGiamHieu.ToString()).GetHashCode() ^ 
					((this.KeToan == null) ? string.Empty : this.KeToan.ToString()).GetHashCode() ^ 
					((this.ChucVuBanGiamHieu == null) ? string.Empty : this.ChucVuBanGiamHieu.ToString()).GetHashCode() ^ 
					((this.DaiDienHopDongThinhGiang == null) ? string.Empty : this.DaiDienHopDongThinhGiang.ToString()).GetHashCode() ^ 
					((this.ChucVuDaiDienHopDongThinhGiang == null) ? string.Empty : this.ChucVuDaiDienHopDongThinhGiang.ToString()).GetHashCode() ^ 
					((this.ChucVuDaiDienHopDongThinhGiang02 == null) ? string.Empty : this.ChucVuDaiDienHopDongThinhGiang02.ToString()).GetHashCode() ^ 
					((this.ChucVuKeToan == null) ? string.Empty : this.ChucVuKeToan.ToString()).GetHashCode() ^ 
					((this.ChucVuDaoTao == null) ? string.Empty : this.ChucVuDaoTao.ToString()).GetHashCode() ^ 
					((this.DiaChiDaiDien == null) ? string.Empty : this.DiaChiDaiDien.ToString()).GetHashCode() ^ 
					((this.DienThoaiDaiDien == null) ? string.Empty : this.DienThoaiDaiDien.ToString()).GetHashCode() ^ 
					((this.FaxDaiDien == null) ? string.Empty : this.FaxDaiDien.ToString()).GetHashCode() ^ 
					((this.ChucVuKhoa == null) ? string.Empty : this.ChucVuKhoa.ToString()).GetHashCode() ^ 
					((this.ChucVuToChucCanBo == null) ? string.Empty : this.ChucVuToChucCanBo.ToString()).GetHashCode() ^ 
					((this.ChucVuKeHoachTaiChinh == null) ? string.Empty : this.ChucVuKeHoachTaiChinh.ToString()).GetHashCode() ^ 
					((this.DaiDienHopDongThinhGiang02 == null) ? string.Empty : this.DaiDienHopDongThinhGiang02.ToString()).GetHashCode() ^ 
					((this.MaSoThue == null) ? string.Empty : this.MaSoThue.ToString()).GetHashCode() ^ 
					((this.ChucVuKiemNhiemKhac == null) ? string.Empty : this.ChucVuKiemNhiemKhac.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="CauHinhBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(CauHinhBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="CauHinhBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="CauHinhBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="CauHinhBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(CauHinhBase Object1, CauHinhBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.MaCauHinh != Object2.MaCauHinh)
				equal = false;
			if ( Object1.TenTruong != null && Object2.TenTruong != null )
			{
				if (Object1.TenTruong != Object2.TenTruong)
					equal = false;
			}
			else if (Object1.TenTruong == null ^ Object2.TenTruong == null )
			{
				equal = false;
			}
			if ( Object1.PhongDaoTao != null && Object2.PhongDaoTao != null )
			{
				if (Object1.PhongDaoTao != Object2.PhongDaoTao)
					equal = false;
			}
			else if (Object1.PhongDaoTao == null ^ Object2.PhongDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.NguoiLapbieu != null && Object2.NguoiLapbieu != null )
			{
				if (Object1.NguoiLapbieu != Object2.NguoiLapbieu)
					equal = false;
			}
			else if (Object1.NguoiLapbieu == null ^ Object2.NguoiLapbieu == null )
			{
				equal = false;
			}
			if ( Object1.TrangThai != null && Object2.TrangThai != null )
			{
				if (Object1.TrangThai != Object2.TrangThai)
					equal = false;
			}
			else if (Object1.TrangThai == null ^ Object2.TrangThai == null )
			{
				equal = false;
			}
			if ( Object1.PhongToChucCanBo != null && Object2.PhongToChucCanBo != null )
			{
				if (Object1.PhongToChucCanBo != Object2.PhongToChucCanBo)
					equal = false;
			}
			else if (Object1.PhongToChucCanBo == null ^ Object2.PhongToChucCanBo == null )
			{
				equal = false;
			}
			if ( Object1.PhongKeHoachTaiChinh != null && Object2.PhongKeHoachTaiChinh != null )
			{
				if (Object1.PhongKeHoachTaiChinh != Object2.PhongKeHoachTaiChinh)
					equal = false;
			}
			else if (Object1.PhongKeHoachTaiChinh == null ^ Object2.PhongKeHoachTaiChinh == null )
			{
				equal = false;
			}
			if ( Object1.BanGiamHieu != null && Object2.BanGiamHieu != null )
			{
				if (Object1.BanGiamHieu != Object2.BanGiamHieu)
					equal = false;
			}
			else if (Object1.BanGiamHieu == null ^ Object2.BanGiamHieu == null )
			{
				equal = false;
			}
			if ( Object1.KeToan != null && Object2.KeToan != null )
			{
				if (Object1.KeToan != Object2.KeToan)
					equal = false;
			}
			else if (Object1.KeToan == null ^ Object2.KeToan == null )
			{
				equal = false;
			}
			if ( Object1.ChucVuBanGiamHieu != null && Object2.ChucVuBanGiamHieu != null )
			{
				if (Object1.ChucVuBanGiamHieu != Object2.ChucVuBanGiamHieu)
					equal = false;
			}
			else if (Object1.ChucVuBanGiamHieu == null ^ Object2.ChucVuBanGiamHieu == null )
			{
				equal = false;
			}
			if ( Object1.DaiDienHopDongThinhGiang != null && Object2.DaiDienHopDongThinhGiang != null )
			{
				if (Object1.DaiDienHopDongThinhGiang != Object2.DaiDienHopDongThinhGiang)
					equal = false;
			}
			else if (Object1.DaiDienHopDongThinhGiang == null ^ Object2.DaiDienHopDongThinhGiang == null )
			{
				equal = false;
			}
			if ( Object1.ChucVuDaiDienHopDongThinhGiang != null && Object2.ChucVuDaiDienHopDongThinhGiang != null )
			{
				if (Object1.ChucVuDaiDienHopDongThinhGiang != Object2.ChucVuDaiDienHopDongThinhGiang)
					equal = false;
			}
			else if (Object1.ChucVuDaiDienHopDongThinhGiang == null ^ Object2.ChucVuDaiDienHopDongThinhGiang == null )
			{
				equal = false;
			}
			if ( Object1.ChucVuDaiDienHopDongThinhGiang02 != null && Object2.ChucVuDaiDienHopDongThinhGiang02 != null )
			{
				if (Object1.ChucVuDaiDienHopDongThinhGiang02 != Object2.ChucVuDaiDienHopDongThinhGiang02)
					equal = false;
			}
			else if (Object1.ChucVuDaiDienHopDongThinhGiang02 == null ^ Object2.ChucVuDaiDienHopDongThinhGiang02 == null )
			{
				equal = false;
			}
			if ( Object1.ChucVuKeToan != null && Object2.ChucVuKeToan != null )
			{
				if (Object1.ChucVuKeToan != Object2.ChucVuKeToan)
					equal = false;
			}
			else if (Object1.ChucVuKeToan == null ^ Object2.ChucVuKeToan == null )
			{
				equal = false;
			}
			if ( Object1.ChucVuDaoTao != null && Object2.ChucVuDaoTao != null )
			{
				if (Object1.ChucVuDaoTao != Object2.ChucVuDaoTao)
					equal = false;
			}
			else if (Object1.ChucVuDaoTao == null ^ Object2.ChucVuDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.DiaChiDaiDien != null && Object2.DiaChiDaiDien != null )
			{
				if (Object1.DiaChiDaiDien != Object2.DiaChiDaiDien)
					equal = false;
			}
			else if (Object1.DiaChiDaiDien == null ^ Object2.DiaChiDaiDien == null )
			{
				equal = false;
			}
			if ( Object1.DienThoaiDaiDien != null && Object2.DienThoaiDaiDien != null )
			{
				if (Object1.DienThoaiDaiDien != Object2.DienThoaiDaiDien)
					equal = false;
			}
			else if (Object1.DienThoaiDaiDien == null ^ Object2.DienThoaiDaiDien == null )
			{
				equal = false;
			}
			if ( Object1.FaxDaiDien != null && Object2.FaxDaiDien != null )
			{
				if (Object1.FaxDaiDien != Object2.FaxDaiDien)
					equal = false;
			}
			else if (Object1.FaxDaiDien == null ^ Object2.FaxDaiDien == null )
			{
				equal = false;
			}
			if ( Object1.ChucVuKhoa != null && Object2.ChucVuKhoa != null )
			{
				if (Object1.ChucVuKhoa != Object2.ChucVuKhoa)
					equal = false;
			}
			else if (Object1.ChucVuKhoa == null ^ Object2.ChucVuKhoa == null )
			{
				equal = false;
			}
			if ( Object1.ChucVuToChucCanBo != null && Object2.ChucVuToChucCanBo != null )
			{
				if (Object1.ChucVuToChucCanBo != Object2.ChucVuToChucCanBo)
					equal = false;
			}
			else if (Object1.ChucVuToChucCanBo == null ^ Object2.ChucVuToChucCanBo == null )
			{
				equal = false;
			}
			if ( Object1.ChucVuKeHoachTaiChinh != null && Object2.ChucVuKeHoachTaiChinh != null )
			{
				if (Object1.ChucVuKeHoachTaiChinh != Object2.ChucVuKeHoachTaiChinh)
					equal = false;
			}
			else if (Object1.ChucVuKeHoachTaiChinh == null ^ Object2.ChucVuKeHoachTaiChinh == null )
			{
				equal = false;
			}
			if ( Object1.DaiDienHopDongThinhGiang02 != null && Object2.DaiDienHopDongThinhGiang02 != null )
			{
				if (Object1.DaiDienHopDongThinhGiang02 != Object2.DaiDienHopDongThinhGiang02)
					equal = false;
			}
			else if (Object1.DaiDienHopDongThinhGiang02 == null ^ Object2.DaiDienHopDongThinhGiang02 == null )
			{
				equal = false;
			}
			if ( Object1.MaSoThue != null && Object2.MaSoThue != null )
			{
				if (Object1.MaSoThue != Object2.MaSoThue)
					equal = false;
			}
			else if (Object1.MaSoThue == null ^ Object2.MaSoThue == null )
			{
				equal = false;
			}
			if ( Object1.ChucVuKiemNhiemKhac != null && Object2.ChucVuKiemNhiemKhac != null )
			{
				if (Object1.ChucVuKiemNhiemKhac != Object2.ChucVuKiemNhiemKhac)
					equal = false;
			}
			else if (Object1.ChucVuKiemNhiemKhac == null ^ Object2.ChucVuKiemNhiemKhac == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((CauHinhBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static CauHinhComparer GetComparer()
        {
            return new CauHinhComparer();
        }
        */

        // Comparer delegates back to CauHinh
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(CauHinh rhs, CauHinhColumn which)
        {
            switch (which)
            {
            	
            	
            	case CauHinhColumn.MaCauHinh:
            		return this.MaCauHinh.CompareTo(rhs.MaCauHinh);
            		
            		                 
            	
            	
            	case CauHinhColumn.TenTruong:
            		return this.TenTruong.CompareTo(rhs.TenTruong);
            		
            		                 
            	
            	
            	case CauHinhColumn.PhongDaoTao:
            		return this.PhongDaoTao.CompareTo(rhs.PhongDaoTao);
            		
            		                 
            	
            	
            	case CauHinhColumn.NguoiLapbieu:
            		return this.NguoiLapbieu.CompareTo(rhs.NguoiLapbieu);
            		
            		                 
            	
            	
            	case CauHinhColumn.TrangThai:
            		return this.TrangThai.Value.CompareTo(rhs.TrangThai.Value);
            		
            		                 
            	
            	
            	case CauHinhColumn.PhongToChucCanBo:
            		return this.PhongToChucCanBo.CompareTo(rhs.PhongToChucCanBo);
            		
            		                 
            	
            	
            	case CauHinhColumn.PhongKeHoachTaiChinh:
            		return this.PhongKeHoachTaiChinh.CompareTo(rhs.PhongKeHoachTaiChinh);
            		
            		                 
            	
            	
            	case CauHinhColumn.BanGiamHieu:
            		return this.BanGiamHieu.CompareTo(rhs.BanGiamHieu);
            		
            		                 
            	
            	
            	case CauHinhColumn.KeToan:
            		return this.KeToan.CompareTo(rhs.KeToan);
            		
            		                 
            	
            	
            	case CauHinhColumn.ChucVuBanGiamHieu:
            		return this.ChucVuBanGiamHieu.CompareTo(rhs.ChucVuBanGiamHieu);
            		
            		                 
            	
            	
            	case CauHinhColumn.DaiDienHopDongThinhGiang:
            		return this.DaiDienHopDongThinhGiang.CompareTo(rhs.DaiDienHopDongThinhGiang);
            		
            		                 
            	
            	
            	case CauHinhColumn.ChucVuDaiDienHopDongThinhGiang:
            		return this.ChucVuDaiDienHopDongThinhGiang.CompareTo(rhs.ChucVuDaiDienHopDongThinhGiang);
            		
            		                 
            	
            	
            	case CauHinhColumn.ChucVuDaiDienHopDongThinhGiang02:
            		return this.ChucVuDaiDienHopDongThinhGiang02.CompareTo(rhs.ChucVuDaiDienHopDongThinhGiang02);
            		
            		                 
            	
            	
            	case CauHinhColumn.ChucVuKeToan:
            		return this.ChucVuKeToan.CompareTo(rhs.ChucVuKeToan);
            		
            		                 
            	
            	
            	case CauHinhColumn.ChucVuDaoTao:
            		return this.ChucVuDaoTao.CompareTo(rhs.ChucVuDaoTao);
            		
            		                 
            	
            	
            	case CauHinhColumn.DiaChiDaiDien:
            		return this.DiaChiDaiDien.CompareTo(rhs.DiaChiDaiDien);
            		
            		                 
            	
            	
            	case CauHinhColumn.DienThoaiDaiDien:
            		return this.DienThoaiDaiDien.CompareTo(rhs.DienThoaiDaiDien);
            		
            		                 
            	
            	
            	case CauHinhColumn.FaxDaiDien:
            		return this.FaxDaiDien.CompareTo(rhs.FaxDaiDien);
            		
            		                 
            	
            	
            	case CauHinhColumn.ChucVuKhoa:
            		return this.ChucVuKhoa.CompareTo(rhs.ChucVuKhoa);
            		
            		                 
            	
            	
            	case CauHinhColumn.ChucVuToChucCanBo:
            		return this.ChucVuToChucCanBo.CompareTo(rhs.ChucVuToChucCanBo);
            		
            		                 
            	
            	
            	case CauHinhColumn.ChucVuKeHoachTaiChinh:
            		return this.ChucVuKeHoachTaiChinh.CompareTo(rhs.ChucVuKeHoachTaiChinh);
            		
            		                 
            	
            	
            	case CauHinhColumn.DaiDienHopDongThinhGiang02:
            		return this.DaiDienHopDongThinhGiang02.CompareTo(rhs.DaiDienHopDongThinhGiang02);
            		
            		                 
            	
            	
            	case CauHinhColumn.MaSoThue:
            		return this.MaSoThue.CompareTo(rhs.MaSoThue);
            		
            		                 
            	
            	
            	case CauHinhColumn.ChucVuKiemNhiemKhac:
            		return this.ChucVuKiemNhiemKhac.CompareTo(rhs.ChucVuKiemNhiemKhac);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<CauHinhKey> Members
		
		// member variable for the EntityId property
		private CauHinhKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual CauHinhKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new CauHinhKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("CauHinh")
					.Append("|").Append( this.MaCauHinh.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{25}{24}- MaCauHinh: {0}{24}- TenTruong: {1}{24}- PhongDaoTao: {2}{24}- NguoiLapbieu: {3}{24}- TrangThai: {4}{24}- PhongToChucCanBo: {5}{24}- PhongKeHoachTaiChinh: {6}{24}- BanGiamHieu: {7}{24}- KeToan: {8}{24}- ChucVuBanGiamHieu: {9}{24}- DaiDienHopDongThinhGiang: {10}{24}- ChucVuDaiDienHopDongThinhGiang: {11}{24}- ChucVuDaiDienHopDongThinhGiang02: {12}{24}- ChucVuKeToan: {13}{24}- ChucVuDaoTao: {14}{24}- DiaChiDaiDien: {15}{24}- DienThoaiDaiDien: {16}{24}- FaxDaiDien: {17}{24}- ChucVuKhoa: {18}{24}- ChucVuToChucCanBo: {19}{24}- ChucVuKeHoachTaiChinh: {20}{24}- DaiDienHopDongThinhGiang02: {21}{24}- MaSoThue: {22}{24}- ChucVuKiemNhiemKhac: {23}{24}{26}", 
				this.MaCauHinh,
				(this.TenTruong == null) ? string.Empty : this.TenTruong.ToString(),
				(this.PhongDaoTao == null) ? string.Empty : this.PhongDaoTao.ToString(),
				(this.NguoiLapbieu == null) ? string.Empty : this.NguoiLapbieu.ToString(),
				(this.TrangThai == null) ? string.Empty : this.TrangThai.ToString(),
				(this.PhongToChucCanBo == null) ? string.Empty : this.PhongToChucCanBo.ToString(),
				(this.PhongKeHoachTaiChinh == null) ? string.Empty : this.PhongKeHoachTaiChinh.ToString(),
				(this.BanGiamHieu == null) ? string.Empty : this.BanGiamHieu.ToString(),
				(this.KeToan == null) ? string.Empty : this.KeToan.ToString(),
				(this.ChucVuBanGiamHieu == null) ? string.Empty : this.ChucVuBanGiamHieu.ToString(),
				(this.DaiDienHopDongThinhGiang == null) ? string.Empty : this.DaiDienHopDongThinhGiang.ToString(),
				(this.ChucVuDaiDienHopDongThinhGiang == null) ? string.Empty : this.ChucVuDaiDienHopDongThinhGiang.ToString(),
				(this.ChucVuDaiDienHopDongThinhGiang02 == null) ? string.Empty : this.ChucVuDaiDienHopDongThinhGiang02.ToString(),
				(this.ChucVuKeToan == null) ? string.Empty : this.ChucVuKeToan.ToString(),
				(this.ChucVuDaoTao == null) ? string.Empty : this.ChucVuDaoTao.ToString(),
				(this.DiaChiDaiDien == null) ? string.Empty : this.DiaChiDaiDien.ToString(),
				(this.DienThoaiDaiDien == null) ? string.Empty : this.DienThoaiDaiDien.ToString(),
				(this.FaxDaiDien == null) ? string.Empty : this.FaxDaiDien.ToString(),
				(this.ChucVuKhoa == null) ? string.Empty : this.ChucVuKhoa.ToString(),
				(this.ChucVuToChucCanBo == null) ? string.Empty : this.ChucVuToChucCanBo.ToString(),
				(this.ChucVuKeHoachTaiChinh == null) ? string.Empty : this.ChucVuKeHoachTaiChinh.ToString(),
				(this.DaiDienHopDongThinhGiang02 == null) ? string.Empty : this.DaiDienHopDongThinhGiang02.ToString(),
				(this.MaSoThue == null) ? string.Empty : this.MaSoThue.ToString(),
				(this.ChucVuKiemNhiemKhac == null) ? string.Empty : this.ChucVuKiemNhiemKhac.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'CauHinh' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class CauHinhEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// MaCauHinh : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "CauHinh"</remarks>
		public System.Int32 MaCauHinh;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// TenTruong : 
		/// </summary>
		public System.String TenTruong = null;
		
		/// <summary>
		/// PhongDaoTao : 
		/// </summary>
		public System.String PhongDaoTao = null;
		
		/// <summary>
		/// NguoiLapbieu : 
		/// </summary>
		public System.String NguoiLapbieu = null;
		
		/// <summary>
		/// TrangThai : 
		/// </summary>
		public System.Boolean? TrangThai = null;
		
		/// <summary>
		/// PhongToChucCanBo : 
		/// </summary>
		public System.String PhongToChucCanBo = null;
		
		/// <summary>
		/// PhongKeHoachTaiChinh : 
		/// </summary>
		public System.String PhongKeHoachTaiChinh = null;
		
		/// <summary>
		/// BanGiamHieu : 
		/// </summary>
		public System.String BanGiamHieu = null;
		
		/// <summary>
		/// KeToan : 
		/// </summary>
		public System.String KeToan = null;
		
		/// <summary>
		/// ChucVuBanGiamHieu : 
		/// </summary>
		public System.String ChucVuBanGiamHieu = null;
		
		/// <summary>
		/// DaiDienHopDongThinhGiang : 
		/// </summary>
		public System.String DaiDienHopDongThinhGiang = null;
		
		/// <summary>
		/// ChucVuDaiDienHopDongThinhGiang : 
		/// </summary>
		public System.String ChucVuDaiDienHopDongThinhGiang = null;
		
		/// <summary>
		/// ChucVuDaiDienHopDongThinhGiang02 : 
		/// </summary>
		public System.String ChucVuDaiDienHopDongThinhGiang02 = null;
		
		/// <summary>
		/// ChucVuKeToan : 
		/// </summary>
		public System.String ChucVuKeToan = null;
		
		/// <summary>
		/// ChucVuDaoTao : 
		/// </summary>
		public System.String ChucVuDaoTao = null;
		
		/// <summary>
		/// DiaChiDaiDien : 
		/// </summary>
		public System.String DiaChiDaiDien = null;
		
		/// <summary>
		/// DienThoaiDaiDien : 
		/// </summary>
		public System.String DienThoaiDaiDien = null;
		
		/// <summary>
		/// FaxDaiDien : 
		/// </summary>
		public System.String FaxDaiDien = null;
		
		/// <summary>
		/// ChucVuKhoa : 
		/// </summary>
		public System.String ChucVuKhoa = null;
		
		/// <summary>
		/// ChucVuToChucCanBo : 
		/// </summary>
		public System.String ChucVuToChucCanBo = null;
		
		/// <summary>
		/// ChucVuKeHoachTaiChinh : 
		/// </summary>
		public System.String ChucVuKeHoachTaiChinh = null;
		
		/// <summary>
		/// DaiDienHopDongThinhGiang02 : 
		/// </summary>
		public System.String DaiDienHopDongThinhGiang02 = null;
		
		/// <summary>
		/// MaSoThue : 
		/// </summary>
		public System.String MaSoThue = null;
		
		/// <summary>
		/// ChucVuKiemNhiemKhac : 
		/// </summary>
		public System.String ChucVuKiemNhiemKhac = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			CauHinhEntityData _tmp = new CauHinhEntityData();
						
			_tmp.MaCauHinh = this.MaCauHinh;
			
			_tmp.TenTruong = this.TenTruong;
			_tmp.PhongDaoTao = this.PhongDaoTao;
			_tmp.NguoiLapbieu = this.NguoiLapbieu;
			_tmp.TrangThai = this.TrangThai;
			_tmp.PhongToChucCanBo = this.PhongToChucCanBo;
			_tmp.PhongKeHoachTaiChinh = this.PhongKeHoachTaiChinh;
			_tmp.BanGiamHieu = this.BanGiamHieu;
			_tmp.KeToan = this.KeToan;
			_tmp.ChucVuBanGiamHieu = this.ChucVuBanGiamHieu;
			_tmp.DaiDienHopDongThinhGiang = this.DaiDienHopDongThinhGiang;
			_tmp.ChucVuDaiDienHopDongThinhGiang = this.ChucVuDaiDienHopDongThinhGiang;
			_tmp.ChucVuDaiDienHopDongThinhGiang02 = this.ChucVuDaiDienHopDongThinhGiang02;
			_tmp.ChucVuKeToan = this.ChucVuKeToan;
			_tmp.ChucVuDaoTao = this.ChucVuDaoTao;
			_tmp.DiaChiDaiDien = this.DiaChiDaiDien;
			_tmp.DienThoaiDaiDien = this.DienThoaiDaiDien;
			_tmp.FaxDaiDien = this.FaxDaiDien;
			_tmp.ChucVuKhoa = this.ChucVuKhoa;
			_tmp.ChucVuToChucCanBo = this.ChucVuToChucCanBo;
			_tmp.ChucVuKeHoachTaiChinh = this.ChucVuKeHoachTaiChinh;
			_tmp.DaiDienHopDongThinhGiang02 = this.DaiDienHopDongThinhGiang02;
			_tmp.MaSoThue = this.MaSoThue;
			_tmp.ChucVuKiemNhiemKhac = this.ChucVuKiemNhiemKhac;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			CauHinhEntityData _tmp = new CauHinhEntityData();
						
			_tmp.MaCauHinh = this.MaCauHinh;
			
			_tmp.TenTruong = this.TenTruong;
			_tmp.PhongDaoTao = this.PhongDaoTao;
			_tmp.NguoiLapbieu = this.NguoiLapbieu;
			_tmp.TrangThai = this.TrangThai;
			_tmp.PhongToChucCanBo = this.PhongToChucCanBo;
			_tmp.PhongKeHoachTaiChinh = this.PhongKeHoachTaiChinh;
			_tmp.BanGiamHieu = this.BanGiamHieu;
			_tmp.KeToan = this.KeToan;
			_tmp.ChucVuBanGiamHieu = this.ChucVuBanGiamHieu;
			_tmp.DaiDienHopDongThinhGiang = this.DaiDienHopDongThinhGiang;
			_tmp.ChucVuDaiDienHopDongThinhGiang = this.ChucVuDaiDienHopDongThinhGiang;
			_tmp.ChucVuDaiDienHopDongThinhGiang02 = this.ChucVuDaiDienHopDongThinhGiang02;
			_tmp.ChucVuKeToan = this.ChucVuKeToan;
			_tmp.ChucVuDaoTao = this.ChucVuDaoTao;
			_tmp.DiaChiDaiDien = this.DiaChiDaiDien;
			_tmp.DienThoaiDaiDien = this.DienThoaiDaiDien;
			_tmp.FaxDaiDien = this.FaxDaiDien;
			_tmp.ChucVuKhoa = this.ChucVuKhoa;
			_tmp.ChucVuToChucCanBo = this.ChucVuToChucCanBo;
			_tmp.ChucVuKeHoachTaiChinh = this.ChucVuKeHoachTaiChinh;
			_tmp.DaiDienHopDongThinhGiang02 = this.DaiDienHopDongThinhGiang02;
			_tmp.MaSoThue = this.MaSoThue;
			_tmp.ChucVuKiemNhiemKhac = this.ChucVuKiemNhiemKhac;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="CauHinhColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(CauHinhColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="CauHinhColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(CauHinhColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="CauHinhColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(CauHinhColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				CauHinhEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new CauHinhEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="CauHinhColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(CauHinhColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				CauHinhEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new CauHinhEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region CauHinhEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="CauHinh"/> object.
	/// </remarks>
	public class CauHinhEventArgs : System.EventArgs
	{
		private CauHinhColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the CauHinhEventArgs class.
		///</summary>
		public CauHinhEventArgs(CauHinhColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the CauHinhEventArgs class.
		///</summary>
		public CauHinhEventArgs(CauHinhColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The CauHinhColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="CauHinhColumn" />
		public CauHinhColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all CauHinh related events.
	///</summary>
	public delegate void CauHinhEventHandler(object sender, CauHinhEventArgs e);
	
	#region CauHinhComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class CauHinhComparer : System.Collections.Generic.IComparer<CauHinh>
	{
		CauHinhColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:CauHinhComparer"/> class.
        /// </summary>
		public CauHinhComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:CauHinhComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public CauHinhComparer(CauHinhColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="CauHinh"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="CauHinh"/> to compare.</param>
        /// <param name="b">The second <c>CauHinh</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(CauHinh a, CauHinh b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(CauHinh entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(CauHinh a, CauHinh b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public CauHinhColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region CauHinhKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="CauHinh"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class CauHinhKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the CauHinhKey class.
		/// </summary>
		public CauHinhKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the CauHinhKey class.
		/// </summary>
		public CauHinhKey(CauHinhBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.MaCauHinh = entity.MaCauHinh;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the CauHinhKey class.
		/// </summary>
		public CauHinhKey(System.Int32 _maCauHinh)
		{
			#region Init Properties

			this.MaCauHinh = _maCauHinh;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private CauHinhBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public CauHinhBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the MaCauHinh property
		private System.Int32 _maCauHinh;
		
		/// <summary>
		/// Gets or sets the MaCauHinh property.
		/// </summary>
		public System.Int32 MaCauHinh
		{
			get { return _maCauHinh; }
			set
			{
				if ( this.Entity != null )
					this.Entity.MaCauHinh = value;
				
				_maCauHinh = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				MaCauHinh = ( values["MaCauHinh"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["MaCauHinh"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("MaCauHinh", MaCauHinh);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("MaCauHinh: {0}{1}",
								MaCauHinh,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region CauHinhColumn Enum
	
	/// <summary>
	/// Enumerate the CauHinh columns.
	/// </summary>
	[Serializable]
	public enum CauHinhColumn : int
	{
		/// <summary>
		/// MaCauHinh : 
		/// </summary>
		[EnumTextValue("Ma Cau Hinh")]
		[ColumnEnum("MaCauHinh", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		MaCauHinh = 1,
		/// <summary>
		/// TenTruong : 
		/// </summary>
		[EnumTextValue("Ten Truong")]
		[ColumnEnum("TenTruong", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		TenTruong = 2,
		/// <summary>
		/// PhongDaoTao : 
		/// </summary>
		[EnumTextValue("Phong Dao Tao")]
		[ColumnEnum("PhongDaoTao", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		PhongDaoTao = 3,
		/// <summary>
		/// NguoiLapbieu : 
		/// </summary>
		[EnumTextValue("Nguoi Lapbieu")]
		[ColumnEnum("NguoiLapbieu", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		NguoiLapbieu = 4,
		/// <summary>
		/// TrangThai : 
		/// </summary>
		[EnumTextValue("Trang Thai")]
		[ColumnEnum("TrangThai", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		TrangThai = 5,
		/// <summary>
		/// PhongToChucCanBo : 
		/// </summary>
		[EnumTextValue("Phong To Chuc Can Bo")]
		[ColumnEnum("PhongToChucCanBo", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		PhongToChucCanBo = 6,
		/// <summary>
		/// PhongKeHoachTaiChinh : 
		/// </summary>
		[EnumTextValue("Phong Ke Hoach Tai Chinh")]
		[ColumnEnum("PhongKeHoachTaiChinh", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		PhongKeHoachTaiChinh = 7,
		/// <summary>
		/// BanGiamHieu : 
		/// </summary>
		[EnumTextValue("Ban Giam Hieu")]
		[ColumnEnum("BanGiamHieu", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		BanGiamHieu = 8,
		/// <summary>
		/// KeToan : 
		/// </summary>
		[EnumTextValue("Ke Toan")]
		[ColumnEnum("KeToan", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		KeToan = 9,
		/// <summary>
		/// ChucVuBanGiamHieu : 
		/// </summary>
		[EnumTextValue("Chuc Vu Ban Giam Hieu")]
		[ColumnEnum("ChucVuBanGiamHieu", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChucVuBanGiamHieu = 10,
		/// <summary>
		/// DaiDienHopDongThinhGiang : 
		/// </summary>
		[EnumTextValue("Dai Dien Hop Dong Thinh Giang")]
		[ColumnEnum("DaiDienHopDongThinhGiang", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		DaiDienHopDongThinhGiang = 11,
		/// <summary>
		/// ChucVuDaiDienHopDongThinhGiang : 
		/// </summary>
		[EnumTextValue("Chuc Vu Dai Dien Hop Dong Thinh Giang")]
		[ColumnEnum("ChucVuDaiDienHopDongThinhGiang", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChucVuDaiDienHopDongThinhGiang = 12,
		/// <summary>
		/// ChucVuDaiDienHopDongThinhGiang02 : 
		/// </summary>
		[EnumTextValue("Chuc Vu Dai Dien Hop Dong Thinh Giang02")]
		[ColumnEnum("ChucVuDaiDienHopDongThinhGiang02", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChucVuDaiDienHopDongThinhGiang02 = 13,
		/// <summary>
		/// ChucVuKeToan : 
		/// </summary>
		[EnumTextValue("Chuc Vu Ke Toan")]
		[ColumnEnum("ChucVuKeToan", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChucVuKeToan = 14,
		/// <summary>
		/// ChucVuDaoTao : 
		/// </summary>
		[EnumTextValue("Chuc Vu Dao Tao")]
		[ColumnEnum("ChucVuDaoTao", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChucVuDaoTao = 15,
		/// <summary>
		/// DiaChiDaiDien : 
		/// </summary>
		[EnumTextValue("Dia Chi Dai Dien")]
		[ColumnEnum("DiaChiDaiDien", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		DiaChiDaiDien = 16,
		/// <summary>
		/// DienThoaiDaiDien : 
		/// </summary>
		[EnumTextValue("Dien Thoai Dai Dien")]
		[ColumnEnum("DienThoaiDaiDien", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		DienThoaiDaiDien = 17,
		/// <summary>
		/// FaxDaiDien : 
		/// </summary>
		[EnumTextValue("Fax Dai Dien")]
		[ColumnEnum("FaxDaiDien", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		FaxDaiDien = 18,
		/// <summary>
		/// ChucVuKhoa : 
		/// </summary>
		[EnumTextValue("Chuc Vu Khoa")]
		[ColumnEnum("ChucVuKhoa", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChucVuKhoa = 19,
		/// <summary>
		/// ChucVuToChucCanBo : 
		/// </summary>
		[EnumTextValue("Chuc Vu To Chuc Can Bo")]
		[ColumnEnum("ChucVuToChucCanBo", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChucVuToChucCanBo = 20,
		/// <summary>
		/// ChucVuKeHoachTaiChinh : 
		/// </summary>
		[EnumTextValue("Chuc Vu Ke Hoach Tai Chinh")]
		[ColumnEnum("ChucVuKeHoachTaiChinh", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChucVuKeHoachTaiChinh = 21,
		/// <summary>
		/// DaiDienHopDongThinhGiang02 : 
		/// </summary>
		[EnumTextValue("Dai Dien Hop Dong Thinh Giang02")]
		[ColumnEnum("DaiDienHopDongThinhGiang02", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		DaiDienHopDongThinhGiang02 = 22,
		/// <summary>
		/// MaSoThue : 
		/// </summary>
		[EnumTextValue("Ma So Thue")]
		[ColumnEnum("MaSoThue", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaSoThue = 23,
		/// <summary>
		/// ChucVuKiemNhiemKhac : 
		/// </summary>
		[EnumTextValue("Chuc Vu Kiem Nhiem Khac")]
		[ColumnEnum("ChucVuKiemNhiemKhac", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChucVuKiemNhiemKhac = 24
	}//End enum

	#endregion CauHinhColumn Enum

} // end namespace

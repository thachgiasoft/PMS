
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file QuyDoiKhoiLuongTamUng.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'QuyDoiKhoiLuongTamUng' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class QuyDoiKhoiLuongTamUngBase : EntityBase, IQuyDoiKhoiLuongTamUng, IEntityId<QuyDoiKhoiLuongTamUngKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private QuyDoiKhoiLuongTamUngEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private QuyDoiKhoiLuongTamUngEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private QuyDoiKhoiLuongTamUngEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<QuyDoiKhoiLuongTamUng> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event QuyDoiKhoiLuongTamUngEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event QuyDoiKhoiLuongTamUngEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="QuyDoiKhoiLuongTamUngBase"/> instance.
		///</summary>
		public QuyDoiKhoiLuongTamUngBase()
		{
			this.entityData = new QuyDoiKhoiLuongTamUngEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="QuyDoiKhoiLuongTamUngBase"/> instance.
		///</summary>
		///<param name="_maKhoiLuongTamUng"></param>
		///<param name="_heSoCongViec"></param>
		///<param name="_heSoBacDaoTao"></param>
		///<param name="_heSoNgonNgu"></param>
		///<param name="_heSoChucDanhChuyenMon"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_soTietThucTeQuyDoi"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_heSoQuyDoiThucHanhSangLyThuyet"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_loaiLop"></param>
		///<param name="_heSoClcCntn"></param>
		///<param name="_heSoThinhGiangMonChuyenNganh"></param>
		///<param name="_heSoTroCap"></param>
		///<param name="_heSoLuong"></param>
		///<param name="_heSoMonMoi"></param>
		///<param name="_heSoNienCheTinChi"></param>
		///<param name="_ghiChu"></param>
		///<param name="_chot"></param>
		///<param name="_mucThanhToan"></param>
		public QuyDoiKhoiLuongTamUngBase(System.Int32? _maKhoiLuongTamUng, System.Decimal? _heSoCongViec, 
			System.Decimal? _heSoBacDaoTao, System.Decimal? _heSoNgonNgu, System.Decimal? _heSoChucDanhChuyenMon, 
			System.Decimal? _heSoLopDong, System.Decimal? _heSoCoSo, System.Decimal? _soTietThucTeQuyDoi, 
			System.Decimal? _tietQuyDoi, System.Decimal? _heSoQuyDoiThucHanhSangLyThuyet, 
			System.Decimal? _heSoNgoaiGio, System.String _loaiLop, System.Decimal? _heSoClcCntn, 
			System.Decimal? _heSoThinhGiangMonChuyenNganh, System.Decimal? _heSoTroCap, System.Decimal? _heSoLuong, 
			System.Decimal? _heSoMonMoi, System.Decimal? _heSoNienCheTinChi, System.String _ghiChu, 
			System.Boolean? _chot, System.Decimal? _mucThanhToan)
		{
			this.entityData = new QuyDoiKhoiLuongTamUngEntityData();
			this.backupData = null;

			this.MaKhoiLuongTamUng = _maKhoiLuongTamUng;
			this.HeSoCongViec = _heSoCongViec;
			this.HeSoBacDaoTao = _heSoBacDaoTao;
			this.HeSoNgonNgu = _heSoNgonNgu;
			this.HeSoChucDanhChuyenMon = _heSoChucDanhChuyenMon;
			this.HeSoLopDong = _heSoLopDong;
			this.HeSoCoSo = _heSoCoSo;
			this.SoTietThucTeQuyDoi = _soTietThucTeQuyDoi;
			this.TietQuyDoi = _tietQuyDoi;
			this.HeSoQuyDoiThucHanhSangLyThuyet = _heSoQuyDoiThucHanhSangLyThuyet;
			this.HeSoNgoaiGio = _heSoNgoaiGio;
			this.LoaiLop = _loaiLop;
			this.HeSoClcCntn = _heSoClcCntn;
			this.HeSoThinhGiangMonChuyenNganh = _heSoThinhGiangMonChuyenNganh;
			this.HeSoTroCap = _heSoTroCap;
			this.HeSoLuong = _heSoLuong;
			this.HeSoMonMoi = _heSoMonMoi;
			this.HeSoNienCheTinChi = _heSoNienCheTinChi;
			this.GhiChu = _ghiChu;
			this.Chot = _chot;
			this.MucThanhToan = _mucThanhToan;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="QuyDoiKhoiLuongTamUng"/> instance.
		///</summary>
		///<param name="_maKhoiLuongTamUng"></param>
		///<param name="_heSoCongViec"></param>
		///<param name="_heSoBacDaoTao"></param>
		///<param name="_heSoNgonNgu"></param>
		///<param name="_heSoChucDanhChuyenMon"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_soTietThucTeQuyDoi"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_heSoQuyDoiThucHanhSangLyThuyet"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_loaiLop"></param>
		///<param name="_heSoClcCntn"></param>
		///<param name="_heSoThinhGiangMonChuyenNganh"></param>
		///<param name="_heSoTroCap"></param>
		///<param name="_heSoLuong"></param>
		///<param name="_heSoMonMoi"></param>
		///<param name="_heSoNienCheTinChi"></param>
		///<param name="_ghiChu"></param>
		///<param name="_chot"></param>
		///<param name="_mucThanhToan"></param>
		public static QuyDoiKhoiLuongTamUng CreateQuyDoiKhoiLuongTamUng(System.Int32? _maKhoiLuongTamUng, System.Decimal? _heSoCongViec, 
			System.Decimal? _heSoBacDaoTao, System.Decimal? _heSoNgonNgu, System.Decimal? _heSoChucDanhChuyenMon, 
			System.Decimal? _heSoLopDong, System.Decimal? _heSoCoSo, System.Decimal? _soTietThucTeQuyDoi, 
			System.Decimal? _tietQuyDoi, System.Decimal? _heSoQuyDoiThucHanhSangLyThuyet, 
			System.Decimal? _heSoNgoaiGio, System.String _loaiLop, System.Decimal? _heSoClcCntn, 
			System.Decimal? _heSoThinhGiangMonChuyenNganh, System.Decimal? _heSoTroCap, System.Decimal? _heSoLuong, 
			System.Decimal? _heSoMonMoi, System.Decimal? _heSoNienCheTinChi, System.String _ghiChu, 
			System.Boolean? _chot, System.Decimal? _mucThanhToan)
		{
			QuyDoiKhoiLuongTamUng newQuyDoiKhoiLuongTamUng = new QuyDoiKhoiLuongTamUng();
			newQuyDoiKhoiLuongTamUng.MaKhoiLuongTamUng = _maKhoiLuongTamUng;
			newQuyDoiKhoiLuongTamUng.HeSoCongViec = _heSoCongViec;
			newQuyDoiKhoiLuongTamUng.HeSoBacDaoTao = _heSoBacDaoTao;
			newQuyDoiKhoiLuongTamUng.HeSoNgonNgu = _heSoNgonNgu;
			newQuyDoiKhoiLuongTamUng.HeSoChucDanhChuyenMon = _heSoChucDanhChuyenMon;
			newQuyDoiKhoiLuongTamUng.HeSoLopDong = _heSoLopDong;
			newQuyDoiKhoiLuongTamUng.HeSoCoSo = _heSoCoSo;
			newQuyDoiKhoiLuongTamUng.SoTietThucTeQuyDoi = _soTietThucTeQuyDoi;
			newQuyDoiKhoiLuongTamUng.TietQuyDoi = _tietQuyDoi;
			newQuyDoiKhoiLuongTamUng.HeSoQuyDoiThucHanhSangLyThuyet = _heSoQuyDoiThucHanhSangLyThuyet;
			newQuyDoiKhoiLuongTamUng.HeSoNgoaiGio = _heSoNgoaiGio;
			newQuyDoiKhoiLuongTamUng.LoaiLop = _loaiLop;
			newQuyDoiKhoiLuongTamUng.HeSoClcCntn = _heSoClcCntn;
			newQuyDoiKhoiLuongTamUng.HeSoThinhGiangMonChuyenNganh = _heSoThinhGiangMonChuyenNganh;
			newQuyDoiKhoiLuongTamUng.HeSoTroCap = _heSoTroCap;
			newQuyDoiKhoiLuongTamUng.HeSoLuong = _heSoLuong;
			newQuyDoiKhoiLuongTamUng.HeSoMonMoi = _heSoMonMoi;
			newQuyDoiKhoiLuongTamUng.HeSoNienCheTinChi = _heSoNienCheTinChi;
			newQuyDoiKhoiLuongTamUng.GhiChu = _ghiChu;
			newQuyDoiKhoiLuongTamUng.Chot = _chot;
			newQuyDoiKhoiLuongTamUng.MucThanhToan = _mucThanhToan;
			return newQuyDoiKhoiLuongTamUng;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
				
                OnPropertyChanging("Id");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaKhoiLuongTamUng property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaKhoiLuongTamUng
		{
			get
			{
				return this.entityData.MaKhoiLuongTamUng; 
			}
			
			set
			{
				if (this.entityData.MaKhoiLuongTamUng == value)
					return;
				
                OnPropertyChanging("MaKhoiLuongTamUng");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.MaKhoiLuongTamUng, this.entityData.MaKhoiLuongTamUng);
				this.entityData.MaKhoiLuongTamUng = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.MaKhoiLuongTamUng, this.entityData.MaKhoiLuongTamUng);
				OnPropertyChanged("MaKhoiLuongTamUng");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoCongViec property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoCongViec
		{
			get
			{
				return this.entityData.HeSoCongViec; 
			}
			
			set
			{
				if (this.entityData.HeSoCongViec == value)
					return;
				
                OnPropertyChanging("HeSoCongViec");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoCongViec, this.entityData.HeSoCongViec);
				this.entityData.HeSoCongViec = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoCongViec, this.entityData.HeSoCongViec);
				OnPropertyChanged("HeSoCongViec");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoBacDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoBacDaoTao
		{
			get
			{
				return this.entityData.HeSoBacDaoTao; 
			}
			
			set
			{
				if (this.entityData.HeSoBacDaoTao == value)
					return;
				
                OnPropertyChanging("HeSoBacDaoTao");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoBacDaoTao, this.entityData.HeSoBacDaoTao);
				this.entityData.HeSoBacDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoBacDaoTao, this.entityData.HeSoBacDaoTao);
				OnPropertyChanged("HeSoBacDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNgonNgu property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNgonNgu
		{
			get
			{
				return this.entityData.HeSoNgonNgu; 
			}
			
			set
			{
				if (this.entityData.HeSoNgonNgu == value)
					return;
				
                OnPropertyChanging("HeSoNgonNgu");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoNgonNgu, this.entityData.HeSoNgonNgu);
				this.entityData.HeSoNgonNgu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoNgonNgu, this.entityData.HeSoNgonNgu);
				OnPropertyChanged("HeSoNgonNgu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoChucDanhChuyenMon property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoChucDanhChuyenMon
		{
			get
			{
				return this.entityData.HeSoChucDanhChuyenMon; 
			}
			
			set
			{
				if (this.entityData.HeSoChucDanhChuyenMon == value)
					return;
				
                OnPropertyChanging("HeSoChucDanhChuyenMon");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoChucDanhChuyenMon, this.entityData.HeSoChucDanhChuyenMon);
				this.entityData.HeSoChucDanhChuyenMon = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoChucDanhChuyenMon, this.entityData.HeSoChucDanhChuyenMon);
				OnPropertyChanged("HeSoChucDanhChuyenMon");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoLopDong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoLopDong
		{
			get
			{
				return this.entityData.HeSoLopDong; 
			}
			
			set
			{
				if (this.entityData.HeSoLopDong == value)
					return;
				
                OnPropertyChanging("HeSoLopDong");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				this.entityData.HeSoLopDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				OnPropertyChanged("HeSoLopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoCoSo property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoCoSo
		{
			get
			{
				return this.entityData.HeSoCoSo; 
			}
			
			set
			{
				if (this.entityData.HeSoCoSo == value)
					return;
				
                OnPropertyChanging("HeSoCoSo");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoCoSo, this.entityData.HeSoCoSo);
				this.entityData.HeSoCoSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoCoSo, this.entityData.HeSoCoSo);
				OnPropertyChanged("HeSoCoSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTietThucTeQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTietThucTeQuyDoi
		{
			get
			{
				return this.entityData.SoTietThucTeQuyDoi; 
			}
			
			set
			{
				if (this.entityData.SoTietThucTeQuyDoi == value)
					return;
				
                OnPropertyChanging("SoTietThucTeQuyDoi");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.SoTietThucTeQuyDoi, this.entityData.SoTietThucTeQuyDoi);
				this.entityData.SoTietThucTeQuyDoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.SoTietThucTeQuyDoi, this.entityData.SoTietThucTeQuyDoi);
				OnPropertyChanged("SoTietThucTeQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this.entityData.TietQuyDoi; 
			}
			
			set
			{
				if (this.entityData.TietQuyDoi == value)
					return;
				
                OnPropertyChanging("TietQuyDoi");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.TietQuyDoi, this.entityData.TietQuyDoi);
				this.entityData.TietQuyDoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.TietQuyDoi, this.entityData.TietQuyDoi);
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoQuyDoiThucHanhSangLyThuyet property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoQuyDoiThucHanhSangLyThuyet
		{
			get
			{
				return this.entityData.HeSoQuyDoiThucHanhSangLyThuyet; 
			}
			
			set
			{
				if (this.entityData.HeSoQuyDoiThucHanhSangLyThuyet == value)
					return;
				
                OnPropertyChanging("HeSoQuyDoiThucHanhSangLyThuyet");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoQuyDoiThucHanhSangLyThuyet, this.entityData.HeSoQuyDoiThucHanhSangLyThuyet);
				this.entityData.HeSoQuyDoiThucHanhSangLyThuyet = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoQuyDoiThucHanhSangLyThuyet, this.entityData.HeSoQuyDoiThucHanhSangLyThuyet);
				OnPropertyChanged("HeSoQuyDoiThucHanhSangLyThuyet");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNgoaiGio
		{
			get
			{
				return this.entityData.HeSoNgoaiGio; 
			}
			
			set
			{
				if (this.entityData.HeSoNgoaiGio == value)
					return;
				
                OnPropertyChanging("HeSoNgoaiGio");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoNgoaiGio, this.entityData.HeSoNgoaiGio);
				this.entityData.HeSoNgoaiGio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoNgoaiGio, this.entityData.HeSoNgoaiGio);
				OnPropertyChanged("HeSoNgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoaiLop property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String LoaiLop
		{
			get
			{
				return this.entityData.LoaiLop; 
			}
			
			set
			{
				if (this.entityData.LoaiLop == value)
					return;
				
                OnPropertyChanging("LoaiLop");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.LoaiLop, this.entityData.LoaiLop);
				this.entityData.LoaiLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.LoaiLop, this.entityData.LoaiLop);
				OnPropertyChanged("LoaiLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoClcCntn property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoClcCntn
		{
			get
			{
				return this.entityData.HeSoClcCntn; 
			}
			
			set
			{
				if (this.entityData.HeSoClcCntn == value)
					return;
				
                OnPropertyChanging("HeSoClcCntn");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoClcCntn, this.entityData.HeSoClcCntn);
				this.entityData.HeSoClcCntn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoClcCntn, this.entityData.HeSoClcCntn);
				OnPropertyChanged("HeSoClcCntn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoThinhGiangMonChuyenNganh property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoThinhGiangMonChuyenNganh
		{
			get
			{
				return this.entityData.HeSoThinhGiangMonChuyenNganh; 
			}
			
			set
			{
				if (this.entityData.HeSoThinhGiangMonChuyenNganh == value)
					return;
				
                OnPropertyChanging("HeSoThinhGiangMonChuyenNganh");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoThinhGiangMonChuyenNganh, this.entityData.HeSoThinhGiangMonChuyenNganh);
				this.entityData.HeSoThinhGiangMonChuyenNganh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoThinhGiangMonChuyenNganh, this.entityData.HeSoThinhGiangMonChuyenNganh);
				OnPropertyChanged("HeSoThinhGiangMonChuyenNganh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoTroCap property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoTroCap
		{
			get
			{
				return this.entityData.HeSoTroCap; 
			}
			
			set
			{
				if (this.entityData.HeSoTroCap == value)
					return;
				
                OnPropertyChanging("HeSoTroCap");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoTroCap, this.entityData.HeSoTroCap);
				this.entityData.HeSoTroCap = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoTroCap, this.entityData.HeSoTroCap);
				OnPropertyChanged("HeSoTroCap");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoLuong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoLuong
		{
			get
			{
				return this.entityData.HeSoLuong; 
			}
			
			set
			{
				if (this.entityData.HeSoLuong == value)
					return;
				
                OnPropertyChanging("HeSoLuong");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoLuong, this.entityData.HeSoLuong);
				this.entityData.HeSoLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoLuong, this.entityData.HeSoLuong);
				OnPropertyChanged("HeSoLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoMonMoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoMonMoi
		{
			get
			{
				return this.entityData.HeSoMonMoi; 
			}
			
			set
			{
				if (this.entityData.HeSoMonMoi == value)
					return;
				
                OnPropertyChanging("HeSoMonMoi");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoMonMoi, this.entityData.HeSoMonMoi);
				this.entityData.HeSoMonMoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoMonMoi, this.entityData.HeSoMonMoi);
				OnPropertyChanged("HeSoMonMoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNienCheTinChi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNienCheTinChi
		{
			get
			{
				return this.entityData.HeSoNienCheTinChi; 
			}
			
			set
			{
				if (this.entityData.HeSoNienCheTinChi == value)
					return;
				
                OnPropertyChanging("HeSoNienCheTinChi");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.HeSoNienCheTinChi, this.entityData.HeSoNienCheTinChi);
				this.entityData.HeSoNienCheTinChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.HeSoNienCheTinChi, this.entityData.HeSoNienCheTinChi);
				OnPropertyChanged("HeSoNienCheTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GhiChu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String GhiChu
		{
			get
			{
				return this.entityData.GhiChu; 
			}
			
			set
			{
				if (this.entityData.GhiChu == value)
					return;
				
                OnPropertyChanging("GhiChu");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.GhiChu, this.entityData.GhiChu);
				this.entityData.GhiChu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.GhiChu, this.entityData.GhiChu);
				OnPropertyChanged("GhiChu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Chot property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? Chot
		{
			get
			{
				return this.entityData.Chot; 
			}
			
			set
			{
				if (this.entityData.Chot == value)
					return;
				
                OnPropertyChanging("Chot");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.Chot, this.entityData.Chot);
				this.entityData.Chot = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.Chot, this.entityData.Chot);
				OnPropertyChanged("Chot");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MucThanhToan property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MucThanhToan
		{
			get
			{
				return this.entityData.MucThanhToan; 
			}
			
			set
			{
				if (this.entityData.MucThanhToan == value)
					return;
				
                OnPropertyChanging("MucThanhToan");                    
				OnColumnChanging(QuyDoiKhoiLuongTamUngColumn.MucThanhToan, this.entityData.MucThanhToan);
				this.entityData.MucThanhToan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuyDoiKhoiLuongTamUngColumn.MucThanhToan, this.entityData.MucThanhToan);
				OnPropertyChanged("MucThanhToan");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="KhoiLuongTamUng"/>.
		/// </summary>
		/// <value>The source KhoiLuongTamUng for MaKhoiLuongTamUng.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual KhoiLuongTamUng MaKhoiLuongTamUngSource
      	{
            get { return entityData.MaKhoiLuongTamUngSource; }
            set { entityData.MaKhoiLuongTamUngSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LoaiLop", "Loai Lop", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GhiChu", "Ghi Chu", 500));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "QuyDoiKhoiLuongTamUng"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Id", "MaKhoiLuongTamUng", "HeSoCongViec", "HeSoBacDaoTao", "HeSoNgonNgu", "HeSoChucDanhChuyenMon", "HeSoLopDong", "HeSoCoSo", "SoTietThucTeQuyDoi", "TietQuyDoi", "HeSoQuyDoiThucHanhSangLyThuyet", "HeSoNgoaiGio", "LoaiLop", "HeSoClcCntn", "HeSoThinhGiangMonChuyenNganh", "HeSoTroCap", "HeSoLuong", "HeSoMonMoi", "HeSoNienCheTinChi", "GhiChu", "Chot", "MucThanhToan"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as QuyDoiKhoiLuongTamUngEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (QuyDoiKhoiLuongTamUng) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<QuyDoiKhoiLuongTamUng>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as QuyDoiKhoiLuongTamUng);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed QuyDoiKhoiLuongTamUng Entity 
		///</summary>
		protected virtual QuyDoiKhoiLuongTamUng Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			QuyDoiKhoiLuongTamUng copy = new QuyDoiKhoiLuongTamUng();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.Id = this.Id;
				copy.MaKhoiLuongTamUng = this.MaKhoiLuongTamUng;
				copy.HeSoCongViec = this.HeSoCongViec;
				copy.HeSoBacDaoTao = this.HeSoBacDaoTao;
				copy.HeSoNgonNgu = this.HeSoNgonNgu;
				copy.HeSoChucDanhChuyenMon = this.HeSoChucDanhChuyenMon;
				copy.HeSoLopDong = this.HeSoLopDong;
				copy.HeSoCoSo = this.HeSoCoSo;
				copy.SoTietThucTeQuyDoi = this.SoTietThucTeQuyDoi;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.HeSoQuyDoiThucHanhSangLyThuyet = this.HeSoQuyDoiThucHanhSangLyThuyet;
				copy.HeSoNgoaiGio = this.HeSoNgoaiGio;
				copy.LoaiLop = this.LoaiLop;
				copy.HeSoClcCntn = this.HeSoClcCntn;
				copy.HeSoThinhGiangMonChuyenNganh = this.HeSoThinhGiangMonChuyenNganh;
				copy.HeSoTroCap = this.HeSoTroCap;
				copy.HeSoLuong = this.HeSoLuong;
				copy.HeSoMonMoi = this.HeSoMonMoi;
				copy.HeSoNienCheTinChi = this.HeSoNienCheTinChi;
				copy.GhiChu = this.GhiChu;
				copy.Chot = this.Chot;
				copy.MucThanhToan = this.MucThanhToan;
			
			if (this.MaKhoiLuongTamUngSource != null && existingCopies.Contains(this.MaKhoiLuongTamUngSource))
				copy.MaKhoiLuongTamUngSource = existingCopies[this.MaKhoiLuongTamUngSource] as KhoiLuongTamUng;
			else
				copy.MaKhoiLuongTamUngSource = MakeCopyOf(this.MaKhoiLuongTamUngSource, existingCopies) as KhoiLuongTamUng;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed QuyDoiKhoiLuongTamUng Entity 
		///</summary>
		public virtual QuyDoiKhoiLuongTamUng Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed QuyDoiKhoiLuongTamUng Entity which is a deep copy of the current entity.
		///</summary>
		public virtual QuyDoiKhoiLuongTamUng DeepCopy()
		{
			return EntityHelper.Clone<QuyDoiKhoiLuongTamUng>(this as QuyDoiKhoiLuongTamUng);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as QuyDoiKhoiLuongTamUngEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new QuyDoiKhoiLuongTamUngEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as QuyDoiKhoiLuongTamUngEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(QuyDoiKhoiLuongTamUngColumn column)
		{
			switch(column)
			{
					case QuyDoiKhoiLuongTamUngColumn.Id:
					return entityData.Id != _originalData.Id;
					case QuyDoiKhoiLuongTamUngColumn.MaKhoiLuongTamUng:
					return entityData.MaKhoiLuongTamUng != _originalData.MaKhoiLuongTamUng;
					case QuyDoiKhoiLuongTamUngColumn.HeSoCongViec:
					return entityData.HeSoCongViec != _originalData.HeSoCongViec;
					case QuyDoiKhoiLuongTamUngColumn.HeSoBacDaoTao:
					return entityData.HeSoBacDaoTao != _originalData.HeSoBacDaoTao;
					case QuyDoiKhoiLuongTamUngColumn.HeSoNgonNgu:
					return entityData.HeSoNgonNgu != _originalData.HeSoNgonNgu;
					case QuyDoiKhoiLuongTamUngColumn.HeSoChucDanhChuyenMon:
					return entityData.HeSoChucDanhChuyenMon != _originalData.HeSoChucDanhChuyenMon;
					case QuyDoiKhoiLuongTamUngColumn.HeSoLopDong:
					return entityData.HeSoLopDong != _originalData.HeSoLopDong;
					case QuyDoiKhoiLuongTamUngColumn.HeSoCoSo:
					return entityData.HeSoCoSo != _originalData.HeSoCoSo;
					case QuyDoiKhoiLuongTamUngColumn.SoTietThucTeQuyDoi:
					return entityData.SoTietThucTeQuyDoi != _originalData.SoTietThucTeQuyDoi;
					case QuyDoiKhoiLuongTamUngColumn.TietQuyDoi:
					return entityData.TietQuyDoi != _originalData.TietQuyDoi;
					case QuyDoiKhoiLuongTamUngColumn.HeSoQuyDoiThucHanhSangLyThuyet:
					return entityData.HeSoQuyDoiThucHanhSangLyThuyet != _originalData.HeSoQuyDoiThucHanhSangLyThuyet;
					case QuyDoiKhoiLuongTamUngColumn.HeSoNgoaiGio:
					return entityData.HeSoNgoaiGio != _originalData.HeSoNgoaiGio;
					case QuyDoiKhoiLuongTamUngColumn.LoaiLop:
					return entityData.LoaiLop != _originalData.LoaiLop;
					case QuyDoiKhoiLuongTamUngColumn.HeSoClcCntn:
					return entityData.HeSoClcCntn != _originalData.HeSoClcCntn;
					case QuyDoiKhoiLuongTamUngColumn.HeSoThinhGiangMonChuyenNganh:
					return entityData.HeSoThinhGiangMonChuyenNganh != _originalData.HeSoThinhGiangMonChuyenNganh;
					case QuyDoiKhoiLuongTamUngColumn.HeSoTroCap:
					return entityData.HeSoTroCap != _originalData.HeSoTroCap;
					case QuyDoiKhoiLuongTamUngColumn.HeSoLuong:
					return entityData.HeSoLuong != _originalData.HeSoLuong;
					case QuyDoiKhoiLuongTamUngColumn.HeSoMonMoi:
					return entityData.HeSoMonMoi != _originalData.HeSoMonMoi;
					case QuyDoiKhoiLuongTamUngColumn.HeSoNienCheTinChi:
					return entityData.HeSoNienCheTinChi != _originalData.HeSoNienCheTinChi;
					case QuyDoiKhoiLuongTamUngColumn.GhiChu:
					return entityData.GhiChu != _originalData.GhiChu;
					case QuyDoiKhoiLuongTamUngColumn.Chot:
					return entityData.Chot != _originalData.Chot;
					case QuyDoiKhoiLuongTamUngColumn.MucThanhToan:
					return entityData.MucThanhToan != _originalData.MucThanhToan;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< QuyDoiKhoiLuongTamUngColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.MaKhoiLuongTamUng != _originalData.MaKhoiLuongTamUng;
			result = result || entityData.HeSoCongViec != _originalData.HeSoCongViec;
			result = result || entityData.HeSoBacDaoTao != _originalData.HeSoBacDaoTao;
			result = result || entityData.HeSoNgonNgu != _originalData.HeSoNgonNgu;
			result = result || entityData.HeSoChucDanhChuyenMon != _originalData.HeSoChucDanhChuyenMon;
			result = result || entityData.HeSoLopDong != _originalData.HeSoLopDong;
			result = result || entityData.HeSoCoSo != _originalData.HeSoCoSo;
			result = result || entityData.SoTietThucTeQuyDoi != _originalData.SoTietThucTeQuyDoi;
			result = result || entityData.TietQuyDoi != _originalData.TietQuyDoi;
			result = result || entityData.HeSoQuyDoiThucHanhSangLyThuyet != _originalData.HeSoQuyDoiThucHanhSangLyThuyet;
			result = result || entityData.HeSoNgoaiGio != _originalData.HeSoNgoaiGio;
			result = result || entityData.LoaiLop != _originalData.LoaiLop;
			result = result || entityData.HeSoClcCntn != _originalData.HeSoClcCntn;
			result = result || entityData.HeSoThinhGiangMonChuyenNganh != _originalData.HeSoThinhGiangMonChuyenNganh;
			result = result || entityData.HeSoTroCap != _originalData.HeSoTroCap;
			result = result || entityData.HeSoLuong != _originalData.HeSoLuong;
			result = result || entityData.HeSoMonMoi != _originalData.HeSoMonMoi;
			result = result || entityData.HeSoNienCheTinChi != _originalData.HeSoNienCheTinChi;
			result = result || entityData.GhiChu != _originalData.GhiChu;
			result = result || entityData.Chot != _originalData.Chot;
			result = result || entityData.MucThanhToan != _originalData.MucThanhToan;
			return result;
		}	
		
		///<summary>
		///  Returns a QuyDoiKhoiLuongTamUng Entity with the original data.
		///</summary>
		public QuyDoiKhoiLuongTamUng GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateQuyDoiKhoiLuongTamUng(
				_originalData.MaKhoiLuongTamUng,
				_originalData.HeSoCongViec,
				_originalData.HeSoBacDaoTao,
				_originalData.HeSoNgonNgu,
				_originalData.HeSoChucDanhChuyenMon,
				_originalData.HeSoLopDong,
				_originalData.HeSoCoSo,
				_originalData.SoTietThucTeQuyDoi,
				_originalData.TietQuyDoi,
				_originalData.HeSoQuyDoiThucHanhSangLyThuyet,
				_originalData.HeSoNgoaiGio,
				_originalData.LoaiLop,
				_originalData.HeSoClcCntn,
				_originalData.HeSoThinhGiangMonChuyenNganh,
				_originalData.HeSoTroCap,
				_originalData.HeSoLuong,
				_originalData.HeSoMonMoi,
				_originalData.HeSoNienCheTinChi,
				_originalData.GhiChu,
				_originalData.Chot,
				_originalData.MucThanhToan
				);
				
			return (QuyDoiKhoiLuongTamUng)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="QuyDoiKhoiLuongTamUngBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is QuyDoiKhoiLuongTamUngBase)
				return ValueEquals(this, (QuyDoiKhoiLuongTamUngBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="QuyDoiKhoiLuongTamUngBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.MaKhoiLuongTamUng == null) ? string.Empty : this.MaKhoiLuongTamUng.ToString()).GetHashCode() ^ 
					((this.HeSoCongViec == null) ? string.Empty : this.HeSoCongViec.ToString()).GetHashCode() ^ 
					((this.HeSoBacDaoTao == null) ? string.Empty : this.HeSoBacDaoTao.ToString()).GetHashCode() ^ 
					((this.HeSoNgonNgu == null) ? string.Empty : this.HeSoNgonNgu.ToString()).GetHashCode() ^ 
					((this.HeSoChucDanhChuyenMon == null) ? string.Empty : this.HeSoChucDanhChuyenMon.ToString()).GetHashCode() ^ 
					((this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString()).GetHashCode() ^ 
					((this.HeSoCoSo == null) ? string.Empty : this.HeSoCoSo.ToString()).GetHashCode() ^ 
					((this.SoTietThucTeQuyDoi == null) ? string.Empty : this.SoTietThucTeQuyDoi.ToString()).GetHashCode() ^ 
					((this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString()).GetHashCode() ^ 
					((this.HeSoQuyDoiThucHanhSangLyThuyet == null) ? string.Empty : this.HeSoQuyDoiThucHanhSangLyThuyet.ToString()).GetHashCode() ^ 
					((this.HeSoNgoaiGio == null) ? string.Empty : this.HeSoNgoaiGio.ToString()).GetHashCode() ^ 
					((this.LoaiLop == null) ? string.Empty : this.LoaiLop.ToString()).GetHashCode() ^ 
					((this.HeSoClcCntn == null) ? string.Empty : this.HeSoClcCntn.ToString()).GetHashCode() ^ 
					((this.HeSoThinhGiangMonChuyenNganh == null) ? string.Empty : this.HeSoThinhGiangMonChuyenNganh.ToString()).GetHashCode() ^ 
					((this.HeSoTroCap == null) ? string.Empty : this.HeSoTroCap.ToString()).GetHashCode() ^ 
					((this.HeSoLuong == null) ? string.Empty : this.HeSoLuong.ToString()).GetHashCode() ^ 
					((this.HeSoMonMoi == null) ? string.Empty : this.HeSoMonMoi.ToString()).GetHashCode() ^ 
					((this.HeSoNienCheTinChi == null) ? string.Empty : this.HeSoNienCheTinChi.ToString()).GetHashCode() ^ 
					((this.GhiChu == null) ? string.Empty : this.GhiChu.ToString()).GetHashCode() ^ 
					((this.Chot == null) ? string.Empty : this.Chot.ToString()).GetHashCode() ^ 
					((this.MucThanhToan == null) ? string.Empty : this.MucThanhToan.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="QuyDoiKhoiLuongTamUngBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(QuyDoiKhoiLuongTamUngBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="QuyDoiKhoiLuongTamUngBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="QuyDoiKhoiLuongTamUngBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="QuyDoiKhoiLuongTamUngBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(QuyDoiKhoiLuongTamUngBase Object1, QuyDoiKhoiLuongTamUngBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.MaKhoiLuongTamUng != null && Object2.MaKhoiLuongTamUng != null )
			{
				if (Object1.MaKhoiLuongTamUng != Object2.MaKhoiLuongTamUng)
					equal = false;
			}
			else if (Object1.MaKhoiLuongTamUng == null ^ Object2.MaKhoiLuongTamUng == null )
			{
				equal = false;
			}
			if ( Object1.HeSoCongViec != null && Object2.HeSoCongViec != null )
			{
				if (Object1.HeSoCongViec != Object2.HeSoCongViec)
					equal = false;
			}
			else if (Object1.HeSoCongViec == null ^ Object2.HeSoCongViec == null )
			{
				equal = false;
			}
			if ( Object1.HeSoBacDaoTao != null && Object2.HeSoBacDaoTao != null )
			{
				if (Object1.HeSoBacDaoTao != Object2.HeSoBacDaoTao)
					equal = false;
			}
			else if (Object1.HeSoBacDaoTao == null ^ Object2.HeSoBacDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNgonNgu != null && Object2.HeSoNgonNgu != null )
			{
				if (Object1.HeSoNgonNgu != Object2.HeSoNgonNgu)
					equal = false;
			}
			else if (Object1.HeSoNgonNgu == null ^ Object2.HeSoNgonNgu == null )
			{
				equal = false;
			}
			if ( Object1.HeSoChucDanhChuyenMon != null && Object2.HeSoChucDanhChuyenMon != null )
			{
				if (Object1.HeSoChucDanhChuyenMon != Object2.HeSoChucDanhChuyenMon)
					equal = false;
			}
			else if (Object1.HeSoChucDanhChuyenMon == null ^ Object2.HeSoChucDanhChuyenMon == null )
			{
				equal = false;
			}
			if ( Object1.HeSoLopDong != null && Object2.HeSoLopDong != null )
			{
				if (Object1.HeSoLopDong != Object2.HeSoLopDong)
					equal = false;
			}
			else if (Object1.HeSoLopDong == null ^ Object2.HeSoLopDong == null )
			{
				equal = false;
			}
			if ( Object1.HeSoCoSo != null && Object2.HeSoCoSo != null )
			{
				if (Object1.HeSoCoSo != Object2.HeSoCoSo)
					equal = false;
			}
			else if (Object1.HeSoCoSo == null ^ Object2.HeSoCoSo == null )
			{
				equal = false;
			}
			if ( Object1.SoTietThucTeQuyDoi != null && Object2.SoTietThucTeQuyDoi != null )
			{
				if (Object1.SoTietThucTeQuyDoi != Object2.SoTietThucTeQuyDoi)
					equal = false;
			}
			else if (Object1.SoTietThucTeQuyDoi == null ^ Object2.SoTietThucTeQuyDoi == null )
			{
				equal = false;
			}
			if ( Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object2.TietQuyDoi == null )
			{
				equal = false;
			}
			if ( Object1.HeSoQuyDoiThucHanhSangLyThuyet != null && Object2.HeSoQuyDoiThucHanhSangLyThuyet != null )
			{
				if (Object1.HeSoQuyDoiThucHanhSangLyThuyet != Object2.HeSoQuyDoiThucHanhSangLyThuyet)
					equal = false;
			}
			else if (Object1.HeSoQuyDoiThucHanhSangLyThuyet == null ^ Object2.HeSoQuyDoiThucHanhSangLyThuyet == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNgoaiGio != null && Object2.HeSoNgoaiGio != null )
			{
				if (Object1.HeSoNgoaiGio != Object2.HeSoNgoaiGio)
					equal = false;
			}
			else if (Object1.HeSoNgoaiGio == null ^ Object2.HeSoNgoaiGio == null )
			{
				equal = false;
			}
			if ( Object1.LoaiLop != null && Object2.LoaiLop != null )
			{
				if (Object1.LoaiLop != Object2.LoaiLop)
					equal = false;
			}
			else if (Object1.LoaiLop == null ^ Object2.LoaiLop == null )
			{
				equal = false;
			}
			if ( Object1.HeSoClcCntn != null && Object2.HeSoClcCntn != null )
			{
				if (Object1.HeSoClcCntn != Object2.HeSoClcCntn)
					equal = false;
			}
			else if (Object1.HeSoClcCntn == null ^ Object2.HeSoClcCntn == null )
			{
				equal = false;
			}
			if ( Object1.HeSoThinhGiangMonChuyenNganh != null && Object2.HeSoThinhGiangMonChuyenNganh != null )
			{
				if (Object1.HeSoThinhGiangMonChuyenNganh != Object2.HeSoThinhGiangMonChuyenNganh)
					equal = false;
			}
			else if (Object1.HeSoThinhGiangMonChuyenNganh == null ^ Object2.HeSoThinhGiangMonChuyenNganh == null )
			{
				equal = false;
			}
			if ( Object1.HeSoTroCap != null && Object2.HeSoTroCap != null )
			{
				if (Object1.HeSoTroCap != Object2.HeSoTroCap)
					equal = false;
			}
			else if (Object1.HeSoTroCap == null ^ Object2.HeSoTroCap == null )
			{
				equal = false;
			}
			if ( Object1.HeSoLuong != null && Object2.HeSoLuong != null )
			{
				if (Object1.HeSoLuong != Object2.HeSoLuong)
					equal = false;
			}
			else if (Object1.HeSoLuong == null ^ Object2.HeSoLuong == null )
			{
				equal = false;
			}
			if ( Object1.HeSoMonMoi != null && Object2.HeSoMonMoi != null )
			{
				if (Object1.HeSoMonMoi != Object2.HeSoMonMoi)
					equal = false;
			}
			else if (Object1.HeSoMonMoi == null ^ Object2.HeSoMonMoi == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNienCheTinChi != null && Object2.HeSoNienCheTinChi != null )
			{
				if (Object1.HeSoNienCheTinChi != Object2.HeSoNienCheTinChi)
					equal = false;
			}
			else if (Object1.HeSoNienCheTinChi == null ^ Object2.HeSoNienCheTinChi == null )
			{
				equal = false;
			}
			if ( Object1.GhiChu != null && Object2.GhiChu != null )
			{
				if (Object1.GhiChu != Object2.GhiChu)
					equal = false;
			}
			else if (Object1.GhiChu == null ^ Object2.GhiChu == null )
			{
				equal = false;
			}
			if ( Object1.Chot != null && Object2.Chot != null )
			{
				if (Object1.Chot != Object2.Chot)
					equal = false;
			}
			else if (Object1.Chot == null ^ Object2.Chot == null )
			{
				equal = false;
			}
			if ( Object1.MucThanhToan != null && Object2.MucThanhToan != null )
			{
				if (Object1.MucThanhToan != Object2.MucThanhToan)
					equal = false;
			}
			else if (Object1.MucThanhToan == null ^ Object2.MucThanhToan == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((QuyDoiKhoiLuongTamUngBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static QuyDoiKhoiLuongTamUngComparer GetComparer()
        {
            return new QuyDoiKhoiLuongTamUngComparer();
        }
        */

        // Comparer delegates back to QuyDoiKhoiLuongTamUng
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(QuyDoiKhoiLuongTamUng rhs, QuyDoiKhoiLuongTamUngColumn which)
        {
            switch (which)
            {
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.MaKhoiLuongTamUng:
            		return this.MaKhoiLuongTamUng.Value.CompareTo(rhs.MaKhoiLuongTamUng.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoCongViec:
            		return this.HeSoCongViec.Value.CompareTo(rhs.HeSoCongViec.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoBacDaoTao:
            		return this.HeSoBacDaoTao.Value.CompareTo(rhs.HeSoBacDaoTao.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoNgonNgu:
            		return this.HeSoNgonNgu.Value.CompareTo(rhs.HeSoNgonNgu.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoChucDanhChuyenMon:
            		return this.HeSoChucDanhChuyenMon.Value.CompareTo(rhs.HeSoChucDanhChuyenMon.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoLopDong:
            		return this.HeSoLopDong.Value.CompareTo(rhs.HeSoLopDong.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoCoSo:
            		return this.HeSoCoSo.Value.CompareTo(rhs.HeSoCoSo.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.SoTietThucTeQuyDoi:
            		return this.SoTietThucTeQuyDoi.Value.CompareTo(rhs.SoTietThucTeQuyDoi.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.TietQuyDoi:
            		return this.TietQuyDoi.Value.CompareTo(rhs.TietQuyDoi.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoQuyDoiThucHanhSangLyThuyet:
            		return this.HeSoQuyDoiThucHanhSangLyThuyet.Value.CompareTo(rhs.HeSoQuyDoiThucHanhSangLyThuyet.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoNgoaiGio:
            		return this.HeSoNgoaiGio.Value.CompareTo(rhs.HeSoNgoaiGio.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.LoaiLop:
            		return this.LoaiLop.CompareTo(rhs.LoaiLop);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoClcCntn:
            		return this.HeSoClcCntn.Value.CompareTo(rhs.HeSoClcCntn.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoThinhGiangMonChuyenNganh:
            		return this.HeSoThinhGiangMonChuyenNganh.Value.CompareTo(rhs.HeSoThinhGiangMonChuyenNganh.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoTroCap:
            		return this.HeSoTroCap.Value.CompareTo(rhs.HeSoTroCap.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoLuong:
            		return this.HeSoLuong.Value.CompareTo(rhs.HeSoLuong.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoMonMoi:
            		return this.HeSoMonMoi.Value.CompareTo(rhs.HeSoMonMoi.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.HeSoNienCheTinChi:
            		return this.HeSoNienCheTinChi.Value.CompareTo(rhs.HeSoNienCheTinChi.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.GhiChu:
            		return this.GhiChu.CompareTo(rhs.GhiChu);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.Chot:
            		return this.Chot.Value.CompareTo(rhs.Chot.Value);
            		
            		                 
            	
            	
            	case QuyDoiKhoiLuongTamUngColumn.MucThanhToan:
            		return this.MucThanhToan.Value.CompareTo(rhs.MucThanhToan.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<QuyDoiKhoiLuongTamUngKey> Members
		
		// member variable for the EntityId property
		private QuyDoiKhoiLuongTamUngKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual QuyDoiKhoiLuongTamUngKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new QuyDoiKhoiLuongTamUngKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("QuyDoiKhoiLuongTamUng")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{23}{22}- Id: {0}{22}- MaKhoiLuongTamUng: {1}{22}- HeSoCongViec: {2}{22}- HeSoBacDaoTao: {3}{22}- HeSoNgonNgu: {4}{22}- HeSoChucDanhChuyenMon: {5}{22}- HeSoLopDong: {6}{22}- HeSoCoSo: {7}{22}- SoTietThucTeQuyDoi: {8}{22}- TietQuyDoi: {9}{22}- HeSoQuyDoiThucHanhSangLyThuyet: {10}{22}- HeSoNgoaiGio: {11}{22}- LoaiLop: {12}{22}- HeSoClcCntn: {13}{22}- HeSoThinhGiangMonChuyenNganh: {14}{22}- HeSoTroCap: {15}{22}- HeSoLuong: {16}{22}- HeSoMonMoi: {17}{22}- HeSoNienCheTinChi: {18}{22}- GhiChu: {19}{22}- Chot: {20}{22}- MucThanhToan: {21}{22}{24}", 
				this.Id,
				(this.MaKhoiLuongTamUng == null) ? string.Empty : this.MaKhoiLuongTamUng.ToString(),
				(this.HeSoCongViec == null) ? string.Empty : this.HeSoCongViec.ToString(),
				(this.HeSoBacDaoTao == null) ? string.Empty : this.HeSoBacDaoTao.ToString(),
				(this.HeSoNgonNgu == null) ? string.Empty : this.HeSoNgonNgu.ToString(),
				(this.HeSoChucDanhChuyenMon == null) ? string.Empty : this.HeSoChucDanhChuyenMon.ToString(),
				(this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString(),
				(this.HeSoCoSo == null) ? string.Empty : this.HeSoCoSo.ToString(),
				(this.SoTietThucTeQuyDoi == null) ? string.Empty : this.SoTietThucTeQuyDoi.ToString(),
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
				(this.HeSoQuyDoiThucHanhSangLyThuyet == null) ? string.Empty : this.HeSoQuyDoiThucHanhSangLyThuyet.ToString(),
				(this.HeSoNgoaiGio == null) ? string.Empty : this.HeSoNgoaiGio.ToString(),
				(this.LoaiLop == null) ? string.Empty : this.LoaiLop.ToString(),
				(this.HeSoClcCntn == null) ? string.Empty : this.HeSoClcCntn.ToString(),
				(this.HeSoThinhGiangMonChuyenNganh == null) ? string.Empty : this.HeSoThinhGiangMonChuyenNganh.ToString(),
				(this.HeSoTroCap == null) ? string.Empty : this.HeSoTroCap.ToString(),
				(this.HeSoLuong == null) ? string.Empty : this.HeSoLuong.ToString(),
				(this.HeSoMonMoi == null) ? string.Empty : this.HeSoMonMoi.ToString(),
				(this.HeSoNienCheTinChi == null) ? string.Empty : this.HeSoNienCheTinChi.ToString(),
				(this.GhiChu == null) ? string.Empty : this.GhiChu.ToString(),
				(this.Chot == null) ? string.Empty : this.Chot.ToString(),
				(this.MucThanhToan == null) ? string.Empty : this.MucThanhToan.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'QuyDoiKhoiLuongTamUng' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class QuyDoiKhoiLuongTamUngEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "QuyDoiKhoiLuongTamUng"</remarks>
		public System.Int32 Id;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaKhoiLuongTamUng : 
		/// </summary>
		public System.Int32? MaKhoiLuongTamUng = null;
		
		/// <summary>
		/// HeSoCongViec : 
		/// </summary>
		public System.Decimal? HeSoCongViec = null;
		
		/// <summary>
		/// HeSoBacDaoTao : 
		/// </summary>
		public System.Decimal? HeSoBacDaoTao = null;
		
		/// <summary>
		/// HeSoNgonNgu : 
		/// </summary>
		public System.Decimal? HeSoNgonNgu = null;
		
		/// <summary>
		/// HeSoChucDanhChuyenMon : 
		/// </summary>
		public System.Decimal? HeSoChucDanhChuyenMon = null;
		
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		public System.Decimal? HeSoLopDong = null;
		
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		public System.Decimal? HeSoCoSo = null;
		
		/// <summary>
		/// SoTietThucTeQuyDoi : 
		/// </summary>
		public System.Decimal? SoTietThucTeQuyDoi = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		public System.Decimal? TietQuyDoi = null;
		
		/// <summary>
		/// HeSoQuyDoiThucHanhSangLyThuyet : 
		/// </summary>
		public System.Decimal? HeSoQuyDoiThucHanhSangLyThuyet = null;
		
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		public System.Decimal? HeSoNgoaiGio = null;
		
		/// <summary>
		/// LoaiLop : 
		/// </summary>
		public System.String LoaiLop = null;
		
		/// <summary>
		/// HeSoClcCntn : 
		/// </summary>
		public System.Decimal? HeSoClcCntn = null;
		
		/// <summary>
		/// HeSoThinhGiangMonChuyenNganh : 
		/// </summary>
		public System.Decimal? HeSoThinhGiangMonChuyenNganh = null;
		
		/// <summary>
		/// HeSoTroCap : 
		/// </summary>
		public System.Decimal? HeSoTroCap = null;
		
		/// <summary>
		/// HeSoLuong : 
		/// </summary>
		public System.Decimal? HeSoLuong = null;
		
		/// <summary>
		/// HeSoMonMoi : 
		/// </summary>
		public System.Decimal? HeSoMonMoi = null;
		
		/// <summary>
		/// HeSoNienCheTinChi : 
		/// </summary>
		public System.Decimal? HeSoNienCheTinChi = null;
		
		/// <summary>
		/// GhiChu : 
		/// </summary>
		public System.String GhiChu = null;
		
		/// <summary>
		/// Chot : 
		/// </summary>
		public System.Boolean? Chot = null;
		
		/// <summary>
		/// MucThanhToan : 
		/// </summary>
		public System.Decimal? MucThanhToan = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private KhoiLuongTamUng _maKhoiLuongTamUngSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="KhoiLuongTamUng"/>.
		/// </summary>
		/// <value>The source KhoiLuongTamUng for MaKhoiLuongTamUng.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual KhoiLuongTamUng MaKhoiLuongTamUngSource
      	{
            get { return this._maKhoiLuongTamUngSource; }
            set { this._maKhoiLuongTamUngSource = value; }
      	}
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			QuyDoiKhoiLuongTamUngEntityData _tmp = new QuyDoiKhoiLuongTamUngEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaKhoiLuongTamUng = this.MaKhoiLuongTamUng;
			_tmp.HeSoCongViec = this.HeSoCongViec;
			_tmp.HeSoBacDaoTao = this.HeSoBacDaoTao;
			_tmp.HeSoNgonNgu = this.HeSoNgonNgu;
			_tmp.HeSoChucDanhChuyenMon = this.HeSoChucDanhChuyenMon;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.HeSoCoSo = this.HeSoCoSo;
			_tmp.SoTietThucTeQuyDoi = this.SoTietThucTeQuyDoi;
			_tmp.TietQuyDoi = this.TietQuyDoi;
			_tmp.HeSoQuyDoiThucHanhSangLyThuyet = this.HeSoQuyDoiThucHanhSangLyThuyet;
			_tmp.HeSoNgoaiGio = this.HeSoNgoaiGio;
			_tmp.LoaiLop = this.LoaiLop;
			_tmp.HeSoClcCntn = this.HeSoClcCntn;
			_tmp.HeSoThinhGiangMonChuyenNganh = this.HeSoThinhGiangMonChuyenNganh;
			_tmp.HeSoTroCap = this.HeSoTroCap;
			_tmp.HeSoLuong = this.HeSoLuong;
			_tmp.HeSoMonMoi = this.HeSoMonMoi;
			_tmp.HeSoNienCheTinChi = this.HeSoNienCheTinChi;
			_tmp.GhiChu = this.GhiChu;
			_tmp.Chot = this.Chot;
			_tmp.MucThanhToan = this.MucThanhToan;
			
			#region Source Parent Composite Entities
			if (this.MaKhoiLuongTamUngSource != null)
				_tmp.MaKhoiLuongTamUngSource = MakeCopyOf(this.MaKhoiLuongTamUngSource) as KhoiLuongTamUng;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			QuyDoiKhoiLuongTamUngEntityData _tmp = new QuyDoiKhoiLuongTamUngEntityData();
						
			_tmp.Id = this.Id;
			
			_tmp.MaKhoiLuongTamUng = this.MaKhoiLuongTamUng;
			_tmp.HeSoCongViec = this.HeSoCongViec;
			_tmp.HeSoBacDaoTao = this.HeSoBacDaoTao;
			_tmp.HeSoNgonNgu = this.HeSoNgonNgu;
			_tmp.HeSoChucDanhChuyenMon = this.HeSoChucDanhChuyenMon;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.HeSoCoSo = this.HeSoCoSo;
			_tmp.SoTietThucTeQuyDoi = this.SoTietThucTeQuyDoi;
			_tmp.TietQuyDoi = this.TietQuyDoi;
			_tmp.HeSoQuyDoiThucHanhSangLyThuyet = this.HeSoQuyDoiThucHanhSangLyThuyet;
			_tmp.HeSoNgoaiGio = this.HeSoNgoaiGio;
			_tmp.LoaiLop = this.LoaiLop;
			_tmp.HeSoClcCntn = this.HeSoClcCntn;
			_tmp.HeSoThinhGiangMonChuyenNganh = this.HeSoThinhGiangMonChuyenNganh;
			_tmp.HeSoTroCap = this.HeSoTroCap;
			_tmp.HeSoLuong = this.HeSoLuong;
			_tmp.HeSoMonMoi = this.HeSoMonMoi;
			_tmp.HeSoNienCheTinChi = this.HeSoNienCheTinChi;
			_tmp.GhiChu = this.GhiChu;
			_tmp.Chot = this.Chot;
			_tmp.MucThanhToan = this.MucThanhToan;
			
			#region Source Parent Composite Entities
			if (this.MaKhoiLuongTamUngSource != null && existingCopies.Contains(this.MaKhoiLuongTamUngSource))
				_tmp.MaKhoiLuongTamUngSource = existingCopies[this.MaKhoiLuongTamUngSource] as KhoiLuongTamUng;
			else
				_tmp.MaKhoiLuongTamUngSource = MakeCopyOf(this.MaKhoiLuongTamUngSource, existingCopies) as KhoiLuongTamUng;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="QuyDoiKhoiLuongTamUngColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(QuyDoiKhoiLuongTamUngColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="QuyDoiKhoiLuongTamUngColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(QuyDoiKhoiLuongTamUngColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="QuyDoiKhoiLuongTamUngColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(QuyDoiKhoiLuongTamUngColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				QuyDoiKhoiLuongTamUngEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new QuyDoiKhoiLuongTamUngEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="QuyDoiKhoiLuongTamUngColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(QuyDoiKhoiLuongTamUngColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				QuyDoiKhoiLuongTamUngEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new QuyDoiKhoiLuongTamUngEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region QuyDoiKhoiLuongTamUngEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="QuyDoiKhoiLuongTamUng"/> object.
	/// </remarks>
	public class QuyDoiKhoiLuongTamUngEventArgs : System.EventArgs
	{
		private QuyDoiKhoiLuongTamUngColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the QuyDoiKhoiLuongTamUngEventArgs class.
		///</summary>
		public QuyDoiKhoiLuongTamUngEventArgs(QuyDoiKhoiLuongTamUngColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the QuyDoiKhoiLuongTamUngEventArgs class.
		///</summary>
		public QuyDoiKhoiLuongTamUngEventArgs(QuyDoiKhoiLuongTamUngColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The QuyDoiKhoiLuongTamUngColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="QuyDoiKhoiLuongTamUngColumn" />
		public QuyDoiKhoiLuongTamUngColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all QuyDoiKhoiLuongTamUng related events.
	///</summary>
	public delegate void QuyDoiKhoiLuongTamUngEventHandler(object sender, QuyDoiKhoiLuongTamUngEventArgs e);
	
	#region QuyDoiKhoiLuongTamUngComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class QuyDoiKhoiLuongTamUngComparer : System.Collections.Generic.IComparer<QuyDoiKhoiLuongTamUng>
	{
		QuyDoiKhoiLuongTamUngColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:QuyDoiKhoiLuongTamUngComparer"/> class.
        /// </summary>
		public QuyDoiKhoiLuongTamUngComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:QuyDoiKhoiLuongTamUngComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public QuyDoiKhoiLuongTamUngComparer(QuyDoiKhoiLuongTamUngColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="QuyDoiKhoiLuongTamUng"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="QuyDoiKhoiLuongTamUng"/> to compare.</param>
        /// <param name="b">The second <c>QuyDoiKhoiLuongTamUng</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(QuyDoiKhoiLuongTamUng a, QuyDoiKhoiLuongTamUng b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(QuyDoiKhoiLuongTamUng entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(QuyDoiKhoiLuongTamUng a, QuyDoiKhoiLuongTamUng b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public QuyDoiKhoiLuongTamUngColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region QuyDoiKhoiLuongTamUngKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="QuyDoiKhoiLuongTamUng"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class QuyDoiKhoiLuongTamUngKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the QuyDoiKhoiLuongTamUngKey class.
		/// </summary>
		public QuyDoiKhoiLuongTamUngKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the QuyDoiKhoiLuongTamUngKey class.
		/// </summary>
		public QuyDoiKhoiLuongTamUngKey(QuyDoiKhoiLuongTamUngBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the QuyDoiKhoiLuongTamUngKey class.
		/// </summary>
		public QuyDoiKhoiLuongTamUngKey(System.Int32 _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private QuyDoiKhoiLuongTamUngBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public QuyDoiKhoiLuongTamUngBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.Int32 _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.Int32 Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["Id"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region QuyDoiKhoiLuongTamUngColumn Enum
	
	/// <summary>
	/// Enumerate the QuyDoiKhoiLuongTamUng columns.
	/// </summary>
	[Serializable]
	public enum QuyDoiKhoiLuongTamUngColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("Id")]
		[ColumnEnum("Id", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		Id = 1,
		/// <summary>
		/// MaKhoiLuongTamUng : 
		/// </summary>
		[EnumTextValue("Ma Khoi Luong Tam Ung")]
		[ColumnEnum("MaKhoiLuongTamUng", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaKhoiLuongTamUng = 2,
		/// <summary>
		/// HeSoCongViec : 
		/// </summary>
		[EnumTextValue("He So Cong Viec")]
		[ColumnEnum("HeSoCongViec", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoCongViec = 3,
		/// <summary>
		/// HeSoBacDaoTao : 
		/// </summary>
		[EnumTextValue("He So Bac Dao Tao")]
		[ColumnEnum("HeSoBacDaoTao", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoBacDaoTao = 4,
		/// <summary>
		/// HeSoNgonNgu : 
		/// </summary>
		[EnumTextValue("He So Ngon Ngu")]
		[ColumnEnum("HeSoNgonNgu", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNgonNgu = 5,
		/// <summary>
		/// HeSoChucDanhChuyenMon : 
		/// </summary>
		[EnumTextValue("He So Chuc Danh Chuyen Mon")]
		[ColumnEnum("HeSoChucDanhChuyenMon", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoChucDanhChuyenMon = 6,
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		[EnumTextValue("He So Lop Dong")]
		[ColumnEnum("HeSoLopDong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDong = 7,
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		[EnumTextValue("He So Co So")]
		[ColumnEnum("HeSoCoSo", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoCoSo = 8,
		/// <summary>
		/// SoTietThucTeQuyDoi : 
		/// </summary>
		[EnumTextValue("So Tiet Thuc Te Quy Doi")]
		[ColumnEnum("SoTietThucTeQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTietThucTeQuyDoi = 9,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("Tiet Quy Doi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi = 10,
		/// <summary>
		/// HeSoQuyDoiThucHanhSangLyThuyet : 
		/// </summary>
		[EnumTextValue("He So Quy Doi Thuc Hanh Sang Ly Thuyet")]
		[ColumnEnum("HeSoQuyDoiThucHanhSangLyThuyet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoQuyDoiThucHanhSangLyThuyet = 11,
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		[EnumTextValue("He So Ngoai Gio")]
		[ColumnEnum("HeSoNgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNgoaiGio = 12,
		/// <summary>
		/// LoaiLop : 
		/// </summary>
		[EnumTextValue("Loai Lop")]
		[ColumnEnum("LoaiLop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		LoaiLop = 13,
		/// <summary>
		/// HeSoClcCntn : 
		/// </summary>
		[EnumTextValue("He So Clc Cntn")]
		[ColumnEnum("HeSoClcCntn", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoClcCntn = 14,
		/// <summary>
		/// HeSoThinhGiangMonChuyenNganh : 
		/// </summary>
		[EnumTextValue("He So Thinh Giang Mon Chuyen Nganh")]
		[ColumnEnum("HeSoThinhGiangMonChuyenNganh", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoThinhGiangMonChuyenNganh = 15,
		/// <summary>
		/// HeSoTroCap : 
		/// </summary>
		[EnumTextValue("He So Tro Cap")]
		[ColumnEnum("HeSoTroCap", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoTroCap = 16,
		/// <summary>
		/// HeSoLuong : 
		/// </summary>
		[EnumTextValue("He So Luong")]
		[ColumnEnum("HeSoLuong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLuong = 17,
		/// <summary>
		/// HeSoMonMoi : 
		/// </summary>
		[EnumTextValue("He So Mon Moi")]
		[ColumnEnum("HeSoMonMoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoMonMoi = 18,
		/// <summary>
		/// HeSoNienCheTinChi : 
		/// </summary>
		[EnumTextValue("He So Nien Che Tin Chi")]
		[ColumnEnum("HeSoNienCheTinChi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNienCheTinChi = 19,
		/// <summary>
		/// GhiChu : 
		/// </summary>
		[EnumTextValue("Ghi Chu")]
		[ColumnEnum("GhiChu", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		GhiChu = 20,
		/// <summary>
		/// Chot : 
		/// </summary>
		[EnumTextValue("Chot")]
		[ColumnEnum("Chot", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		Chot = 21,
		/// <summary>
		/// MucThanhToan : 
		/// </summary>
		[EnumTextValue("Muc Thanh Toan")]
		[ColumnEnum("MucThanhToan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MucThanhToan = 22
	}//End enum

	#endregion QuyDoiKhoiLuongTamUngColumn Enum

} // end namespace

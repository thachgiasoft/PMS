
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file GiangVien.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'GiangVien' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class GiangVienBase : EntityBase, IGiangVien, IEntityId<GiangVienKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private GiangVienEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private GiangVienEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private GiangVienEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<GiangVien> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GiangVienEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GiangVienEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="GiangVienBase"/> instance.
		///</summary>
		public GiangVienBase()
		{
			this.entityData = new GiangVienEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="GiangVienBase"/> instance.
		///</summary>
		///<param name="_maDanToc"></param>
		///<param name="_maTonGiao"></param>
		///<param name="_maDonVi"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maNguoiLap"></param>
		///<param name="_matKhau"></param>
		///<param name="_maTinhTrang"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_tenDem"></param>
		///<param name="_ten"></param>
		///<param name="_ngaySinh"></param>
		///<param name="_gioiTinh"></param>
		///<param name="_noiSinh"></param>
		///<param name="_cmnd"></param>
		///<param name="_ngayCap"></param>
		///<param name="_noiCap"></param>
		///<param name="_doanDang"></param>
		///<param name="_ngayVaoDoanDang"></param>
		///<param name="_ngayKyHopDong"></param>
		///<param name="_ngayKetThucHopDong"></param>
		///<param name="_hinhAnh"></param>
		///<param name="_diaChi"></param>
		///<param name="_thuongTru"></param>
		///<param name="_noiLamViec"></param>
		///<param name="_email"></param>
		///<param name="_dienThoai"></param>
		///<param name="_soDiDong"></param>
		///<param name="_soTaiKhoan"></param>
		///<param name="_tenNganHang"></param>
		///<param name="_maSoThue"></param>
		///<param name="_chiNhanh"></param>
		///<param name="_soSoBaoHiem"></param>
		///<param name="_thoiGianBatDau"></param>
		///<param name="_bacLuong"></param>
		///<param name="_ngayHuongLuong"></param>
		///<param name="_namLamViec"></param>
		///<param name="_chuyenNganh"></param>
		///<param name="_maHeSoThuLao"></param>
		///<param name="_ngach"></param>
		///<param name="_soHieuCongChuc"></param>
		///<param name="_hrmid"></param>
		///<param name="_noiCapBang"></param>
		///<param name="_khoaTaiKhoan"></param>
		///<param name="_maLoaiNhanVien"></param>
		///<param name="_maNgachCongChuc"></param>
		///<param name="_maTrinhDoChinhTri"></param>
		///<param name="_maTrinhDoSuPham"></param>
		///<param name="_maTrinhDoNgoaiNgu"></param>
		///<param name="_maTrinhDoTinHoc"></param>
		///<param name="_maTrinhDoQuanLyNhaNuoc"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_khoiKienThucGiangDay"></param>
		///<param name="_nganhDaoTao"></param>
		///<param name="_donViGiangDay"></param>
		///<param name="_idHoSo"></param>
		///<param name="_maQuocTich"></param>
		///<param name="_daXoaHrm"></param>
		public GiangVienBase(System.String _maDanToc, System.String _maTonGiao, System.String _maDonVi, 
			System.Int32? _maHocHam, System.Int32? _maHocVi, System.Int32? _maLoaiGiangVien, System.Int32? _maNguoiLap, 
			System.String _matKhau, System.Int32? _maTinhTrang, System.String _maQuanLy, System.String _ho, 
			System.String _tenDem, System.String _ten, System.String _ngaySinh, System.Boolean? _gioiTinh, 
			System.String _noiSinh, System.String _cmnd, System.String _ngayCap, System.String _noiCap, 
			System.Boolean? _doanDang, System.String _ngayVaoDoanDang, System.DateTime? _ngayKyHopDong, System.DateTime? _ngayKetThucHopDong, 
			System.Byte[] _hinhAnh, System.String _diaChi, System.String _thuongTru, System.String _noiLamViec, 
			System.String _email, System.String _dienThoai, System.String _soDiDong, System.String _soTaiKhoan, 
			System.String _tenNganHang, System.String _maSoThue, System.String _chiNhanh, System.String _soSoBaoHiem, 
			System.String _thoiGianBatDau, System.Decimal? _bacLuong, System.String _ngayHuongLuong, System.String _namLamViec, 
			System.String _chuyenNganh, System.String _maHeSoThuLao, System.String _ngach, System.String _soHieuCongChuc, 
			System.Guid? _hrmid, System.String _noiCapBang, System.Boolean? _khoaTaiKhoan, System.Int32? _maLoaiNhanVien, 
			System.Int32? _maNgachCongChuc, System.Int32? _maTrinhDoChinhTri, System.Int32? _maTrinhDoSuPham, 
			System.Int32? _maTrinhDoNgoaiNgu, System.Int32? _maTrinhDoTinHoc, System.Int32? _maTrinhDoQuanLyNhaNuoc, 
			System.String _nguoiCapNhat, System.DateTime? _ngayCapNhat, System.String _khoiKienThucGiangDay, 
			System.String _nganhDaoTao, System.String _donViGiangDay, System.Int32? _idHoSo, System.Int32? _maQuocTich, 
			System.Boolean? _daXoaHrm)
		{
			this.entityData = new GiangVienEntityData();
			this.backupData = null;

			this.MaDanToc = _maDanToc;
			this.MaTonGiao = _maTonGiao;
			this.MaDonVi = _maDonVi;
			this.MaHocHam = _maHocHam;
			this.MaHocVi = _maHocVi;
			this.MaLoaiGiangVien = _maLoaiGiangVien;
			this.MaNguoiLap = _maNguoiLap;
			this.MatKhau = _matKhau;
			this.MaTinhTrang = _maTinhTrang;
			this.MaQuanLy = _maQuanLy;
			this.Ho = _ho;
			this.TenDem = _tenDem;
			this.Ten = _ten;
			this.NgaySinh = _ngaySinh;
			this.GioiTinh = _gioiTinh;
			this.NoiSinh = _noiSinh;
			this.Cmnd = _cmnd;
			this.NgayCap = _ngayCap;
			this.NoiCap = _noiCap;
			this.DoanDang = _doanDang;
			this.NgayVaoDoanDang = _ngayVaoDoanDang;
			this.NgayKyHopDong = _ngayKyHopDong;
			this.NgayKetThucHopDong = _ngayKetThucHopDong;
			this.HinhAnh = _hinhAnh;
			this.DiaChi = _diaChi;
			this.ThuongTru = _thuongTru;
			this.NoiLamViec = _noiLamViec;
			this.Email = _email;
			this.DienThoai = _dienThoai;
			this.SoDiDong = _soDiDong;
			this.SoTaiKhoan = _soTaiKhoan;
			this.TenNganHang = _tenNganHang;
			this.MaSoThue = _maSoThue;
			this.ChiNhanh = _chiNhanh;
			this.SoSoBaoHiem = _soSoBaoHiem;
			this.ThoiGianBatDau = _thoiGianBatDau;
			this.BacLuong = _bacLuong;
			this.NgayHuongLuong = _ngayHuongLuong;
			this.NamLamViec = _namLamViec;
			this.ChuyenNganh = _chuyenNganh;
			this.MaHeSoThuLao = _maHeSoThuLao;
			this.Ngach = _ngach;
			this.SoHieuCongChuc = _soHieuCongChuc;
			this.Hrmid = _hrmid;
			this.NoiCapBang = _noiCapBang;
			this.KhoaTaiKhoan = _khoaTaiKhoan;
			this.MaLoaiNhanVien = _maLoaiNhanVien;
			this.MaNgachCongChuc = _maNgachCongChuc;
			this.MaTrinhDoChinhTri = _maTrinhDoChinhTri;
			this.MaTrinhDoSuPham = _maTrinhDoSuPham;
			this.MaTrinhDoNgoaiNgu = _maTrinhDoNgoaiNgu;
			this.MaTrinhDoTinHoc = _maTrinhDoTinHoc;
			this.MaTrinhDoQuanLyNhaNuoc = _maTrinhDoQuanLyNhaNuoc;
			this.NguoiCapNhat = _nguoiCapNhat;
			this.NgayCapNhat = _ngayCapNhat;
			this.KhoiKienThucGiangDay = _khoiKienThucGiangDay;
			this.NganhDaoTao = _nganhDaoTao;
			this.DonViGiangDay = _donViGiangDay;
			this.IdHoSo = _idHoSo;
			this.MaQuocTich = _maQuocTich;
			this.DaXoaHrm = _daXoaHrm;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="GiangVien"/> instance.
		///</summary>
		///<param name="_maDanToc"></param>
		///<param name="_maTonGiao"></param>
		///<param name="_maDonVi"></param>
		///<param name="_maHocHam"></param>
		///<param name="_maHocVi"></param>
		///<param name="_maLoaiGiangVien"></param>
		///<param name="_maNguoiLap"></param>
		///<param name="_matKhau"></param>
		///<param name="_maTinhTrang"></param>
		///<param name="_maQuanLy"></param>
		///<param name="_ho"></param>
		///<param name="_tenDem"></param>
		///<param name="_ten"></param>
		///<param name="_ngaySinh"></param>
		///<param name="_gioiTinh"></param>
		///<param name="_noiSinh"></param>
		///<param name="_cmnd"></param>
		///<param name="_ngayCap"></param>
		///<param name="_noiCap"></param>
		///<param name="_doanDang"></param>
		///<param name="_ngayVaoDoanDang"></param>
		///<param name="_ngayKyHopDong"></param>
		///<param name="_ngayKetThucHopDong"></param>
		///<param name="_hinhAnh"></param>
		///<param name="_diaChi"></param>
		///<param name="_thuongTru"></param>
		///<param name="_noiLamViec"></param>
		///<param name="_email"></param>
		///<param name="_dienThoai"></param>
		///<param name="_soDiDong"></param>
		///<param name="_soTaiKhoan"></param>
		///<param name="_tenNganHang"></param>
		///<param name="_maSoThue"></param>
		///<param name="_chiNhanh"></param>
		///<param name="_soSoBaoHiem"></param>
		///<param name="_thoiGianBatDau"></param>
		///<param name="_bacLuong"></param>
		///<param name="_ngayHuongLuong"></param>
		///<param name="_namLamViec"></param>
		///<param name="_chuyenNganh"></param>
		///<param name="_maHeSoThuLao"></param>
		///<param name="_ngach"></param>
		///<param name="_soHieuCongChuc"></param>
		///<param name="_hrmid"></param>
		///<param name="_noiCapBang"></param>
		///<param name="_khoaTaiKhoan"></param>
		///<param name="_maLoaiNhanVien"></param>
		///<param name="_maNgachCongChuc"></param>
		///<param name="_maTrinhDoChinhTri"></param>
		///<param name="_maTrinhDoSuPham"></param>
		///<param name="_maTrinhDoNgoaiNgu"></param>
		///<param name="_maTrinhDoTinHoc"></param>
		///<param name="_maTrinhDoQuanLyNhaNuoc"></param>
		///<param name="_nguoiCapNhat"></param>
		///<param name="_ngayCapNhat"></param>
		///<param name="_khoiKienThucGiangDay"></param>
		///<param name="_nganhDaoTao"></param>
		///<param name="_donViGiangDay"></param>
		///<param name="_idHoSo"></param>
		///<param name="_maQuocTich"></param>
		///<param name="_daXoaHrm"></param>
		public static GiangVien CreateGiangVien(System.String _maDanToc, System.String _maTonGiao, System.String _maDonVi, 
			System.Int32? _maHocHam, System.Int32? _maHocVi, System.Int32? _maLoaiGiangVien, System.Int32? _maNguoiLap, 
			System.String _matKhau, System.Int32? _maTinhTrang, System.String _maQuanLy, System.String _ho, 
			System.String _tenDem, System.String _ten, System.String _ngaySinh, System.Boolean? _gioiTinh, 
			System.String _noiSinh, System.String _cmnd, System.String _ngayCap, System.String _noiCap, 
			System.Boolean? _doanDang, System.String _ngayVaoDoanDang, System.DateTime? _ngayKyHopDong, System.DateTime? _ngayKetThucHopDong, 
			System.Byte[] _hinhAnh, System.String _diaChi, System.String _thuongTru, System.String _noiLamViec, 
			System.String _email, System.String _dienThoai, System.String _soDiDong, System.String _soTaiKhoan, 
			System.String _tenNganHang, System.String _maSoThue, System.String _chiNhanh, System.String _soSoBaoHiem, 
			System.String _thoiGianBatDau, System.Decimal? _bacLuong, System.String _ngayHuongLuong, System.String _namLamViec, 
			System.String _chuyenNganh, System.String _maHeSoThuLao, System.String _ngach, System.String _soHieuCongChuc, 
			System.Guid? _hrmid, System.String _noiCapBang, System.Boolean? _khoaTaiKhoan, System.Int32? _maLoaiNhanVien, 
			System.Int32? _maNgachCongChuc, System.Int32? _maTrinhDoChinhTri, System.Int32? _maTrinhDoSuPham, 
			System.Int32? _maTrinhDoNgoaiNgu, System.Int32? _maTrinhDoTinHoc, System.Int32? _maTrinhDoQuanLyNhaNuoc, 
			System.String _nguoiCapNhat, System.DateTime? _ngayCapNhat, System.String _khoiKienThucGiangDay, 
			System.String _nganhDaoTao, System.String _donViGiangDay, System.Int32? _idHoSo, System.Int32? _maQuocTich, 
			System.Boolean? _daXoaHrm)
		{
			GiangVien newGiangVien = new GiangVien();
			newGiangVien.MaDanToc = _maDanToc;
			newGiangVien.MaTonGiao = _maTonGiao;
			newGiangVien.MaDonVi = _maDonVi;
			newGiangVien.MaHocHam = _maHocHam;
			newGiangVien.MaHocVi = _maHocVi;
			newGiangVien.MaLoaiGiangVien = _maLoaiGiangVien;
			newGiangVien.MaNguoiLap = _maNguoiLap;
			newGiangVien.MatKhau = _matKhau;
			newGiangVien.MaTinhTrang = _maTinhTrang;
			newGiangVien.MaQuanLy = _maQuanLy;
			newGiangVien.Ho = _ho;
			newGiangVien.TenDem = _tenDem;
			newGiangVien.Ten = _ten;
			newGiangVien.NgaySinh = _ngaySinh;
			newGiangVien.GioiTinh = _gioiTinh;
			newGiangVien.NoiSinh = _noiSinh;
			newGiangVien.Cmnd = _cmnd;
			newGiangVien.NgayCap = _ngayCap;
			newGiangVien.NoiCap = _noiCap;
			newGiangVien.DoanDang = _doanDang;
			newGiangVien.NgayVaoDoanDang = _ngayVaoDoanDang;
			newGiangVien.NgayKyHopDong = _ngayKyHopDong;
			newGiangVien.NgayKetThucHopDong = _ngayKetThucHopDong;
			newGiangVien.HinhAnh = _hinhAnh;
			newGiangVien.DiaChi = _diaChi;
			newGiangVien.ThuongTru = _thuongTru;
			newGiangVien.NoiLamViec = _noiLamViec;
			newGiangVien.Email = _email;
			newGiangVien.DienThoai = _dienThoai;
			newGiangVien.SoDiDong = _soDiDong;
			newGiangVien.SoTaiKhoan = _soTaiKhoan;
			newGiangVien.TenNganHang = _tenNganHang;
			newGiangVien.MaSoThue = _maSoThue;
			newGiangVien.ChiNhanh = _chiNhanh;
			newGiangVien.SoSoBaoHiem = _soSoBaoHiem;
			newGiangVien.ThoiGianBatDau = _thoiGianBatDau;
			newGiangVien.BacLuong = _bacLuong;
			newGiangVien.NgayHuongLuong = _ngayHuongLuong;
			newGiangVien.NamLamViec = _namLamViec;
			newGiangVien.ChuyenNganh = _chuyenNganh;
			newGiangVien.MaHeSoThuLao = _maHeSoThuLao;
			newGiangVien.Ngach = _ngach;
			newGiangVien.SoHieuCongChuc = _soHieuCongChuc;
			newGiangVien.Hrmid = _hrmid;
			newGiangVien.NoiCapBang = _noiCapBang;
			newGiangVien.KhoaTaiKhoan = _khoaTaiKhoan;
			newGiangVien.MaLoaiNhanVien = _maLoaiNhanVien;
			newGiangVien.MaNgachCongChuc = _maNgachCongChuc;
			newGiangVien.MaTrinhDoChinhTri = _maTrinhDoChinhTri;
			newGiangVien.MaTrinhDoSuPham = _maTrinhDoSuPham;
			newGiangVien.MaTrinhDoNgoaiNgu = _maTrinhDoNgoaiNgu;
			newGiangVien.MaTrinhDoTinHoc = _maTrinhDoTinHoc;
			newGiangVien.MaTrinhDoQuanLyNhaNuoc = _maTrinhDoQuanLyNhaNuoc;
			newGiangVien.NguoiCapNhat = _nguoiCapNhat;
			newGiangVien.NgayCapNhat = _ngayCapNhat;
			newGiangVien.KhoiKienThucGiangDay = _khoiKienThucGiangDay;
			newGiangVien.NganhDaoTao = _nganhDaoTao;
			newGiangVien.DonViGiangDay = _donViGiangDay;
			newGiangVien.IdHoSo = _idHoSo;
			newGiangVien.MaQuocTich = _maQuocTich;
			newGiangVien.DaXoaHrm = _daXoaHrm;
			return newGiangVien;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the MaGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 MaGiangVien
		{
			get
			{
				return this.entityData.MaGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaGiangVien == value)
					return;
				
                OnPropertyChanging("MaGiangVien");                    
				OnColumnChanging(GiangVienColumn.MaGiangVien, this.entityData.MaGiangVien);
				this.entityData.MaGiangVien = value;
				this.EntityId.MaGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaGiangVien, this.entityData.MaGiangVien);
				OnPropertyChanged("MaGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaDanToc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaDanToc
		{
			get
			{
				return this.entityData.MaDanToc; 
			}
			
			set
			{
				if (this.entityData.MaDanToc == value)
					return;
				
                OnPropertyChanging("MaDanToc");                    
				OnColumnChanging(GiangVienColumn.MaDanToc, this.entityData.MaDanToc);
				this.entityData.MaDanToc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaDanToc, this.entityData.MaDanToc);
				OnPropertyChanged("MaDanToc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTonGiao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaTonGiao
		{
			get
			{
				return this.entityData.MaTonGiao; 
			}
			
			set
			{
				if (this.entityData.MaTonGiao == value)
					return;
				
                OnPropertyChanging("MaTonGiao");                    
				OnColumnChanging(GiangVienColumn.MaTonGiao, this.entityData.MaTonGiao);
				this.entityData.MaTonGiao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaTonGiao, this.entityData.MaTonGiao);
				OnPropertyChanged("MaTonGiao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaDonVi property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaDonVi
		{
			get
			{
				return this.entityData.MaDonVi; 
			}
			
			set
			{
				if (this.entityData.MaDonVi == value)
					return;
				
                OnPropertyChanging("MaDonVi");                    
				OnColumnChanging(GiangVienColumn.MaDonVi, this.entityData.MaDonVi);
				this.entityData.MaDonVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaDonVi, this.entityData.MaDonVi);
				OnPropertyChanged("MaDonVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocHam property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocHam
		{
			get
			{
				return this.entityData.MaHocHam; 
			}
			
			set
			{
				if (this.entityData.MaHocHam == value)
					return;
				
                OnPropertyChanging("MaHocHam");                    
				OnColumnChanging(GiangVienColumn.MaHocHam, this.entityData.MaHocHam);
				this.entityData.MaHocHam = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaHocHam, this.entityData.MaHocHam);
				OnPropertyChanged("MaHocHam");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHocVi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaHocVi
		{
			get
			{
				return this.entityData.MaHocVi; 
			}
			
			set
			{
				if (this.entityData.MaHocVi == value)
					return;
				
                OnPropertyChanging("MaHocVi");                    
				OnColumnChanging(GiangVienColumn.MaHocVi, this.entityData.MaHocVi);
				this.entityData.MaHocVi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaHocVi, this.entityData.MaHocVi);
				OnPropertyChanged("MaHocVi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiGiangVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaLoaiGiangVien
		{
			get
			{
				return this.entityData.MaLoaiGiangVien; 
			}
			
			set
			{
				if (this.entityData.MaLoaiGiangVien == value)
					return;
				
                OnPropertyChanging("MaLoaiGiangVien");                    
				OnColumnChanging(GiangVienColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				this.entityData.MaLoaiGiangVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaLoaiGiangVien, this.entityData.MaLoaiGiangVien);
				OnPropertyChanged("MaLoaiGiangVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaNguoiLap property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaNguoiLap
		{
			get
			{
				return this.entityData.MaNguoiLap; 
			}
			
			set
			{
				if (this.entityData.MaNguoiLap == value)
					return;
				
                OnPropertyChanging("MaNguoiLap");                    
				OnColumnChanging(GiangVienColumn.MaNguoiLap, this.entityData.MaNguoiLap);
				this.entityData.MaNguoiLap = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaNguoiLap, this.entityData.MaNguoiLap);
				OnPropertyChanged("MaNguoiLap");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MatKhau property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MatKhau
		{
			get
			{
				return this.entityData.MatKhau; 
			}
			
			set
			{
				if (this.entityData.MatKhau == value)
					return;
				
                OnPropertyChanging("MatKhau");                    
				OnColumnChanging(GiangVienColumn.MatKhau, this.entityData.MatKhau);
				this.entityData.MatKhau = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MatKhau, this.entityData.MatKhau);
				OnPropertyChanged("MatKhau");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTinhTrang property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTinhTrang
		{
			get
			{
				return this.entityData.MaTinhTrang; 
			}
			
			set
			{
				if (this.entityData.MaTinhTrang == value)
					return;
				
                OnPropertyChanging("MaTinhTrang");                    
				OnColumnChanging(GiangVienColumn.MaTinhTrang, this.entityData.MaTinhTrang);
				this.entityData.MaTinhTrang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaTinhTrang, this.entityData.MaTinhTrang);
				OnPropertyChanged("MaTinhTrang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaQuanLy property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 20)]
		public virtual System.String MaQuanLy
		{
			get
			{
				return this.entityData.MaQuanLy; 
			}
			
			set
			{
				if (this.entityData.MaQuanLy == value)
					return;
				
                OnPropertyChanging("MaQuanLy");                    
				OnColumnChanging(GiangVienColumn.MaQuanLy, this.entityData.MaQuanLy);
				this.entityData.MaQuanLy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaQuanLy, this.entityData.MaQuanLy);
				OnPropertyChanged("MaQuanLy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ho property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Ho
		{
			get
			{
				return this.entityData.Ho; 
			}
			
			set
			{
				if (this.entityData.Ho == value)
					return;
				
                OnPropertyChanging("Ho");                    
				OnColumnChanging(GiangVienColumn.Ho, this.entityData.Ho);
				this.entityData.Ho = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.Ho, this.entityData.Ho);
				OnPropertyChanged("Ho");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenDem property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String TenDem
		{
			get
			{
				return this.entityData.TenDem; 
			}
			
			set
			{
				if (this.entityData.TenDem == value)
					return;
				
                OnPropertyChanging("TenDem");                    
				OnColumnChanging(GiangVienColumn.TenDem, this.entityData.TenDem);
				this.entityData.TenDem = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.TenDem, this.entityData.TenDem);
				OnPropertyChanged("TenDem");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ten property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Ten
		{
			get
			{
				return this.entityData.Ten; 
			}
			
			set
			{
				if (this.entityData.Ten == value)
					return;
				
                OnPropertyChanging("Ten");                    
				OnColumnChanging(GiangVienColumn.Ten, this.entityData.Ten);
				this.entityData.Ten = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.Ten, this.entityData.Ten);
				OnPropertyChanged("Ten");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgaySinh property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NgaySinh
		{
			get
			{
				return this.entityData.NgaySinh; 
			}
			
			set
			{
				if (this.entityData.NgaySinh == value)
					return;
				
                OnPropertyChanging("NgaySinh");                    
				OnColumnChanging(GiangVienColumn.NgaySinh, this.entityData.NgaySinh);
				this.entityData.NgaySinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NgaySinh, this.entityData.NgaySinh);
				OnPropertyChanged("NgaySinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GioiTinh property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? GioiTinh
		{
			get
			{
				return this.entityData.GioiTinh; 
			}
			
			set
			{
				if (this.entityData.GioiTinh == value)
					return;
				
                OnPropertyChanging("GioiTinh");                    
				OnColumnChanging(GiangVienColumn.GioiTinh, this.entityData.GioiTinh);
				this.entityData.GioiTinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.GioiTinh, this.entityData.GioiTinh);
				OnPropertyChanged("GioiTinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoiSinh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String NoiSinh
		{
			get
			{
				return this.entityData.NoiSinh; 
			}
			
			set
			{
				if (this.entityData.NoiSinh == value)
					return;
				
                OnPropertyChanging("NoiSinh");                    
				OnColumnChanging(GiangVienColumn.NoiSinh, this.entityData.NoiSinh);
				this.entityData.NoiSinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NoiSinh, this.entityData.NoiSinh);
				OnPropertyChanged("NoiSinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Cmnd property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String Cmnd
		{
			get
			{
				return this.entityData.Cmnd; 
			}
			
			set
			{
				if (this.entityData.Cmnd == value)
					return;
				
                OnPropertyChanging("Cmnd");                    
				OnColumnChanging(GiangVienColumn.Cmnd, this.entityData.Cmnd);
				this.entityData.Cmnd = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.Cmnd, this.entityData.Cmnd);
				OnPropertyChanged("Cmnd");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayCap property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NgayCap
		{
			get
			{
				return this.entityData.NgayCap; 
			}
			
			set
			{
				if (this.entityData.NgayCap == value)
					return;
				
                OnPropertyChanging("NgayCap");                    
				OnColumnChanging(GiangVienColumn.NgayCap, this.entityData.NgayCap);
				this.entityData.NgayCap = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NgayCap, this.entityData.NgayCap);
				OnPropertyChanged("NgayCap");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoiCap property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String NoiCap
		{
			get
			{
				return this.entityData.NoiCap; 
			}
			
			set
			{
				if (this.entityData.NoiCap == value)
					return;
				
                OnPropertyChanging("NoiCap");                    
				OnColumnChanging(GiangVienColumn.NoiCap, this.entityData.NoiCap);
				this.entityData.NoiCap = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NoiCap, this.entityData.NoiCap);
				OnPropertyChanged("NoiCap");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DoanDang property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DoanDang
		{
			get
			{
				return this.entityData.DoanDang; 
			}
			
			set
			{
				if (this.entityData.DoanDang == value)
					return;
				
                OnPropertyChanging("DoanDang");                    
				OnColumnChanging(GiangVienColumn.DoanDang, this.entityData.DoanDang);
				this.entityData.DoanDang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.DoanDang, this.entityData.DoanDang);
				OnPropertyChanged("DoanDang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayVaoDoanDang property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NgayVaoDoanDang
		{
			get
			{
				return this.entityData.NgayVaoDoanDang; 
			}
			
			set
			{
				if (this.entityData.NgayVaoDoanDang == value)
					return;
				
                OnPropertyChanging("NgayVaoDoanDang");                    
				OnColumnChanging(GiangVienColumn.NgayVaoDoanDang, this.entityData.NgayVaoDoanDang);
				this.entityData.NgayVaoDoanDang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NgayVaoDoanDang, this.entityData.NgayVaoDoanDang);
				OnPropertyChanged("NgayVaoDoanDang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayKyHopDong property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayKyHopDong
		{
			get
			{
				return this.entityData.NgayKyHopDong; 
			}
			
			set
			{
				if (this.entityData.NgayKyHopDong == value)
					return;
				
                OnPropertyChanging("NgayKyHopDong");                    
				OnColumnChanging(GiangVienColumn.NgayKyHopDong, this.entityData.NgayKyHopDong);
				this.entityData.NgayKyHopDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NgayKyHopDong, this.entityData.NgayKyHopDong);
				OnPropertyChanged("NgayKyHopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayKetThucHopDong property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayKetThucHopDong
		{
			get
			{
				return this.entityData.NgayKetThucHopDong; 
			}
			
			set
			{
				if (this.entityData.NgayKetThucHopDong == value)
					return;
				
                OnPropertyChanging("NgayKetThucHopDong");                    
				OnColumnChanging(GiangVienColumn.NgayKetThucHopDong, this.entityData.NgayKetThucHopDong);
				this.entityData.NgayKetThucHopDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NgayKetThucHopDong, this.entityData.NgayKetThucHopDong);
				OnPropertyChanged("NgayKetThucHopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HinhAnh property. 
		///		
		/// </summary>
		/// <value>This type is varbinary.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte[] HinhAnh
		{
			get
			{
				return this.entityData.HinhAnh; 
			}
			
			set
			{
				if (this.entityData.HinhAnh == value)
					return;
				
                OnPropertyChanging("HinhAnh");                    
				OnColumnChanging(GiangVienColumn.HinhAnh, this.entityData.HinhAnh);
				this.entityData.HinhAnh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.HinhAnh, this.entityData.HinhAnh);
				OnPropertyChanged("HinhAnh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DiaChi property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String DiaChi
		{
			get
			{
				return this.entityData.DiaChi; 
			}
			
			set
			{
				if (this.entityData.DiaChi == value)
					return;
				
                OnPropertyChanging("DiaChi");                    
				OnColumnChanging(GiangVienColumn.DiaChi, this.entityData.DiaChi);
				this.entityData.DiaChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.DiaChi, this.entityData.DiaChi);
				OnPropertyChanged("DiaChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThuongTru property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String ThuongTru
		{
			get
			{
				return this.entityData.ThuongTru; 
			}
			
			set
			{
				if (this.entityData.ThuongTru == value)
					return;
				
                OnPropertyChanging("ThuongTru");                    
				OnColumnChanging(GiangVienColumn.ThuongTru, this.entityData.ThuongTru);
				this.entityData.ThuongTru = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.ThuongTru, this.entityData.ThuongTru);
				OnPropertyChanged("ThuongTru");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoiLamViec property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String NoiLamViec
		{
			get
			{
				return this.entityData.NoiLamViec; 
			}
			
			set
			{
				if (this.entityData.NoiLamViec == value)
					return;
				
                OnPropertyChanging("NoiLamViec");                    
				OnColumnChanging(GiangVienColumn.NoiLamViec, this.entityData.NoiLamViec);
				this.entityData.NoiLamViec = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NoiLamViec, this.entityData.NoiLamViec);
				OnPropertyChanged("NoiLamViec");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Email
		{
			get
			{
				return this.entityData.Email; 
			}
			
			set
			{
				if (this.entityData.Email == value)
					return;
				
                OnPropertyChanging("Email");                    
				OnColumnChanging(GiangVienColumn.Email, this.entityData.Email);
				this.entityData.Email = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.Email, this.entityData.Email);
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DienThoai property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String DienThoai
		{
			get
			{
				return this.entityData.DienThoai; 
			}
			
			set
			{
				if (this.entityData.DienThoai == value)
					return;
				
                OnPropertyChanging("DienThoai");                    
				OnColumnChanging(GiangVienColumn.DienThoai, this.entityData.DienThoai);
				this.entityData.DienThoai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.DienThoai, this.entityData.DienThoai);
				OnPropertyChanged("DienThoai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoDiDong property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String SoDiDong
		{
			get
			{
				return this.entityData.SoDiDong; 
			}
			
			set
			{
				if (this.entityData.SoDiDong == value)
					return;
				
                OnPropertyChanging("SoDiDong");                    
				OnColumnChanging(GiangVienColumn.SoDiDong, this.entityData.SoDiDong);
				this.entityData.SoDiDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.SoDiDong, this.entityData.SoDiDong);
				OnPropertyChanged("SoDiDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTaiKhoan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String SoTaiKhoan
		{
			get
			{
				return this.entityData.SoTaiKhoan; 
			}
			
			set
			{
				if (this.entityData.SoTaiKhoan == value)
					return;
				
                OnPropertyChanging("SoTaiKhoan");                    
				OnColumnChanging(GiangVienColumn.SoTaiKhoan, this.entityData.SoTaiKhoan);
				this.entityData.SoTaiKhoan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.SoTaiKhoan, this.entityData.SoTaiKhoan);
				OnPropertyChanged("SoTaiKhoan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TenNganHang property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String TenNganHang
		{
			get
			{
				return this.entityData.TenNganHang; 
			}
			
			set
			{
				if (this.entityData.TenNganHang == value)
					return;
				
                OnPropertyChanging("TenNganHang");                    
				OnColumnChanging(GiangVienColumn.TenNganHang, this.entityData.TenNganHang);
				this.entityData.TenNganHang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.TenNganHang, this.entityData.TenNganHang);
				OnPropertyChanged("TenNganHang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaSoThue property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaSoThue
		{
			get
			{
				return this.entityData.MaSoThue; 
			}
			
			set
			{
				if (this.entityData.MaSoThue == value)
					return;
				
                OnPropertyChanging("MaSoThue");                    
				OnColumnChanging(GiangVienColumn.MaSoThue, this.entityData.MaSoThue);
				this.entityData.MaSoThue = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaSoThue, this.entityData.MaSoThue);
				OnPropertyChanged("MaSoThue");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChiNhanh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ChiNhanh
		{
			get
			{
				return this.entityData.ChiNhanh; 
			}
			
			set
			{
				if (this.entityData.ChiNhanh == value)
					return;
				
                OnPropertyChanging("ChiNhanh");                    
				OnColumnChanging(GiangVienColumn.ChiNhanh, this.entityData.ChiNhanh);
				this.entityData.ChiNhanh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.ChiNhanh, this.entityData.ChiNhanh);
				OnPropertyChanged("ChiNhanh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoSoBaoHiem property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String SoSoBaoHiem
		{
			get
			{
				return this.entityData.SoSoBaoHiem; 
			}
			
			set
			{
				if (this.entityData.SoSoBaoHiem == value)
					return;
				
                OnPropertyChanging("SoSoBaoHiem");                    
				OnColumnChanging(GiangVienColumn.SoSoBaoHiem, this.entityData.SoSoBaoHiem);
				this.entityData.SoSoBaoHiem = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.SoSoBaoHiem, this.entityData.SoSoBaoHiem);
				OnPropertyChanged("SoSoBaoHiem");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThoiGianBatDau property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ThoiGianBatDau
		{
			get
			{
				return this.entityData.ThoiGianBatDau; 
			}
			
			set
			{
				if (this.entityData.ThoiGianBatDau == value)
					return;
				
                OnPropertyChanging("ThoiGianBatDau");                    
				OnColumnChanging(GiangVienColumn.ThoiGianBatDau, this.entityData.ThoiGianBatDau);
				this.entityData.ThoiGianBatDau = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.ThoiGianBatDau, this.entityData.ThoiGianBatDau);
				OnPropertyChanged("ThoiGianBatDau");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BacLuong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? BacLuong
		{
			get
			{
				return this.entityData.BacLuong; 
			}
			
			set
			{
				if (this.entityData.BacLuong == value)
					return;
				
                OnPropertyChanging("BacLuong");                    
				OnColumnChanging(GiangVienColumn.BacLuong, this.entityData.BacLuong);
				this.entityData.BacLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.BacLuong, this.entityData.BacLuong);
				OnPropertyChanged("BacLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayHuongLuong property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String NgayHuongLuong
		{
			get
			{
				return this.entityData.NgayHuongLuong; 
			}
			
			set
			{
				if (this.entityData.NgayHuongLuong == value)
					return;
				
                OnPropertyChanging("NgayHuongLuong");                    
				OnColumnChanging(GiangVienColumn.NgayHuongLuong, this.entityData.NgayHuongLuong);
				this.entityData.NgayHuongLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NgayHuongLuong, this.entityData.NgayHuongLuong);
				OnPropertyChanged("NgayHuongLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NamLamViec property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NamLamViec
		{
			get
			{
				return this.entityData.NamLamViec; 
			}
			
			set
			{
				if (this.entityData.NamLamViec == value)
					return;
				
                OnPropertyChanging("NamLamViec");                    
				OnColumnChanging(GiangVienColumn.NamLamViec, this.entityData.NamLamViec);
				this.entityData.NamLamViec = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NamLamViec, this.entityData.NamLamViec);
				OnPropertyChanged("NamLamViec");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChuyenNganh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String ChuyenNganh
		{
			get
			{
				return this.entityData.ChuyenNganh; 
			}
			
			set
			{
				if (this.entityData.ChuyenNganh == value)
					return;
				
                OnPropertyChanging("ChuyenNganh");                    
				OnColumnChanging(GiangVienColumn.ChuyenNganh, this.entityData.ChuyenNganh);
				this.entityData.ChuyenNganh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.ChuyenNganh, this.entityData.ChuyenNganh);
				OnPropertyChanged("ChuyenNganh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaHeSoThuLao property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaHeSoThuLao
		{
			get
			{
				return this.entityData.MaHeSoThuLao; 
			}
			
			set
			{
				if (this.entityData.MaHeSoThuLao == value)
					return;
				
                OnPropertyChanging("MaHeSoThuLao");                    
				OnColumnChanging(GiangVienColumn.MaHeSoThuLao, this.entityData.MaHeSoThuLao);
				this.entityData.MaHeSoThuLao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaHeSoThuLao, this.entityData.MaHeSoThuLao);
				OnPropertyChanged("MaHeSoThuLao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ngach property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String Ngach
		{
			get
			{
				return this.entityData.Ngach; 
			}
			
			set
			{
				if (this.entityData.Ngach == value)
					return;
				
                OnPropertyChanging("Ngach");                    
				OnColumnChanging(GiangVienColumn.Ngach, this.entityData.Ngach);
				this.entityData.Ngach = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.Ngach, this.entityData.Ngach);
				OnPropertyChanged("Ngach");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoHieuCongChuc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String SoHieuCongChuc
		{
			get
			{
				return this.entityData.SoHieuCongChuc; 
			}
			
			set
			{
				if (this.entityData.SoHieuCongChuc == value)
					return;
				
                OnPropertyChanging("SoHieuCongChuc");                    
				OnColumnChanging(GiangVienColumn.SoHieuCongChuc, this.entityData.SoHieuCongChuc);
				this.entityData.SoHieuCongChuc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.SoHieuCongChuc, this.entityData.SoHieuCongChuc);
				OnPropertyChanged("SoHieuCongChuc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Hrmid property. 
		///		
		/// </summary>
		/// <value>This type is uniqueidentifier.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Guid? Hrmid
		{
			get
			{
				return this.entityData.Hrmid; 
			}
			
			set
			{
				if (this.entityData.Hrmid == value)
					return;
				
                OnPropertyChanging("Hrmid");                    
				OnColumnChanging(GiangVienColumn.Hrmid, this.entityData.Hrmid);
				this.entityData.Hrmid = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.Hrmid, this.entityData.Hrmid);
				OnPropertyChanged("Hrmid");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoiCapBang property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String NoiCapBang
		{
			get
			{
				return this.entityData.NoiCapBang; 
			}
			
			set
			{
				if (this.entityData.NoiCapBang == value)
					return;
				
                OnPropertyChanging("NoiCapBang");                    
				OnColumnChanging(GiangVienColumn.NoiCapBang, this.entityData.NoiCapBang);
				this.entityData.NoiCapBang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NoiCapBang, this.entityData.NoiCapBang);
				OnPropertyChanged("NoiCapBang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the KhoaTaiKhoan property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? KhoaTaiKhoan
		{
			get
			{
				return this.entityData.KhoaTaiKhoan; 
			}
			
			set
			{
				if (this.entityData.KhoaTaiKhoan == value)
					return;
				
                OnPropertyChanging("KhoaTaiKhoan");                    
				OnColumnChanging(GiangVienColumn.KhoaTaiKhoan, this.entityData.KhoaTaiKhoan);
				this.entityData.KhoaTaiKhoan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.KhoaTaiKhoan, this.entityData.KhoaTaiKhoan);
				OnPropertyChanged("KhoaTaiKhoan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLoaiNhanVien property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaLoaiNhanVien
		{
			get
			{
				return this.entityData.MaLoaiNhanVien; 
			}
			
			set
			{
				if (this.entityData.MaLoaiNhanVien == value)
					return;
				
                OnPropertyChanging("MaLoaiNhanVien");                    
				OnColumnChanging(GiangVienColumn.MaLoaiNhanVien, this.entityData.MaLoaiNhanVien);
				this.entityData.MaLoaiNhanVien = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaLoaiNhanVien, this.entityData.MaLoaiNhanVien);
				OnPropertyChanged("MaLoaiNhanVien");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaNgachCongChuc property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaNgachCongChuc
		{
			get
			{
				return this.entityData.MaNgachCongChuc; 
			}
			
			set
			{
				if (this.entityData.MaNgachCongChuc == value)
					return;
				
                OnPropertyChanging("MaNgachCongChuc");                    
				OnColumnChanging(GiangVienColumn.MaNgachCongChuc, this.entityData.MaNgachCongChuc);
				this.entityData.MaNgachCongChuc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaNgachCongChuc, this.entityData.MaNgachCongChuc);
				OnPropertyChanged("MaNgachCongChuc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoChinhTri property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoChinhTri
		{
			get
			{
				return this.entityData.MaTrinhDoChinhTri; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoChinhTri == value)
					return;
				
                OnPropertyChanging("MaTrinhDoChinhTri");                    
				OnColumnChanging(GiangVienColumn.MaTrinhDoChinhTri, this.entityData.MaTrinhDoChinhTri);
				this.entityData.MaTrinhDoChinhTri = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaTrinhDoChinhTri, this.entityData.MaTrinhDoChinhTri);
				OnPropertyChanged("MaTrinhDoChinhTri");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoSuPham property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoSuPham
		{
			get
			{
				return this.entityData.MaTrinhDoSuPham; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoSuPham == value)
					return;
				
                OnPropertyChanging("MaTrinhDoSuPham");                    
				OnColumnChanging(GiangVienColumn.MaTrinhDoSuPham, this.entityData.MaTrinhDoSuPham);
				this.entityData.MaTrinhDoSuPham = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaTrinhDoSuPham, this.entityData.MaTrinhDoSuPham);
				OnPropertyChanged("MaTrinhDoSuPham");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoNgoaiNgu property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoNgoaiNgu
		{
			get
			{
				return this.entityData.MaTrinhDoNgoaiNgu; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoNgoaiNgu == value)
					return;
				
                OnPropertyChanging("MaTrinhDoNgoaiNgu");                    
				OnColumnChanging(GiangVienColumn.MaTrinhDoNgoaiNgu, this.entityData.MaTrinhDoNgoaiNgu);
				this.entityData.MaTrinhDoNgoaiNgu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaTrinhDoNgoaiNgu, this.entityData.MaTrinhDoNgoaiNgu);
				OnPropertyChanged("MaTrinhDoNgoaiNgu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoTinHoc property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoTinHoc
		{
			get
			{
				return this.entityData.MaTrinhDoTinHoc; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoTinHoc == value)
					return;
				
                OnPropertyChanging("MaTrinhDoTinHoc");                    
				OnColumnChanging(GiangVienColumn.MaTrinhDoTinHoc, this.entityData.MaTrinhDoTinHoc);
				this.entityData.MaTrinhDoTinHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaTrinhDoTinHoc, this.entityData.MaTrinhDoTinHoc);
				OnPropertyChanged("MaTrinhDoTinHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaTrinhDoQuanLyNhaNuoc property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaTrinhDoQuanLyNhaNuoc
		{
			get
			{
				return this.entityData.MaTrinhDoQuanLyNhaNuoc; 
			}
			
			set
			{
				if (this.entityData.MaTrinhDoQuanLyNhaNuoc == value)
					return;
				
                OnPropertyChanging("MaTrinhDoQuanLyNhaNuoc");                    
				OnColumnChanging(GiangVienColumn.MaTrinhDoQuanLyNhaNuoc, this.entityData.MaTrinhDoQuanLyNhaNuoc);
				this.entityData.MaTrinhDoQuanLyNhaNuoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaTrinhDoQuanLyNhaNuoc, this.entityData.MaTrinhDoQuanLyNhaNuoc);
				OnPropertyChanged("MaTrinhDoQuanLyNhaNuoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NguoiCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String NguoiCapNhat
		{
			get
			{
				return this.entityData.NguoiCapNhat; 
			}
			
			set
			{
				if (this.entityData.NguoiCapNhat == value)
					return;
				
                OnPropertyChanging("NguoiCapNhat");                    
				OnColumnChanging(GiangVienColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				this.entityData.NguoiCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NguoiCapNhat, this.entityData.NguoiCapNhat);
				OnPropertyChanged("NguoiCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayCapNhat property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayCapNhat
		{
			get
			{
				return this.entityData.NgayCapNhat; 
			}
			
			set
			{
				if (this.entityData.NgayCapNhat == value)
					return;
				
                OnPropertyChanging("NgayCapNhat");                    
				OnColumnChanging(GiangVienColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				this.entityData.NgayCapNhat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NgayCapNhat, this.entityData.NgayCapNhat);
				OnPropertyChanged("NgayCapNhat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the KhoiKienThucGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String KhoiKienThucGiangDay
		{
			get
			{
				return this.entityData.KhoiKienThucGiangDay; 
			}
			
			set
			{
				if (this.entityData.KhoiKienThucGiangDay == value)
					return;
				
                OnPropertyChanging("KhoiKienThucGiangDay");                    
				OnColumnChanging(GiangVienColumn.KhoiKienThucGiangDay, this.entityData.KhoiKienThucGiangDay);
				this.entityData.KhoiKienThucGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.KhoiKienThucGiangDay, this.entityData.KhoiKienThucGiangDay);
				OnPropertyChanged("KhoiKienThucGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NganhDaoTao property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String NganhDaoTao
		{
			get
			{
				return this.entityData.NganhDaoTao; 
			}
			
			set
			{
				if (this.entityData.NganhDaoTao == value)
					return;
				
                OnPropertyChanging("NganhDaoTao");                    
				OnColumnChanging(GiangVienColumn.NganhDaoTao, this.entityData.NganhDaoTao);
				this.entityData.NganhDaoTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.NganhDaoTao, this.entityData.NganhDaoTao);
				OnPropertyChanged("NganhDaoTao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DonViGiangDay property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String DonViGiangDay
		{
			get
			{
				return this.entityData.DonViGiangDay; 
			}
			
			set
			{
				if (this.entityData.DonViGiangDay == value)
					return;
				
                OnPropertyChanging("DonViGiangDay");                    
				OnColumnChanging(GiangVienColumn.DonViGiangDay, this.entityData.DonViGiangDay);
				this.entityData.DonViGiangDay = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.DonViGiangDay, this.entityData.DonViGiangDay);
				OnPropertyChanged("DonViGiangDay");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdHoSo property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? IdHoSo
		{
			get
			{
				return this.entityData.IdHoSo; 
			}
			
			set
			{
				if (this.entityData.IdHoSo == value)
					return;
				
                OnPropertyChanging("IdHoSo");                    
				OnColumnChanging(GiangVienColumn.IdHoSo, this.entityData.IdHoSo);
				this.entityData.IdHoSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.IdHoSo, this.entityData.IdHoSo);
				OnPropertyChanged("IdHoSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaQuocTich property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaQuocTich
		{
			get
			{
				return this.entityData.MaQuocTich; 
			}
			
			set
			{
				if (this.entityData.MaQuocTich == value)
					return;
				
                OnPropertyChanging("MaQuocTich");                    
				OnColumnChanging(GiangVienColumn.MaQuocTich, this.entityData.MaQuocTich);
				this.entityData.MaQuocTich = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.MaQuocTich, this.entityData.MaQuocTich);
				OnPropertyChanged("MaQuocTich");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DaXoaHrm property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DaXoaHrm
		{
			get
			{
				return this.entityData.DaXoaHrm; 
			}
			
			set
			{
				if (this.entityData.DaXoaHrm == value)
					return;
				
                OnPropertyChanging("DaXoaHrm");                    
				OnColumnChanging(GiangVienColumn.DaXoaHrm, this.entityData.DaXoaHrm);
				this.entityData.DaXoaHrm = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GiangVienColumn.DaXoaHrm, this.entityData.DaXoaHrm);
				OnPropertyChanged("DaXoaHrm");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="HocHam"/>.
		/// </summary>
		/// <value>The source HocHam for MaHocHam.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual HocHam MaHocHamSource
      	{
            get { return entityData.MaHocHamSource; }
            set { entityData.MaHocHamSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="HocVi"/>.
		/// </summary>
		/// <value>The source HocVi for MaHocVi.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual HocVi MaHocViSource
      	{
            get { return entityData.MaHocViSource; }
            set { entityData.MaHocViSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="LoaiGiangVien"/>.
		/// </summary>
		/// <value>The source LoaiGiangVien for MaLoaiGiangVien.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual LoaiGiangVien MaLoaiGiangVienSource
      	{
            get { return entityData.MaLoaiGiangVienSource; }
            set { entityData.MaLoaiGiangVienSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="LoaiNhanVien"/>.
		/// </summary>
		/// <value>The source LoaiNhanVien for MaLoaiNhanVien.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual LoaiNhanVien MaLoaiNhanVienSource
      	{
            get { return entityData.MaLoaiNhanVienSource; }
            set { entityData.MaLoaiNhanVienSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="NgachCongChuc"/>.
		/// </summary>
		/// <value>The source NgachCongChuc for MaNgachCongChuc.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual NgachCongChuc MaNgachCongChucSource
      	{
            get { return entityData.MaNgachCongChucSource; }
            set { entityData.MaNgachCongChucSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="TaiKhoan"/>.
		/// </summary>
		/// <value>The source TaiKhoan for MaNguoiLap.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TaiKhoan MaNguoiLapSource
      	{
            get { return entityData.MaNguoiLapSource; }
            set { entityData.MaNguoiLapSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="TinhTrang"/>.
		/// </summary>
		/// <value>The source TinhTrang for MaTinhTrang.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TinhTrang MaTinhTrangSource
      	{
            get { return entityData.MaTinhTrangSource; }
            set { entityData.MaTinhTrangSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoChinhTri"/>.
		/// </summary>
		/// <value>The source TrinhDoChinhTri for MaTrinhDoChinhTri.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TrinhDoChinhTri MaTrinhDoChinhTriSource
      	{
            get { return entityData.MaTrinhDoChinhTriSource; }
            set { entityData.MaTrinhDoChinhTriSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoNgoaiNgu"/>.
		/// </summary>
		/// <value>The source TrinhDoNgoaiNgu for MaTrinhDoNgoaiNgu.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TrinhDoNgoaiNgu MaTrinhDoNgoaiNguSource
      	{
            get { return entityData.MaTrinhDoNgoaiNguSource; }
            set { entityData.MaTrinhDoNgoaiNguSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoQuanLyNhaNuoc"/>.
		/// </summary>
		/// <value>The source TrinhDoQuanLyNhaNuoc for MaTrinhDoQuanLyNhaNuoc.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TrinhDoQuanLyNhaNuoc MaTrinhDoQuanLyNhaNuocSource
      	{
            get { return entityData.MaTrinhDoQuanLyNhaNuocSource; }
            set { entityData.MaTrinhDoQuanLyNhaNuocSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoSuPham"/>.
		/// </summary>
		/// <value>The source TrinhDoSuPham for MaTrinhDoSuPham.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TrinhDoSuPham MaTrinhDoSuPhamSource
      	{
            get { return entityData.MaTrinhDoSuPhamSource; }
            set { entityData.MaTrinhDoSuPhamSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoTinHoc"/>.
		/// </summary>
		/// <value>The source TrinhDoTinHoc for MaTrinhDoTinHoc.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TrinhDoTinHoc MaTrinhDoTinHocSource
      	{
            get { return entityData.MaTrinhDoTinHocSource; }
            set { entityData.MaTrinhDoTinHocSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of TietNoKyTruoc objects
		///	which are related to this object through the relation FK_TietNoKyTruoc_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<TietNoKyTruoc> TietNoKyTruocCollection
		{
			get { return entityData.TietNoKyTruocCollection; }
			set { entityData.TietNoKyTruocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of KcqKhoiLuongKhac objects
		///	which are related to this object through the relation FK_KcqKhoiLuongKhac_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<KcqKhoiLuongKhac> KcqKhoiLuongKhacCollection
		{
			get { return entityData.KcqKhoiLuongKhacCollection; }
			set { entityData.KcqKhoiLuongKhacCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ThuLaoThoaThuan objects
		///	which are related to this object through the relation FK_ThuLaoThoaThuan_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ThuLaoThoaThuan> ThuLaoThoaThuanCollection
		{
			get { return entityData.ThuLaoThoaThuanCollection; }
			set { entityData.ThuLaoThoaThuanCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienCamKetKhongTruThue objects
		///	which are related to this object through the relation FK_GiangVienCamKetKhongTruThue_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienCamKetKhongTruThue> GiangVienCamKetKhongTruThueCollection
		{
			get { return entityData.GiangVienCamKetKhongTruThueCollection; }
			set { entityData.GiangVienCamKetKhongTruThueCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ThamDinhLuanVanThacSy objects
		///	which are related to this object through the relation FK_ThamDinhLuanVanThacSy_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ThamDinhLuanVanThacSy> ThamDinhLuanVanThacSyCollection
		{
			get { return entityData.ThamDinhLuanVanThacSyCollection; }
			set { entityData.ThamDinhLuanVanThacSyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienHoSo objects
		///	which are related to this object through the relation FK_GiangVien_HoSo_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienHoSo> GiangVienHoSoCollection
		{
			get { return entityData.GiangVienHoSoCollection; }
			set { entityData.GiangVienHoSoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ThoiGianLamViecCuaNhanVien objects
		///	which are related to this object through the relation FK_ThoiGianLamViecCuaNhanVien_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ThoiGianLamViecCuaNhanVien> ThoiGianLamViecCuaNhanVienCollection
		{
			get { return entityData.ThoiGianLamViecCuaNhanVienCollection; }
			set { entityData.ThoiGianLamViecCuaNhanVienCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienHoatDongQuanLy objects
		///	which are related to this object through the relation FK_GiangVienHoatDongQuanLy_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienHoatDongQuanLy> GiangVienHoatDongQuanLyCollection
		{
			get { return entityData.GiangVienHoatDongQuanLyCollection; }
			set { entityData.GiangVienHoatDongQuanLyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of KhoiLuongKhac objects
		///	which are related to this object through the relation FK_KhoiLuongKhac_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<KhoiLuongKhac> KhoiLuongKhacCollection
		{
			get { return entityData.KhoiLuongKhacCollection; }
			set { entityData.KhoiLuongKhacCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoVanHocTap objects
		///	which are related to this object through the relation FK_CoVanHocTap_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoVanHocTap> CoVanHocTapCollection
		{
			get { return entityData.CoVanHocTapCollection; }
			set { entityData.CoVanHocTapCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienNghienCuuKh objects
		///	which are related to this object through the relation FK_GiangVien_NghienCuuKH_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienNghienCuuKh> GiangVienNghienCuuKhCollection
		{
			get { return entityData.GiangVienNghienCuuKhCollection; }
			set { entityData.GiangVienNghienCuuKhCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienChucVu objects
		///	which are related to this object through the relation FK_GiangVien_ChucVu_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienChucVu> GiangVienChucVuCollection
		{
			get { return entityData.GiangVienChucVuCollection; }
			set { entityData.GiangVienChucVuCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of XetDuyetDeCuongLuanVanCaoHoc objects
		///	which are related to this object through the relation FK_XetDuyetDeCuongLuanVanCaoHoc_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<XetDuyetDeCuongLuanVanCaoHoc> XetDuyetDeCuongLuanVanCaoHocCollection
		{
			get { return entityData.XetDuyetDeCuongLuanVanCaoHocCollection; }
			set { entityData.XetDuyetDeCuongLuanVanCaoHocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of KetQuaTinh objects
		///	which are related to this object through the relation FK_KetQuaTinh_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<KetQuaTinh> KetQuaTinhCollection
		{
			get { return entityData.KetQuaTinhCollection; }
			set { entityData.KetQuaTinhCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ThoiGianNghiTamThoiCuaGiangVien objects
		///	which are related to this object through the relation FK_ThoiGianNghiTamThoiCuaGiangVien_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ThoiGianNghiTamThoiCuaGiangVien> ThoiGianNghiTamThoiCuaGiangVienCollection
		{
			get { return entityData.ThoiGianNghiTamThoiCuaGiangVienCollection; }
			set { entityData.ThoiGianNghiTamThoiCuaGiangVienCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienTinhLuongThinhGiang objects
		///	which are related to this object through the relation FK_GiangVienTinhLuongThinhGiang_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienTinhLuongThinhGiang> GiangVienTinhLuongThinhGiangCollection
		{
			get { return entityData.GiangVienTinhLuongThinhGiangCollection; }
			set { entityData.GiangVienTinhLuongThinhGiangCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienChuyenMon objects
		///	which are related to this object through the relation FK_GiangVien_ChuyenMon_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienChuyenMon> GiangVienChuyenMonCollection
		{
			get { return entityData.GiangVienChuyenMonCollection; }
			set { entityData.GiangVienChuyenMonCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of BangPhuTroiNamHoc objects
		///	which are related to this object through the relation FK_BangPhuTroiNamHoc_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<BangPhuTroiNamHoc> BangPhuTroiNamHocCollection
		{
			get { return entityData.BangPhuTroiNamHocCollection; }
			set { entityData.BangPhuTroiNamHocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of TietNghiaVu objects
		///	which are related to this object through the relation FK_TietNghiaVu_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<TietNghiaVu> TietNghiaVuCollection
		{
			get { return entityData.TietNghiaVuCollection; }
			set { entityData.TietNghiaVuCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienMocTangLuong objects
		///	which are related to this object through the relation FK_GiangVien_MocTangLuong_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienMocTangLuong> GiangVienMocTangLuongCollection
		{
			get { return entityData.GiangVienMocTangLuongCollection; }
			set { entityData.GiangVienMocTangLuongCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienGiamTruDinhMuc objects
		///	which are related to this object through the relation FK_GiangVien_GiamTruDinhMuc_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienGiamTruDinhMuc> GiangVienGiamTruDinhMucCollection
		{
			get { return entityData.GiangVienGiamTruDinhMucCollection; }
			set { entityData.GiangVienGiamTruDinhMucCollection = value; }	
		}

		/// <summary>
		///	Holds a collection of HoSoFromGiangVienHoSo objects
		///	which are related to this object through the junction table GiangVienHoSo
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<HoSo> MaHoSoHoSoCollection_From_GiangVienHoSo
		{
			get { return entityData.MaHoSoHoSoCollection_From_GiangVienHoSo; }
			set { entityData.MaHoSoHoSoCollection_From_GiangVienHoSo = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GiangVienHoatDongNgoaiGiangDay objects
		///	which are related to this object through the relation FK_GiangVien_HoatDongNgoaiGiangDay_GiangVien
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GiangVienHoatDongNgoaiGiangDay> GiangVienHoatDongNgoaiGiangDayCollection
		{
			get { return entityData.GiangVienHoatDongNgoaiGiangDayCollection; }
			set { entityData.GiangVienHoatDongNgoaiGiangDayCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaDanToc", "Ma Dan Toc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaTonGiao", "Ma Ton Giao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaDonVi", "Ma Don Vi", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MatKhau", "Mat Khau", 50));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("MaQuanLy", "Ma Quan Ly"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaQuanLy", "Ma Quan Ly", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Ho", "Ho", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenDem", "Ten Dem", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Ten", "Ten", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgaySinh", "Ngay Sinh", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoiSinh", "Noi Sinh", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Cmnd", "Cmnd", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayCap", "Ngay Cap", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoiCap", "Noi Cap", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayVaoDoanDang", "Ngay Vao Doan Dang", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DiaChi", "Dia Chi", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ThuongTru", "Thuong Tru", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoiLamViec", "Noi Lam Viec", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Email", "Email", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DienThoai", "Dien Thoai", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SoDiDong", "So Di Dong", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SoTaiKhoan", "So Tai Khoan", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TenNganHang", "Ten Ngan Hang", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaSoThue", "Ma So Thue", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChiNhanh", "Chi Nhanh", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SoSoBaoHiem", "So So Bao Hiem", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ThoiGianBatDau", "Thoi Gian Bat Dau", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NgayHuongLuong", "Ngay Huong Luong", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NamLamViec", "Nam Lam Viec", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ChuyenNganh", "Chuyen Nganh", 1000));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaHeSoThuLao", "Ma He So Thu Lao", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Ngach", "Ngach", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SoHieuCongChuc", "So Hieu Cong Chuc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoiCapBang", "Noi Cap Bang", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NguoiCapNhat", "Nguoi Cap Nhat", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("KhoiKienThucGiangDay", "Khoi Kien Thuc Giang Day", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NganhDaoTao", "Nganh Dao Tao", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DonViGiangDay", "Don Vi Giang Day", 200));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "GiangVien"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"MaGiangVien", "MaDanToc", "MaTonGiao", "MaDonVi", "MaHocHam", "MaHocVi", "MaLoaiGiangVien", "MaNguoiLap", "MatKhau", "MaTinhTrang", "MaQuanLy", "Ho", "TenDem", "Ten", "NgaySinh", "GioiTinh", "NoiSinh", "Cmnd", "NgayCap", "NoiCap", "DoanDang", "NgayVaoDoanDang", "NgayKyHopDong", "NgayKetThucHopDong", "HinhAnh", "DiaChi", "ThuongTru", "NoiLamViec", "Email", "DienThoai", "SoDiDong", "SoTaiKhoan", "TenNganHang", "MaSoThue", "ChiNhanh", "SoSoBaoHiem", "ThoiGianBatDau", "BacLuong", "NgayHuongLuong", "NamLamViec", "ChuyenNganh", "MaHeSoThuLao", "Ngach", "SoHieuCongChuc", "HRMID", "NoiCapBang", "KhoaTaiKhoan", "MaLoaiNhanVien", "MaNgachCongChuc", "MaTrinhDoChinhTri", "MaTrinhDoSuPham", "MaTrinhDoNgoaiNgu", "MaTrinhDoTinHoc", "MaTrinhDoQuanLyNhaNuoc", "NguoiCapNhat", "NgayCapNhat", "KhoiKienThucGiangDay", "NganhDaoTao", "DonViGiangDay", "IdHoSo", "MaQuocTich", "DaXoaHRM"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as GiangVienEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (GiangVien) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<GiangVien>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as GiangVien);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed GiangVien Entity 
		///</summary>
		protected virtual GiangVien Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			GiangVien copy = new GiangVien();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.MaGiangVien = this.MaGiangVien;
				copy.MaDanToc = this.MaDanToc;
				copy.MaTonGiao = this.MaTonGiao;
				copy.MaDonVi = this.MaDonVi;
				copy.MaHocHam = this.MaHocHam;
				copy.MaHocVi = this.MaHocVi;
				copy.MaLoaiGiangVien = this.MaLoaiGiangVien;
				copy.MaNguoiLap = this.MaNguoiLap;
				copy.MatKhau = this.MatKhau;
				copy.MaTinhTrang = this.MaTinhTrang;
				copy.MaQuanLy = this.MaQuanLy;
				copy.Ho = this.Ho;
				copy.TenDem = this.TenDem;
				copy.Ten = this.Ten;
				copy.NgaySinh = this.NgaySinh;
				copy.GioiTinh = this.GioiTinh;
				copy.NoiSinh = this.NoiSinh;
				copy.Cmnd = this.Cmnd;
				copy.NgayCap = this.NgayCap;
				copy.NoiCap = this.NoiCap;
				copy.DoanDang = this.DoanDang;
				copy.NgayVaoDoanDang = this.NgayVaoDoanDang;
				copy.NgayKyHopDong = this.NgayKyHopDong;
				copy.NgayKetThucHopDong = this.NgayKetThucHopDong;
				copy.HinhAnh = this.HinhAnh;
				copy.DiaChi = this.DiaChi;
				copy.ThuongTru = this.ThuongTru;
				copy.NoiLamViec = this.NoiLamViec;
				copy.Email = this.Email;
				copy.DienThoai = this.DienThoai;
				copy.SoDiDong = this.SoDiDong;
				copy.SoTaiKhoan = this.SoTaiKhoan;
				copy.TenNganHang = this.TenNganHang;
				copy.MaSoThue = this.MaSoThue;
				copy.ChiNhanh = this.ChiNhanh;
				copy.SoSoBaoHiem = this.SoSoBaoHiem;
				copy.ThoiGianBatDau = this.ThoiGianBatDau;
				copy.BacLuong = this.BacLuong;
				copy.NgayHuongLuong = this.NgayHuongLuong;
				copy.NamLamViec = this.NamLamViec;
				copy.ChuyenNganh = this.ChuyenNganh;
				copy.MaHeSoThuLao = this.MaHeSoThuLao;
				copy.Ngach = this.Ngach;
				copy.SoHieuCongChuc = this.SoHieuCongChuc;
				copy.Hrmid = this.Hrmid;
				copy.NoiCapBang = this.NoiCapBang;
				copy.KhoaTaiKhoan = this.KhoaTaiKhoan;
				copy.MaLoaiNhanVien = this.MaLoaiNhanVien;
				copy.MaNgachCongChuc = this.MaNgachCongChuc;
				copy.MaTrinhDoChinhTri = this.MaTrinhDoChinhTri;
				copy.MaTrinhDoSuPham = this.MaTrinhDoSuPham;
				copy.MaTrinhDoNgoaiNgu = this.MaTrinhDoNgoaiNgu;
				copy.MaTrinhDoTinHoc = this.MaTrinhDoTinHoc;
				copy.MaTrinhDoQuanLyNhaNuoc = this.MaTrinhDoQuanLyNhaNuoc;
				copy.NguoiCapNhat = this.NguoiCapNhat;
				copy.NgayCapNhat = this.NgayCapNhat;
				copy.KhoiKienThucGiangDay = this.KhoiKienThucGiangDay;
				copy.NganhDaoTao = this.NganhDaoTao;
				copy.DonViGiangDay = this.DonViGiangDay;
				copy.IdHoSo = this.IdHoSo;
				copy.MaQuocTich = this.MaQuocTich;
				copy.DaXoaHrm = this.DaXoaHrm;
			
			if (this.MaHocHamSource != null && existingCopies.Contains(this.MaHocHamSource))
				copy.MaHocHamSource = existingCopies[this.MaHocHamSource] as HocHam;
			else
				copy.MaHocHamSource = MakeCopyOf(this.MaHocHamSource, existingCopies) as HocHam;
			if (this.MaHocViSource != null && existingCopies.Contains(this.MaHocViSource))
				copy.MaHocViSource = existingCopies[this.MaHocViSource] as HocVi;
			else
				copy.MaHocViSource = MakeCopyOf(this.MaHocViSource, existingCopies) as HocVi;
			if (this.MaLoaiGiangVienSource != null && existingCopies.Contains(this.MaLoaiGiangVienSource))
				copy.MaLoaiGiangVienSource = existingCopies[this.MaLoaiGiangVienSource] as LoaiGiangVien;
			else
				copy.MaLoaiGiangVienSource = MakeCopyOf(this.MaLoaiGiangVienSource, existingCopies) as LoaiGiangVien;
			if (this.MaLoaiNhanVienSource != null && existingCopies.Contains(this.MaLoaiNhanVienSource))
				copy.MaLoaiNhanVienSource = existingCopies[this.MaLoaiNhanVienSource] as LoaiNhanVien;
			else
				copy.MaLoaiNhanVienSource = MakeCopyOf(this.MaLoaiNhanVienSource, existingCopies) as LoaiNhanVien;
			if (this.MaNgachCongChucSource != null && existingCopies.Contains(this.MaNgachCongChucSource))
				copy.MaNgachCongChucSource = existingCopies[this.MaNgachCongChucSource] as NgachCongChuc;
			else
				copy.MaNgachCongChucSource = MakeCopyOf(this.MaNgachCongChucSource, existingCopies) as NgachCongChuc;
			if (this.MaNguoiLapSource != null && existingCopies.Contains(this.MaNguoiLapSource))
				copy.MaNguoiLapSource = existingCopies[this.MaNguoiLapSource] as TaiKhoan;
			else
				copy.MaNguoiLapSource = MakeCopyOf(this.MaNguoiLapSource, existingCopies) as TaiKhoan;
			if (this.MaTinhTrangSource != null && existingCopies.Contains(this.MaTinhTrangSource))
				copy.MaTinhTrangSource = existingCopies[this.MaTinhTrangSource] as TinhTrang;
			else
				copy.MaTinhTrangSource = MakeCopyOf(this.MaTinhTrangSource, existingCopies) as TinhTrang;
			if (this.MaTrinhDoChinhTriSource != null && existingCopies.Contains(this.MaTrinhDoChinhTriSource))
				copy.MaTrinhDoChinhTriSource = existingCopies[this.MaTrinhDoChinhTriSource] as TrinhDoChinhTri;
			else
				copy.MaTrinhDoChinhTriSource = MakeCopyOf(this.MaTrinhDoChinhTriSource, existingCopies) as TrinhDoChinhTri;
			if (this.MaTrinhDoNgoaiNguSource != null && existingCopies.Contains(this.MaTrinhDoNgoaiNguSource))
				copy.MaTrinhDoNgoaiNguSource = existingCopies[this.MaTrinhDoNgoaiNguSource] as TrinhDoNgoaiNgu;
			else
				copy.MaTrinhDoNgoaiNguSource = MakeCopyOf(this.MaTrinhDoNgoaiNguSource, existingCopies) as TrinhDoNgoaiNgu;
			if (this.MaTrinhDoQuanLyNhaNuocSource != null && existingCopies.Contains(this.MaTrinhDoQuanLyNhaNuocSource))
				copy.MaTrinhDoQuanLyNhaNuocSource = existingCopies[this.MaTrinhDoQuanLyNhaNuocSource] as TrinhDoQuanLyNhaNuoc;
			else
				copy.MaTrinhDoQuanLyNhaNuocSource = MakeCopyOf(this.MaTrinhDoQuanLyNhaNuocSource, existingCopies) as TrinhDoQuanLyNhaNuoc;
			if (this.MaTrinhDoSuPhamSource != null && existingCopies.Contains(this.MaTrinhDoSuPhamSource))
				copy.MaTrinhDoSuPhamSource = existingCopies[this.MaTrinhDoSuPhamSource] as TrinhDoSuPham;
			else
				copy.MaTrinhDoSuPhamSource = MakeCopyOf(this.MaTrinhDoSuPhamSource, existingCopies) as TrinhDoSuPham;
			if (this.MaTrinhDoTinHocSource != null && existingCopies.Contains(this.MaTrinhDoTinHocSource))
				copy.MaTrinhDoTinHocSource = existingCopies[this.MaTrinhDoTinHocSource] as TrinhDoTinHoc;
			else
				copy.MaTrinhDoTinHocSource = MakeCopyOf(this.MaTrinhDoTinHocSource, existingCopies) as TrinhDoTinHoc;
		
			//deep copy nested objects
			copy.TietNoKyTruocCollection = (TList<TietNoKyTruoc>) MakeCopyOf(this.TietNoKyTruocCollection, existingCopies); 
			copy.KcqKhoiLuongKhacCollection = (TList<KcqKhoiLuongKhac>) MakeCopyOf(this.KcqKhoiLuongKhacCollection, existingCopies); 
			copy.ThuLaoThoaThuanCollection = (TList<ThuLaoThoaThuan>) MakeCopyOf(this.ThuLaoThoaThuanCollection, existingCopies); 
			copy.GiangVienCamKetKhongTruThueCollection = (TList<GiangVienCamKetKhongTruThue>) MakeCopyOf(this.GiangVienCamKetKhongTruThueCollection, existingCopies); 
			copy.ThamDinhLuanVanThacSyCollection = (TList<ThamDinhLuanVanThacSy>) MakeCopyOf(this.ThamDinhLuanVanThacSyCollection, existingCopies); 
			copy.GiangVienHoSoCollection = (TList<GiangVienHoSo>) MakeCopyOf(this.GiangVienHoSoCollection, existingCopies); 
			copy.ThoiGianLamViecCuaNhanVienCollection = (TList<ThoiGianLamViecCuaNhanVien>) MakeCopyOf(this.ThoiGianLamViecCuaNhanVienCollection, existingCopies); 
			copy.GiangVienHoatDongQuanLyCollection = (TList<GiangVienHoatDongQuanLy>) MakeCopyOf(this.GiangVienHoatDongQuanLyCollection, existingCopies); 
			copy.KhoiLuongKhacCollection = (TList<KhoiLuongKhac>) MakeCopyOf(this.KhoiLuongKhacCollection, existingCopies); 
			copy.CoVanHocTapCollection = (TList<CoVanHocTap>) MakeCopyOf(this.CoVanHocTapCollection, existingCopies); 
			copy.GiangVienNghienCuuKhCollection = (TList<GiangVienNghienCuuKh>) MakeCopyOf(this.GiangVienNghienCuuKhCollection, existingCopies); 
			copy.GiangVienChucVuCollection = (TList<GiangVienChucVu>) MakeCopyOf(this.GiangVienChucVuCollection, existingCopies); 
			copy.XetDuyetDeCuongLuanVanCaoHocCollection = (TList<XetDuyetDeCuongLuanVanCaoHoc>) MakeCopyOf(this.XetDuyetDeCuongLuanVanCaoHocCollection, existingCopies); 
			copy.KetQuaTinhCollection = (TList<KetQuaTinh>) MakeCopyOf(this.KetQuaTinhCollection, existingCopies); 
			copy.ThoiGianNghiTamThoiCuaGiangVienCollection = (TList<ThoiGianNghiTamThoiCuaGiangVien>) MakeCopyOf(this.ThoiGianNghiTamThoiCuaGiangVienCollection, existingCopies); 
			copy.GiangVienTinhLuongThinhGiangCollection = (TList<GiangVienTinhLuongThinhGiang>) MakeCopyOf(this.GiangVienTinhLuongThinhGiangCollection, existingCopies); 
			copy.GiangVienChuyenMonCollection = (TList<GiangVienChuyenMon>) MakeCopyOf(this.GiangVienChuyenMonCollection, existingCopies); 
			copy.BangPhuTroiNamHocCollection = (TList<BangPhuTroiNamHoc>) MakeCopyOf(this.BangPhuTroiNamHocCollection, existingCopies); 
			copy.TietNghiaVuCollection = (TList<TietNghiaVu>) MakeCopyOf(this.TietNghiaVuCollection, existingCopies); 
			copy.GiangVienMocTangLuongCollection = (TList<GiangVienMocTangLuong>) MakeCopyOf(this.GiangVienMocTangLuongCollection, existingCopies); 
			copy.GiangVienGiamTruDinhMucCollection = (TList<GiangVienGiamTruDinhMuc>) MakeCopyOf(this.GiangVienGiamTruDinhMucCollection, existingCopies); 
			copy.MaHoSoHoSoCollection_From_GiangVienHoSo = (TList<HoSo>) MakeCopyOf(this.MaHoSoHoSoCollection_From_GiangVienHoSo, existingCopies); 
			copy.GiangVienHoatDongNgoaiGiangDayCollection = (TList<GiangVienHoatDongNgoaiGiangDay>) MakeCopyOf(this.GiangVienHoatDongNgoaiGiangDayCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed GiangVien Entity 
		///</summary>
		public virtual GiangVien Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed GiangVien Entity which is a deep copy of the current entity.
		///</summary>
		public virtual GiangVien DeepCopy()
		{
			return EntityHelper.Clone<GiangVien>(this as GiangVien);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as GiangVienEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new GiangVienEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as GiangVienEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(GiangVienColumn column)
		{
			switch(column)
			{
					case GiangVienColumn.MaGiangVien:
					return entityData.MaGiangVien != _originalData.MaGiangVien;
					case GiangVienColumn.MaDanToc:
					return entityData.MaDanToc != _originalData.MaDanToc;
					case GiangVienColumn.MaTonGiao:
					return entityData.MaTonGiao != _originalData.MaTonGiao;
					case GiangVienColumn.MaDonVi:
					return entityData.MaDonVi != _originalData.MaDonVi;
					case GiangVienColumn.MaHocHam:
					return entityData.MaHocHam != _originalData.MaHocHam;
					case GiangVienColumn.MaHocVi:
					return entityData.MaHocVi != _originalData.MaHocVi;
					case GiangVienColumn.MaLoaiGiangVien:
					return entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
					case GiangVienColumn.MaNguoiLap:
					return entityData.MaNguoiLap != _originalData.MaNguoiLap;
					case GiangVienColumn.MatKhau:
					return entityData.MatKhau != _originalData.MatKhau;
					case GiangVienColumn.MaTinhTrang:
					return entityData.MaTinhTrang != _originalData.MaTinhTrang;
					case GiangVienColumn.MaQuanLy:
					return entityData.MaQuanLy != _originalData.MaQuanLy;
					case GiangVienColumn.Ho:
					return entityData.Ho != _originalData.Ho;
					case GiangVienColumn.TenDem:
					return entityData.TenDem != _originalData.TenDem;
					case GiangVienColumn.Ten:
					return entityData.Ten != _originalData.Ten;
					case GiangVienColumn.NgaySinh:
					return entityData.NgaySinh != _originalData.NgaySinh;
					case GiangVienColumn.GioiTinh:
					return entityData.GioiTinh != _originalData.GioiTinh;
					case GiangVienColumn.NoiSinh:
					return entityData.NoiSinh != _originalData.NoiSinh;
					case GiangVienColumn.Cmnd:
					return entityData.Cmnd != _originalData.Cmnd;
					case GiangVienColumn.NgayCap:
					return entityData.NgayCap != _originalData.NgayCap;
					case GiangVienColumn.NoiCap:
					return entityData.NoiCap != _originalData.NoiCap;
					case GiangVienColumn.DoanDang:
					return entityData.DoanDang != _originalData.DoanDang;
					case GiangVienColumn.NgayVaoDoanDang:
					return entityData.NgayVaoDoanDang != _originalData.NgayVaoDoanDang;
					case GiangVienColumn.NgayKyHopDong:
					return entityData.NgayKyHopDong != _originalData.NgayKyHopDong;
					case GiangVienColumn.NgayKetThucHopDong:
					return entityData.NgayKetThucHopDong != _originalData.NgayKetThucHopDong;
					case GiangVienColumn.HinhAnh:
					return entityData.HinhAnh != _originalData.HinhAnh;
					case GiangVienColumn.DiaChi:
					return entityData.DiaChi != _originalData.DiaChi;
					case GiangVienColumn.ThuongTru:
					return entityData.ThuongTru != _originalData.ThuongTru;
					case GiangVienColumn.NoiLamViec:
					return entityData.NoiLamViec != _originalData.NoiLamViec;
					case GiangVienColumn.Email:
					return entityData.Email != _originalData.Email;
					case GiangVienColumn.DienThoai:
					return entityData.DienThoai != _originalData.DienThoai;
					case GiangVienColumn.SoDiDong:
					return entityData.SoDiDong != _originalData.SoDiDong;
					case GiangVienColumn.SoTaiKhoan:
					return entityData.SoTaiKhoan != _originalData.SoTaiKhoan;
					case GiangVienColumn.TenNganHang:
					return entityData.TenNganHang != _originalData.TenNganHang;
					case GiangVienColumn.MaSoThue:
					return entityData.MaSoThue != _originalData.MaSoThue;
					case GiangVienColumn.ChiNhanh:
					return entityData.ChiNhanh != _originalData.ChiNhanh;
					case GiangVienColumn.SoSoBaoHiem:
					return entityData.SoSoBaoHiem != _originalData.SoSoBaoHiem;
					case GiangVienColumn.ThoiGianBatDau:
					return entityData.ThoiGianBatDau != _originalData.ThoiGianBatDau;
					case GiangVienColumn.BacLuong:
					return entityData.BacLuong != _originalData.BacLuong;
					case GiangVienColumn.NgayHuongLuong:
					return entityData.NgayHuongLuong != _originalData.NgayHuongLuong;
					case GiangVienColumn.NamLamViec:
					return entityData.NamLamViec != _originalData.NamLamViec;
					case GiangVienColumn.ChuyenNganh:
					return entityData.ChuyenNganh != _originalData.ChuyenNganh;
					case GiangVienColumn.MaHeSoThuLao:
					return entityData.MaHeSoThuLao != _originalData.MaHeSoThuLao;
					case GiangVienColumn.Ngach:
					return entityData.Ngach != _originalData.Ngach;
					case GiangVienColumn.SoHieuCongChuc:
					return entityData.SoHieuCongChuc != _originalData.SoHieuCongChuc;
					case GiangVienColumn.Hrmid:
					return entityData.Hrmid != _originalData.Hrmid;
					case GiangVienColumn.NoiCapBang:
					return entityData.NoiCapBang != _originalData.NoiCapBang;
					case GiangVienColumn.KhoaTaiKhoan:
					return entityData.KhoaTaiKhoan != _originalData.KhoaTaiKhoan;
					case GiangVienColumn.MaLoaiNhanVien:
					return entityData.MaLoaiNhanVien != _originalData.MaLoaiNhanVien;
					case GiangVienColumn.MaNgachCongChuc:
					return entityData.MaNgachCongChuc != _originalData.MaNgachCongChuc;
					case GiangVienColumn.MaTrinhDoChinhTri:
					return entityData.MaTrinhDoChinhTri != _originalData.MaTrinhDoChinhTri;
					case GiangVienColumn.MaTrinhDoSuPham:
					return entityData.MaTrinhDoSuPham != _originalData.MaTrinhDoSuPham;
					case GiangVienColumn.MaTrinhDoNgoaiNgu:
					return entityData.MaTrinhDoNgoaiNgu != _originalData.MaTrinhDoNgoaiNgu;
					case GiangVienColumn.MaTrinhDoTinHoc:
					return entityData.MaTrinhDoTinHoc != _originalData.MaTrinhDoTinHoc;
					case GiangVienColumn.MaTrinhDoQuanLyNhaNuoc:
					return entityData.MaTrinhDoQuanLyNhaNuoc != _originalData.MaTrinhDoQuanLyNhaNuoc;
					case GiangVienColumn.NguoiCapNhat:
					return entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
					case GiangVienColumn.NgayCapNhat:
					return entityData.NgayCapNhat != _originalData.NgayCapNhat;
					case GiangVienColumn.KhoiKienThucGiangDay:
					return entityData.KhoiKienThucGiangDay != _originalData.KhoiKienThucGiangDay;
					case GiangVienColumn.NganhDaoTao:
					return entityData.NganhDaoTao != _originalData.NganhDaoTao;
					case GiangVienColumn.DonViGiangDay:
					return entityData.DonViGiangDay != _originalData.DonViGiangDay;
					case GiangVienColumn.IdHoSo:
					return entityData.IdHoSo != _originalData.IdHoSo;
					case GiangVienColumn.MaQuocTich:
					return entityData.MaQuocTich != _originalData.MaQuocTich;
					case GiangVienColumn.DaXoaHrm:
					return entityData.DaXoaHrm != _originalData.DaXoaHrm;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< GiangVienColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.MaGiangVien != _originalData.MaGiangVien;
			result = result || entityData.MaDanToc != _originalData.MaDanToc;
			result = result || entityData.MaTonGiao != _originalData.MaTonGiao;
			result = result || entityData.MaDonVi != _originalData.MaDonVi;
			result = result || entityData.MaHocHam != _originalData.MaHocHam;
			result = result || entityData.MaHocVi != _originalData.MaHocVi;
			result = result || entityData.MaLoaiGiangVien != _originalData.MaLoaiGiangVien;
			result = result || entityData.MaNguoiLap != _originalData.MaNguoiLap;
			result = result || entityData.MatKhau != _originalData.MatKhau;
			result = result || entityData.MaTinhTrang != _originalData.MaTinhTrang;
			result = result || entityData.MaQuanLy != _originalData.MaQuanLy;
			result = result || entityData.Ho != _originalData.Ho;
			result = result || entityData.TenDem != _originalData.TenDem;
			result = result || entityData.Ten != _originalData.Ten;
			result = result || entityData.NgaySinh != _originalData.NgaySinh;
			result = result || entityData.GioiTinh != _originalData.GioiTinh;
			result = result || entityData.NoiSinh != _originalData.NoiSinh;
			result = result || entityData.Cmnd != _originalData.Cmnd;
			result = result || entityData.NgayCap != _originalData.NgayCap;
			result = result || entityData.NoiCap != _originalData.NoiCap;
			result = result || entityData.DoanDang != _originalData.DoanDang;
			result = result || entityData.NgayVaoDoanDang != _originalData.NgayVaoDoanDang;
			result = result || entityData.NgayKyHopDong != _originalData.NgayKyHopDong;
			result = result || entityData.NgayKetThucHopDong != _originalData.NgayKetThucHopDong;
			result = result || entityData.HinhAnh != _originalData.HinhAnh;
			result = result || entityData.DiaChi != _originalData.DiaChi;
			result = result || entityData.ThuongTru != _originalData.ThuongTru;
			result = result || entityData.NoiLamViec != _originalData.NoiLamViec;
			result = result || entityData.Email != _originalData.Email;
			result = result || entityData.DienThoai != _originalData.DienThoai;
			result = result || entityData.SoDiDong != _originalData.SoDiDong;
			result = result || entityData.SoTaiKhoan != _originalData.SoTaiKhoan;
			result = result || entityData.TenNganHang != _originalData.TenNganHang;
			result = result || entityData.MaSoThue != _originalData.MaSoThue;
			result = result || entityData.ChiNhanh != _originalData.ChiNhanh;
			result = result || entityData.SoSoBaoHiem != _originalData.SoSoBaoHiem;
			result = result || entityData.ThoiGianBatDau != _originalData.ThoiGianBatDau;
			result = result || entityData.BacLuong != _originalData.BacLuong;
			result = result || entityData.NgayHuongLuong != _originalData.NgayHuongLuong;
			result = result || entityData.NamLamViec != _originalData.NamLamViec;
			result = result || entityData.ChuyenNganh != _originalData.ChuyenNganh;
			result = result || entityData.MaHeSoThuLao != _originalData.MaHeSoThuLao;
			result = result || entityData.Ngach != _originalData.Ngach;
			result = result || entityData.SoHieuCongChuc != _originalData.SoHieuCongChuc;
			result = result || entityData.Hrmid != _originalData.Hrmid;
			result = result || entityData.NoiCapBang != _originalData.NoiCapBang;
			result = result || entityData.KhoaTaiKhoan != _originalData.KhoaTaiKhoan;
			result = result || entityData.MaLoaiNhanVien != _originalData.MaLoaiNhanVien;
			result = result || entityData.MaNgachCongChuc != _originalData.MaNgachCongChuc;
			result = result || entityData.MaTrinhDoChinhTri != _originalData.MaTrinhDoChinhTri;
			result = result || entityData.MaTrinhDoSuPham != _originalData.MaTrinhDoSuPham;
			result = result || entityData.MaTrinhDoNgoaiNgu != _originalData.MaTrinhDoNgoaiNgu;
			result = result || entityData.MaTrinhDoTinHoc != _originalData.MaTrinhDoTinHoc;
			result = result || entityData.MaTrinhDoQuanLyNhaNuoc != _originalData.MaTrinhDoQuanLyNhaNuoc;
			result = result || entityData.NguoiCapNhat != _originalData.NguoiCapNhat;
			result = result || entityData.NgayCapNhat != _originalData.NgayCapNhat;
			result = result || entityData.KhoiKienThucGiangDay != _originalData.KhoiKienThucGiangDay;
			result = result || entityData.NganhDaoTao != _originalData.NganhDaoTao;
			result = result || entityData.DonViGiangDay != _originalData.DonViGiangDay;
			result = result || entityData.IdHoSo != _originalData.IdHoSo;
			result = result || entityData.MaQuocTich != _originalData.MaQuocTich;
			result = result || entityData.DaXoaHrm != _originalData.DaXoaHrm;
			return result;
		}	
		
		///<summary>
		///  Returns a GiangVien Entity with the original data.
		///</summary>
		public GiangVien GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateGiangVien(
				_originalData.MaDanToc,
				_originalData.MaTonGiao,
				_originalData.MaDonVi,
				_originalData.MaHocHam,
				_originalData.MaHocVi,
				_originalData.MaLoaiGiangVien,
				_originalData.MaNguoiLap,
				_originalData.MatKhau,
				_originalData.MaTinhTrang,
				_originalData.MaQuanLy,
				_originalData.Ho,
				_originalData.TenDem,
				_originalData.Ten,
				_originalData.NgaySinh,
				_originalData.GioiTinh,
				_originalData.NoiSinh,
				_originalData.Cmnd,
				_originalData.NgayCap,
				_originalData.NoiCap,
				_originalData.DoanDang,
				_originalData.NgayVaoDoanDang,
				_originalData.NgayKyHopDong,
				_originalData.NgayKetThucHopDong,
				_originalData.HinhAnh,
				_originalData.DiaChi,
				_originalData.ThuongTru,
				_originalData.NoiLamViec,
				_originalData.Email,
				_originalData.DienThoai,
				_originalData.SoDiDong,
				_originalData.SoTaiKhoan,
				_originalData.TenNganHang,
				_originalData.MaSoThue,
				_originalData.ChiNhanh,
				_originalData.SoSoBaoHiem,
				_originalData.ThoiGianBatDau,
				_originalData.BacLuong,
				_originalData.NgayHuongLuong,
				_originalData.NamLamViec,
				_originalData.ChuyenNganh,
				_originalData.MaHeSoThuLao,
				_originalData.Ngach,
				_originalData.SoHieuCongChuc,
				_originalData.Hrmid,
				_originalData.NoiCapBang,
				_originalData.KhoaTaiKhoan,
				_originalData.MaLoaiNhanVien,
				_originalData.MaNgachCongChuc,
				_originalData.MaTrinhDoChinhTri,
				_originalData.MaTrinhDoSuPham,
				_originalData.MaTrinhDoNgoaiNgu,
				_originalData.MaTrinhDoTinHoc,
				_originalData.MaTrinhDoQuanLyNhaNuoc,
				_originalData.NguoiCapNhat,
				_originalData.NgayCapNhat,
				_originalData.KhoiKienThucGiangDay,
				_originalData.NganhDaoTao,
				_originalData.DonViGiangDay,
				_originalData.IdHoSo,
				_originalData.MaQuocTich,
				_originalData.DaXoaHrm
				);
				
			return (GiangVien)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="GiangVienBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is GiangVienBase)
				return ValueEquals(this, (GiangVienBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="GiangVienBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.MaGiangVien.GetHashCode() ^ 
					((this.MaDanToc == null) ? string.Empty : this.MaDanToc.ToString()).GetHashCode() ^ 
					((this.MaTonGiao == null) ? string.Empty : this.MaTonGiao.ToString()).GetHashCode() ^ 
					((this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString()).GetHashCode() ^ 
					((this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString()).GetHashCode() ^ 
					((this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString()).GetHashCode() ^ 
					((this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString()).GetHashCode() ^ 
					((this.MaNguoiLap == null) ? string.Empty : this.MaNguoiLap.ToString()).GetHashCode() ^ 
					((this.MatKhau == null) ? string.Empty : this.MatKhau.ToString()).GetHashCode() ^ 
					((this.MaTinhTrang == null) ? string.Empty : this.MaTinhTrang.ToString()).GetHashCode() ^ 
					this.MaQuanLy.GetHashCode() ^ 
					((this.Ho == null) ? string.Empty : this.Ho.ToString()).GetHashCode() ^ 
					((this.TenDem == null) ? string.Empty : this.TenDem.ToString()).GetHashCode() ^ 
					((this.Ten == null) ? string.Empty : this.Ten.ToString()).GetHashCode() ^ 
					((this.NgaySinh == null) ? string.Empty : this.NgaySinh.ToString()).GetHashCode() ^ 
					((this.GioiTinh == null) ? string.Empty : this.GioiTinh.ToString()).GetHashCode() ^ 
					((this.NoiSinh == null) ? string.Empty : this.NoiSinh.ToString()).GetHashCode() ^ 
					((this.Cmnd == null) ? string.Empty : this.Cmnd.ToString()).GetHashCode() ^ 
					((this.NgayCap == null) ? string.Empty : this.NgayCap.ToString()).GetHashCode() ^ 
					((this.NoiCap == null) ? string.Empty : this.NoiCap.ToString()).GetHashCode() ^ 
					((this.DoanDang == null) ? string.Empty : this.DoanDang.ToString()).GetHashCode() ^ 
					((this.NgayVaoDoanDang == null) ? string.Empty : this.NgayVaoDoanDang.ToString()).GetHashCode() ^ 
					((this.NgayKyHopDong == null) ? string.Empty : this.NgayKyHopDong.ToString()).GetHashCode() ^ 
					((this.NgayKetThucHopDong == null) ? string.Empty : this.NgayKetThucHopDong.ToString()).GetHashCode() ^ 
					((this.HinhAnh == null) ? string.Empty : this.HinhAnh.ToString()).GetHashCode() ^ 
					((this.DiaChi == null) ? string.Empty : this.DiaChi.ToString()).GetHashCode() ^ 
					((this.ThuongTru == null) ? string.Empty : this.ThuongTru.ToString()).GetHashCode() ^ 
					((this.NoiLamViec == null) ? string.Empty : this.NoiLamViec.ToString()).GetHashCode() ^ 
					((this.Email == null) ? string.Empty : this.Email.ToString()).GetHashCode() ^ 
					((this.DienThoai == null) ? string.Empty : this.DienThoai.ToString()).GetHashCode() ^ 
					((this.SoDiDong == null) ? string.Empty : this.SoDiDong.ToString()).GetHashCode() ^ 
					((this.SoTaiKhoan == null) ? string.Empty : this.SoTaiKhoan.ToString()).GetHashCode() ^ 
					((this.TenNganHang == null) ? string.Empty : this.TenNganHang.ToString()).GetHashCode() ^ 
					((this.MaSoThue == null) ? string.Empty : this.MaSoThue.ToString()).GetHashCode() ^ 
					((this.ChiNhanh == null) ? string.Empty : this.ChiNhanh.ToString()).GetHashCode() ^ 
					((this.SoSoBaoHiem == null) ? string.Empty : this.SoSoBaoHiem.ToString()).GetHashCode() ^ 
					((this.ThoiGianBatDau == null) ? string.Empty : this.ThoiGianBatDau.ToString()).GetHashCode() ^ 
					((this.BacLuong == null) ? string.Empty : this.BacLuong.ToString()).GetHashCode() ^ 
					((this.NgayHuongLuong == null) ? string.Empty : this.NgayHuongLuong.ToString()).GetHashCode() ^ 
					((this.NamLamViec == null) ? string.Empty : this.NamLamViec.ToString()).GetHashCode() ^ 
					((this.ChuyenNganh == null) ? string.Empty : this.ChuyenNganh.ToString()).GetHashCode() ^ 
					((this.MaHeSoThuLao == null) ? string.Empty : this.MaHeSoThuLao.ToString()).GetHashCode() ^ 
					((this.Ngach == null) ? string.Empty : this.Ngach.ToString()).GetHashCode() ^ 
					((this.SoHieuCongChuc == null) ? string.Empty : this.SoHieuCongChuc.ToString()).GetHashCode() ^ 
					((this.Hrmid == null) ? string.Empty : this.Hrmid.ToString()).GetHashCode() ^ 
					((this.NoiCapBang == null) ? string.Empty : this.NoiCapBang.ToString()).GetHashCode() ^ 
					((this.KhoaTaiKhoan == null) ? string.Empty : this.KhoaTaiKhoan.ToString()).GetHashCode() ^ 
					((this.MaLoaiNhanVien == null) ? string.Empty : this.MaLoaiNhanVien.ToString()).GetHashCode() ^ 
					((this.MaNgachCongChuc == null) ? string.Empty : this.MaNgachCongChuc.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoChinhTri == null) ? string.Empty : this.MaTrinhDoChinhTri.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoSuPham == null) ? string.Empty : this.MaTrinhDoSuPham.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoNgoaiNgu == null) ? string.Empty : this.MaTrinhDoNgoaiNgu.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoTinHoc == null) ? string.Empty : this.MaTrinhDoTinHoc.ToString()).GetHashCode() ^ 
					((this.MaTrinhDoQuanLyNhaNuoc == null) ? string.Empty : this.MaTrinhDoQuanLyNhaNuoc.ToString()).GetHashCode() ^ 
					((this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString()).GetHashCode() ^ 
					((this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString()).GetHashCode() ^ 
					((this.KhoiKienThucGiangDay == null) ? string.Empty : this.KhoiKienThucGiangDay.ToString()).GetHashCode() ^ 
					((this.NganhDaoTao == null) ? string.Empty : this.NganhDaoTao.ToString()).GetHashCode() ^ 
					((this.DonViGiangDay == null) ? string.Empty : this.DonViGiangDay.ToString()).GetHashCode() ^ 
					((this.IdHoSo == null) ? string.Empty : this.IdHoSo.ToString()).GetHashCode() ^ 
					((this.MaQuocTich == null) ? string.Empty : this.MaQuocTich.ToString()).GetHashCode() ^ 
					((this.DaXoaHrm == null) ? string.Empty : this.DaXoaHrm.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="GiangVienBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(GiangVienBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="GiangVienBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="GiangVienBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="GiangVienBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(GiangVienBase Object1, GiangVienBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.MaGiangVien != Object2.MaGiangVien)
				equal = false;
			if ( Object1.MaDanToc != null && Object2.MaDanToc != null )
			{
				if (Object1.MaDanToc != Object2.MaDanToc)
					equal = false;
			}
			else if (Object1.MaDanToc == null ^ Object2.MaDanToc == null )
			{
				equal = false;
			}
			if ( Object1.MaTonGiao != null && Object2.MaTonGiao != null )
			{
				if (Object1.MaTonGiao != Object2.MaTonGiao)
					equal = false;
			}
			else if (Object1.MaTonGiao == null ^ Object2.MaTonGiao == null )
			{
				equal = false;
			}
			if ( Object1.MaDonVi != null && Object2.MaDonVi != null )
			{
				if (Object1.MaDonVi != Object2.MaDonVi)
					equal = false;
			}
			else if (Object1.MaDonVi == null ^ Object2.MaDonVi == null )
			{
				equal = false;
			}
			if ( Object1.MaHocHam != null && Object2.MaHocHam != null )
			{
				if (Object1.MaHocHam != Object2.MaHocHam)
					equal = false;
			}
			else if (Object1.MaHocHam == null ^ Object2.MaHocHam == null )
			{
				equal = false;
			}
			if ( Object1.MaHocVi != null && Object2.MaHocVi != null )
			{
				if (Object1.MaHocVi != Object2.MaHocVi)
					equal = false;
			}
			else if (Object1.MaHocVi == null ^ Object2.MaHocVi == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiGiangVien != null && Object2.MaLoaiGiangVien != null )
			{
				if (Object1.MaLoaiGiangVien != Object2.MaLoaiGiangVien)
					equal = false;
			}
			else if (Object1.MaLoaiGiangVien == null ^ Object2.MaLoaiGiangVien == null )
			{
				equal = false;
			}
			if ( Object1.MaNguoiLap != null && Object2.MaNguoiLap != null )
			{
				if (Object1.MaNguoiLap != Object2.MaNguoiLap)
					equal = false;
			}
			else if (Object1.MaNguoiLap == null ^ Object2.MaNguoiLap == null )
			{
				equal = false;
			}
			if ( Object1.MatKhau != null && Object2.MatKhau != null )
			{
				if (Object1.MatKhau != Object2.MatKhau)
					equal = false;
			}
			else if (Object1.MatKhau == null ^ Object2.MatKhau == null )
			{
				equal = false;
			}
			if ( Object1.MaTinhTrang != null && Object2.MaTinhTrang != null )
			{
				if (Object1.MaTinhTrang != Object2.MaTinhTrang)
					equal = false;
			}
			else if (Object1.MaTinhTrang == null ^ Object2.MaTinhTrang == null )
			{
				equal = false;
			}
			if (Object1.MaQuanLy != Object2.MaQuanLy)
				equal = false;
			if ( Object1.Ho != null && Object2.Ho != null )
			{
				if (Object1.Ho != Object2.Ho)
					equal = false;
			}
			else if (Object1.Ho == null ^ Object2.Ho == null )
			{
				equal = false;
			}
			if ( Object1.TenDem != null && Object2.TenDem != null )
			{
				if (Object1.TenDem != Object2.TenDem)
					equal = false;
			}
			else if (Object1.TenDem == null ^ Object2.TenDem == null )
			{
				equal = false;
			}
			if ( Object1.Ten != null && Object2.Ten != null )
			{
				if (Object1.Ten != Object2.Ten)
					equal = false;
			}
			else if (Object1.Ten == null ^ Object2.Ten == null )
			{
				equal = false;
			}
			if ( Object1.NgaySinh != null && Object2.NgaySinh != null )
			{
				if (Object1.NgaySinh != Object2.NgaySinh)
					equal = false;
			}
			else if (Object1.NgaySinh == null ^ Object2.NgaySinh == null )
			{
				equal = false;
			}
			if ( Object1.GioiTinh != null && Object2.GioiTinh != null )
			{
				if (Object1.GioiTinh != Object2.GioiTinh)
					equal = false;
			}
			else if (Object1.GioiTinh == null ^ Object2.GioiTinh == null )
			{
				equal = false;
			}
			if ( Object1.NoiSinh != null && Object2.NoiSinh != null )
			{
				if (Object1.NoiSinh != Object2.NoiSinh)
					equal = false;
			}
			else if (Object1.NoiSinh == null ^ Object2.NoiSinh == null )
			{
				equal = false;
			}
			if ( Object1.Cmnd != null && Object2.Cmnd != null )
			{
				if (Object1.Cmnd != Object2.Cmnd)
					equal = false;
			}
			else if (Object1.Cmnd == null ^ Object2.Cmnd == null )
			{
				equal = false;
			}
			if ( Object1.NgayCap != null && Object2.NgayCap != null )
			{
				if (Object1.NgayCap != Object2.NgayCap)
					equal = false;
			}
			else if (Object1.NgayCap == null ^ Object2.NgayCap == null )
			{
				equal = false;
			}
			if ( Object1.NoiCap != null && Object2.NoiCap != null )
			{
				if (Object1.NoiCap != Object2.NoiCap)
					equal = false;
			}
			else if (Object1.NoiCap == null ^ Object2.NoiCap == null )
			{
				equal = false;
			}
			if ( Object1.DoanDang != null && Object2.DoanDang != null )
			{
				if (Object1.DoanDang != Object2.DoanDang)
					equal = false;
			}
			else if (Object1.DoanDang == null ^ Object2.DoanDang == null )
			{
				equal = false;
			}
			if ( Object1.NgayVaoDoanDang != null && Object2.NgayVaoDoanDang != null )
			{
				if (Object1.NgayVaoDoanDang != Object2.NgayVaoDoanDang)
					equal = false;
			}
			else if (Object1.NgayVaoDoanDang == null ^ Object2.NgayVaoDoanDang == null )
			{
				equal = false;
			}
			if ( Object1.NgayKyHopDong != null && Object2.NgayKyHopDong != null )
			{
				if (Object1.NgayKyHopDong != Object2.NgayKyHopDong)
					equal = false;
			}
			else if (Object1.NgayKyHopDong == null ^ Object2.NgayKyHopDong == null )
			{
				equal = false;
			}
			if ( Object1.NgayKetThucHopDong != null && Object2.NgayKetThucHopDong != null )
			{
				if (Object1.NgayKetThucHopDong != Object2.NgayKetThucHopDong)
					equal = false;
			}
			else if (Object1.NgayKetThucHopDong == null ^ Object2.NgayKetThucHopDong == null )
			{
				equal = false;
			}
			if ( Object1.HinhAnh != null && Object2.HinhAnh != null )
			{
				if (Object1.HinhAnh != Object2.HinhAnh)
					equal = false;
			}
			else if (Object1.HinhAnh == null ^ Object2.HinhAnh == null )
			{
				equal = false;
			}
			if ( Object1.DiaChi != null && Object2.DiaChi != null )
			{
				if (Object1.DiaChi != Object2.DiaChi)
					equal = false;
			}
			else if (Object1.DiaChi == null ^ Object2.DiaChi == null )
			{
				equal = false;
			}
			if ( Object1.ThuongTru != null && Object2.ThuongTru != null )
			{
				if (Object1.ThuongTru != Object2.ThuongTru)
					equal = false;
			}
			else if (Object1.ThuongTru == null ^ Object2.ThuongTru == null )
			{
				equal = false;
			}
			if ( Object1.NoiLamViec != null && Object2.NoiLamViec != null )
			{
				if (Object1.NoiLamViec != Object2.NoiLamViec)
					equal = false;
			}
			else if (Object1.NoiLamViec == null ^ Object2.NoiLamViec == null )
			{
				equal = false;
			}
			if ( Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object2.Email == null )
			{
				equal = false;
			}
			if ( Object1.DienThoai != null && Object2.DienThoai != null )
			{
				if (Object1.DienThoai != Object2.DienThoai)
					equal = false;
			}
			else if (Object1.DienThoai == null ^ Object2.DienThoai == null )
			{
				equal = false;
			}
			if ( Object1.SoDiDong != null && Object2.SoDiDong != null )
			{
				if (Object1.SoDiDong != Object2.SoDiDong)
					equal = false;
			}
			else if (Object1.SoDiDong == null ^ Object2.SoDiDong == null )
			{
				equal = false;
			}
			if ( Object1.SoTaiKhoan != null && Object2.SoTaiKhoan != null )
			{
				if (Object1.SoTaiKhoan != Object2.SoTaiKhoan)
					equal = false;
			}
			else if (Object1.SoTaiKhoan == null ^ Object2.SoTaiKhoan == null )
			{
				equal = false;
			}
			if ( Object1.TenNganHang != null && Object2.TenNganHang != null )
			{
				if (Object1.TenNganHang != Object2.TenNganHang)
					equal = false;
			}
			else if (Object1.TenNganHang == null ^ Object2.TenNganHang == null )
			{
				equal = false;
			}
			if ( Object1.MaSoThue != null && Object2.MaSoThue != null )
			{
				if (Object1.MaSoThue != Object2.MaSoThue)
					equal = false;
			}
			else if (Object1.MaSoThue == null ^ Object2.MaSoThue == null )
			{
				equal = false;
			}
			if ( Object1.ChiNhanh != null && Object2.ChiNhanh != null )
			{
				if (Object1.ChiNhanh != Object2.ChiNhanh)
					equal = false;
			}
			else if (Object1.ChiNhanh == null ^ Object2.ChiNhanh == null )
			{
				equal = false;
			}
			if ( Object1.SoSoBaoHiem != null && Object2.SoSoBaoHiem != null )
			{
				if (Object1.SoSoBaoHiem != Object2.SoSoBaoHiem)
					equal = false;
			}
			else if (Object1.SoSoBaoHiem == null ^ Object2.SoSoBaoHiem == null )
			{
				equal = false;
			}
			if ( Object1.ThoiGianBatDau != null && Object2.ThoiGianBatDau != null )
			{
				if (Object1.ThoiGianBatDau != Object2.ThoiGianBatDau)
					equal = false;
			}
			else if (Object1.ThoiGianBatDau == null ^ Object2.ThoiGianBatDau == null )
			{
				equal = false;
			}
			if ( Object1.BacLuong != null && Object2.BacLuong != null )
			{
				if (Object1.BacLuong != Object2.BacLuong)
					equal = false;
			}
			else if (Object1.BacLuong == null ^ Object2.BacLuong == null )
			{
				equal = false;
			}
			if ( Object1.NgayHuongLuong != null && Object2.NgayHuongLuong != null )
			{
				if (Object1.NgayHuongLuong != Object2.NgayHuongLuong)
					equal = false;
			}
			else if (Object1.NgayHuongLuong == null ^ Object2.NgayHuongLuong == null )
			{
				equal = false;
			}
			if ( Object1.NamLamViec != null && Object2.NamLamViec != null )
			{
				if (Object1.NamLamViec != Object2.NamLamViec)
					equal = false;
			}
			else if (Object1.NamLamViec == null ^ Object2.NamLamViec == null )
			{
				equal = false;
			}
			if ( Object1.ChuyenNganh != null && Object2.ChuyenNganh != null )
			{
				if (Object1.ChuyenNganh != Object2.ChuyenNganh)
					equal = false;
			}
			else if (Object1.ChuyenNganh == null ^ Object2.ChuyenNganh == null )
			{
				equal = false;
			}
			if ( Object1.MaHeSoThuLao != null && Object2.MaHeSoThuLao != null )
			{
				if (Object1.MaHeSoThuLao != Object2.MaHeSoThuLao)
					equal = false;
			}
			else if (Object1.MaHeSoThuLao == null ^ Object2.MaHeSoThuLao == null )
			{
				equal = false;
			}
			if ( Object1.Ngach != null && Object2.Ngach != null )
			{
				if (Object1.Ngach != Object2.Ngach)
					equal = false;
			}
			else if (Object1.Ngach == null ^ Object2.Ngach == null )
			{
				equal = false;
			}
			if ( Object1.SoHieuCongChuc != null && Object2.SoHieuCongChuc != null )
			{
				if (Object1.SoHieuCongChuc != Object2.SoHieuCongChuc)
					equal = false;
			}
			else if (Object1.SoHieuCongChuc == null ^ Object2.SoHieuCongChuc == null )
			{
				equal = false;
			}
			if ( Object1.Hrmid != null && Object2.Hrmid != null )
			{
				if (Object1.Hrmid != Object2.Hrmid)
					equal = false;
			}
			else if (Object1.Hrmid == null ^ Object2.Hrmid == null )
			{
				equal = false;
			}
			if ( Object1.NoiCapBang != null && Object2.NoiCapBang != null )
			{
				if (Object1.NoiCapBang != Object2.NoiCapBang)
					equal = false;
			}
			else if (Object1.NoiCapBang == null ^ Object2.NoiCapBang == null )
			{
				equal = false;
			}
			if ( Object1.KhoaTaiKhoan != null && Object2.KhoaTaiKhoan != null )
			{
				if (Object1.KhoaTaiKhoan != Object2.KhoaTaiKhoan)
					equal = false;
			}
			else if (Object1.KhoaTaiKhoan == null ^ Object2.KhoaTaiKhoan == null )
			{
				equal = false;
			}
			if ( Object1.MaLoaiNhanVien != null && Object2.MaLoaiNhanVien != null )
			{
				if (Object1.MaLoaiNhanVien != Object2.MaLoaiNhanVien)
					equal = false;
			}
			else if (Object1.MaLoaiNhanVien == null ^ Object2.MaLoaiNhanVien == null )
			{
				equal = false;
			}
			if ( Object1.MaNgachCongChuc != null && Object2.MaNgachCongChuc != null )
			{
				if (Object1.MaNgachCongChuc != Object2.MaNgachCongChuc)
					equal = false;
			}
			else if (Object1.MaNgachCongChuc == null ^ Object2.MaNgachCongChuc == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoChinhTri != null && Object2.MaTrinhDoChinhTri != null )
			{
				if (Object1.MaTrinhDoChinhTri != Object2.MaTrinhDoChinhTri)
					equal = false;
			}
			else if (Object1.MaTrinhDoChinhTri == null ^ Object2.MaTrinhDoChinhTri == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoSuPham != null && Object2.MaTrinhDoSuPham != null )
			{
				if (Object1.MaTrinhDoSuPham != Object2.MaTrinhDoSuPham)
					equal = false;
			}
			else if (Object1.MaTrinhDoSuPham == null ^ Object2.MaTrinhDoSuPham == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoNgoaiNgu != null && Object2.MaTrinhDoNgoaiNgu != null )
			{
				if (Object1.MaTrinhDoNgoaiNgu != Object2.MaTrinhDoNgoaiNgu)
					equal = false;
			}
			else if (Object1.MaTrinhDoNgoaiNgu == null ^ Object2.MaTrinhDoNgoaiNgu == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoTinHoc != null && Object2.MaTrinhDoTinHoc != null )
			{
				if (Object1.MaTrinhDoTinHoc != Object2.MaTrinhDoTinHoc)
					equal = false;
			}
			else if (Object1.MaTrinhDoTinHoc == null ^ Object2.MaTrinhDoTinHoc == null )
			{
				equal = false;
			}
			if ( Object1.MaTrinhDoQuanLyNhaNuoc != null && Object2.MaTrinhDoQuanLyNhaNuoc != null )
			{
				if (Object1.MaTrinhDoQuanLyNhaNuoc != Object2.MaTrinhDoQuanLyNhaNuoc)
					equal = false;
			}
			else if (Object1.MaTrinhDoQuanLyNhaNuoc == null ^ Object2.MaTrinhDoQuanLyNhaNuoc == null )
			{
				equal = false;
			}
			if ( Object1.NguoiCapNhat != null && Object2.NguoiCapNhat != null )
			{
				if (Object1.NguoiCapNhat != Object2.NguoiCapNhat)
					equal = false;
			}
			else if (Object1.NguoiCapNhat == null ^ Object2.NguoiCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.NgayCapNhat != null && Object2.NgayCapNhat != null )
			{
				if (Object1.NgayCapNhat != Object2.NgayCapNhat)
					equal = false;
			}
			else if (Object1.NgayCapNhat == null ^ Object2.NgayCapNhat == null )
			{
				equal = false;
			}
			if ( Object1.KhoiKienThucGiangDay != null && Object2.KhoiKienThucGiangDay != null )
			{
				if (Object1.KhoiKienThucGiangDay != Object2.KhoiKienThucGiangDay)
					equal = false;
			}
			else if (Object1.KhoiKienThucGiangDay == null ^ Object2.KhoiKienThucGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.NganhDaoTao != null && Object2.NganhDaoTao != null )
			{
				if (Object1.NganhDaoTao != Object2.NganhDaoTao)
					equal = false;
			}
			else if (Object1.NganhDaoTao == null ^ Object2.NganhDaoTao == null )
			{
				equal = false;
			}
			if ( Object1.DonViGiangDay != null && Object2.DonViGiangDay != null )
			{
				if (Object1.DonViGiangDay != Object2.DonViGiangDay)
					equal = false;
			}
			else if (Object1.DonViGiangDay == null ^ Object2.DonViGiangDay == null )
			{
				equal = false;
			}
			if ( Object1.IdHoSo != null && Object2.IdHoSo != null )
			{
				if (Object1.IdHoSo != Object2.IdHoSo)
					equal = false;
			}
			else if (Object1.IdHoSo == null ^ Object2.IdHoSo == null )
			{
				equal = false;
			}
			if ( Object1.MaQuocTich != null && Object2.MaQuocTich != null )
			{
				if (Object1.MaQuocTich != Object2.MaQuocTich)
					equal = false;
			}
			else if (Object1.MaQuocTich == null ^ Object2.MaQuocTich == null )
			{
				equal = false;
			}
			if ( Object1.DaXoaHrm != null && Object2.DaXoaHrm != null )
			{
				if (Object1.DaXoaHrm != Object2.DaXoaHrm)
					equal = false;
			}
			else if (Object1.DaXoaHrm == null ^ Object2.DaXoaHrm == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((GiangVienBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static GiangVienComparer GetComparer()
        {
            return new GiangVienComparer();
        }
        */

        // Comparer delegates back to GiangVien
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(GiangVien rhs, GiangVienColumn which)
        {
            switch (which)
            {
            	
            	
            	case GiangVienColumn.MaGiangVien:
            		return this.MaGiangVien.CompareTo(rhs.MaGiangVien);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaDanToc:
            		return this.MaDanToc.CompareTo(rhs.MaDanToc);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaTonGiao:
            		return this.MaTonGiao.CompareTo(rhs.MaTonGiao);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaDonVi:
            		return this.MaDonVi.CompareTo(rhs.MaDonVi);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaHocHam:
            		return this.MaHocHam.Value.CompareTo(rhs.MaHocHam.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaHocVi:
            		return this.MaHocVi.Value.CompareTo(rhs.MaHocVi.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaLoaiGiangVien:
            		return this.MaLoaiGiangVien.Value.CompareTo(rhs.MaLoaiGiangVien.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaNguoiLap:
            		return this.MaNguoiLap.Value.CompareTo(rhs.MaNguoiLap.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MatKhau:
            		return this.MatKhau.CompareTo(rhs.MatKhau);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaTinhTrang:
            		return this.MaTinhTrang.Value.CompareTo(rhs.MaTinhTrang.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaQuanLy:
            		return this.MaQuanLy.CompareTo(rhs.MaQuanLy);
            		
            		                 
            	
            	
            	case GiangVienColumn.Ho:
            		return this.Ho.CompareTo(rhs.Ho);
            		
            		                 
            	
            	
            	case GiangVienColumn.TenDem:
            		return this.TenDem.CompareTo(rhs.TenDem);
            		
            		                 
            	
            	
            	case GiangVienColumn.Ten:
            		return this.Ten.CompareTo(rhs.Ten);
            		
            		                 
            	
            	
            	case GiangVienColumn.NgaySinh:
            		return this.NgaySinh.CompareTo(rhs.NgaySinh);
            		
            		                 
            	
            	
            	case GiangVienColumn.GioiTinh:
            		return this.GioiTinh.Value.CompareTo(rhs.GioiTinh.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.NoiSinh:
            		return this.NoiSinh.CompareTo(rhs.NoiSinh);
            		
            		                 
            	
            	
            	case GiangVienColumn.Cmnd:
            		return this.Cmnd.CompareTo(rhs.Cmnd);
            		
            		                 
            	
            	
            	case GiangVienColumn.NgayCap:
            		return this.NgayCap.CompareTo(rhs.NgayCap);
            		
            		                 
            	
            	
            	case GiangVienColumn.NoiCap:
            		return this.NoiCap.CompareTo(rhs.NoiCap);
            		
            		                 
            	
            	
            	case GiangVienColumn.DoanDang:
            		return this.DoanDang.Value.CompareTo(rhs.DoanDang.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.NgayVaoDoanDang:
            		return this.NgayVaoDoanDang.CompareTo(rhs.NgayVaoDoanDang);
            		
            		                 
            	
            	
            	case GiangVienColumn.NgayKyHopDong:
            		return this.NgayKyHopDong.Value.CompareTo(rhs.NgayKyHopDong.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.NgayKetThucHopDong:
            		return this.NgayKetThucHopDong.Value.CompareTo(rhs.NgayKetThucHopDong.Value);
            		
            		                 
            	
            		                 
            	
            	
            	case GiangVienColumn.DiaChi:
            		return this.DiaChi.CompareTo(rhs.DiaChi);
            		
            		                 
            	
            	
            	case GiangVienColumn.ThuongTru:
            		return this.ThuongTru.CompareTo(rhs.ThuongTru);
            		
            		                 
            	
            	
            	case GiangVienColumn.NoiLamViec:
            		return this.NoiLamViec.CompareTo(rhs.NoiLamViec);
            		
            		                 
            	
            	
            	case GiangVienColumn.Email:
            		return this.Email.CompareTo(rhs.Email);
            		
            		                 
            	
            	
            	case GiangVienColumn.DienThoai:
            		return this.DienThoai.CompareTo(rhs.DienThoai);
            		
            		                 
            	
            	
            	case GiangVienColumn.SoDiDong:
            		return this.SoDiDong.CompareTo(rhs.SoDiDong);
            		
            		                 
            	
            	
            	case GiangVienColumn.SoTaiKhoan:
            		return this.SoTaiKhoan.CompareTo(rhs.SoTaiKhoan);
            		
            		                 
            	
            	
            	case GiangVienColumn.TenNganHang:
            		return this.TenNganHang.CompareTo(rhs.TenNganHang);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaSoThue:
            		return this.MaSoThue.CompareTo(rhs.MaSoThue);
            		
            		                 
            	
            	
            	case GiangVienColumn.ChiNhanh:
            		return this.ChiNhanh.CompareTo(rhs.ChiNhanh);
            		
            		                 
            	
            	
            	case GiangVienColumn.SoSoBaoHiem:
            		return this.SoSoBaoHiem.CompareTo(rhs.SoSoBaoHiem);
            		
            		                 
            	
            	
            	case GiangVienColumn.ThoiGianBatDau:
            		return this.ThoiGianBatDau.CompareTo(rhs.ThoiGianBatDau);
            		
            		                 
            	
            	
            	case GiangVienColumn.BacLuong:
            		return this.BacLuong.Value.CompareTo(rhs.BacLuong.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.NgayHuongLuong:
            		return this.NgayHuongLuong.CompareTo(rhs.NgayHuongLuong);
            		
            		                 
            	
            	
            	case GiangVienColumn.NamLamViec:
            		return this.NamLamViec.CompareTo(rhs.NamLamViec);
            		
            		                 
            	
            	
            	case GiangVienColumn.ChuyenNganh:
            		return this.ChuyenNganh.CompareTo(rhs.ChuyenNganh);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaHeSoThuLao:
            		return this.MaHeSoThuLao.CompareTo(rhs.MaHeSoThuLao);
            		
            		                 
            	
            	
            	case GiangVienColumn.Ngach:
            		return this.Ngach.CompareTo(rhs.Ngach);
            		
            		                 
            	
            	
            	case GiangVienColumn.SoHieuCongChuc:
            		return this.SoHieuCongChuc.CompareTo(rhs.SoHieuCongChuc);
            		
            		                 
            	
            	
            	case GiangVienColumn.Hrmid:
            		return this.Hrmid.Value.CompareTo(rhs.Hrmid.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.NoiCapBang:
            		return this.NoiCapBang.CompareTo(rhs.NoiCapBang);
            		
            		                 
            	
            	
            	case GiangVienColumn.KhoaTaiKhoan:
            		return this.KhoaTaiKhoan.Value.CompareTo(rhs.KhoaTaiKhoan.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaLoaiNhanVien:
            		return this.MaLoaiNhanVien.Value.CompareTo(rhs.MaLoaiNhanVien.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaNgachCongChuc:
            		return this.MaNgachCongChuc.Value.CompareTo(rhs.MaNgachCongChuc.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaTrinhDoChinhTri:
            		return this.MaTrinhDoChinhTri.Value.CompareTo(rhs.MaTrinhDoChinhTri.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaTrinhDoSuPham:
            		return this.MaTrinhDoSuPham.Value.CompareTo(rhs.MaTrinhDoSuPham.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaTrinhDoNgoaiNgu:
            		return this.MaTrinhDoNgoaiNgu.Value.CompareTo(rhs.MaTrinhDoNgoaiNgu.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaTrinhDoTinHoc:
            		return this.MaTrinhDoTinHoc.Value.CompareTo(rhs.MaTrinhDoTinHoc.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaTrinhDoQuanLyNhaNuoc:
            		return this.MaTrinhDoQuanLyNhaNuoc.Value.CompareTo(rhs.MaTrinhDoQuanLyNhaNuoc.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.NguoiCapNhat:
            		return this.NguoiCapNhat.CompareTo(rhs.NguoiCapNhat);
            		
            		                 
            	
            	
            	case GiangVienColumn.NgayCapNhat:
            		return this.NgayCapNhat.Value.CompareTo(rhs.NgayCapNhat.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.KhoiKienThucGiangDay:
            		return this.KhoiKienThucGiangDay.CompareTo(rhs.KhoiKienThucGiangDay);
            		
            		                 
            	
            	
            	case GiangVienColumn.NganhDaoTao:
            		return this.NganhDaoTao.CompareTo(rhs.NganhDaoTao);
            		
            		                 
            	
            	
            	case GiangVienColumn.DonViGiangDay:
            		return this.DonViGiangDay.CompareTo(rhs.DonViGiangDay);
            		
            		                 
            	
            	
            	case GiangVienColumn.IdHoSo:
            		return this.IdHoSo.Value.CompareTo(rhs.IdHoSo.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.MaQuocTich:
            		return this.MaQuocTich.Value.CompareTo(rhs.MaQuocTich.Value);
            		
            		                 
            	
            	
            	case GiangVienColumn.DaXoaHrm:
            		return this.DaXoaHrm.Value.CompareTo(rhs.DaXoaHrm.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<GiangVienKey> Members
		
		// member variable for the EntityId property
		private GiangVienKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual GiangVienKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new GiangVienKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("GiangVien")
					.Append("|").Append( this.MaGiangVien.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{63}{62}- MaGiangVien: {0}{62}- MaDanToc: {1}{62}- MaTonGiao: {2}{62}- MaDonVi: {3}{62}- MaHocHam: {4}{62}- MaHocVi: {5}{62}- MaLoaiGiangVien: {6}{62}- MaNguoiLap: {7}{62}- MatKhau: {8}{62}- MaTinhTrang: {9}{62}- MaQuanLy: {10}{62}- Ho: {11}{62}- TenDem: {12}{62}- Ten: {13}{62}- NgaySinh: {14}{62}- GioiTinh: {15}{62}- NoiSinh: {16}{62}- Cmnd: {17}{62}- NgayCap: {18}{62}- NoiCap: {19}{62}- DoanDang: {20}{62}- NgayVaoDoanDang: {21}{62}- NgayKyHopDong: {22}{62}- NgayKetThucHopDong: {23}{62}- HinhAnh: {24}{62}- DiaChi: {25}{62}- ThuongTru: {26}{62}- NoiLamViec: {27}{62}- Email: {28}{62}- DienThoai: {29}{62}- SoDiDong: {30}{62}- SoTaiKhoan: {31}{62}- TenNganHang: {32}{62}- MaSoThue: {33}{62}- ChiNhanh: {34}{62}- SoSoBaoHiem: {35}{62}- ThoiGianBatDau: {36}{62}- BacLuong: {37}{62}- NgayHuongLuong: {38}{62}- NamLamViec: {39}{62}- ChuyenNganh: {40}{62}- MaHeSoThuLao: {41}{62}- Ngach: {42}{62}- SoHieuCongChuc: {43}{62}- Hrmid: {44}{62}- NoiCapBang: {45}{62}- KhoaTaiKhoan: {46}{62}- MaLoaiNhanVien: {47}{62}- MaNgachCongChuc: {48}{62}- MaTrinhDoChinhTri: {49}{62}- MaTrinhDoSuPham: {50}{62}- MaTrinhDoNgoaiNgu: {51}{62}- MaTrinhDoTinHoc: {52}{62}- MaTrinhDoQuanLyNhaNuoc: {53}{62}- NguoiCapNhat: {54}{62}- NgayCapNhat: {55}{62}- KhoiKienThucGiangDay: {56}{62}- NganhDaoTao: {57}{62}- DonViGiangDay: {58}{62}- IdHoSo: {59}{62}- MaQuocTich: {60}{62}- DaXoaHrm: {61}{62}{64}", 
				this.MaGiangVien,
				(this.MaDanToc == null) ? string.Empty : this.MaDanToc.ToString(),
				(this.MaTonGiao == null) ? string.Empty : this.MaTonGiao.ToString(),
				(this.MaDonVi == null) ? string.Empty : this.MaDonVi.ToString(),
				(this.MaHocHam == null) ? string.Empty : this.MaHocHam.ToString(),
				(this.MaHocVi == null) ? string.Empty : this.MaHocVi.ToString(),
				(this.MaLoaiGiangVien == null) ? string.Empty : this.MaLoaiGiangVien.ToString(),
				(this.MaNguoiLap == null) ? string.Empty : this.MaNguoiLap.ToString(),
				(this.MatKhau == null) ? string.Empty : this.MatKhau.ToString(),
				(this.MaTinhTrang == null) ? string.Empty : this.MaTinhTrang.ToString(),
				this.MaQuanLy,
				(this.Ho == null) ? string.Empty : this.Ho.ToString(),
				(this.TenDem == null) ? string.Empty : this.TenDem.ToString(),
				(this.Ten == null) ? string.Empty : this.Ten.ToString(),
				(this.NgaySinh == null) ? string.Empty : this.NgaySinh.ToString(),
				(this.GioiTinh == null) ? string.Empty : this.GioiTinh.ToString(),
				(this.NoiSinh == null) ? string.Empty : this.NoiSinh.ToString(),
				(this.Cmnd == null) ? string.Empty : this.Cmnd.ToString(),
				(this.NgayCap == null) ? string.Empty : this.NgayCap.ToString(),
				(this.NoiCap == null) ? string.Empty : this.NoiCap.ToString(),
				(this.DoanDang == null) ? string.Empty : this.DoanDang.ToString(),
				(this.NgayVaoDoanDang == null) ? string.Empty : this.NgayVaoDoanDang.ToString(),
				(this.NgayKyHopDong == null) ? string.Empty : this.NgayKyHopDong.ToString(),
				(this.NgayKetThucHopDong == null) ? string.Empty : this.NgayKetThucHopDong.ToString(),
				(this.HinhAnh == null) ? string.Empty : this.HinhAnh.ToString(),
				(this.DiaChi == null) ? string.Empty : this.DiaChi.ToString(),
				(this.ThuongTru == null) ? string.Empty : this.ThuongTru.ToString(),
				(this.NoiLamViec == null) ? string.Empty : this.NoiLamViec.ToString(),
				(this.Email == null) ? string.Empty : this.Email.ToString(),
				(this.DienThoai == null) ? string.Empty : this.DienThoai.ToString(),
				(this.SoDiDong == null) ? string.Empty : this.SoDiDong.ToString(),
				(this.SoTaiKhoan == null) ? string.Empty : this.SoTaiKhoan.ToString(),
				(this.TenNganHang == null) ? string.Empty : this.TenNganHang.ToString(),
				(this.MaSoThue == null) ? string.Empty : this.MaSoThue.ToString(),
				(this.ChiNhanh == null) ? string.Empty : this.ChiNhanh.ToString(),
				(this.SoSoBaoHiem == null) ? string.Empty : this.SoSoBaoHiem.ToString(),
				(this.ThoiGianBatDau == null) ? string.Empty : this.ThoiGianBatDau.ToString(),
				(this.BacLuong == null) ? string.Empty : this.BacLuong.ToString(),
				(this.NgayHuongLuong == null) ? string.Empty : this.NgayHuongLuong.ToString(),
				(this.NamLamViec == null) ? string.Empty : this.NamLamViec.ToString(),
				(this.ChuyenNganh == null) ? string.Empty : this.ChuyenNganh.ToString(),
				(this.MaHeSoThuLao == null) ? string.Empty : this.MaHeSoThuLao.ToString(),
				(this.Ngach == null) ? string.Empty : this.Ngach.ToString(),
				(this.SoHieuCongChuc == null) ? string.Empty : this.SoHieuCongChuc.ToString(),
				(this.Hrmid == null) ? string.Empty : this.Hrmid.ToString(),
				(this.NoiCapBang == null) ? string.Empty : this.NoiCapBang.ToString(),
				(this.KhoaTaiKhoan == null) ? string.Empty : this.KhoaTaiKhoan.ToString(),
				(this.MaLoaiNhanVien == null) ? string.Empty : this.MaLoaiNhanVien.ToString(),
				(this.MaNgachCongChuc == null) ? string.Empty : this.MaNgachCongChuc.ToString(),
				(this.MaTrinhDoChinhTri == null) ? string.Empty : this.MaTrinhDoChinhTri.ToString(),
				(this.MaTrinhDoSuPham == null) ? string.Empty : this.MaTrinhDoSuPham.ToString(),
				(this.MaTrinhDoNgoaiNgu == null) ? string.Empty : this.MaTrinhDoNgoaiNgu.ToString(),
				(this.MaTrinhDoTinHoc == null) ? string.Empty : this.MaTrinhDoTinHoc.ToString(),
				(this.MaTrinhDoQuanLyNhaNuoc == null) ? string.Empty : this.MaTrinhDoQuanLyNhaNuoc.ToString(),
				(this.NguoiCapNhat == null) ? string.Empty : this.NguoiCapNhat.ToString(),
				(this.NgayCapNhat == null) ? string.Empty : this.NgayCapNhat.ToString(),
				(this.KhoiKienThucGiangDay == null) ? string.Empty : this.KhoiKienThucGiangDay.ToString(),
				(this.NganhDaoTao == null) ? string.Empty : this.NganhDaoTao.ToString(),
				(this.DonViGiangDay == null) ? string.Empty : this.DonViGiangDay.ToString(),
				(this.IdHoSo == null) ? string.Empty : this.IdHoSo.ToString(),
				(this.MaQuocTich == null) ? string.Empty : this.MaQuocTich.ToString(),
				(this.DaXoaHrm == null) ? string.Empty : this.DaXoaHrm.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'GiangVien' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class GiangVienEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// MaGiangVien : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "GiangVien"</remarks>
		public System.Int32 MaGiangVien;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaDanToc : 
		/// </summary>
		public System.String MaDanToc = null;
		
		/// <summary>
		/// MaTonGiao : 
		/// </summary>
		public System.String MaTonGiao = null;
		
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		public System.String MaDonVi = null;
		
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		public System.Int32? MaHocHam = null;
		
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		public System.Int32? MaHocVi = null;
		
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		public System.Int32? MaLoaiGiangVien = null;
		
		/// <summary>
		/// MaNguoiLap : 
		/// </summary>
		public System.Int32? MaNguoiLap = null;
		
		/// <summary>
		/// MatKhau : 
		/// </summary>
		public System.String MatKhau = null;
		
		/// <summary>
		/// MaTinhTrang : 
		/// </summary>
		public System.Int32? MaTinhTrang = null;
		
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		public System.String MaQuanLy = string.Empty;
		
		/// <summary>
		/// Ho : 
		/// </summary>
		public System.String Ho = null;
		
		/// <summary>
		/// TenDem : 
		/// </summary>
		public System.String TenDem = null;
		
		/// <summary>
		/// Ten : 
		/// </summary>
		public System.String Ten = null;
		
		/// <summary>
		/// NgaySinh : 
		/// </summary>
		public System.String NgaySinh = null;
		
		/// <summary>
		/// GioiTinh : 
		/// </summary>
		public System.Boolean? GioiTinh = null;
		
		/// <summary>
		/// NoiSinh : 
		/// </summary>
		public System.String NoiSinh = null;
		
		/// <summary>
		/// Cmnd : 
		/// </summary>
		public System.String Cmnd = null;
		
		/// <summary>
		/// NgayCap : 
		/// </summary>
		public System.String NgayCap = null;
		
		/// <summary>
		/// NoiCap : 
		/// </summary>
		public System.String NoiCap = null;
		
		/// <summary>
		/// DoanDang : 
		/// </summary>
		public System.Boolean? DoanDang = null;
		
		/// <summary>
		/// NgayVaoDoanDang : 
		/// </summary>
		public System.String NgayVaoDoanDang = null;
		
		/// <summary>
		/// NgayKyHopDong : 
		/// </summary>
		public System.DateTime? NgayKyHopDong = null;
		
		/// <summary>
		/// NgayKetThucHopDong : 
		/// </summary>
		public System.DateTime? NgayKetThucHopDong = null;
		
		/// <summary>
		/// HinhAnh : 
		/// </summary>
		public System.Byte[] HinhAnh = null;
		
		/// <summary>
		/// DiaChi : 
		/// </summary>
		public System.String DiaChi = null;
		
		/// <summary>
		/// ThuongTru : 
		/// </summary>
		public System.String ThuongTru = null;
		
		/// <summary>
		/// NoiLamViec : 
		/// </summary>
		public System.String NoiLamViec = null;
		
		/// <summary>
		/// Email : 
		/// </summary>
		public System.String Email = null;
		
		/// <summary>
		/// DienThoai : 
		/// </summary>
		public System.String DienThoai = null;
		
		/// <summary>
		/// SoDiDong : 
		/// </summary>
		public System.String SoDiDong = null;
		
		/// <summary>
		/// SoTaiKhoan : 
		/// </summary>
		public System.String SoTaiKhoan = null;
		
		/// <summary>
		/// TenNganHang : 
		/// </summary>
		public System.String TenNganHang = null;
		
		/// <summary>
		/// MaSoThue : 
		/// </summary>
		public System.String MaSoThue = null;
		
		/// <summary>
		/// ChiNhanh : 
		/// </summary>
		public System.String ChiNhanh = null;
		
		/// <summary>
		/// SoSoBaoHiem : 
		/// </summary>
		public System.String SoSoBaoHiem = null;
		
		/// <summary>
		/// ThoiGianBatDau : 
		/// </summary>
		public System.String ThoiGianBatDau = null;
		
		/// <summary>
		/// BacLuong : 
		/// </summary>
		public System.Decimal? BacLuong = null;
		
		/// <summary>
		/// NgayHuongLuong : 
		/// </summary>
		public System.String NgayHuongLuong = null;
		
		/// <summary>
		/// NamLamViec : 
		/// </summary>
		public System.String NamLamViec = null;
		
		/// <summary>
		/// ChuyenNganh : 
		/// </summary>
		public System.String ChuyenNganh = null;
		
		/// <summary>
		/// MaHeSoThuLao : 
		/// </summary>
		public System.String MaHeSoThuLao = null;
		
		/// <summary>
		/// Ngach : 
		/// </summary>
		public System.String Ngach = null;
		
		/// <summary>
		/// SoHieuCongChuc : 
		/// </summary>
		public System.String SoHieuCongChuc = null;
		
		/// <summary>
		/// HRMID : 
		/// </summary>
		public System.Guid? Hrmid = null;
		
		/// <summary>
		/// NoiCapBang : 
		/// </summary>
		public System.String NoiCapBang = null;
		
		/// <summary>
		/// KhoaTaiKhoan : 
		/// </summary>
		public System.Boolean? KhoaTaiKhoan = null;
		
		/// <summary>
		/// MaLoaiNhanVien : 
		/// </summary>
		public System.Int32? MaLoaiNhanVien = null;
		
		/// <summary>
		/// MaNgachCongChuc : 
		/// </summary>
		public System.Int32? MaNgachCongChuc = null;
		
		/// <summary>
		/// MaTrinhDoChinhTri : 
		/// </summary>
		public System.Int32? MaTrinhDoChinhTri = null;
		
		/// <summary>
		/// MaTrinhDoSuPham : 
		/// </summary>
		public System.Int32? MaTrinhDoSuPham = null;
		
		/// <summary>
		/// MaTrinhDoNgoaiNgu : 
		/// </summary>
		public System.Int32? MaTrinhDoNgoaiNgu = null;
		
		/// <summary>
		/// MaTrinhDoTinHoc : 
		/// </summary>
		public System.Int32? MaTrinhDoTinHoc = null;
		
		/// <summary>
		/// MaTrinhDoQuanLyNhaNuoc : 
		/// </summary>
		public System.Int32? MaTrinhDoQuanLyNhaNuoc = null;
		
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		public System.String NguoiCapNhat = null;
		
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		public System.DateTime? NgayCapNhat = null;
		
		/// <summary>
		/// KhoiKienThucGiangDay : 
		/// </summary>
		public System.String KhoiKienThucGiangDay = null;
		
		/// <summary>
		/// NganhDaoTao : 
		/// </summary>
		public System.String NganhDaoTao = null;
		
		/// <summary>
		/// DonViGiangDay : 
		/// </summary>
		public System.String DonViGiangDay = null;
		
		/// <summary>
		/// IdHoSo : 
		/// </summary>
		public System.Int32? IdHoSo = null;
		
		/// <summary>
		/// MaQuocTich : 
		/// </summary>
		public System.Int32? MaQuocTich = null;
		
		/// <summary>
		/// DaXoaHRM : 
		/// </summary>
		public System.Boolean? DaXoaHrm = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private HocHam _maHocHamSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="HocHam"/>.
		/// </summary>
		/// <value>The source HocHam for MaHocHam.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual HocHam MaHocHamSource
      	{
            get { return this._maHocHamSource; }
            set { this._maHocHamSource = value; }
      	}
		private HocVi _maHocViSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="HocVi"/>.
		/// </summary>
		/// <value>The source HocVi for MaHocVi.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual HocVi MaHocViSource
      	{
            get { return this._maHocViSource; }
            set { this._maHocViSource = value; }
      	}
		private LoaiGiangVien _maLoaiGiangVienSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="LoaiGiangVien"/>.
		/// </summary>
		/// <value>The source LoaiGiangVien for MaLoaiGiangVien.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual LoaiGiangVien MaLoaiGiangVienSource
      	{
            get { return this._maLoaiGiangVienSource; }
            set { this._maLoaiGiangVienSource = value; }
      	}
		private LoaiNhanVien _maLoaiNhanVienSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="LoaiNhanVien"/>.
		/// </summary>
		/// <value>The source LoaiNhanVien for MaLoaiNhanVien.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual LoaiNhanVien MaLoaiNhanVienSource
      	{
            get { return this._maLoaiNhanVienSource; }
            set { this._maLoaiNhanVienSource = value; }
      	}
		private NgachCongChuc _maNgachCongChucSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="NgachCongChuc"/>.
		/// </summary>
		/// <value>The source NgachCongChuc for MaNgachCongChuc.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual NgachCongChuc MaNgachCongChucSource
      	{
            get { return this._maNgachCongChucSource; }
            set { this._maNgachCongChucSource = value; }
      	}
		private TaiKhoan _maNguoiLapSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="TaiKhoan"/>.
		/// </summary>
		/// <value>The source TaiKhoan for MaNguoiLap.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual TaiKhoan MaNguoiLapSource
      	{
            get { return this._maNguoiLapSource; }
            set { this._maNguoiLapSource = value; }
      	}
		private TinhTrang _maTinhTrangSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="TinhTrang"/>.
		/// </summary>
		/// <value>The source TinhTrang for MaTinhTrang.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual TinhTrang MaTinhTrangSource
      	{
            get { return this._maTinhTrangSource; }
            set { this._maTinhTrangSource = value; }
      	}
		private TrinhDoChinhTri _maTrinhDoChinhTriSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoChinhTri"/>.
		/// </summary>
		/// <value>The source TrinhDoChinhTri for MaTrinhDoChinhTri.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual TrinhDoChinhTri MaTrinhDoChinhTriSource
      	{
            get { return this._maTrinhDoChinhTriSource; }
            set { this._maTrinhDoChinhTriSource = value; }
      	}
		private TrinhDoNgoaiNgu _maTrinhDoNgoaiNguSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoNgoaiNgu"/>.
		/// </summary>
		/// <value>The source TrinhDoNgoaiNgu for MaTrinhDoNgoaiNgu.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual TrinhDoNgoaiNgu MaTrinhDoNgoaiNguSource
      	{
            get { return this._maTrinhDoNgoaiNguSource; }
            set { this._maTrinhDoNgoaiNguSource = value; }
      	}
		private TrinhDoQuanLyNhaNuoc _maTrinhDoQuanLyNhaNuocSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoQuanLyNhaNuoc"/>.
		/// </summary>
		/// <value>The source TrinhDoQuanLyNhaNuoc for MaTrinhDoQuanLyNhaNuoc.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual TrinhDoQuanLyNhaNuoc MaTrinhDoQuanLyNhaNuocSource
      	{
            get { return this._maTrinhDoQuanLyNhaNuocSource; }
            set { this._maTrinhDoQuanLyNhaNuocSource = value; }
      	}
		private TrinhDoSuPham _maTrinhDoSuPhamSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoSuPham"/>.
		/// </summary>
		/// <value>The source TrinhDoSuPham for MaTrinhDoSuPham.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual TrinhDoSuPham MaTrinhDoSuPhamSource
      	{
            get { return this._maTrinhDoSuPhamSource; }
            set { this._maTrinhDoSuPhamSource = value; }
      	}
		private TrinhDoTinHoc _maTrinhDoTinHocSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="TrinhDoTinHoc"/>.
		/// </summary>
		/// <value>The source TrinhDoTinHoc for MaTrinhDoTinHoc.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual TrinhDoTinHoc MaTrinhDoTinHocSource
      	{
            get { return this._maTrinhDoTinHocSource; }
            set { this._maTrinhDoTinHocSource = value; }
      	}
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#region TietNoKyTruocCollection
		
		private TList<TietNoKyTruoc> _tietNoKyTruocMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _tietNoKyTruocMaGiangVien
		/// </summary>
		
		public TList<TietNoKyTruoc> TietNoKyTruocCollection
		{
			get
			{
				if (_tietNoKyTruocMaGiangVien == null)
				{
				_tietNoKyTruocMaGiangVien = new TList<TietNoKyTruoc>();
				}
	
				return _tietNoKyTruocMaGiangVien;
			}
			set { _tietNoKyTruocMaGiangVien = value; }
		}
		
		#endregion

		#region KcqKhoiLuongKhacCollection
		
		private TList<KcqKhoiLuongKhac> _kcqKhoiLuongKhacMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _kcqKhoiLuongKhacMaGiangVien
		/// </summary>
		
		public TList<KcqKhoiLuongKhac> KcqKhoiLuongKhacCollection
		{
			get
			{
				if (_kcqKhoiLuongKhacMaGiangVien == null)
				{
				_kcqKhoiLuongKhacMaGiangVien = new TList<KcqKhoiLuongKhac>();
				}
	
				return _kcqKhoiLuongKhacMaGiangVien;
			}
			set { _kcqKhoiLuongKhacMaGiangVien = value; }
		}
		
		#endregion

		#region ThuLaoThoaThuanCollection
		
		private TList<ThuLaoThoaThuan> _thuLaoThoaThuanMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _thuLaoThoaThuanMaGiangVien
		/// </summary>
		
		public TList<ThuLaoThoaThuan> ThuLaoThoaThuanCollection
		{
			get
			{
				if (_thuLaoThoaThuanMaGiangVien == null)
				{
				_thuLaoThoaThuanMaGiangVien = new TList<ThuLaoThoaThuan>();
				}
	
				return _thuLaoThoaThuanMaGiangVien;
			}
			set { _thuLaoThoaThuanMaGiangVien = value; }
		}
		
		#endregion

		#region GiangVienCamKetKhongTruThueCollection
		
		private TList<GiangVienCamKetKhongTruThue> _giangVienCamKetKhongTruThueMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienCamKetKhongTruThueMaGiangVien
		/// </summary>
		
		public TList<GiangVienCamKetKhongTruThue> GiangVienCamKetKhongTruThueCollection
		{
			get
			{
				if (_giangVienCamKetKhongTruThueMaGiangVien == null)
				{
				_giangVienCamKetKhongTruThueMaGiangVien = new TList<GiangVienCamKetKhongTruThue>();
				}
	
				return _giangVienCamKetKhongTruThueMaGiangVien;
			}
			set { _giangVienCamKetKhongTruThueMaGiangVien = value; }
		}
		
		#endregion

		#region ThamDinhLuanVanThacSyCollection
		
		private TList<ThamDinhLuanVanThacSy> _thamDinhLuanVanThacSyMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _thamDinhLuanVanThacSyMaGiangVien
		/// </summary>
		
		public TList<ThamDinhLuanVanThacSy> ThamDinhLuanVanThacSyCollection
		{
			get
			{
				if (_thamDinhLuanVanThacSyMaGiangVien == null)
				{
				_thamDinhLuanVanThacSyMaGiangVien = new TList<ThamDinhLuanVanThacSy>();
				}
	
				return _thamDinhLuanVanThacSyMaGiangVien;
			}
			set { _thamDinhLuanVanThacSyMaGiangVien = value; }
		}
		
		#endregion

		#region GiangVienHoSoCollection
		
		private TList<GiangVienHoSo> _giangVienHoSoMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienHoSoMaGiangVien
		/// </summary>
		
		public TList<GiangVienHoSo> GiangVienHoSoCollection
		{
			get
			{
				if (_giangVienHoSoMaGiangVien == null)
				{
				_giangVienHoSoMaGiangVien = new TList<GiangVienHoSo>();
				}
	
				return _giangVienHoSoMaGiangVien;
			}
			set { _giangVienHoSoMaGiangVien = value; }
		}
		
		#endregion

		#region ThoiGianLamViecCuaNhanVienCollection
		
		private TList<ThoiGianLamViecCuaNhanVien> _thoiGianLamViecCuaNhanVienMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _thoiGianLamViecCuaNhanVienMaGiangVien
		/// </summary>
		
		public TList<ThoiGianLamViecCuaNhanVien> ThoiGianLamViecCuaNhanVienCollection
		{
			get
			{
				if (_thoiGianLamViecCuaNhanVienMaGiangVien == null)
				{
				_thoiGianLamViecCuaNhanVienMaGiangVien = new TList<ThoiGianLamViecCuaNhanVien>();
				}
	
				return _thoiGianLamViecCuaNhanVienMaGiangVien;
			}
			set { _thoiGianLamViecCuaNhanVienMaGiangVien = value; }
		}
		
		#endregion

		#region GiangVienHoatDongQuanLyCollection
		
		private TList<GiangVienHoatDongQuanLy> _giangVienHoatDongQuanLyMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienHoatDongQuanLyMaGiangVien
		/// </summary>
		
		public TList<GiangVienHoatDongQuanLy> GiangVienHoatDongQuanLyCollection
		{
			get
			{
				if (_giangVienHoatDongQuanLyMaGiangVien == null)
				{
				_giangVienHoatDongQuanLyMaGiangVien = new TList<GiangVienHoatDongQuanLy>();
				}
	
				return _giangVienHoatDongQuanLyMaGiangVien;
			}
			set { _giangVienHoatDongQuanLyMaGiangVien = value; }
		}
		
		#endregion

		#region KhoiLuongKhacCollection
		
		private TList<KhoiLuongKhac> _khoiLuongKhacMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _khoiLuongKhacMaGiangVien
		/// </summary>
		
		public TList<KhoiLuongKhac> KhoiLuongKhacCollection
		{
			get
			{
				if (_khoiLuongKhacMaGiangVien == null)
				{
				_khoiLuongKhacMaGiangVien = new TList<KhoiLuongKhac>();
				}
	
				return _khoiLuongKhacMaGiangVien;
			}
			set { _khoiLuongKhacMaGiangVien = value; }
		}
		
		#endregion

		#region CoVanHocTapCollection
		
		private TList<CoVanHocTap> _coVanHocTapMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coVanHocTapMaGiangVien
		/// </summary>
		
		public TList<CoVanHocTap> CoVanHocTapCollection
		{
			get
			{
				if (_coVanHocTapMaGiangVien == null)
				{
				_coVanHocTapMaGiangVien = new TList<CoVanHocTap>();
				}
	
				return _coVanHocTapMaGiangVien;
			}
			set { _coVanHocTapMaGiangVien = value; }
		}
		
		#endregion

		#region GiangVienNghienCuuKhCollection
		
		private TList<GiangVienNghienCuuKh> _giangVienNghienCuuKhMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienNghienCuuKhMaGiangVien
		/// </summary>
		
		public TList<GiangVienNghienCuuKh> GiangVienNghienCuuKhCollection
		{
			get
			{
				if (_giangVienNghienCuuKhMaGiangVien == null)
				{
				_giangVienNghienCuuKhMaGiangVien = new TList<GiangVienNghienCuuKh>();
				}
	
				return _giangVienNghienCuuKhMaGiangVien;
			}
			set { _giangVienNghienCuuKhMaGiangVien = value; }
		}
		
		#endregion

		#region GiangVienChucVuCollection
		
		private TList<GiangVienChucVu> _giangVienChucVuMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienChucVuMaGiangVien
		/// </summary>
		
		public TList<GiangVienChucVu> GiangVienChucVuCollection
		{
			get
			{
				if (_giangVienChucVuMaGiangVien == null)
				{
				_giangVienChucVuMaGiangVien = new TList<GiangVienChucVu>();
				}
	
				return _giangVienChucVuMaGiangVien;
			}
			set { _giangVienChucVuMaGiangVien = value; }
		}
		
		#endregion

		#region XetDuyetDeCuongLuanVanCaoHocCollection
		
		private TList<XetDuyetDeCuongLuanVanCaoHoc> _xetDuyetDeCuongLuanVanCaoHocMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _xetDuyetDeCuongLuanVanCaoHocMaGiangVien
		/// </summary>
		
		public TList<XetDuyetDeCuongLuanVanCaoHoc> XetDuyetDeCuongLuanVanCaoHocCollection
		{
			get
			{
				if (_xetDuyetDeCuongLuanVanCaoHocMaGiangVien == null)
				{
				_xetDuyetDeCuongLuanVanCaoHocMaGiangVien = new TList<XetDuyetDeCuongLuanVanCaoHoc>();
				}
	
				return _xetDuyetDeCuongLuanVanCaoHocMaGiangVien;
			}
			set { _xetDuyetDeCuongLuanVanCaoHocMaGiangVien = value; }
		}
		
		#endregion

		#region KetQuaTinhCollection
		
		private TList<KetQuaTinh> _ketQuaTinhMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ketQuaTinhMaGiangVien
		/// </summary>
		
		public TList<KetQuaTinh> KetQuaTinhCollection
		{
			get
			{
				if (_ketQuaTinhMaGiangVien == null)
				{
				_ketQuaTinhMaGiangVien = new TList<KetQuaTinh>();
				}
	
				return _ketQuaTinhMaGiangVien;
			}
			set { _ketQuaTinhMaGiangVien = value; }
		}
		
		#endregion

		#region ThoiGianNghiTamThoiCuaGiangVienCollection
		
		private TList<ThoiGianNghiTamThoiCuaGiangVien> _thoiGianNghiTamThoiCuaGiangVienMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _thoiGianNghiTamThoiCuaGiangVienMaGiangVien
		/// </summary>
		
		public TList<ThoiGianNghiTamThoiCuaGiangVien> ThoiGianNghiTamThoiCuaGiangVienCollection
		{
			get
			{
				if (_thoiGianNghiTamThoiCuaGiangVienMaGiangVien == null)
				{
				_thoiGianNghiTamThoiCuaGiangVienMaGiangVien = new TList<ThoiGianNghiTamThoiCuaGiangVien>();
				}
	
				return _thoiGianNghiTamThoiCuaGiangVienMaGiangVien;
			}
			set { _thoiGianNghiTamThoiCuaGiangVienMaGiangVien = value; }
		}
		
		#endregion

		#region GiangVienTinhLuongThinhGiangCollection
		
		private TList<GiangVienTinhLuongThinhGiang> _giangVienTinhLuongThinhGiangMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienTinhLuongThinhGiangMaGiangVien
		/// </summary>
		
		public TList<GiangVienTinhLuongThinhGiang> GiangVienTinhLuongThinhGiangCollection
		{
			get
			{
				if (_giangVienTinhLuongThinhGiangMaGiangVien == null)
				{
				_giangVienTinhLuongThinhGiangMaGiangVien = new TList<GiangVienTinhLuongThinhGiang>();
				}
	
				return _giangVienTinhLuongThinhGiangMaGiangVien;
			}
			set { _giangVienTinhLuongThinhGiangMaGiangVien = value; }
		}
		
		#endregion

		#region GiangVienChuyenMonCollection
		
		private TList<GiangVienChuyenMon> _giangVienChuyenMonMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienChuyenMonMaGiangVien
		/// </summary>
		
		public TList<GiangVienChuyenMon> GiangVienChuyenMonCollection
		{
			get
			{
				if (_giangVienChuyenMonMaGiangVien == null)
				{
				_giangVienChuyenMonMaGiangVien = new TList<GiangVienChuyenMon>();
				}
	
				return _giangVienChuyenMonMaGiangVien;
			}
			set { _giangVienChuyenMonMaGiangVien = value; }
		}
		
		#endregion

		#region BangPhuTroiNamHocCollection
		
		private TList<BangPhuTroiNamHoc> _bangPhuTroiNamHocMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _bangPhuTroiNamHocMaGiangVien
		/// </summary>
		
		public TList<BangPhuTroiNamHoc> BangPhuTroiNamHocCollection
		{
			get
			{
				if (_bangPhuTroiNamHocMaGiangVien == null)
				{
				_bangPhuTroiNamHocMaGiangVien = new TList<BangPhuTroiNamHoc>();
				}
	
				return _bangPhuTroiNamHocMaGiangVien;
			}
			set { _bangPhuTroiNamHocMaGiangVien = value; }
		}
		
		#endregion

		#region TietNghiaVuCollection
		
		private TList<TietNghiaVu> _tietNghiaVuMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _tietNghiaVuMaGiangVien
		/// </summary>
		
		public TList<TietNghiaVu> TietNghiaVuCollection
		{
			get
			{
				if (_tietNghiaVuMaGiangVien == null)
				{
				_tietNghiaVuMaGiangVien = new TList<TietNghiaVu>();
				}
	
				return _tietNghiaVuMaGiangVien;
			}
			set { _tietNghiaVuMaGiangVien = value; }
		}
		
		#endregion

		#region GiangVienMocTangLuongCollection
		
		private TList<GiangVienMocTangLuong> _giangVienMocTangLuongMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienMocTangLuongMaGiangVien
		/// </summary>
		
		public TList<GiangVienMocTangLuong> GiangVienMocTangLuongCollection
		{
			get
			{
				if (_giangVienMocTangLuongMaGiangVien == null)
				{
				_giangVienMocTangLuongMaGiangVien = new TList<GiangVienMocTangLuong>();
				}
	
				return _giangVienMocTangLuongMaGiangVien;
			}
			set { _giangVienMocTangLuongMaGiangVien = value; }
		}
		
		#endregion

		#region GiangVienGiamTruDinhMucCollection
		
		private TList<GiangVienGiamTruDinhMuc> _giangVienGiamTruDinhMucMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienGiamTruDinhMucMaGiangVien
		/// </summary>
		
		public TList<GiangVienGiamTruDinhMuc> GiangVienGiamTruDinhMucCollection
		{
			get
			{
				if (_giangVienGiamTruDinhMucMaGiangVien == null)
				{
				_giangVienGiamTruDinhMucMaGiangVien = new TList<GiangVienGiamTruDinhMuc>();
				}
	
				return _giangVienGiamTruDinhMucMaGiangVien;
			}
			set { _giangVienGiamTruDinhMucMaGiangVien = value; }
		}
		
		#endregion

		#region MaHoSoHoSoCollection_From_GiangVienHoSo
		
		private TList<HoSo> maHoSoHoSoCollectionFromGiangVienHoSo;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table maHoSoHoSoCollectionFromGiangVienHoSo
		/// </summary>
		
		public TList<HoSo> MaHoSoHoSoCollection_From_GiangVienHoSo
		{
			get
			{
				if (maHoSoHoSoCollectionFromGiangVienHoSo == null)
				{
				maHoSoHoSoCollectionFromGiangVienHoSo = new TList<HoSo>();
				}
	
				return maHoSoHoSoCollectionFromGiangVienHoSo;
			}
			set { maHoSoHoSoCollectionFromGiangVienHoSo = value; }
		}
		
		#endregion 

		#region GiangVienHoatDongNgoaiGiangDayCollection
		
		private TList<GiangVienHoatDongNgoaiGiangDay> _giangVienHoatDongNgoaiGiangDayMaGiangVien;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _giangVienHoatDongNgoaiGiangDayMaGiangVien
		/// </summary>
		
		public TList<GiangVienHoatDongNgoaiGiangDay> GiangVienHoatDongNgoaiGiangDayCollection
		{
			get
			{
				if (_giangVienHoatDongNgoaiGiangDayMaGiangVien == null)
				{
				_giangVienHoatDongNgoaiGiangDayMaGiangVien = new TList<GiangVienHoatDongNgoaiGiangDay>();
				}
	
				return _giangVienHoatDongNgoaiGiangDayMaGiangVien;
			}
			set { _giangVienHoatDongNgoaiGiangDayMaGiangVien = value; }
		}
		
		#endregion

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			GiangVienEntityData _tmp = new GiangVienEntityData();
						
			_tmp.MaGiangVien = this.MaGiangVien;
			
			_tmp.MaDanToc = this.MaDanToc;
			_tmp.MaTonGiao = this.MaTonGiao;
			_tmp.MaDonVi = this.MaDonVi;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaNguoiLap = this.MaNguoiLap;
			_tmp.MatKhau = this.MatKhau;
			_tmp.MaTinhTrang = this.MaTinhTrang;
			_tmp.MaQuanLy = this.MaQuanLy;
			_tmp.Ho = this.Ho;
			_tmp.TenDem = this.TenDem;
			_tmp.Ten = this.Ten;
			_tmp.NgaySinh = this.NgaySinh;
			_tmp.GioiTinh = this.GioiTinh;
			_tmp.NoiSinh = this.NoiSinh;
			_tmp.Cmnd = this.Cmnd;
			_tmp.NgayCap = this.NgayCap;
			_tmp.NoiCap = this.NoiCap;
			_tmp.DoanDang = this.DoanDang;
			_tmp.NgayVaoDoanDang = this.NgayVaoDoanDang;
			_tmp.NgayKyHopDong = this.NgayKyHopDong;
			_tmp.NgayKetThucHopDong = this.NgayKetThucHopDong;
			_tmp.HinhAnh = this.HinhAnh;
			_tmp.DiaChi = this.DiaChi;
			_tmp.ThuongTru = this.ThuongTru;
			_tmp.NoiLamViec = this.NoiLamViec;
			_tmp.Email = this.Email;
			_tmp.DienThoai = this.DienThoai;
			_tmp.SoDiDong = this.SoDiDong;
			_tmp.SoTaiKhoan = this.SoTaiKhoan;
			_tmp.TenNganHang = this.TenNganHang;
			_tmp.MaSoThue = this.MaSoThue;
			_tmp.ChiNhanh = this.ChiNhanh;
			_tmp.SoSoBaoHiem = this.SoSoBaoHiem;
			_tmp.ThoiGianBatDau = this.ThoiGianBatDau;
			_tmp.BacLuong = this.BacLuong;
			_tmp.NgayHuongLuong = this.NgayHuongLuong;
			_tmp.NamLamViec = this.NamLamViec;
			_tmp.ChuyenNganh = this.ChuyenNganh;
			_tmp.MaHeSoThuLao = this.MaHeSoThuLao;
			_tmp.Ngach = this.Ngach;
			_tmp.SoHieuCongChuc = this.SoHieuCongChuc;
			_tmp.Hrmid = this.Hrmid;
			_tmp.NoiCapBang = this.NoiCapBang;
			_tmp.KhoaTaiKhoan = this.KhoaTaiKhoan;
			_tmp.MaLoaiNhanVien = this.MaLoaiNhanVien;
			_tmp.MaNgachCongChuc = this.MaNgachCongChuc;
			_tmp.MaTrinhDoChinhTri = this.MaTrinhDoChinhTri;
			_tmp.MaTrinhDoSuPham = this.MaTrinhDoSuPham;
			_tmp.MaTrinhDoNgoaiNgu = this.MaTrinhDoNgoaiNgu;
			_tmp.MaTrinhDoTinHoc = this.MaTrinhDoTinHoc;
			_tmp.MaTrinhDoQuanLyNhaNuoc = this.MaTrinhDoQuanLyNhaNuoc;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.KhoiKienThucGiangDay = this.KhoiKienThucGiangDay;
			_tmp.NganhDaoTao = this.NganhDaoTao;
			_tmp.DonViGiangDay = this.DonViGiangDay;
			_tmp.IdHoSo = this.IdHoSo;
			_tmp.MaQuocTich = this.MaQuocTich;
			_tmp.DaXoaHrm = this.DaXoaHrm;
			
			#region Source Parent Composite Entities
			if (this.MaHocHamSource != null)
				_tmp.MaHocHamSource = MakeCopyOf(this.MaHocHamSource) as HocHam;
			if (this.MaHocViSource != null)
				_tmp.MaHocViSource = MakeCopyOf(this.MaHocViSource) as HocVi;
			if (this.MaLoaiGiangVienSource != null)
				_tmp.MaLoaiGiangVienSource = MakeCopyOf(this.MaLoaiGiangVienSource) as LoaiGiangVien;
			if (this.MaLoaiNhanVienSource != null)
				_tmp.MaLoaiNhanVienSource = MakeCopyOf(this.MaLoaiNhanVienSource) as LoaiNhanVien;
			if (this.MaNgachCongChucSource != null)
				_tmp.MaNgachCongChucSource = MakeCopyOf(this.MaNgachCongChucSource) as NgachCongChuc;
			if (this.MaNguoiLapSource != null)
				_tmp.MaNguoiLapSource = MakeCopyOf(this.MaNguoiLapSource) as TaiKhoan;
			if (this.MaTinhTrangSource != null)
				_tmp.MaTinhTrangSource = MakeCopyOf(this.MaTinhTrangSource) as TinhTrang;
			if (this.MaTrinhDoChinhTriSource != null)
				_tmp.MaTrinhDoChinhTriSource = MakeCopyOf(this.MaTrinhDoChinhTriSource) as TrinhDoChinhTri;
			if (this.MaTrinhDoNgoaiNguSource != null)
				_tmp.MaTrinhDoNgoaiNguSource = MakeCopyOf(this.MaTrinhDoNgoaiNguSource) as TrinhDoNgoaiNgu;
			if (this.MaTrinhDoQuanLyNhaNuocSource != null)
				_tmp.MaTrinhDoQuanLyNhaNuocSource = MakeCopyOf(this.MaTrinhDoQuanLyNhaNuocSource) as TrinhDoQuanLyNhaNuoc;
			if (this.MaTrinhDoSuPhamSource != null)
				_tmp.MaTrinhDoSuPhamSource = MakeCopyOf(this.MaTrinhDoSuPhamSource) as TrinhDoSuPham;
			if (this.MaTrinhDoTinHocSource != null)
				_tmp.MaTrinhDoTinHocSource = MakeCopyOf(this.MaTrinhDoTinHocSource) as TrinhDoTinHoc;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._tietNoKyTruocMaGiangVien != null)
				_tmp.TietNoKyTruocCollection = (TList<TietNoKyTruoc>) MakeCopyOf(this.TietNoKyTruocCollection); 
			if (this._kcqKhoiLuongKhacMaGiangVien != null)
				_tmp.KcqKhoiLuongKhacCollection = (TList<KcqKhoiLuongKhac>) MakeCopyOf(this.KcqKhoiLuongKhacCollection); 
			if (this._thuLaoThoaThuanMaGiangVien != null)
				_tmp.ThuLaoThoaThuanCollection = (TList<ThuLaoThoaThuan>) MakeCopyOf(this.ThuLaoThoaThuanCollection); 
			if (this._giangVienCamKetKhongTruThueMaGiangVien != null)
				_tmp.GiangVienCamKetKhongTruThueCollection = (TList<GiangVienCamKetKhongTruThue>) MakeCopyOf(this.GiangVienCamKetKhongTruThueCollection); 
			if (this._thamDinhLuanVanThacSyMaGiangVien != null)
				_tmp.ThamDinhLuanVanThacSyCollection = (TList<ThamDinhLuanVanThacSy>) MakeCopyOf(this.ThamDinhLuanVanThacSyCollection); 
			if (this._giangVienHoSoMaGiangVien != null)
				_tmp.GiangVienHoSoCollection = (TList<GiangVienHoSo>) MakeCopyOf(this.GiangVienHoSoCollection); 
			if (this._thoiGianLamViecCuaNhanVienMaGiangVien != null)
				_tmp.ThoiGianLamViecCuaNhanVienCollection = (TList<ThoiGianLamViecCuaNhanVien>) MakeCopyOf(this.ThoiGianLamViecCuaNhanVienCollection); 
			if (this._giangVienHoatDongQuanLyMaGiangVien != null)
				_tmp.GiangVienHoatDongQuanLyCollection = (TList<GiangVienHoatDongQuanLy>) MakeCopyOf(this.GiangVienHoatDongQuanLyCollection); 
			if (this._khoiLuongKhacMaGiangVien != null)
				_tmp.KhoiLuongKhacCollection = (TList<KhoiLuongKhac>) MakeCopyOf(this.KhoiLuongKhacCollection); 
			if (this._coVanHocTapMaGiangVien != null)
				_tmp.CoVanHocTapCollection = (TList<CoVanHocTap>) MakeCopyOf(this.CoVanHocTapCollection); 
			if (this._giangVienNghienCuuKhMaGiangVien != null)
				_tmp.GiangVienNghienCuuKhCollection = (TList<GiangVienNghienCuuKh>) MakeCopyOf(this.GiangVienNghienCuuKhCollection); 
			if (this._giangVienChucVuMaGiangVien != null)
				_tmp.GiangVienChucVuCollection = (TList<GiangVienChucVu>) MakeCopyOf(this.GiangVienChucVuCollection); 
			if (this._xetDuyetDeCuongLuanVanCaoHocMaGiangVien != null)
				_tmp.XetDuyetDeCuongLuanVanCaoHocCollection = (TList<XetDuyetDeCuongLuanVanCaoHoc>) MakeCopyOf(this.XetDuyetDeCuongLuanVanCaoHocCollection); 
			if (this._ketQuaTinhMaGiangVien != null)
				_tmp.KetQuaTinhCollection = (TList<KetQuaTinh>) MakeCopyOf(this.KetQuaTinhCollection); 
			if (this._thoiGianNghiTamThoiCuaGiangVienMaGiangVien != null)
				_tmp.ThoiGianNghiTamThoiCuaGiangVienCollection = (TList<ThoiGianNghiTamThoiCuaGiangVien>) MakeCopyOf(this.ThoiGianNghiTamThoiCuaGiangVienCollection); 
			if (this._giangVienTinhLuongThinhGiangMaGiangVien != null)
				_tmp.GiangVienTinhLuongThinhGiangCollection = (TList<GiangVienTinhLuongThinhGiang>) MakeCopyOf(this.GiangVienTinhLuongThinhGiangCollection); 
			if (this._giangVienChuyenMonMaGiangVien != null)
				_tmp.GiangVienChuyenMonCollection = (TList<GiangVienChuyenMon>) MakeCopyOf(this.GiangVienChuyenMonCollection); 
			if (this._bangPhuTroiNamHocMaGiangVien != null)
				_tmp.BangPhuTroiNamHocCollection = (TList<BangPhuTroiNamHoc>) MakeCopyOf(this.BangPhuTroiNamHocCollection); 
			if (this._tietNghiaVuMaGiangVien != null)
				_tmp.TietNghiaVuCollection = (TList<TietNghiaVu>) MakeCopyOf(this.TietNghiaVuCollection); 
			if (this._giangVienMocTangLuongMaGiangVien != null)
				_tmp.GiangVienMocTangLuongCollection = (TList<GiangVienMocTangLuong>) MakeCopyOf(this.GiangVienMocTangLuongCollection); 
			if (this._giangVienGiamTruDinhMucMaGiangVien != null)
				_tmp.GiangVienGiamTruDinhMucCollection = (TList<GiangVienGiamTruDinhMuc>) MakeCopyOf(this.GiangVienGiamTruDinhMucCollection); 
			if (this.maHoSoHoSoCollectionFromGiangVienHoSo != null)
				_tmp.MaHoSoHoSoCollection_From_GiangVienHoSo = (TList<HoSo>) MakeCopyOf(this.MaHoSoHoSoCollection_From_GiangVienHoSo); 
			if (this._giangVienHoatDongNgoaiGiangDayMaGiangVien != null)
				_tmp.GiangVienHoatDongNgoaiGiangDayCollection = (TList<GiangVienHoatDongNgoaiGiangDay>) MakeCopyOf(this.GiangVienHoatDongNgoaiGiangDayCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			GiangVienEntityData _tmp = new GiangVienEntityData();
						
			_tmp.MaGiangVien = this.MaGiangVien;
			
			_tmp.MaDanToc = this.MaDanToc;
			_tmp.MaTonGiao = this.MaTonGiao;
			_tmp.MaDonVi = this.MaDonVi;
			_tmp.MaHocHam = this.MaHocHam;
			_tmp.MaHocVi = this.MaHocVi;
			_tmp.MaLoaiGiangVien = this.MaLoaiGiangVien;
			_tmp.MaNguoiLap = this.MaNguoiLap;
			_tmp.MatKhau = this.MatKhau;
			_tmp.MaTinhTrang = this.MaTinhTrang;
			_tmp.MaQuanLy = this.MaQuanLy;
			_tmp.Ho = this.Ho;
			_tmp.TenDem = this.TenDem;
			_tmp.Ten = this.Ten;
			_tmp.NgaySinh = this.NgaySinh;
			_tmp.GioiTinh = this.GioiTinh;
			_tmp.NoiSinh = this.NoiSinh;
			_tmp.Cmnd = this.Cmnd;
			_tmp.NgayCap = this.NgayCap;
			_tmp.NoiCap = this.NoiCap;
			_tmp.DoanDang = this.DoanDang;
			_tmp.NgayVaoDoanDang = this.NgayVaoDoanDang;
			_tmp.NgayKyHopDong = this.NgayKyHopDong;
			_tmp.NgayKetThucHopDong = this.NgayKetThucHopDong;
			_tmp.HinhAnh = this.HinhAnh;
			_tmp.DiaChi = this.DiaChi;
			_tmp.ThuongTru = this.ThuongTru;
			_tmp.NoiLamViec = this.NoiLamViec;
			_tmp.Email = this.Email;
			_tmp.DienThoai = this.DienThoai;
			_tmp.SoDiDong = this.SoDiDong;
			_tmp.SoTaiKhoan = this.SoTaiKhoan;
			_tmp.TenNganHang = this.TenNganHang;
			_tmp.MaSoThue = this.MaSoThue;
			_tmp.ChiNhanh = this.ChiNhanh;
			_tmp.SoSoBaoHiem = this.SoSoBaoHiem;
			_tmp.ThoiGianBatDau = this.ThoiGianBatDau;
			_tmp.BacLuong = this.BacLuong;
			_tmp.NgayHuongLuong = this.NgayHuongLuong;
			_tmp.NamLamViec = this.NamLamViec;
			_tmp.ChuyenNganh = this.ChuyenNganh;
			_tmp.MaHeSoThuLao = this.MaHeSoThuLao;
			_tmp.Ngach = this.Ngach;
			_tmp.SoHieuCongChuc = this.SoHieuCongChuc;
			_tmp.Hrmid = this.Hrmid;
			_tmp.NoiCapBang = this.NoiCapBang;
			_tmp.KhoaTaiKhoan = this.KhoaTaiKhoan;
			_tmp.MaLoaiNhanVien = this.MaLoaiNhanVien;
			_tmp.MaNgachCongChuc = this.MaNgachCongChuc;
			_tmp.MaTrinhDoChinhTri = this.MaTrinhDoChinhTri;
			_tmp.MaTrinhDoSuPham = this.MaTrinhDoSuPham;
			_tmp.MaTrinhDoNgoaiNgu = this.MaTrinhDoNgoaiNgu;
			_tmp.MaTrinhDoTinHoc = this.MaTrinhDoTinHoc;
			_tmp.MaTrinhDoQuanLyNhaNuoc = this.MaTrinhDoQuanLyNhaNuoc;
			_tmp.NguoiCapNhat = this.NguoiCapNhat;
			_tmp.NgayCapNhat = this.NgayCapNhat;
			_tmp.KhoiKienThucGiangDay = this.KhoiKienThucGiangDay;
			_tmp.NganhDaoTao = this.NganhDaoTao;
			_tmp.DonViGiangDay = this.DonViGiangDay;
			_tmp.IdHoSo = this.IdHoSo;
			_tmp.MaQuocTich = this.MaQuocTich;
			_tmp.DaXoaHrm = this.DaXoaHrm;
			
			#region Source Parent Composite Entities
			if (this.MaHocHamSource != null && existingCopies.Contains(this.MaHocHamSource))
				_tmp.MaHocHamSource = existingCopies[this.MaHocHamSource] as HocHam;
			else
				_tmp.MaHocHamSource = MakeCopyOf(this.MaHocHamSource, existingCopies) as HocHam;
			if (this.MaHocViSource != null && existingCopies.Contains(this.MaHocViSource))
				_tmp.MaHocViSource = existingCopies[this.MaHocViSource] as HocVi;
			else
				_tmp.MaHocViSource = MakeCopyOf(this.MaHocViSource, existingCopies) as HocVi;
			if (this.MaLoaiGiangVienSource != null && existingCopies.Contains(this.MaLoaiGiangVienSource))
				_tmp.MaLoaiGiangVienSource = existingCopies[this.MaLoaiGiangVienSource] as LoaiGiangVien;
			else
				_tmp.MaLoaiGiangVienSource = MakeCopyOf(this.MaLoaiGiangVienSource, existingCopies) as LoaiGiangVien;
			if (this.MaLoaiNhanVienSource != null && existingCopies.Contains(this.MaLoaiNhanVienSource))
				_tmp.MaLoaiNhanVienSource = existingCopies[this.MaLoaiNhanVienSource] as LoaiNhanVien;
			else
				_tmp.MaLoaiNhanVienSource = MakeCopyOf(this.MaLoaiNhanVienSource, existingCopies) as LoaiNhanVien;
			if (this.MaNgachCongChucSource != null && existingCopies.Contains(this.MaNgachCongChucSource))
				_tmp.MaNgachCongChucSource = existingCopies[this.MaNgachCongChucSource] as NgachCongChuc;
			else
				_tmp.MaNgachCongChucSource = MakeCopyOf(this.MaNgachCongChucSource, existingCopies) as NgachCongChuc;
			if (this.MaNguoiLapSource != null && existingCopies.Contains(this.MaNguoiLapSource))
				_tmp.MaNguoiLapSource = existingCopies[this.MaNguoiLapSource] as TaiKhoan;
			else
				_tmp.MaNguoiLapSource = MakeCopyOf(this.MaNguoiLapSource, existingCopies) as TaiKhoan;
			if (this.MaTinhTrangSource != null && existingCopies.Contains(this.MaTinhTrangSource))
				_tmp.MaTinhTrangSource = existingCopies[this.MaTinhTrangSource] as TinhTrang;
			else
				_tmp.MaTinhTrangSource = MakeCopyOf(this.MaTinhTrangSource, existingCopies) as TinhTrang;
			if (this.MaTrinhDoChinhTriSource != null && existingCopies.Contains(this.MaTrinhDoChinhTriSource))
				_tmp.MaTrinhDoChinhTriSource = existingCopies[this.MaTrinhDoChinhTriSource] as TrinhDoChinhTri;
			else
				_tmp.MaTrinhDoChinhTriSource = MakeCopyOf(this.MaTrinhDoChinhTriSource, existingCopies) as TrinhDoChinhTri;
			if (this.MaTrinhDoNgoaiNguSource != null && existingCopies.Contains(this.MaTrinhDoNgoaiNguSource))
				_tmp.MaTrinhDoNgoaiNguSource = existingCopies[this.MaTrinhDoNgoaiNguSource] as TrinhDoNgoaiNgu;
			else
				_tmp.MaTrinhDoNgoaiNguSource = MakeCopyOf(this.MaTrinhDoNgoaiNguSource, existingCopies) as TrinhDoNgoaiNgu;
			if (this.MaTrinhDoQuanLyNhaNuocSource != null && existingCopies.Contains(this.MaTrinhDoQuanLyNhaNuocSource))
				_tmp.MaTrinhDoQuanLyNhaNuocSource = existingCopies[this.MaTrinhDoQuanLyNhaNuocSource] as TrinhDoQuanLyNhaNuoc;
			else
				_tmp.MaTrinhDoQuanLyNhaNuocSource = MakeCopyOf(this.MaTrinhDoQuanLyNhaNuocSource, existingCopies) as TrinhDoQuanLyNhaNuoc;
			if (this.MaTrinhDoSuPhamSource != null && existingCopies.Contains(this.MaTrinhDoSuPhamSource))
				_tmp.MaTrinhDoSuPhamSource = existingCopies[this.MaTrinhDoSuPhamSource] as TrinhDoSuPham;
			else
				_tmp.MaTrinhDoSuPhamSource = MakeCopyOf(this.MaTrinhDoSuPhamSource, existingCopies) as TrinhDoSuPham;
			if (this.MaTrinhDoTinHocSource != null && existingCopies.Contains(this.MaTrinhDoTinHocSource))
				_tmp.MaTrinhDoTinHocSource = existingCopies[this.MaTrinhDoTinHocSource] as TrinhDoTinHoc;
			else
				_tmp.MaTrinhDoTinHocSource = MakeCopyOf(this.MaTrinhDoTinHocSource, existingCopies) as TrinhDoTinHoc;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.TietNoKyTruocCollection = (TList<TietNoKyTruoc>) MakeCopyOf(this.TietNoKyTruocCollection, existingCopies); 
			_tmp.KcqKhoiLuongKhacCollection = (TList<KcqKhoiLuongKhac>) MakeCopyOf(this.KcqKhoiLuongKhacCollection, existingCopies); 
			_tmp.ThuLaoThoaThuanCollection = (TList<ThuLaoThoaThuan>) MakeCopyOf(this.ThuLaoThoaThuanCollection, existingCopies); 
			_tmp.GiangVienCamKetKhongTruThueCollection = (TList<GiangVienCamKetKhongTruThue>) MakeCopyOf(this.GiangVienCamKetKhongTruThueCollection, existingCopies); 
			_tmp.ThamDinhLuanVanThacSyCollection = (TList<ThamDinhLuanVanThacSy>) MakeCopyOf(this.ThamDinhLuanVanThacSyCollection, existingCopies); 
			_tmp.GiangVienHoSoCollection = (TList<GiangVienHoSo>) MakeCopyOf(this.GiangVienHoSoCollection, existingCopies); 
			_tmp.ThoiGianLamViecCuaNhanVienCollection = (TList<ThoiGianLamViecCuaNhanVien>) MakeCopyOf(this.ThoiGianLamViecCuaNhanVienCollection, existingCopies); 
			_tmp.GiangVienHoatDongQuanLyCollection = (TList<GiangVienHoatDongQuanLy>) MakeCopyOf(this.GiangVienHoatDongQuanLyCollection, existingCopies); 
			_tmp.KhoiLuongKhacCollection = (TList<KhoiLuongKhac>) MakeCopyOf(this.KhoiLuongKhacCollection, existingCopies); 
			_tmp.CoVanHocTapCollection = (TList<CoVanHocTap>) MakeCopyOf(this.CoVanHocTapCollection, existingCopies); 
			_tmp.GiangVienNghienCuuKhCollection = (TList<GiangVienNghienCuuKh>) MakeCopyOf(this.GiangVienNghienCuuKhCollection, existingCopies); 
			_tmp.GiangVienChucVuCollection = (TList<GiangVienChucVu>) MakeCopyOf(this.GiangVienChucVuCollection, existingCopies); 
			_tmp.XetDuyetDeCuongLuanVanCaoHocCollection = (TList<XetDuyetDeCuongLuanVanCaoHoc>) MakeCopyOf(this.XetDuyetDeCuongLuanVanCaoHocCollection, existingCopies); 
			_tmp.KetQuaTinhCollection = (TList<KetQuaTinh>) MakeCopyOf(this.KetQuaTinhCollection, existingCopies); 
			_tmp.ThoiGianNghiTamThoiCuaGiangVienCollection = (TList<ThoiGianNghiTamThoiCuaGiangVien>) MakeCopyOf(this.ThoiGianNghiTamThoiCuaGiangVienCollection, existingCopies); 
			_tmp.GiangVienTinhLuongThinhGiangCollection = (TList<GiangVienTinhLuongThinhGiang>) MakeCopyOf(this.GiangVienTinhLuongThinhGiangCollection, existingCopies); 
			_tmp.GiangVienChuyenMonCollection = (TList<GiangVienChuyenMon>) MakeCopyOf(this.GiangVienChuyenMonCollection, existingCopies); 
			_tmp.BangPhuTroiNamHocCollection = (TList<BangPhuTroiNamHoc>) MakeCopyOf(this.BangPhuTroiNamHocCollection, existingCopies); 
			_tmp.TietNghiaVuCollection = (TList<TietNghiaVu>) MakeCopyOf(this.TietNghiaVuCollection, existingCopies); 
			_tmp.GiangVienMocTangLuongCollection = (TList<GiangVienMocTangLuong>) MakeCopyOf(this.GiangVienMocTangLuongCollection, existingCopies); 
			_tmp.GiangVienGiamTruDinhMucCollection = (TList<GiangVienGiamTruDinhMuc>) MakeCopyOf(this.GiangVienGiamTruDinhMucCollection, existingCopies); 
			_tmp.MaHoSoHoSoCollection_From_GiangVienHoSo = (TList<HoSo>) MakeCopyOf(this.MaHoSoHoSoCollection_From_GiangVienHoSo, existingCopies); 
			_tmp.GiangVienHoatDongNgoaiGiangDayCollection = (TList<GiangVienHoatDongNgoaiGiangDay>) MakeCopyOf(this.GiangVienHoatDongNgoaiGiangDayCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(GiangVienColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(GiangVienColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(GiangVienColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				GiangVienEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new GiangVienEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GiangVienColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(GiangVienColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				GiangVienEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new GiangVienEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region GiangVienEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="GiangVien"/> object.
	/// </remarks>
	public class GiangVienEventArgs : System.EventArgs
	{
		private GiangVienColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the GiangVienEventArgs class.
		///</summary>
		public GiangVienEventArgs(GiangVienColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the GiangVienEventArgs class.
		///</summary>
		public GiangVienEventArgs(GiangVienColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The GiangVienColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="GiangVienColumn" />
		public GiangVienColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all GiangVien related events.
	///</summary>
	public delegate void GiangVienEventHandler(object sender, GiangVienEventArgs e);
	
	#region GiangVienComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class GiangVienComparer : System.Collections.Generic.IComparer<GiangVien>
	{
		GiangVienColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:GiangVienComparer"/> class.
        /// </summary>
		public GiangVienComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:GiangVienComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public GiangVienComparer(GiangVienColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="GiangVien"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="GiangVien"/> to compare.</param>
        /// <param name="b">The second <c>GiangVien</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(GiangVien a, GiangVien b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(GiangVien entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(GiangVien a, GiangVien b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public GiangVienColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region GiangVienKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="GiangVien"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class GiangVienKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the GiangVienKey class.
		/// </summary>
		public GiangVienKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the GiangVienKey class.
		/// </summary>
		public GiangVienKey(GiangVienBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.MaGiangVien = entity.MaGiangVien;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the GiangVienKey class.
		/// </summary>
		public GiangVienKey(System.Int32 _maGiangVien)
		{
			#region Init Properties

			this.MaGiangVien = _maGiangVien;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private GiangVienBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public GiangVienBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the MaGiangVien property
		private System.Int32 _maGiangVien;
		
		/// <summary>
		/// Gets or sets the MaGiangVien property.
		/// </summary>
		public System.Int32 MaGiangVien
		{
			get { return _maGiangVien; }
			set
			{
				if ( this.Entity != null )
					this.Entity.MaGiangVien = value;
				
				_maGiangVien = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				MaGiangVien = ( values["MaGiangVien"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["MaGiangVien"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("MaGiangVien", MaGiangVien);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("MaGiangVien: {0}{1}",
								MaGiangVien,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region GiangVienColumn Enum
	
	/// <summary>
	/// Enumerate the GiangVien columns.
	/// </summary>
	[Serializable]
	public enum GiangVienColumn : int
	{
		/// <summary>
		/// MaGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Giang Vien")]
		[ColumnEnum("MaGiangVien", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		MaGiangVien = 1,
		/// <summary>
		/// MaDanToc : 
		/// </summary>
		[EnumTextValue("Ma Dan Toc")]
		[ColumnEnum("MaDanToc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDanToc = 2,
		/// <summary>
		/// MaTonGiao : 
		/// </summary>
		[EnumTextValue("Ma Ton Giao")]
		[ColumnEnum("MaTonGiao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaTonGiao = 3,
		/// <summary>
		/// MaDonVi : 
		/// </summary>
		[EnumTextValue("Ma Don Vi")]
		[ColumnEnum("MaDonVi", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDonVi = 4,
		/// <summary>
		/// MaHocHam : 
		/// </summary>
		[EnumTextValue("Ma Hoc Ham")]
		[ColumnEnum("MaHocHam", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocHam = 5,
		/// <summary>
		/// MaHocVi : 
		/// </summary>
		[EnumTextValue("Ma Hoc Vi")]
		[ColumnEnum("MaHocVi", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaHocVi = 6,
		/// <summary>
		/// MaLoaiGiangVien : 
		/// </summary>
		[EnumTextValue("Ma Loai Giang Vien")]
		[ColumnEnum("MaLoaiGiangVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiGiangVien = 7,
		/// <summary>
		/// MaNguoiLap : 
		/// </summary>
		[EnumTextValue("Ma Nguoi Lap")]
		[ColumnEnum("MaNguoiLap", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaNguoiLap = 8,
		/// <summary>
		/// MatKhau : 
		/// </summary>
		[EnumTextValue("Mat Khau")]
		[ColumnEnum("MatKhau", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MatKhau = 9,
		/// <summary>
		/// MaTinhTrang : 
		/// </summary>
		[EnumTextValue("Ma Tinh Trang")]
		[ColumnEnum("MaTinhTrang", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTinhTrang = 10,
		/// <summary>
		/// MaQuanLy : 
		/// </summary>
		[EnumTextValue("Ma Quan Ly")]
		[ColumnEnum("MaQuanLy", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		MaQuanLy = 11,
		/// <summary>
		/// Ho : 
		/// </summary>
		[EnumTextValue("Ho")]
		[ColumnEnum("Ho", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ho = 12,
		/// <summary>
		/// TenDem : 
		/// </summary>
		[EnumTextValue("Ten Dem")]
		[ColumnEnum("TenDem", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		TenDem = 13,
		/// <summary>
		/// Ten : 
		/// </summary>
		[EnumTextValue("Ten")]
		[ColumnEnum("Ten", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ten = 14,
		/// <summary>
		/// NgaySinh : 
		/// </summary>
		[EnumTextValue("Ngay Sinh")]
		[ColumnEnum("NgaySinh", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgaySinh = 15,
		/// <summary>
		/// GioiTinh : 
		/// </summary>
		[EnumTextValue("Gioi Tinh")]
		[ColumnEnum("GioiTinh", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		GioiTinh = 16,
		/// <summary>
		/// NoiSinh : 
		/// </summary>
		[EnumTextValue("Noi Sinh")]
		[ColumnEnum("NoiSinh", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		NoiSinh = 17,
		/// <summary>
		/// Cmnd : 
		/// </summary>
		[EnumTextValue("Cmnd")]
		[ColumnEnum("Cmnd", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		Cmnd = 18,
		/// <summary>
		/// NgayCap : 
		/// </summary>
		[EnumTextValue("Ngay Cap")]
		[ColumnEnum("NgayCap", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgayCap = 19,
		/// <summary>
		/// NoiCap : 
		/// </summary>
		[EnumTextValue("Noi Cap")]
		[ColumnEnum("NoiCap", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		NoiCap = 20,
		/// <summary>
		/// DoanDang : 
		/// </summary>
		[EnumTextValue("Doan Dang")]
		[ColumnEnum("DoanDang", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DoanDang = 21,
		/// <summary>
		/// NgayVaoDoanDang : 
		/// </summary>
		[EnumTextValue("Ngay Vao Doan Dang")]
		[ColumnEnum("NgayVaoDoanDang", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NgayVaoDoanDang = 22,
		/// <summary>
		/// NgayKyHopDong : 
		/// </summary>
		[EnumTextValue("Ngay Ky Hop Dong")]
		[ColumnEnum("NgayKyHopDong", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayKyHopDong = 23,
		/// <summary>
		/// NgayKetThucHopDong : 
		/// </summary>
		[EnumTextValue("Ngay Ket Thuc Hop Dong")]
		[ColumnEnum("NgayKetThucHopDong", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayKetThucHopDong = 24,
		/// <summary>
		/// HinhAnh : 
		/// </summary>
		[EnumTextValue("Hinh Anh")]
		[ColumnEnum("HinhAnh", typeof(System.Byte[]), System.Data.DbType.Binary, false, false, true)]
		HinhAnh = 25,
		/// <summary>
		/// DiaChi : 
		/// </summary>
		[EnumTextValue("Dia Chi")]
		[ColumnEnum("DiaChi", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		DiaChi = 26,
		/// <summary>
		/// ThuongTru : 
		/// </summary>
		[EnumTextValue("Thuong Tru")]
		[ColumnEnum("ThuongTru", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		ThuongTru = 27,
		/// <summary>
		/// NoiLamViec : 
		/// </summary>
		[EnumTextValue("Noi Lam Viec")]
		[ColumnEnum("NoiLamViec", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		NoiLamViec = 28,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Email = 29,
		/// <summary>
		/// DienThoai : 
		/// </summary>
		[EnumTextValue("Dien Thoai")]
		[ColumnEnum("DienThoai", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		DienThoai = 30,
		/// <summary>
		/// SoDiDong : 
		/// </summary>
		[EnumTextValue("So Di Dong")]
		[ColumnEnum("SoDiDong", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		SoDiDong = 31,
		/// <summary>
		/// SoTaiKhoan : 
		/// </summary>
		[EnumTextValue("So Tai Khoan")]
		[ColumnEnum("SoTaiKhoan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		SoTaiKhoan = 32,
		/// <summary>
		/// TenNganHang : 
		/// </summary>
		[EnumTextValue("Ten Ngan Hang")]
		[ColumnEnum("TenNganHang", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TenNganHang = 33,
		/// <summary>
		/// MaSoThue : 
		/// </summary>
		[EnumTextValue("Ma So Thue")]
		[ColumnEnum("MaSoThue", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaSoThue = 34,
		/// <summary>
		/// ChiNhanh : 
		/// </summary>
		[EnumTextValue("Chi Nhanh")]
		[ColumnEnum("ChiNhanh", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ChiNhanh = 35,
		/// <summary>
		/// SoSoBaoHiem : 
		/// </summary>
		[EnumTextValue("So So Bao Hiem")]
		[ColumnEnum("SoSoBaoHiem", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		SoSoBaoHiem = 36,
		/// <summary>
		/// ThoiGianBatDau : 
		/// </summary>
		[EnumTextValue("Thoi Gian Bat Dau")]
		[ColumnEnum("ThoiGianBatDau", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ThoiGianBatDau = 37,
		/// <summary>
		/// BacLuong : 
		/// </summary>
		[EnumTextValue("Bac Luong")]
		[ColumnEnum("BacLuong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		BacLuong = 38,
		/// <summary>
		/// NgayHuongLuong : 
		/// </summary>
		[EnumTextValue("Ngay Huong Luong")]
		[ColumnEnum("NgayHuongLuong", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		NgayHuongLuong = 39,
		/// <summary>
		/// NamLamViec : 
		/// </summary>
		[EnumTextValue("Nam Lam Viec")]
		[ColumnEnum("NamLamViec", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NamLamViec = 40,
		/// <summary>
		/// ChuyenNganh : 
		/// </summary>
		[EnumTextValue("Chuyen Nganh")]
		[ColumnEnum("ChuyenNganh", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		ChuyenNganh = 41,
		/// <summary>
		/// MaHeSoThuLao : 
		/// </summary>
		[EnumTextValue("Ma He So Thu Lao")]
		[ColumnEnum("MaHeSoThuLao", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaHeSoThuLao = 42,
		/// <summary>
		/// Ngach : 
		/// </summary>
		[EnumTextValue("Ngach")]
		[ColumnEnum("Ngach", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		Ngach = 43,
		/// <summary>
		/// SoHieuCongChuc : 
		/// </summary>
		[EnumTextValue("So Hieu Cong Chuc")]
		[ColumnEnum("SoHieuCongChuc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		SoHieuCongChuc = 44,
		/// <summary>
		/// Hrmid : 
		/// </summary>
		[EnumTextValue("Hrmid")]
		[ColumnEnum("HRMID", typeof(System.Guid), System.Data.DbType.Guid, false, false, true)]
		Hrmid = 45,
		/// <summary>
		/// NoiCapBang : 
		/// </summary>
		[EnumTextValue("Noi Cap Bang")]
		[ColumnEnum("NoiCapBang", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		NoiCapBang = 46,
		/// <summary>
		/// KhoaTaiKhoan : 
		/// </summary>
		[EnumTextValue("Khoa Tai Khoan")]
		[ColumnEnum("KhoaTaiKhoan", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		KhoaTaiKhoan = 47,
		/// <summary>
		/// MaLoaiNhanVien : 
		/// </summary>
		[EnumTextValue("Ma Loai Nhan Vien")]
		[ColumnEnum("MaLoaiNhanVien", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaLoaiNhanVien = 48,
		/// <summary>
		/// MaNgachCongChuc : 
		/// </summary>
		[EnumTextValue("Ma Ngach Cong Chuc")]
		[ColumnEnum("MaNgachCongChuc", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaNgachCongChuc = 49,
		/// <summary>
		/// MaTrinhDoChinhTri : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Chinh Tri")]
		[ColumnEnum("MaTrinhDoChinhTri", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoChinhTri = 50,
		/// <summary>
		/// MaTrinhDoSuPham : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Su Pham")]
		[ColumnEnum("MaTrinhDoSuPham", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoSuPham = 51,
		/// <summary>
		/// MaTrinhDoNgoaiNgu : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Ngoai Ngu")]
		[ColumnEnum("MaTrinhDoNgoaiNgu", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoNgoaiNgu = 52,
		/// <summary>
		/// MaTrinhDoTinHoc : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Tin Hoc")]
		[ColumnEnum("MaTrinhDoTinHoc", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoTinHoc = 53,
		/// <summary>
		/// MaTrinhDoQuanLyNhaNuoc : 
		/// </summary>
		[EnumTextValue("Ma Trinh Do Quan Ly Nha Nuoc")]
		[ColumnEnum("MaTrinhDoQuanLyNhaNuoc", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaTrinhDoQuanLyNhaNuoc = 54,
		/// <summary>
		/// NguoiCapNhat : 
		/// </summary>
		[EnumTextValue("Nguoi Cap Nhat")]
		[ColumnEnum("NguoiCapNhat", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		NguoiCapNhat = 55,
		/// <summary>
		/// NgayCapNhat : 
		/// </summary>
		[EnumTextValue("Ngay Cap Nhat")]
		[ColumnEnum("NgayCapNhat", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayCapNhat = 56,
		/// <summary>
		/// KhoiKienThucGiangDay : 
		/// </summary>
		[EnumTextValue("Khoi Kien Thuc Giang Day")]
		[ColumnEnum("KhoiKienThucGiangDay", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		KhoiKienThucGiangDay = 57,
		/// <summary>
		/// NganhDaoTao : 
		/// </summary>
		[EnumTextValue("Nganh Dao Tao")]
		[ColumnEnum("NganhDaoTao", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		NganhDaoTao = 58,
		/// <summary>
		/// DonViGiangDay : 
		/// </summary>
		[EnumTextValue("Don Vi Giang Day")]
		[ColumnEnum("DonViGiangDay", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 200)]
		DonViGiangDay = 59,
		/// <summary>
		/// IdHoSo : 
		/// </summary>
		[EnumTextValue("Id Ho So")]
		[ColumnEnum("IdHoSo", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		IdHoSo = 60,
		/// <summary>
		/// MaQuocTich : 
		/// </summary>
		[EnumTextValue("Ma Quoc Tich")]
		[ColumnEnum("MaQuocTich", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaQuocTich = 61,
		/// <summary>
		/// DaXoaHrm : 
		/// </summary>
		[EnumTextValue("Da Xoa Hrm")]
		[ColumnEnum("DaXoaHRM", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DaXoaHrm = 62
	}//End enum

	#endregion GiangVienColumn Enum

} // end namespace

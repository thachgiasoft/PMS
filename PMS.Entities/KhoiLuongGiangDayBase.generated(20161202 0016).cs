
/*
	File generated by NetTiers templates [www.nettiers.net]
	Important: Do not modify this file. Edit the file KhoiLuongGiangDay.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using PMS.Entities.Validation;
#endregion

namespace PMS.Entities
{
	///<summary>
	/// An object representation of the 'KhoiLuongGiangDay' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class KhoiLuongGiangDayBase : EntityBase, IKhoiLuongGiangDay, IEntityId<KhoiLuongGiangDayKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private KhoiLuongGiangDayEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private KhoiLuongGiangDayEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private KhoiLuongGiangDayEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<KhoiLuongGiangDay> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event KhoiLuongGiangDayEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event KhoiLuongGiangDayEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="KhoiLuongGiangDayBase"/> instance.
		///</summary>
		public KhoiLuongGiangDayBase()
		{
			this.entityData = new KhoiLuongGiangDayEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="KhoiLuongGiangDayBase"/> instance.
		///</summary>
		///<param name="_maKetQua"></param>
		///<param name="_maToaNha"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_maNhom"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_phanLoai"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_dienGiai"></param>
		///<param name="_soTiet"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSoLop"></param>
		///<param name="_soNhom"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_ngayBatDau"></param>
		///<param name="_ngayKetThuc"></param>
		///<param name="_chatLuongCao"></param>
		///<param name="_ngoaiGio"></param>
		///<param name="_trongGio"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_heSoHocKy"></param>
		///<param name="_heSoThanhPhan"></param>
		///<param name="_heSoTrongGio"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_loaiHocKy"></param>
		///<param name="_thoiKhoaBieu"></param>
		///<param name="_ngayTao"></param>
		public KhoiLuongGiangDayBase(System.Int32? _maKetQua, System.String _maToaNha, 
			System.String _maLopHocPhan, System.String _maLop, System.String _maNhom, 
			System.String _loaiHocPhan, System.String _phanLoai, System.String _maMonHoc, 
			System.String _dienGiai, System.Decimal? _soTiet, System.Decimal? _soTinChi, 
			System.Int32? _siSoLop, System.Int32? _soNhom, System.String _maDiaDiem, 
			System.DateTime? _ngayBatDau, System.DateTime? _ngayKetThuc, System.Decimal? _chatLuongCao, 
			System.Decimal? _ngoaiGio, System.Decimal? _trongGio, System.Decimal? _heSoLopDong, 
			System.Decimal? _heSoCoSo, System.Decimal? _heSoHocKy, System.Decimal? _heSoThanhPhan, 
			System.Decimal? _heSoTrongGio, System.Decimal? _heSoNgoaiGio, System.Decimal? _tietQuyDoi, 
			System.Int32? _loaiHocKy, System.String _thoiKhoaBieu, System.DateTime? _ngayTao)
		{
			this.entityData = new KhoiLuongGiangDayEntityData();
			this.backupData = null;

			this.MaKetQua = _maKetQua;
			this.MaToaNha = _maToaNha;
			this.MaLopHocPhan = _maLopHocPhan;
			this.MaLop = _maLop;
			this.MaNhom = _maNhom;
			this.LoaiHocPhan = _loaiHocPhan;
			this.PhanLoai = _phanLoai;
			this.MaMonHoc = _maMonHoc;
			this.DienGiai = _dienGiai;
			this.SoTiet = _soTiet;
			this.SoTinChi = _soTinChi;
			this.SiSoLop = _siSoLop;
			this.SoNhom = _soNhom;
			this.MaDiaDiem = _maDiaDiem;
			this.NgayBatDau = _ngayBatDau;
			this.NgayKetThuc = _ngayKetThuc;
			this.ChatLuongCao = _chatLuongCao;
			this.NgoaiGio = _ngoaiGio;
			this.TrongGio = _trongGio;
			this.HeSoLopDong = _heSoLopDong;
			this.HeSoCoSo = _heSoCoSo;
			this.HeSoHocKy = _heSoHocKy;
			this.HeSoThanhPhan = _heSoThanhPhan;
			this.HeSoTrongGio = _heSoTrongGio;
			this.HeSoNgoaiGio = _heSoNgoaiGio;
			this.TietQuyDoi = _tietQuyDoi;
			this.LoaiHocKy = _loaiHocKy;
			this.ThoiKhoaBieu = _thoiKhoaBieu;
			this.NgayTao = _ngayTao;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="KhoiLuongGiangDay"/> instance.
		///</summary>
		///<param name="_maKetQua"></param>
		///<param name="_maToaNha"></param>
		///<param name="_maLopHocPhan"></param>
		///<param name="_maLop"></param>
		///<param name="_maNhom"></param>
		///<param name="_loaiHocPhan"></param>
		///<param name="_phanLoai"></param>
		///<param name="_maMonHoc"></param>
		///<param name="_dienGiai"></param>
		///<param name="_soTiet"></param>
		///<param name="_soTinChi"></param>
		///<param name="_siSoLop"></param>
		///<param name="_soNhom"></param>
		///<param name="_maDiaDiem"></param>
		///<param name="_ngayBatDau"></param>
		///<param name="_ngayKetThuc"></param>
		///<param name="_chatLuongCao"></param>
		///<param name="_ngoaiGio"></param>
		///<param name="_trongGio"></param>
		///<param name="_heSoLopDong"></param>
		///<param name="_heSoCoSo"></param>
		///<param name="_heSoHocKy"></param>
		///<param name="_heSoThanhPhan"></param>
		///<param name="_heSoTrongGio"></param>
		///<param name="_heSoNgoaiGio"></param>
		///<param name="_tietQuyDoi"></param>
		///<param name="_loaiHocKy"></param>
		///<param name="_thoiKhoaBieu"></param>
		///<param name="_ngayTao"></param>
		public static KhoiLuongGiangDay CreateKhoiLuongGiangDay(System.Int32? _maKetQua, System.String _maToaNha, 
			System.String _maLopHocPhan, System.String _maLop, System.String _maNhom, 
			System.String _loaiHocPhan, System.String _phanLoai, System.String _maMonHoc, 
			System.String _dienGiai, System.Decimal? _soTiet, System.Decimal? _soTinChi, 
			System.Int32? _siSoLop, System.Int32? _soNhom, System.String _maDiaDiem, 
			System.DateTime? _ngayBatDau, System.DateTime? _ngayKetThuc, System.Decimal? _chatLuongCao, 
			System.Decimal? _ngoaiGio, System.Decimal? _trongGio, System.Decimal? _heSoLopDong, 
			System.Decimal? _heSoCoSo, System.Decimal? _heSoHocKy, System.Decimal? _heSoThanhPhan, 
			System.Decimal? _heSoTrongGio, System.Decimal? _heSoNgoaiGio, System.Decimal? _tietQuyDoi, 
			System.Int32? _loaiHocKy, System.String _thoiKhoaBieu, System.DateTime? _ngayTao)
		{
			KhoiLuongGiangDay newKhoiLuongGiangDay = new KhoiLuongGiangDay();
			newKhoiLuongGiangDay.MaKetQua = _maKetQua;
			newKhoiLuongGiangDay.MaToaNha = _maToaNha;
			newKhoiLuongGiangDay.MaLopHocPhan = _maLopHocPhan;
			newKhoiLuongGiangDay.MaLop = _maLop;
			newKhoiLuongGiangDay.MaNhom = _maNhom;
			newKhoiLuongGiangDay.LoaiHocPhan = _loaiHocPhan;
			newKhoiLuongGiangDay.PhanLoai = _phanLoai;
			newKhoiLuongGiangDay.MaMonHoc = _maMonHoc;
			newKhoiLuongGiangDay.DienGiai = _dienGiai;
			newKhoiLuongGiangDay.SoTiet = _soTiet;
			newKhoiLuongGiangDay.SoTinChi = _soTinChi;
			newKhoiLuongGiangDay.SiSoLop = _siSoLop;
			newKhoiLuongGiangDay.SoNhom = _soNhom;
			newKhoiLuongGiangDay.MaDiaDiem = _maDiaDiem;
			newKhoiLuongGiangDay.NgayBatDau = _ngayBatDau;
			newKhoiLuongGiangDay.NgayKetThuc = _ngayKetThuc;
			newKhoiLuongGiangDay.ChatLuongCao = _chatLuongCao;
			newKhoiLuongGiangDay.NgoaiGio = _ngoaiGio;
			newKhoiLuongGiangDay.TrongGio = _trongGio;
			newKhoiLuongGiangDay.HeSoLopDong = _heSoLopDong;
			newKhoiLuongGiangDay.HeSoCoSo = _heSoCoSo;
			newKhoiLuongGiangDay.HeSoHocKy = _heSoHocKy;
			newKhoiLuongGiangDay.HeSoThanhPhan = _heSoThanhPhan;
			newKhoiLuongGiangDay.HeSoTrongGio = _heSoTrongGio;
			newKhoiLuongGiangDay.HeSoNgoaiGio = _heSoNgoaiGio;
			newKhoiLuongGiangDay.TietQuyDoi = _tietQuyDoi;
			newKhoiLuongGiangDay.LoaiHocKy = _loaiHocKy;
			newKhoiLuongGiangDay.ThoiKhoaBieu = _thoiKhoaBieu;
			newKhoiLuongGiangDay.NgayTao = _ngayTao;
			return newKhoiLuongGiangDay;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the MaKhoiLuong property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 MaKhoiLuong
		{
			get
			{
				return this.entityData.MaKhoiLuong; 
			}
			
			set
			{
				if (this.entityData.MaKhoiLuong == value)
					return;
				
                OnPropertyChanging("MaKhoiLuong");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.MaKhoiLuong, this.entityData.MaKhoiLuong);
				this.entityData.MaKhoiLuong = value;
				this.EntityId.MaKhoiLuong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.MaKhoiLuong, this.entityData.MaKhoiLuong);
				OnPropertyChanged("MaKhoiLuong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaKetQua property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaKetQua
		{
			get
			{
				return this.entityData.MaKetQua; 
			}
			
			set
			{
				if (this.entityData.MaKetQua == value)
					return;
				
                OnPropertyChanging("MaKetQua");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.MaKetQua, this.entityData.MaKetQua);
				this.entityData.MaKetQua = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.MaKetQua, this.entityData.MaKetQua);
				OnPropertyChanged("MaKetQua");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaToaNha property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaToaNha
		{
			get
			{
				return this.entityData.MaToaNha; 
			}
			
			set
			{
				if (this.entityData.MaToaNha == value)
					return;
				
                OnPropertyChanging("MaToaNha");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.MaToaNha, this.entityData.MaToaNha);
				this.entityData.MaToaNha = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.MaToaNha, this.entityData.MaToaNha);
				OnPropertyChanged("MaToaNha");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLopHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MaLopHocPhan
		{
			get
			{
				return this.entityData.MaLopHocPhan; 
			}
			
			set
			{
				if (this.entityData.MaLopHocPhan == value)
					return;
				
                OnPropertyChanging("MaLopHocPhan");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				this.entityData.MaLopHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.MaLopHocPhan, this.entityData.MaLopHocPhan);
				OnPropertyChanged("MaLopHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaLop property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaLop
		{
			get
			{
				return this.entityData.MaLop; 
			}
			
			set
			{
				if (this.entityData.MaLop == value)
					return;
				
                OnPropertyChanging("MaLop");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.MaLop, this.entityData.MaLop);
				this.entityData.MaLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.MaLop, this.entityData.MaLop);
				OnPropertyChanged("MaLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaNhom property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaNhom
		{
			get
			{
				return this.entityData.MaNhom; 
			}
			
			set
			{
				if (this.entityData.MaNhom == value)
					return;
				
                OnPropertyChanging("MaNhom");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.MaNhom, this.entityData.MaNhom);
				this.entityData.MaNhom = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.MaNhom, this.entityData.MaNhom);
				OnPropertyChanged("MaNhom");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoaiHocPhan property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String LoaiHocPhan
		{
			get
			{
				return this.entityData.LoaiHocPhan; 
			}
			
			set
			{
				if (this.entityData.LoaiHocPhan == value)
					return;
				
                OnPropertyChanging("LoaiHocPhan");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.LoaiHocPhan, this.entityData.LoaiHocPhan);
				this.entityData.LoaiHocPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.LoaiHocPhan, this.entityData.LoaiHocPhan);
				OnPropertyChanged("LoaiHocPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PhanLoai property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String PhanLoai
		{
			get
			{
				return this.entityData.PhanLoai; 
			}
			
			set
			{
				if (this.entityData.PhanLoai == value)
					return;
				
                OnPropertyChanging("PhanLoai");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.PhanLoai, this.entityData.PhanLoai);
				this.entityData.PhanLoai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.PhanLoai, this.entityData.PhanLoai);
				OnPropertyChanged("PhanLoai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaMonHoc property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaMonHoc
		{
			get
			{
				return this.entityData.MaMonHoc; 
			}
			
			set
			{
				if (this.entityData.MaMonHoc == value)
					return;
				
                OnPropertyChanging("MaMonHoc");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.MaMonHoc, this.entityData.MaMonHoc);
				this.entityData.MaMonHoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.MaMonHoc, this.entityData.MaMonHoc);
				OnPropertyChanged("MaMonHoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DienGiai property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String DienGiai
		{
			get
			{
				return this.entityData.DienGiai; 
			}
			
			set
			{
				if (this.entityData.DienGiai == value)
					return;
				
                OnPropertyChanging("DienGiai");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.DienGiai, this.entityData.DienGiai);
				this.entityData.DienGiai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.DienGiai, this.entityData.DienGiai);
				OnPropertyChanged("DienGiai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTiet property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTiet
		{
			get
			{
				return this.entityData.SoTiet; 
			}
			
			set
			{
				if (this.entityData.SoTiet == value)
					return;
				
                OnPropertyChanging("SoTiet");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.SoTiet, this.entityData.SoTiet);
				this.entityData.SoTiet = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.SoTiet, this.entityData.SoTiet);
				OnPropertyChanged("SoTiet");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoTinChi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SoTinChi
		{
			get
			{
				return this.entityData.SoTinChi; 
			}
			
			set
			{
				if (this.entityData.SoTinChi == value)
					return;
				
                OnPropertyChanging("SoTinChi");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.SoTinChi, this.entityData.SoTinChi);
				this.entityData.SoTinChi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.SoTinChi, this.entityData.SoTinChi);
				OnPropertyChanged("SoTinChi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SiSoLop property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SiSoLop
		{
			get
			{
				return this.entityData.SiSoLop; 
			}
			
			set
			{
				if (this.entityData.SiSoLop == value)
					return;
				
                OnPropertyChanging("SiSoLop");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.SiSoLop, this.entityData.SiSoLop);
				this.entityData.SiSoLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.SiSoLop, this.entityData.SiSoLop);
				OnPropertyChanged("SiSoLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoNhom property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SoNhom
		{
			get
			{
				return this.entityData.SoNhom; 
			}
			
			set
			{
				if (this.entityData.SoNhom == value)
					return;
				
                OnPropertyChanging("SoNhom");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.SoNhom, this.entityData.SoNhom);
				this.entityData.SoNhom = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.SoNhom, this.entityData.SoNhom);
				OnPropertyChanged("SoNhom");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaDiaDiem property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MaDiaDiem
		{
			get
			{
				return this.entityData.MaDiaDiem; 
			}
			
			set
			{
				if (this.entityData.MaDiaDiem == value)
					return;
				
                OnPropertyChanging("MaDiaDiem");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.MaDiaDiem, this.entityData.MaDiaDiem);
				this.entityData.MaDiaDiem = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.MaDiaDiem, this.entityData.MaDiaDiem);
				OnPropertyChanged("MaDiaDiem");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayBatDau property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayBatDau
		{
			get
			{
				return this.entityData.NgayBatDau; 
			}
			
			set
			{
				if (this.entityData.NgayBatDau == value)
					return;
				
                OnPropertyChanging("NgayBatDau");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.NgayBatDau, this.entityData.NgayBatDau);
				this.entityData.NgayBatDau = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.NgayBatDau, this.entityData.NgayBatDau);
				OnPropertyChanged("NgayBatDau");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayKetThuc property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayKetThuc
		{
			get
			{
				return this.entityData.NgayKetThuc; 
			}
			
			set
			{
				if (this.entityData.NgayKetThuc == value)
					return;
				
                OnPropertyChanging("NgayKetThuc");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.NgayKetThuc, this.entityData.NgayKetThuc);
				this.entityData.NgayKetThuc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.NgayKetThuc, this.entityData.NgayKetThuc);
				OnPropertyChanged("NgayKetThuc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ChatLuongCao property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ChatLuongCao
		{
			get
			{
				return this.entityData.ChatLuongCao; 
			}
			
			set
			{
				if (this.entityData.ChatLuongCao == value)
					return;
				
                OnPropertyChanging("ChatLuongCao");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.ChatLuongCao, this.entityData.ChatLuongCao);
				this.entityData.ChatLuongCao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.ChatLuongCao, this.entityData.ChatLuongCao);
				OnPropertyChanged("ChatLuongCao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? NgoaiGio
		{
			get
			{
				return this.entityData.NgoaiGio; 
			}
			
			set
			{
				if (this.entityData.NgoaiGio == value)
					return;
				
                OnPropertyChanging("NgoaiGio");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.NgoaiGio, this.entityData.NgoaiGio);
				this.entityData.NgoaiGio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.NgoaiGio, this.entityData.NgoaiGio);
				OnPropertyChanged("NgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TrongGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TrongGio
		{
			get
			{
				return this.entityData.TrongGio; 
			}
			
			set
			{
				if (this.entityData.TrongGio == value)
					return;
				
                OnPropertyChanging("TrongGio");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.TrongGio, this.entityData.TrongGio);
				this.entityData.TrongGio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.TrongGio, this.entityData.TrongGio);
				OnPropertyChanged("TrongGio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoLopDong property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoLopDong
		{
			get
			{
				return this.entityData.HeSoLopDong; 
			}
			
			set
			{
				if (this.entityData.HeSoLopDong == value)
					return;
				
                OnPropertyChanging("HeSoLopDong");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				this.entityData.HeSoLopDong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.HeSoLopDong, this.entityData.HeSoLopDong);
				OnPropertyChanged("HeSoLopDong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoCoSo property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoCoSo
		{
			get
			{
				return this.entityData.HeSoCoSo; 
			}
			
			set
			{
				if (this.entityData.HeSoCoSo == value)
					return;
				
                OnPropertyChanging("HeSoCoSo");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.HeSoCoSo, this.entityData.HeSoCoSo);
				this.entityData.HeSoCoSo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.HeSoCoSo, this.entityData.HeSoCoSo);
				OnPropertyChanged("HeSoCoSo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoHocKy property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoHocKy
		{
			get
			{
				return this.entityData.HeSoHocKy; 
			}
			
			set
			{
				if (this.entityData.HeSoHocKy == value)
					return;
				
                OnPropertyChanging("HeSoHocKy");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.HeSoHocKy, this.entityData.HeSoHocKy);
				this.entityData.HeSoHocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.HeSoHocKy, this.entityData.HeSoHocKy);
				OnPropertyChanged("HeSoHocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoThanhPhan property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoThanhPhan
		{
			get
			{
				return this.entityData.HeSoThanhPhan; 
			}
			
			set
			{
				if (this.entityData.HeSoThanhPhan == value)
					return;
				
                OnPropertyChanging("HeSoThanhPhan");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.HeSoThanhPhan, this.entityData.HeSoThanhPhan);
				this.entityData.HeSoThanhPhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.HeSoThanhPhan, this.entityData.HeSoThanhPhan);
				OnPropertyChanged("HeSoThanhPhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoTrongGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoTrongGio
		{
			get
			{
				return this.entityData.HeSoTrongGio; 
			}
			
			set
			{
				if (this.entityData.HeSoTrongGio == value)
					return;
				
                OnPropertyChanging("HeSoTrongGio");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.HeSoTrongGio, this.entityData.HeSoTrongGio);
				this.entityData.HeSoTrongGio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.HeSoTrongGio, this.entityData.HeSoTrongGio);
				OnPropertyChanged("HeSoTrongGio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HeSoNgoaiGio property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? HeSoNgoaiGio
		{
			get
			{
				return this.entityData.HeSoNgoaiGio; 
			}
			
			set
			{
				if (this.entityData.HeSoNgoaiGio == value)
					return;
				
                OnPropertyChanging("HeSoNgoaiGio");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.HeSoNgoaiGio, this.entityData.HeSoNgoaiGio);
				this.entityData.HeSoNgoaiGio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.HeSoNgoaiGio, this.entityData.HeSoNgoaiGio);
				OnPropertyChanged("HeSoNgoaiGio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TietQuyDoi property. 
		///		
		/// </summary>
		/// <value>This type is decimal.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TietQuyDoi
		{
			get
			{
				return this.entityData.TietQuyDoi; 
			}
			
			set
			{
				if (this.entityData.TietQuyDoi == value)
					return;
				
                OnPropertyChanging("TietQuyDoi");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.TietQuyDoi, this.entityData.TietQuyDoi);
				this.entityData.TietQuyDoi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.TietQuyDoi, this.entityData.TietQuyDoi);
				OnPropertyChanged("TietQuyDoi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoaiHocKy property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? LoaiHocKy
		{
			get
			{
				return this.entityData.LoaiHocKy; 
			}
			
			set
			{
				if (this.entityData.LoaiHocKy == value)
					return;
				
                OnPropertyChanging("LoaiHocKy");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.LoaiHocKy, this.entityData.LoaiHocKy);
				this.entityData.LoaiHocKy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.LoaiHocKy, this.entityData.LoaiHocKy);
				OnPropertyChanged("LoaiHocKy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThoiKhoaBieu property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ThoiKhoaBieu
		{
			get
			{
				return this.entityData.ThoiKhoaBieu; 
			}
			
			set
			{
				if (this.entityData.ThoiKhoaBieu == value)
					return;
				
                OnPropertyChanging("ThoiKhoaBieu");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.ThoiKhoaBieu, this.entityData.ThoiKhoaBieu);
				this.entityData.ThoiKhoaBieu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.ThoiKhoaBieu, this.entityData.ThoiKhoaBieu);
				OnPropertyChanged("ThoiKhoaBieu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayTao property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[XmlElement(IsNullable=true)]
		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayTao
		{
			get
			{
				return this.entityData.NgayTao; 
			}
			
			set
			{
				if (this.entityData.NgayTao == value)
					return;
				
                OnPropertyChanging("NgayTao");                    
				OnColumnChanging(KhoiLuongGiangDayColumn.NgayTao, this.entityData.NgayTao);
				this.entityData.NgayTao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(KhoiLuongGiangDayColumn.NgayTao, this.entityData.NgayTao);
				OnPropertyChanged("NgayTao");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="KetQuaTinh"/>.
		/// </summary>
		/// <value>The source KetQuaTinh for MaKetQua.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual KetQuaTinh MaKetQuaSource
      	{
            get { return entityData.MaKetQuaSource; }
            set { entityData.MaKetQuaSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaToaNha", "Ma Toa Nha", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLopHocPhan", "Ma Lop Hoc Phan", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaLop", "Ma Lop", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaNhom", "Ma Nhom", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LoaiHocPhan", "Loai Hoc Phan", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PhanLoai", "Phan Loai", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaMonHoc", "Ma Mon Hoc", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DienGiai", "Dien Giai", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MaDiaDiem", "Ma Dia Diem", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ThoiKhoaBieu", "Thoi Khoa Bieu", 100));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "KhoiLuongGiangDay"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"MaKhoiLuong", "MaKetQua", "MaToaNha", "MaLopHocPhan", "MaLop", "MaNhom", "LoaiHocPhan", "PhanLoai", "MaMonHoc", "DienGiai", "SoTiet", "SoTinChi", "SiSoLop", "SoNhom", "MaDiaDiem", "NgayBatDau", "NgayKetThuc", "ChatLuongCao", "NgoaiGio", "TrongGio", "HeSoLopDong", "HeSoCoSo", "HeSoHocKy", "HeSoThanhPhan", "HeSoTrongGio", "HeSoNgoaiGio", "TietQuyDoi", "LoaiHocKy", "ThoiKhoaBieu", "NgayTao"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as KhoiLuongGiangDayEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (KhoiLuongGiangDay) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<KhoiLuongGiangDay>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as KhoiLuongGiangDay);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed KhoiLuongGiangDay Entity 
		///</summary>
		protected virtual KhoiLuongGiangDay Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			KhoiLuongGiangDay copy = new KhoiLuongGiangDay();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.MaKhoiLuong = this.MaKhoiLuong;
				copy.MaKetQua = this.MaKetQua;
				copy.MaToaNha = this.MaToaNha;
				copy.MaLopHocPhan = this.MaLopHocPhan;
				copy.MaLop = this.MaLop;
				copy.MaNhom = this.MaNhom;
				copy.LoaiHocPhan = this.LoaiHocPhan;
				copy.PhanLoai = this.PhanLoai;
				copy.MaMonHoc = this.MaMonHoc;
				copy.DienGiai = this.DienGiai;
				copy.SoTiet = this.SoTiet;
				copy.SoTinChi = this.SoTinChi;
				copy.SiSoLop = this.SiSoLop;
				copy.SoNhom = this.SoNhom;
				copy.MaDiaDiem = this.MaDiaDiem;
				copy.NgayBatDau = this.NgayBatDau;
				copy.NgayKetThuc = this.NgayKetThuc;
				copy.ChatLuongCao = this.ChatLuongCao;
				copy.NgoaiGio = this.NgoaiGio;
				copy.TrongGio = this.TrongGio;
				copy.HeSoLopDong = this.HeSoLopDong;
				copy.HeSoCoSo = this.HeSoCoSo;
				copy.HeSoHocKy = this.HeSoHocKy;
				copy.HeSoThanhPhan = this.HeSoThanhPhan;
				copy.HeSoTrongGio = this.HeSoTrongGio;
				copy.HeSoNgoaiGio = this.HeSoNgoaiGio;
				copy.TietQuyDoi = this.TietQuyDoi;
				copy.LoaiHocKy = this.LoaiHocKy;
				copy.ThoiKhoaBieu = this.ThoiKhoaBieu;
				copy.NgayTao = this.NgayTao;
			
			if (this.MaKetQuaSource != null && existingCopies.Contains(this.MaKetQuaSource))
				copy.MaKetQuaSource = existingCopies[this.MaKetQuaSource] as KetQuaTinh;
			else
				copy.MaKetQuaSource = MakeCopyOf(this.MaKetQuaSource, existingCopies) as KetQuaTinh;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed KhoiLuongGiangDay Entity 
		///</summary>
		public virtual KhoiLuongGiangDay Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed KhoiLuongGiangDay Entity which is a deep copy of the current entity.
		///</summary>
		public virtual KhoiLuongGiangDay DeepCopy()
		{
			return EntityHelper.Clone<KhoiLuongGiangDay>(this as KhoiLuongGiangDay);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as KhoiLuongGiangDayEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new KhoiLuongGiangDayEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as KhoiLuongGiangDayEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(KhoiLuongGiangDayColumn column)
		{
			switch(column)
			{
					case KhoiLuongGiangDayColumn.MaKhoiLuong:
					return entityData.MaKhoiLuong != _originalData.MaKhoiLuong;
					case KhoiLuongGiangDayColumn.MaKetQua:
					return entityData.MaKetQua != _originalData.MaKetQua;
					case KhoiLuongGiangDayColumn.MaToaNha:
					return entityData.MaToaNha != _originalData.MaToaNha;
					case KhoiLuongGiangDayColumn.MaLopHocPhan:
					return entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
					case KhoiLuongGiangDayColumn.MaLop:
					return entityData.MaLop != _originalData.MaLop;
					case KhoiLuongGiangDayColumn.MaNhom:
					return entityData.MaNhom != _originalData.MaNhom;
					case KhoiLuongGiangDayColumn.LoaiHocPhan:
					return entityData.LoaiHocPhan != _originalData.LoaiHocPhan;
					case KhoiLuongGiangDayColumn.PhanLoai:
					return entityData.PhanLoai != _originalData.PhanLoai;
					case KhoiLuongGiangDayColumn.MaMonHoc:
					return entityData.MaMonHoc != _originalData.MaMonHoc;
					case KhoiLuongGiangDayColumn.DienGiai:
					return entityData.DienGiai != _originalData.DienGiai;
					case KhoiLuongGiangDayColumn.SoTiet:
					return entityData.SoTiet != _originalData.SoTiet;
					case KhoiLuongGiangDayColumn.SoTinChi:
					return entityData.SoTinChi != _originalData.SoTinChi;
					case KhoiLuongGiangDayColumn.SiSoLop:
					return entityData.SiSoLop != _originalData.SiSoLop;
					case KhoiLuongGiangDayColumn.SoNhom:
					return entityData.SoNhom != _originalData.SoNhom;
					case KhoiLuongGiangDayColumn.MaDiaDiem:
					return entityData.MaDiaDiem != _originalData.MaDiaDiem;
					case KhoiLuongGiangDayColumn.NgayBatDau:
					return entityData.NgayBatDau != _originalData.NgayBatDau;
					case KhoiLuongGiangDayColumn.NgayKetThuc:
					return entityData.NgayKetThuc != _originalData.NgayKetThuc;
					case KhoiLuongGiangDayColumn.ChatLuongCao:
					return entityData.ChatLuongCao != _originalData.ChatLuongCao;
					case KhoiLuongGiangDayColumn.NgoaiGio:
					return entityData.NgoaiGio != _originalData.NgoaiGio;
					case KhoiLuongGiangDayColumn.TrongGio:
					return entityData.TrongGio != _originalData.TrongGio;
					case KhoiLuongGiangDayColumn.HeSoLopDong:
					return entityData.HeSoLopDong != _originalData.HeSoLopDong;
					case KhoiLuongGiangDayColumn.HeSoCoSo:
					return entityData.HeSoCoSo != _originalData.HeSoCoSo;
					case KhoiLuongGiangDayColumn.HeSoHocKy:
					return entityData.HeSoHocKy != _originalData.HeSoHocKy;
					case KhoiLuongGiangDayColumn.HeSoThanhPhan:
					return entityData.HeSoThanhPhan != _originalData.HeSoThanhPhan;
					case KhoiLuongGiangDayColumn.HeSoTrongGio:
					return entityData.HeSoTrongGio != _originalData.HeSoTrongGio;
					case KhoiLuongGiangDayColumn.HeSoNgoaiGio:
					return entityData.HeSoNgoaiGio != _originalData.HeSoNgoaiGio;
					case KhoiLuongGiangDayColumn.TietQuyDoi:
					return entityData.TietQuyDoi != _originalData.TietQuyDoi;
					case KhoiLuongGiangDayColumn.LoaiHocKy:
					return entityData.LoaiHocKy != _originalData.LoaiHocKy;
					case KhoiLuongGiangDayColumn.ThoiKhoaBieu:
					return entityData.ThoiKhoaBieu != _originalData.ThoiKhoaBieu;
					case KhoiLuongGiangDayColumn.NgayTao:
					return entityData.NgayTao != _originalData.NgayTao;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< KhoiLuongGiangDayColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.MaKhoiLuong != _originalData.MaKhoiLuong;
			result = result || entityData.MaKetQua != _originalData.MaKetQua;
			result = result || entityData.MaToaNha != _originalData.MaToaNha;
			result = result || entityData.MaLopHocPhan != _originalData.MaLopHocPhan;
			result = result || entityData.MaLop != _originalData.MaLop;
			result = result || entityData.MaNhom != _originalData.MaNhom;
			result = result || entityData.LoaiHocPhan != _originalData.LoaiHocPhan;
			result = result || entityData.PhanLoai != _originalData.PhanLoai;
			result = result || entityData.MaMonHoc != _originalData.MaMonHoc;
			result = result || entityData.DienGiai != _originalData.DienGiai;
			result = result || entityData.SoTiet != _originalData.SoTiet;
			result = result || entityData.SoTinChi != _originalData.SoTinChi;
			result = result || entityData.SiSoLop != _originalData.SiSoLop;
			result = result || entityData.SoNhom != _originalData.SoNhom;
			result = result || entityData.MaDiaDiem != _originalData.MaDiaDiem;
			result = result || entityData.NgayBatDau != _originalData.NgayBatDau;
			result = result || entityData.NgayKetThuc != _originalData.NgayKetThuc;
			result = result || entityData.ChatLuongCao != _originalData.ChatLuongCao;
			result = result || entityData.NgoaiGio != _originalData.NgoaiGio;
			result = result || entityData.TrongGio != _originalData.TrongGio;
			result = result || entityData.HeSoLopDong != _originalData.HeSoLopDong;
			result = result || entityData.HeSoCoSo != _originalData.HeSoCoSo;
			result = result || entityData.HeSoHocKy != _originalData.HeSoHocKy;
			result = result || entityData.HeSoThanhPhan != _originalData.HeSoThanhPhan;
			result = result || entityData.HeSoTrongGio != _originalData.HeSoTrongGio;
			result = result || entityData.HeSoNgoaiGio != _originalData.HeSoNgoaiGio;
			result = result || entityData.TietQuyDoi != _originalData.TietQuyDoi;
			result = result || entityData.LoaiHocKy != _originalData.LoaiHocKy;
			result = result || entityData.ThoiKhoaBieu != _originalData.ThoiKhoaBieu;
			result = result || entityData.NgayTao != _originalData.NgayTao;
			return result;
		}	
		
		///<summary>
		///  Returns a KhoiLuongGiangDay Entity with the original data.
		///</summary>
		public KhoiLuongGiangDay GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateKhoiLuongGiangDay(
				_originalData.MaKetQua,
				_originalData.MaToaNha,
				_originalData.MaLopHocPhan,
				_originalData.MaLop,
				_originalData.MaNhom,
				_originalData.LoaiHocPhan,
				_originalData.PhanLoai,
				_originalData.MaMonHoc,
				_originalData.DienGiai,
				_originalData.SoTiet,
				_originalData.SoTinChi,
				_originalData.SiSoLop,
				_originalData.SoNhom,
				_originalData.MaDiaDiem,
				_originalData.NgayBatDau,
				_originalData.NgayKetThuc,
				_originalData.ChatLuongCao,
				_originalData.NgoaiGio,
				_originalData.TrongGio,
				_originalData.HeSoLopDong,
				_originalData.HeSoCoSo,
				_originalData.HeSoHocKy,
				_originalData.HeSoThanhPhan,
				_originalData.HeSoTrongGio,
				_originalData.HeSoNgoaiGio,
				_originalData.TietQuyDoi,
				_originalData.LoaiHocKy,
				_originalData.ThoiKhoaBieu,
				_originalData.NgayTao
				);
				
			return (KhoiLuongGiangDay)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="KhoiLuongGiangDayBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is KhoiLuongGiangDayBase)
				return ValueEquals(this, (KhoiLuongGiangDayBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="KhoiLuongGiangDayBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.MaKhoiLuong.GetHashCode() ^ 
					((this.MaKetQua == null) ? string.Empty : this.MaKetQua.ToString()).GetHashCode() ^ 
					((this.MaToaNha == null) ? string.Empty : this.MaToaNha.ToString()).GetHashCode() ^ 
					((this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString()).GetHashCode() ^ 
					((this.MaLop == null) ? string.Empty : this.MaLop.ToString()).GetHashCode() ^ 
					((this.MaNhom == null) ? string.Empty : this.MaNhom.ToString()).GetHashCode() ^ 
					((this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString()).GetHashCode() ^ 
					((this.PhanLoai == null) ? string.Empty : this.PhanLoai.ToString()).GetHashCode() ^ 
					((this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString()).GetHashCode() ^ 
					((this.DienGiai == null) ? string.Empty : this.DienGiai.ToString()).GetHashCode() ^ 
					((this.SoTiet == null) ? string.Empty : this.SoTiet.ToString()).GetHashCode() ^ 
					((this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString()).GetHashCode() ^ 
					((this.SiSoLop == null) ? string.Empty : this.SiSoLop.ToString()).GetHashCode() ^ 
					((this.SoNhom == null) ? string.Empty : this.SoNhom.ToString()).GetHashCode() ^ 
					((this.MaDiaDiem == null) ? string.Empty : this.MaDiaDiem.ToString()).GetHashCode() ^ 
					((this.NgayBatDau == null) ? string.Empty : this.NgayBatDau.ToString()).GetHashCode() ^ 
					((this.NgayKetThuc == null) ? string.Empty : this.NgayKetThuc.ToString()).GetHashCode() ^ 
					((this.ChatLuongCao == null) ? string.Empty : this.ChatLuongCao.ToString()).GetHashCode() ^ 
					((this.NgoaiGio == null) ? string.Empty : this.NgoaiGio.ToString()).GetHashCode() ^ 
					((this.TrongGio == null) ? string.Empty : this.TrongGio.ToString()).GetHashCode() ^ 
					((this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString()).GetHashCode() ^ 
					((this.HeSoCoSo == null) ? string.Empty : this.HeSoCoSo.ToString()).GetHashCode() ^ 
					((this.HeSoHocKy == null) ? string.Empty : this.HeSoHocKy.ToString()).GetHashCode() ^ 
					((this.HeSoThanhPhan == null) ? string.Empty : this.HeSoThanhPhan.ToString()).GetHashCode() ^ 
					((this.HeSoTrongGio == null) ? string.Empty : this.HeSoTrongGio.ToString()).GetHashCode() ^ 
					((this.HeSoNgoaiGio == null) ? string.Empty : this.HeSoNgoaiGio.ToString()).GetHashCode() ^ 
					((this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString()).GetHashCode() ^ 
					((this.LoaiHocKy == null) ? string.Empty : this.LoaiHocKy.ToString()).GetHashCode() ^ 
					((this.ThoiKhoaBieu == null) ? string.Empty : this.ThoiKhoaBieu.ToString()).GetHashCode() ^ 
					((this.NgayTao == null) ? string.Empty : this.NgayTao.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="KhoiLuongGiangDayBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(KhoiLuongGiangDayBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="KhoiLuongGiangDayBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="KhoiLuongGiangDayBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="KhoiLuongGiangDayBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(KhoiLuongGiangDayBase Object1, KhoiLuongGiangDayBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.MaKhoiLuong != Object2.MaKhoiLuong)
				equal = false;
			if ( Object1.MaKetQua != null && Object2.MaKetQua != null )
			{
				if (Object1.MaKetQua != Object2.MaKetQua)
					equal = false;
			}
			else if (Object1.MaKetQua == null ^ Object2.MaKetQua == null )
			{
				equal = false;
			}
			if ( Object1.MaToaNha != null && Object2.MaToaNha != null )
			{
				if (Object1.MaToaNha != Object2.MaToaNha)
					equal = false;
			}
			else if (Object1.MaToaNha == null ^ Object2.MaToaNha == null )
			{
				equal = false;
			}
			if ( Object1.MaLopHocPhan != null && Object2.MaLopHocPhan != null )
			{
				if (Object1.MaLopHocPhan != Object2.MaLopHocPhan)
					equal = false;
			}
			else if (Object1.MaLopHocPhan == null ^ Object2.MaLopHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.MaLop != null && Object2.MaLop != null )
			{
				if (Object1.MaLop != Object2.MaLop)
					equal = false;
			}
			else if (Object1.MaLop == null ^ Object2.MaLop == null )
			{
				equal = false;
			}
			if ( Object1.MaNhom != null && Object2.MaNhom != null )
			{
				if (Object1.MaNhom != Object2.MaNhom)
					equal = false;
			}
			else if (Object1.MaNhom == null ^ Object2.MaNhom == null )
			{
				equal = false;
			}
			if ( Object1.LoaiHocPhan != null && Object2.LoaiHocPhan != null )
			{
				if (Object1.LoaiHocPhan != Object2.LoaiHocPhan)
					equal = false;
			}
			else if (Object1.LoaiHocPhan == null ^ Object2.LoaiHocPhan == null )
			{
				equal = false;
			}
			if ( Object1.PhanLoai != null && Object2.PhanLoai != null )
			{
				if (Object1.PhanLoai != Object2.PhanLoai)
					equal = false;
			}
			else if (Object1.PhanLoai == null ^ Object2.PhanLoai == null )
			{
				equal = false;
			}
			if ( Object1.MaMonHoc != null && Object2.MaMonHoc != null )
			{
				if (Object1.MaMonHoc != Object2.MaMonHoc)
					equal = false;
			}
			else if (Object1.MaMonHoc == null ^ Object2.MaMonHoc == null )
			{
				equal = false;
			}
			if ( Object1.DienGiai != null && Object2.DienGiai != null )
			{
				if (Object1.DienGiai != Object2.DienGiai)
					equal = false;
			}
			else if (Object1.DienGiai == null ^ Object2.DienGiai == null )
			{
				equal = false;
			}
			if ( Object1.SoTiet != null && Object2.SoTiet != null )
			{
				if (Object1.SoTiet != Object2.SoTiet)
					equal = false;
			}
			else if (Object1.SoTiet == null ^ Object2.SoTiet == null )
			{
				equal = false;
			}
			if ( Object1.SoTinChi != null && Object2.SoTinChi != null )
			{
				if (Object1.SoTinChi != Object2.SoTinChi)
					equal = false;
			}
			else if (Object1.SoTinChi == null ^ Object2.SoTinChi == null )
			{
				equal = false;
			}
			if ( Object1.SiSoLop != null && Object2.SiSoLop != null )
			{
				if (Object1.SiSoLop != Object2.SiSoLop)
					equal = false;
			}
			else if (Object1.SiSoLop == null ^ Object2.SiSoLop == null )
			{
				equal = false;
			}
			if ( Object1.SoNhom != null && Object2.SoNhom != null )
			{
				if (Object1.SoNhom != Object2.SoNhom)
					equal = false;
			}
			else if (Object1.SoNhom == null ^ Object2.SoNhom == null )
			{
				equal = false;
			}
			if ( Object1.MaDiaDiem != null && Object2.MaDiaDiem != null )
			{
				if (Object1.MaDiaDiem != Object2.MaDiaDiem)
					equal = false;
			}
			else if (Object1.MaDiaDiem == null ^ Object2.MaDiaDiem == null )
			{
				equal = false;
			}
			if ( Object1.NgayBatDau != null && Object2.NgayBatDau != null )
			{
				if (Object1.NgayBatDau != Object2.NgayBatDau)
					equal = false;
			}
			else if (Object1.NgayBatDau == null ^ Object2.NgayBatDau == null )
			{
				equal = false;
			}
			if ( Object1.NgayKetThuc != null && Object2.NgayKetThuc != null )
			{
				if (Object1.NgayKetThuc != Object2.NgayKetThuc)
					equal = false;
			}
			else if (Object1.NgayKetThuc == null ^ Object2.NgayKetThuc == null )
			{
				equal = false;
			}
			if ( Object1.ChatLuongCao != null && Object2.ChatLuongCao != null )
			{
				if (Object1.ChatLuongCao != Object2.ChatLuongCao)
					equal = false;
			}
			else if (Object1.ChatLuongCao == null ^ Object2.ChatLuongCao == null )
			{
				equal = false;
			}
			if ( Object1.NgoaiGio != null && Object2.NgoaiGio != null )
			{
				if (Object1.NgoaiGio != Object2.NgoaiGio)
					equal = false;
			}
			else if (Object1.NgoaiGio == null ^ Object2.NgoaiGio == null )
			{
				equal = false;
			}
			if ( Object1.TrongGio != null && Object2.TrongGio != null )
			{
				if (Object1.TrongGio != Object2.TrongGio)
					equal = false;
			}
			else if (Object1.TrongGio == null ^ Object2.TrongGio == null )
			{
				equal = false;
			}
			if ( Object1.HeSoLopDong != null && Object2.HeSoLopDong != null )
			{
				if (Object1.HeSoLopDong != Object2.HeSoLopDong)
					equal = false;
			}
			else if (Object1.HeSoLopDong == null ^ Object2.HeSoLopDong == null )
			{
				equal = false;
			}
			if ( Object1.HeSoCoSo != null && Object2.HeSoCoSo != null )
			{
				if (Object1.HeSoCoSo != Object2.HeSoCoSo)
					equal = false;
			}
			else if (Object1.HeSoCoSo == null ^ Object2.HeSoCoSo == null )
			{
				equal = false;
			}
			if ( Object1.HeSoHocKy != null && Object2.HeSoHocKy != null )
			{
				if (Object1.HeSoHocKy != Object2.HeSoHocKy)
					equal = false;
			}
			else if (Object1.HeSoHocKy == null ^ Object2.HeSoHocKy == null )
			{
				equal = false;
			}
			if ( Object1.HeSoThanhPhan != null && Object2.HeSoThanhPhan != null )
			{
				if (Object1.HeSoThanhPhan != Object2.HeSoThanhPhan)
					equal = false;
			}
			else if (Object1.HeSoThanhPhan == null ^ Object2.HeSoThanhPhan == null )
			{
				equal = false;
			}
			if ( Object1.HeSoTrongGio != null && Object2.HeSoTrongGio != null )
			{
				if (Object1.HeSoTrongGio != Object2.HeSoTrongGio)
					equal = false;
			}
			else if (Object1.HeSoTrongGio == null ^ Object2.HeSoTrongGio == null )
			{
				equal = false;
			}
			if ( Object1.HeSoNgoaiGio != null && Object2.HeSoNgoaiGio != null )
			{
				if (Object1.HeSoNgoaiGio != Object2.HeSoNgoaiGio)
					equal = false;
			}
			else if (Object1.HeSoNgoaiGio == null ^ Object2.HeSoNgoaiGio == null )
			{
				equal = false;
			}
			if ( Object1.TietQuyDoi != null && Object2.TietQuyDoi != null )
			{
				if (Object1.TietQuyDoi != Object2.TietQuyDoi)
					equal = false;
			}
			else if (Object1.TietQuyDoi == null ^ Object2.TietQuyDoi == null )
			{
				equal = false;
			}
			if ( Object1.LoaiHocKy != null && Object2.LoaiHocKy != null )
			{
				if (Object1.LoaiHocKy != Object2.LoaiHocKy)
					equal = false;
			}
			else if (Object1.LoaiHocKy == null ^ Object2.LoaiHocKy == null )
			{
				equal = false;
			}
			if ( Object1.ThoiKhoaBieu != null && Object2.ThoiKhoaBieu != null )
			{
				if (Object1.ThoiKhoaBieu != Object2.ThoiKhoaBieu)
					equal = false;
			}
			else if (Object1.ThoiKhoaBieu == null ^ Object2.ThoiKhoaBieu == null )
			{
				equal = false;
			}
			if ( Object1.NgayTao != null && Object2.NgayTao != null )
			{
				if (Object1.NgayTao != Object2.NgayTao)
					equal = false;
			}
			else if (Object1.NgayTao == null ^ Object2.NgayTao == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((KhoiLuongGiangDayBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static KhoiLuongGiangDayComparer GetComparer()
        {
            return new KhoiLuongGiangDayComparer();
        }
        */

        // Comparer delegates back to KhoiLuongGiangDay
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(KhoiLuongGiangDay rhs, KhoiLuongGiangDayColumn which)
        {
            switch (which)
            {
            	
            	
            	case KhoiLuongGiangDayColumn.MaKhoiLuong:
            		return this.MaKhoiLuong.CompareTo(rhs.MaKhoiLuong);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.MaKetQua:
            		return this.MaKetQua.Value.CompareTo(rhs.MaKetQua.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.MaToaNha:
            		return this.MaToaNha.CompareTo(rhs.MaToaNha);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.MaLopHocPhan:
            		return this.MaLopHocPhan.CompareTo(rhs.MaLopHocPhan);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.MaLop:
            		return this.MaLop.CompareTo(rhs.MaLop);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.MaNhom:
            		return this.MaNhom.CompareTo(rhs.MaNhom);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.LoaiHocPhan:
            		return this.LoaiHocPhan.CompareTo(rhs.LoaiHocPhan);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.PhanLoai:
            		return this.PhanLoai.CompareTo(rhs.PhanLoai);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.MaMonHoc:
            		return this.MaMonHoc.CompareTo(rhs.MaMonHoc);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.DienGiai:
            		return this.DienGiai.CompareTo(rhs.DienGiai);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.SoTiet:
            		return this.SoTiet.Value.CompareTo(rhs.SoTiet.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.SoTinChi:
            		return this.SoTinChi.Value.CompareTo(rhs.SoTinChi.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.SiSoLop:
            		return this.SiSoLop.Value.CompareTo(rhs.SiSoLop.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.SoNhom:
            		return this.SoNhom.Value.CompareTo(rhs.SoNhom.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.MaDiaDiem:
            		return this.MaDiaDiem.CompareTo(rhs.MaDiaDiem);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.NgayBatDau:
            		return this.NgayBatDau.Value.CompareTo(rhs.NgayBatDau.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.NgayKetThuc:
            		return this.NgayKetThuc.Value.CompareTo(rhs.NgayKetThuc.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.ChatLuongCao:
            		return this.ChatLuongCao.Value.CompareTo(rhs.ChatLuongCao.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.NgoaiGio:
            		return this.NgoaiGio.Value.CompareTo(rhs.NgoaiGio.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.TrongGio:
            		return this.TrongGio.Value.CompareTo(rhs.TrongGio.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.HeSoLopDong:
            		return this.HeSoLopDong.Value.CompareTo(rhs.HeSoLopDong.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.HeSoCoSo:
            		return this.HeSoCoSo.Value.CompareTo(rhs.HeSoCoSo.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.HeSoHocKy:
            		return this.HeSoHocKy.Value.CompareTo(rhs.HeSoHocKy.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.HeSoThanhPhan:
            		return this.HeSoThanhPhan.Value.CompareTo(rhs.HeSoThanhPhan.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.HeSoTrongGio:
            		return this.HeSoTrongGio.Value.CompareTo(rhs.HeSoTrongGio.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.HeSoNgoaiGio:
            		return this.HeSoNgoaiGio.Value.CompareTo(rhs.HeSoNgoaiGio.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.TietQuyDoi:
            		return this.TietQuyDoi.Value.CompareTo(rhs.TietQuyDoi.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.LoaiHocKy:
            		return this.LoaiHocKy.Value.CompareTo(rhs.LoaiHocKy.Value);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.ThoiKhoaBieu:
            		return this.ThoiKhoaBieu.CompareTo(rhs.ThoiKhoaBieu);
            		
            		                 
            	
            	
            	case KhoiLuongGiangDayColumn.NgayTao:
            		return this.NgayTao.Value.CompareTo(rhs.NgayTao.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<KhoiLuongGiangDayKey> Members
		
		// member variable for the EntityId property
		private KhoiLuongGiangDayKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual KhoiLuongGiangDayKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new KhoiLuongGiangDayKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) ]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("KhoiLuongGiangDay")
					.Append("|").Append( this.MaKhoiLuong.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{31}{30}- MaKhoiLuong: {0}{30}- MaKetQua: {1}{30}- MaToaNha: {2}{30}- MaLopHocPhan: {3}{30}- MaLop: {4}{30}- MaNhom: {5}{30}- LoaiHocPhan: {6}{30}- PhanLoai: {7}{30}- MaMonHoc: {8}{30}- DienGiai: {9}{30}- SoTiet: {10}{30}- SoTinChi: {11}{30}- SiSoLop: {12}{30}- SoNhom: {13}{30}- MaDiaDiem: {14}{30}- NgayBatDau: {15}{30}- NgayKetThuc: {16}{30}- ChatLuongCao: {17}{30}- NgoaiGio: {18}{30}- TrongGio: {19}{30}- HeSoLopDong: {20}{30}- HeSoCoSo: {21}{30}- HeSoHocKy: {22}{30}- HeSoThanhPhan: {23}{30}- HeSoTrongGio: {24}{30}- HeSoNgoaiGio: {25}{30}- TietQuyDoi: {26}{30}- LoaiHocKy: {27}{30}- ThoiKhoaBieu: {28}{30}- NgayTao: {29}{30}{32}", 
				this.MaKhoiLuong,
				(this.MaKetQua == null) ? string.Empty : this.MaKetQua.ToString(),
				(this.MaToaNha == null) ? string.Empty : this.MaToaNha.ToString(),
				(this.MaLopHocPhan == null) ? string.Empty : this.MaLopHocPhan.ToString(),
				(this.MaLop == null) ? string.Empty : this.MaLop.ToString(),
				(this.MaNhom == null) ? string.Empty : this.MaNhom.ToString(),
				(this.LoaiHocPhan == null) ? string.Empty : this.LoaiHocPhan.ToString(),
				(this.PhanLoai == null) ? string.Empty : this.PhanLoai.ToString(),
				(this.MaMonHoc == null) ? string.Empty : this.MaMonHoc.ToString(),
				(this.DienGiai == null) ? string.Empty : this.DienGiai.ToString(),
				(this.SoTiet == null) ? string.Empty : this.SoTiet.ToString(),
				(this.SoTinChi == null) ? string.Empty : this.SoTinChi.ToString(),
				(this.SiSoLop == null) ? string.Empty : this.SiSoLop.ToString(),
				(this.SoNhom == null) ? string.Empty : this.SoNhom.ToString(),
				(this.MaDiaDiem == null) ? string.Empty : this.MaDiaDiem.ToString(),
				(this.NgayBatDau == null) ? string.Empty : this.NgayBatDau.ToString(),
				(this.NgayKetThuc == null) ? string.Empty : this.NgayKetThuc.ToString(),
				(this.ChatLuongCao == null) ? string.Empty : this.ChatLuongCao.ToString(),
				(this.NgoaiGio == null) ? string.Empty : this.NgoaiGio.ToString(),
				(this.TrongGio == null) ? string.Empty : this.TrongGio.ToString(),
				(this.HeSoLopDong == null) ? string.Empty : this.HeSoLopDong.ToString(),
				(this.HeSoCoSo == null) ? string.Empty : this.HeSoCoSo.ToString(),
				(this.HeSoHocKy == null) ? string.Empty : this.HeSoHocKy.ToString(),
				(this.HeSoThanhPhan == null) ? string.Empty : this.HeSoThanhPhan.ToString(),
				(this.HeSoTrongGio == null) ? string.Empty : this.HeSoTrongGio.ToString(),
				(this.HeSoNgoaiGio == null) ? string.Empty : this.HeSoNgoaiGio.ToString(),
				(this.TietQuyDoi == null) ? string.Empty : this.TietQuyDoi.ToString(),
				(this.LoaiHocKy == null) ? string.Empty : this.LoaiHocKy.ToString(),
				(this.ThoiKhoaBieu == null) ? string.Empty : this.ThoiKhoaBieu.ToString(),
				(this.NgayTao == null) ? string.Empty : this.NgayTao.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'KhoiLuongGiangDay' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class KhoiLuongGiangDayEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// MaKhoiLuong : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "KhoiLuongGiangDay"</remarks>
		public System.Int32 MaKhoiLuong;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// MaKetQua : 
		/// </summary>
		public System.Int32? MaKetQua = null;
		
		/// <summary>
		/// MaToaNha : 
		/// </summary>
		public System.String MaToaNha = null;
		
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		public System.String MaLopHocPhan = null;
		
		/// <summary>
		/// MaLop : 
		/// </summary>
		public System.String MaLop = null;
		
		/// <summary>
		/// MaNhom : 
		/// </summary>
		public System.String MaNhom = null;
		
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		public System.String LoaiHocPhan = null;
		
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		public System.String PhanLoai = null;
		
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		public System.String MaMonHoc = null;
		
		/// <summary>
		/// DienGiai : 
		/// </summary>
		public System.String DienGiai = null;
		
		/// <summary>
		/// SoTiet : 
		/// </summary>
		public System.Decimal? SoTiet = null;
		
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		public System.Decimal? SoTinChi = null;
		
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		public System.Int32? SiSoLop = null;
		
		/// <summary>
		/// SoNhom : 
		/// </summary>
		public System.Int32? SoNhom = null;
		
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		public System.String MaDiaDiem = null;
		
		/// <summary>
		/// NgayBatDau : 
		/// </summary>
		public System.DateTime? NgayBatDau = null;
		
		/// <summary>
		/// NgayKetThuc : 
		/// </summary>
		public System.DateTime? NgayKetThuc = null;
		
		/// <summary>
		/// ChatLuongCao : 
		/// </summary>
		public System.Decimal? ChatLuongCao = null;
		
		/// <summary>
		/// NgoaiGio : 
		/// </summary>
		public System.Decimal? NgoaiGio = null;
		
		/// <summary>
		/// TrongGio : 
		/// </summary>
		public System.Decimal? TrongGio = null;
		
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		public System.Decimal? HeSoLopDong = null;
		
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		public System.Decimal? HeSoCoSo = null;
		
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		public System.Decimal? HeSoHocKy = null;
		
		/// <summary>
		/// HeSoThanhPhan : 
		/// </summary>
		public System.Decimal? HeSoThanhPhan = null;
		
		/// <summary>
		/// HeSoTrongGio : 
		/// </summary>
		public System.Decimal? HeSoTrongGio = null;
		
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		public System.Decimal? HeSoNgoaiGio = null;
		
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		public System.Decimal? TietQuyDoi = null;
		
		/// <summary>
		/// LoaiHocKy : 
		/// </summary>
		public System.Int32? LoaiHocKy = null;
		
		/// <summary>
		/// ThoiKhoaBieu : 
		/// </summary>
		public System.String ThoiKhoaBieu = null;
		
		/// <summary>
		/// NgayTao : 
		/// </summary>
		public System.DateTime? NgayTao = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private KetQuaTinh _maKetQuaSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="KetQuaTinh"/>.
		/// </summary>
		/// <value>The source KetQuaTinh for MaKetQua.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual KetQuaTinh MaKetQuaSource
      	{
            get { return this._maKetQuaSource; }
            set { this._maKetQuaSource = value; }
      	}
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			KhoiLuongGiangDayEntityData _tmp = new KhoiLuongGiangDayEntityData();
						
			_tmp.MaKhoiLuong = this.MaKhoiLuong;
			
			_tmp.MaKetQua = this.MaKetQua;
			_tmp.MaToaNha = this.MaToaNha;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.MaLop = this.MaLop;
			_tmp.MaNhom = this.MaNhom;
			_tmp.LoaiHocPhan = this.LoaiHocPhan;
			_tmp.PhanLoai = this.PhanLoai;
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.DienGiai = this.DienGiai;
			_tmp.SoTiet = this.SoTiet;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.SiSoLop = this.SiSoLop;
			_tmp.SoNhom = this.SoNhom;
			_tmp.MaDiaDiem = this.MaDiaDiem;
			_tmp.NgayBatDau = this.NgayBatDau;
			_tmp.NgayKetThuc = this.NgayKetThuc;
			_tmp.ChatLuongCao = this.ChatLuongCao;
			_tmp.NgoaiGio = this.NgoaiGio;
			_tmp.TrongGio = this.TrongGio;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.HeSoCoSo = this.HeSoCoSo;
			_tmp.HeSoHocKy = this.HeSoHocKy;
			_tmp.HeSoThanhPhan = this.HeSoThanhPhan;
			_tmp.HeSoTrongGio = this.HeSoTrongGio;
			_tmp.HeSoNgoaiGio = this.HeSoNgoaiGio;
			_tmp.TietQuyDoi = this.TietQuyDoi;
			_tmp.LoaiHocKy = this.LoaiHocKy;
			_tmp.ThoiKhoaBieu = this.ThoiKhoaBieu;
			_tmp.NgayTao = this.NgayTao;
			
			#region Source Parent Composite Entities
			if (this.MaKetQuaSource != null)
				_tmp.MaKetQuaSource = MakeCopyOf(this.MaKetQuaSource) as KetQuaTinh;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			KhoiLuongGiangDayEntityData _tmp = new KhoiLuongGiangDayEntityData();
						
			_tmp.MaKhoiLuong = this.MaKhoiLuong;
			
			_tmp.MaKetQua = this.MaKetQua;
			_tmp.MaToaNha = this.MaToaNha;
			_tmp.MaLopHocPhan = this.MaLopHocPhan;
			_tmp.MaLop = this.MaLop;
			_tmp.MaNhom = this.MaNhom;
			_tmp.LoaiHocPhan = this.LoaiHocPhan;
			_tmp.PhanLoai = this.PhanLoai;
			_tmp.MaMonHoc = this.MaMonHoc;
			_tmp.DienGiai = this.DienGiai;
			_tmp.SoTiet = this.SoTiet;
			_tmp.SoTinChi = this.SoTinChi;
			_tmp.SiSoLop = this.SiSoLop;
			_tmp.SoNhom = this.SoNhom;
			_tmp.MaDiaDiem = this.MaDiaDiem;
			_tmp.NgayBatDau = this.NgayBatDau;
			_tmp.NgayKetThuc = this.NgayKetThuc;
			_tmp.ChatLuongCao = this.ChatLuongCao;
			_tmp.NgoaiGio = this.NgoaiGio;
			_tmp.TrongGio = this.TrongGio;
			_tmp.HeSoLopDong = this.HeSoLopDong;
			_tmp.HeSoCoSo = this.HeSoCoSo;
			_tmp.HeSoHocKy = this.HeSoHocKy;
			_tmp.HeSoThanhPhan = this.HeSoThanhPhan;
			_tmp.HeSoTrongGio = this.HeSoTrongGio;
			_tmp.HeSoNgoaiGio = this.HeSoNgoaiGio;
			_tmp.TietQuyDoi = this.TietQuyDoi;
			_tmp.LoaiHocKy = this.LoaiHocKy;
			_tmp.ThoiKhoaBieu = this.ThoiKhoaBieu;
			_tmp.NgayTao = this.NgayTao;
			
			#region Source Parent Composite Entities
			if (this.MaKetQuaSource != null && existingCopies.Contains(this.MaKetQuaSource))
				_tmp.MaKetQuaSource = existingCopies[this.MaKetQuaSource] as KetQuaTinh;
			else
				_tmp.MaKetQuaSource = MakeCopyOf(this.MaKetQuaSource, existingCopies) as KetQuaTinh;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false)]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KhoiLuongGiangDayColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(KhoiLuongGiangDayColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KhoiLuongGiangDayColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(KhoiLuongGiangDayColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KhoiLuongGiangDayColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(KhoiLuongGiangDayColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				KhoiLuongGiangDayEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new KhoiLuongGiangDayEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="KhoiLuongGiangDayColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(KhoiLuongGiangDayColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				KhoiLuongGiangDayEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new KhoiLuongGiangDayEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region KhoiLuongGiangDayEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="KhoiLuongGiangDay"/> object.
	/// </remarks>
	public class KhoiLuongGiangDayEventArgs : System.EventArgs
	{
		private KhoiLuongGiangDayColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the KhoiLuongGiangDayEventArgs class.
		///</summary>
		public KhoiLuongGiangDayEventArgs(KhoiLuongGiangDayColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the KhoiLuongGiangDayEventArgs class.
		///</summary>
		public KhoiLuongGiangDayEventArgs(KhoiLuongGiangDayColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The KhoiLuongGiangDayColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="KhoiLuongGiangDayColumn" />
		public KhoiLuongGiangDayColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all KhoiLuongGiangDay related events.
	///</summary>
	public delegate void KhoiLuongGiangDayEventHandler(object sender, KhoiLuongGiangDayEventArgs e);
	
	#region KhoiLuongGiangDayComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class KhoiLuongGiangDayComparer : System.Collections.Generic.IComparer<KhoiLuongGiangDay>
	{
		KhoiLuongGiangDayColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:KhoiLuongGiangDayComparer"/> class.
        /// </summary>
		public KhoiLuongGiangDayComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:KhoiLuongGiangDayComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public KhoiLuongGiangDayComparer(KhoiLuongGiangDayColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="KhoiLuongGiangDay"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="KhoiLuongGiangDay"/> to compare.</param>
        /// <param name="b">The second <c>KhoiLuongGiangDay</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(KhoiLuongGiangDay a, KhoiLuongGiangDay b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(KhoiLuongGiangDay entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(KhoiLuongGiangDay a, KhoiLuongGiangDay b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public KhoiLuongGiangDayColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region KhoiLuongGiangDayKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="KhoiLuongGiangDay"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class KhoiLuongGiangDayKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the KhoiLuongGiangDayKey class.
		/// </summary>
		public KhoiLuongGiangDayKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the KhoiLuongGiangDayKey class.
		/// </summary>
		public KhoiLuongGiangDayKey(KhoiLuongGiangDayBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.MaKhoiLuong = entity.MaKhoiLuong;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the KhoiLuongGiangDayKey class.
		/// </summary>
		public KhoiLuongGiangDayKey(System.Int32 _maKhoiLuong)
		{
			#region Init Properties

			this.MaKhoiLuong = _maKhoiLuong;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private KhoiLuongGiangDayBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public KhoiLuongGiangDayBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the MaKhoiLuong property
		private System.Int32 _maKhoiLuong;
		
		/// <summary>
		/// Gets or sets the MaKhoiLuong property.
		/// </summary>
		public System.Int32 MaKhoiLuong
		{
			get { return _maKhoiLuong; }
			set
			{
				if ( this.Entity != null )
					this.Entity.MaKhoiLuong = value;
				
				_maKhoiLuong = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				MaKhoiLuong = ( values["MaKhoiLuong"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["MaKhoiLuong"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("MaKhoiLuong", MaKhoiLuong);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("MaKhoiLuong: {0}{1}",
								MaKhoiLuong,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region KhoiLuongGiangDayColumn Enum
	
	/// <summary>
	/// Enumerate the KhoiLuongGiangDay columns.
	/// </summary>
	[Serializable]
	public enum KhoiLuongGiangDayColumn : int
	{
		/// <summary>
		/// MaKhoiLuong : 
		/// </summary>
		[EnumTextValue("Ma Khoi Luong")]
		[ColumnEnum("MaKhoiLuong", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		MaKhoiLuong = 1,
		/// <summary>
		/// MaKetQua : 
		/// </summary>
		[EnumTextValue("Ma Ket Qua")]
		[ColumnEnum("MaKetQua", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaKetQua = 2,
		/// <summary>
		/// MaToaNha : 
		/// </summary>
		[EnumTextValue("Ma Toa Nha")]
		[ColumnEnum("MaToaNha", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaToaNha = 3,
		/// <summary>
		/// MaLopHocPhan : 
		/// </summary>
		[EnumTextValue("Ma Lop Hoc Phan")]
		[ColumnEnum("MaLopHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		MaLopHocPhan = 4,
		/// <summary>
		/// MaLop : 
		/// </summary>
		[EnumTextValue("Ma Lop")]
		[ColumnEnum("MaLop", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaLop = 5,
		/// <summary>
		/// MaNhom : 
		/// </summary>
		[EnumTextValue("Ma Nhom")]
		[ColumnEnum("MaNhom", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaNhom = 6,
		/// <summary>
		/// LoaiHocPhan : 
		/// </summary>
		[EnumTextValue("Loai Hoc Phan")]
		[ColumnEnum("LoaiHocPhan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		LoaiHocPhan = 7,
		/// <summary>
		/// PhanLoai : 
		/// </summary>
		[EnumTextValue("Phan Loai")]
		[ColumnEnum("PhanLoai", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		PhanLoai = 8,
		/// <summary>
		/// MaMonHoc : 
		/// </summary>
		[EnumTextValue("Ma Mon Hoc")]
		[ColumnEnum("MaMonHoc", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaMonHoc = 9,
		/// <summary>
		/// DienGiai : 
		/// </summary>
		[EnumTextValue("Dien Giai")]
		[ColumnEnum("DienGiai", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		DienGiai = 10,
		/// <summary>
		/// SoTiet : 
		/// </summary>
		[EnumTextValue("So Tiet")]
		[ColumnEnum("SoTiet", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTiet = 11,
		/// <summary>
		/// SoTinChi : 
		/// </summary>
		[EnumTextValue("So Tin Chi")]
		[ColumnEnum("SoTinChi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SoTinChi = 12,
		/// <summary>
		/// SiSoLop : 
		/// </summary>
		[EnumTextValue("Si So Lop")]
		[ColumnEnum("SiSoLop", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiSoLop = 13,
		/// <summary>
		/// SoNhom : 
		/// </summary>
		[EnumTextValue("So Nhom")]
		[ColumnEnum("SoNhom", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SoNhom = 14,
		/// <summary>
		/// MaDiaDiem : 
		/// </summary>
		[EnumTextValue("Ma Dia Diem")]
		[ColumnEnum("MaDiaDiem", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MaDiaDiem = 15,
		/// <summary>
		/// NgayBatDau : 
		/// </summary>
		[EnumTextValue("Ngay Bat Dau")]
		[ColumnEnum("NgayBatDau", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayBatDau = 16,
		/// <summary>
		/// NgayKetThuc : 
		/// </summary>
		[EnumTextValue("Ngay Ket Thuc")]
		[ColumnEnum("NgayKetThuc", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayKetThuc = 17,
		/// <summary>
		/// ChatLuongCao : 
		/// </summary>
		[EnumTextValue("Chat Luong Cao")]
		[ColumnEnum("ChatLuongCao", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ChatLuongCao = 18,
		/// <summary>
		/// NgoaiGio : 
		/// </summary>
		[EnumTextValue("Ngoai Gio")]
		[ColumnEnum("NgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		NgoaiGio = 19,
		/// <summary>
		/// TrongGio : 
		/// </summary>
		[EnumTextValue("Trong Gio")]
		[ColumnEnum("TrongGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TrongGio = 20,
		/// <summary>
		/// HeSoLopDong : 
		/// </summary>
		[EnumTextValue("He So Lop Dong")]
		[ColumnEnum("HeSoLopDong", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoLopDong = 21,
		/// <summary>
		/// HeSoCoSo : 
		/// </summary>
		[EnumTextValue("He So Co So")]
		[ColumnEnum("HeSoCoSo", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoCoSo = 22,
		/// <summary>
		/// HeSoHocKy : 
		/// </summary>
		[EnumTextValue("He So Hoc Ky")]
		[ColumnEnum("HeSoHocKy", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoHocKy = 23,
		/// <summary>
		/// HeSoThanhPhan : 
		/// </summary>
		[EnumTextValue("He So Thanh Phan")]
		[ColumnEnum("HeSoThanhPhan", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoThanhPhan = 24,
		/// <summary>
		/// HeSoTrongGio : 
		/// </summary>
		[EnumTextValue("He So Trong Gio")]
		[ColumnEnum("HeSoTrongGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoTrongGio = 25,
		/// <summary>
		/// HeSoNgoaiGio : 
		/// </summary>
		[EnumTextValue("He So Ngoai Gio")]
		[ColumnEnum("HeSoNgoaiGio", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		HeSoNgoaiGio = 26,
		/// <summary>
		/// TietQuyDoi : 
		/// </summary>
		[EnumTextValue("Tiet Quy Doi")]
		[ColumnEnum("TietQuyDoi", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TietQuyDoi = 27,
		/// <summary>
		/// LoaiHocKy : 
		/// </summary>
		[EnumTextValue("Loai Hoc Ky")]
		[ColumnEnum("LoaiHocKy", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		LoaiHocKy = 28,
		/// <summary>
		/// ThoiKhoaBieu : 
		/// </summary>
		[EnumTextValue("Thoi Khoa Bieu")]
		[ColumnEnum("ThoiKhoaBieu", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		ThoiKhoaBieu = 29,
		/// <summary>
		/// NgayTao : 
		/// </summary>
		[EnumTextValue("Ngay Tao")]
		[ColumnEnum("NgayTao", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayTao = 30
	}//End enum

	#endregion KhoiLuongGiangDayColumn Enum

} // end namespace
